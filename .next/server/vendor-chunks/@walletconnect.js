/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect";
exports.ids = ["vendor-chunks/@walletconnect"];
exports.modules = {

/***/ "(ssr)/./node_modules/@walletconnect/core/dist/index.es.js":
/*!***********************************************************!*\
  !*** ./node_modules/@walletconnect/core/dist/index.es.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CORE_CONTEXT: () => (/* binding */ Z),\n/* harmony export */   CORE_DEFAULT: () => (/* binding */ Ze),\n/* harmony export */   CORE_PROTOCOL: () => (/* binding */ De),\n/* harmony export */   CORE_STORAGE_OPTIONS: () => (/* binding */ et),\n/* harmony export */   CORE_STORAGE_PREFIX: () => (/* binding */ z),\n/* harmony export */   CORE_VERSION: () => (/* binding */ Qe),\n/* harmony export */   CRYPTO_CLIENT_SEED: () => (/* binding */ ye),\n/* harmony export */   CRYPTO_CONTEXT: () => (/* binding */ tt),\n/* harmony export */   CRYPTO_JWT_TTL: () => (/* binding */ it),\n/* harmony export */   Core: () => (/* binding */ Br),\n/* harmony export */   Crypto: () => (/* binding */ Ot),\n/* harmony export */   ECHO_CONTEXT: () => (/* binding */ St),\n/* harmony export */   ECHO_URL: () => (/* binding */ Pt),\n/* harmony export */   EXPIRER_CONTEXT: () => (/* binding */ Tt),\n/* harmony export */   EXPIRER_DEFAULT_TTL: () => (/* binding */ wr),\n/* harmony export */   EXPIRER_EVENTS: () => (/* binding */ C),\n/* harmony export */   EXPIRER_STORAGE_VERSION: () => (/* binding */ _t),\n/* harmony export */   EchoClient: () => (/* binding */ Yt),\n/* harmony export */   Expirer: () => (/* binding */ jt),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ It),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ I),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ Ct),\n/* harmony export */   JsonRpcHistory: () => (/* binding */ qt),\n/* harmony export */   KEYCHAIN_CONTEXT: () => (/* binding */ st),\n/* harmony export */   KEYCHAIN_STORAGE_VERSION: () => (/* binding */ rt),\n/* harmony export */   KeyChain: () => (/* binding */ xt),\n/* harmony export */   MESSAGES_CONTEXT: () => (/* binding */ nt),\n/* harmony export */   MESSAGES_STORAGE_VERSION: () => (/* binding */ ot),\n/* harmony export */   MessageTracker: () => (/* binding */ At),\n/* harmony export */   PAIRING_CONTEXT: () => (/* binding */ wt),\n/* harmony export */   PAIRING_DEFAULT_TTL: () => (/* binding */ Er),\n/* harmony export */   PAIRING_EVENTS: () => (/* binding */ q),\n/* harmony export */   PAIRING_RPC_OPTS: () => (/* binding */ B),\n/* harmony export */   PAIRING_STORAGE_VERSION: () => (/* binding */ vt),\n/* harmony export */   PENDING_SUB_RESOLUTION_TIMEOUT: () => (/* binding */ Et),\n/* harmony export */   PUBLISHER_CONTEXT: () => (/* binding */ ht),\n/* harmony export */   PUBLISHER_DEFAULT_TTL: () => (/* binding */ at),\n/* harmony export */   Pairing: () => (/* binding */ Vt),\n/* harmony export */   RELAYER_CONTEXT: () => (/* binding */ ut),\n/* harmony export */   RELAYER_DEFAULT_LOGGER: () => (/* binding */ lt),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ ct),\n/* harmony export */   RELAYER_DEFAULT_RELAY_URL: () => (/* binding */ me),\n/* harmony export */   RELAYER_EVENTS: () => (/* binding */ f),\n/* harmony export */   RELAYER_FAILOVER_RELAY_URL: () => (/* binding */ be),\n/* harmony export */   RELAYER_PROVIDER_EVENTS: () => (/* binding */ E),\n/* harmony export */   RELAYER_RECONNECT_TIMEOUT: () => (/* binding */ gt),\n/* harmony export */   RELAYER_SDK_VERSION: () => (/* binding */ pt),\n/* harmony export */   RELAYER_STORAGE_OPTIONS: () => (/* binding */ br),\n/* harmony export */   RELAYER_SUBSCRIBER_SUFFIX: () => (/* binding */ dt),\n/* harmony export */   RELAYER_TRANSPORT_CUTOFF: () => (/* binding */ Dt),\n/* harmony export */   Relayer: () => (/* binding */ $t),\n/* harmony export */   STORE_STORAGE_VERSION: () => (/* binding */ yt),\n/* harmony export */   SUBSCRIBER_CONTEXT: () => (/* binding */ bt),\n/* harmony export */   SUBSCRIBER_DEFAULT_TTL: () => (/* binding */ fr),\n/* harmony export */   SUBSCRIBER_EVENTS: () => (/* binding */ S),\n/* harmony export */   SUBSCRIBER_STORAGE_VERSION: () => (/* binding */ ft),\n/* harmony export */   Store: () => (/* binding */ Kt),\n/* harmony export */   Subscriber: () => (/* binding */ Lt),\n/* harmony export */   TRUSTED_VERIFY_URLS: () => (/* binding */ Rt),\n/* harmony export */   VERIFY_CONTEXT: () => (/* binding */ ee),\n/* harmony export */   VERIFY_FALLBACK_SERVER: () => (/* binding */ te),\n/* harmony export */   VERIFY_SERVER: () => (/* binding */ M),\n/* harmony export */   Verify: () => (/* binding */ Gt),\n/* harmony export */   WALLETCONNECT_CLIENT_ID: () => (/* binding */ mt),\n/* harmony export */   \"default\": () => (/* binding */ ie)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/keyvaluestorage */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\");\n/* harmony import */ var _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/heartbeat */ \"(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\");\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/relay-auth */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/jsonrpc-ws-connection */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash.isequal */ \"(ssr)/./node_modules/lodash.isequal/index.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_isequal__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! isomorphic-unfetch */ \"(ssr)/./node_modules/isomorphic-unfetch/index.js\");\n/* harmony import */ var isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_12__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction Hi(o, e) {\n    if (o.length >= 255) throw new TypeError(\"Alphabet too long\");\n    for(var t = new Uint8Array(256), i = 0; i < t.length; i++)t[i] = 255;\n    for(var s = 0; s < o.length; s++){\n        var r = o.charAt(s), n = r.charCodeAt(0);\n        if (t[n] !== 255) throw new TypeError(r + \" is ambiguous\");\n        t[n] = s;\n    }\n    var a = o.length, h = o.charAt(0), l = Math.log(a) / Math.log(256), d = Math.log(256) / Math.log(a);\n    function g(u) {\n        if (u instanceof Uint8Array || (ArrayBuffer.isView(u) ? u = new Uint8Array(u.buffer, u.byteOffset, u.byteLength) : Array.isArray(u) && (u = Uint8Array.from(u))), !(u instanceof Uint8Array)) throw new TypeError(\"Expected Uint8Array\");\n        if (u.length === 0) return \"\";\n        for(var p = 0, T = 0, D = 0, P = u.length; D !== P && u[D] === 0;)D++, p++;\n        for(var x = (P - D) * d + 1 >>> 0, w = new Uint8Array(x); D !== P;){\n            for(var O = u[D], N = 0, _ = x - 1; (O !== 0 || N < T) && _ !== -1; _--, N++)O += 256 * w[_] >>> 0, w[_] = O % a >>> 0, O = O / a >>> 0;\n            if (O !== 0) throw new Error(\"Non-zero carry\");\n            T = N, D++;\n        }\n        for(var A = x - T; A !== x && w[A] === 0;)A++;\n        for(var G = h.repeat(p); A < x; ++A)G += o.charAt(w[A]);\n        return G;\n    }\n    function m(u) {\n        if (typeof u != \"string\") throw new TypeError(\"Expected String\");\n        if (u.length === 0) return new Uint8Array;\n        var p = 0;\n        if (u[p] !== \" \") {\n            for(var T = 0, D = 0; u[p] === h;)T++, p++;\n            for(var P = (u.length - p) * l + 1 >>> 0, x = new Uint8Array(P); u[p];){\n                var w = t[u.charCodeAt(p)];\n                if (w === 255) return;\n                for(var O = 0, N = P - 1; (w !== 0 || O < D) && N !== -1; N--, O++)w += a * x[N] >>> 0, x[N] = w % 256 >>> 0, w = w / 256 >>> 0;\n                if (w !== 0) throw new Error(\"Non-zero carry\");\n                D = O, p++;\n            }\n            if (u[p] !== \" \") {\n                for(var _ = P - D; _ !== P && x[_] === 0;)_++;\n                for(var A = new Uint8Array(T + (P - _)), G = T; _ !== P;)A[G++] = x[_++];\n                return A;\n            }\n        }\n    }\n    function L(u) {\n        var p = m(u);\n        if (p) return p;\n        throw new Error(`Non-${e} character`);\n    }\n    return {\n        encode: g,\n        decodeUnsafe: m,\n        decode: L\n    };\n}\nvar Ji = Hi, Xi = Ji;\nconst Ue = (o)=>{\n    if (o instanceof Uint8Array && o.constructor.name === \"Uint8Array\") return o;\n    if (o instanceof ArrayBuffer) return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    throw new Error(\"Unknown type, must be binary type\");\n}, Wi = (o)=>new TextEncoder().encode(o), Qi = (o)=>new TextDecoder().decode(o);\nclass Zi {\n    constructor(e, t, i){\n        this.name = e, this.prefix = t, this.baseEncode = i;\n    }\n    encode(e) {\n        if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;\n        throw Error(\"Unknown type, must be binary type\");\n    }\n}\nclass es {\n    constructor(e, t, i){\n        if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0) throw new Error(\"Invalid prefix character\");\n        this.prefixCodePoint = t.codePointAt(0), this.baseDecode = i;\n    }\n    decode(e) {\n        if (typeof e == \"string\") {\n            if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            return this.baseDecode(e.slice(this.prefix.length));\n        } else throw Error(\"Can only multibase decode strings\");\n    }\n    or(e) {\n        return Fe(this, e);\n    }\n}\nclass ts {\n    constructor(e){\n        this.decoders = e;\n    }\n    or(e) {\n        return Fe(this, e);\n    }\n    decode(e) {\n        const t = e[0], i = this.decoders[t];\n        if (i) return i.decode(e);\n        throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n    }\n}\nconst Fe = (o, e)=>new ts({\n        ...o.decoders || {\n            [o.prefix]: o\n        },\n        ...e.decoders || {\n            [e.prefix]: e\n        }\n    });\nclass is {\n    constructor(e, t, i, s){\n        this.name = e, this.prefix = t, this.baseEncode = i, this.baseDecode = s, this.encoder = new Zi(e, t, i), this.decoder = new es(e, t, s);\n    }\n    encode(e) {\n        return this.encoder.encode(e);\n    }\n    decode(e) {\n        return this.decoder.decode(e);\n    }\n}\nconst Q = ({ name: o, prefix: e, encode: t, decode: i })=>new is(o, e, t, i), V = ({ prefix: o, name: e, alphabet: t })=>{\n    const { encode: i, decode: s } = Xi(t, e);\n    return Q({\n        prefix: o,\n        name: e,\n        encode: i,\n        decode: (r)=>Ue(s(r))\n    });\n}, ss = (o, e, t, i)=>{\n    const s = {};\n    for(let d = 0; d < e.length; ++d)s[e[d]] = d;\n    let r = o.length;\n    for(; o[r - 1] === \"=\";)--r;\n    const n = new Uint8Array(r * t / 8 | 0);\n    let a = 0, h = 0, l = 0;\n    for(let d = 0; d < r; ++d){\n        const g = s[o[d]];\n        if (g === void 0) throw new SyntaxError(`Non-${i} character`);\n        h = h << t | g, a += t, a >= 8 && (a -= 8, n[l++] = 255 & h >> a);\n    }\n    if (a >= t || 255 & h << 8 - a) throw new SyntaxError(\"Unexpected end of data\");\n    return n;\n}, rs = (o, e, t)=>{\n    const i = e[e.length - 1] === \"=\", s = (1 << t) - 1;\n    let r = \"\", n = 0, a = 0;\n    for(let h = 0; h < o.length; ++h)for(a = a << 8 | o[h], n += 8; n > t;)n -= t, r += e[s & a >> n];\n    if (n && (r += e[s & a << t - n]), i) for(; r.length * t & 7;)r += \"=\";\n    return r;\n}, y = ({ name: o, prefix: e, bitsPerChar: t, alphabet: i })=>Q({\n        prefix: e,\n        name: o,\n        encode (s) {\n            return rs(s, i, t);\n        },\n        decode (s) {\n            return ss(s, i, t, o);\n        }\n    }), ns = Q({\n    prefix: \"\\x00\",\n    name: \"identity\",\n    encode: (o)=>Qi(o),\n    decode: (o)=>Wi(o)\n});\nvar os = Object.freeze({\n    __proto__: null,\n    identity: ns\n});\nconst as = y({\n    prefix: \"0\",\n    name: \"base2\",\n    alphabet: \"01\",\n    bitsPerChar: 1\n});\nvar hs = Object.freeze({\n    __proto__: null,\n    base2: as\n});\nconst cs = y({\n    prefix: \"7\",\n    name: \"base8\",\n    alphabet: \"01234567\",\n    bitsPerChar: 3\n});\nvar ls = Object.freeze({\n    __proto__: null,\n    base8: cs\n});\nconst us = V({\n    prefix: \"9\",\n    name: \"base10\",\n    alphabet: \"0123456789\"\n});\nvar ds = Object.freeze({\n    __proto__: null,\n    base10: us\n});\nconst gs = y({\n    prefix: \"f\",\n    name: \"base16\",\n    alphabet: \"0123456789abcdef\",\n    bitsPerChar: 4\n}), ps = y({\n    prefix: \"F\",\n    name: \"base16upper\",\n    alphabet: \"0123456789ABCDEF\",\n    bitsPerChar: 4\n});\nvar Ds = Object.freeze({\n    __proto__: null,\n    base16: gs,\n    base16upper: ps\n});\nconst ys = y({\n    prefix: \"b\",\n    name: \"base32\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567\",\n    bitsPerChar: 5\n}), ms = y({\n    prefix: \"B\",\n    name: \"base32upper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n    bitsPerChar: 5\n}), bs = y({\n    prefix: \"c\",\n    name: \"base32pad\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567=\",\n    bitsPerChar: 5\n}), fs = y({\n    prefix: \"C\",\n    name: \"base32padupper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",\n    bitsPerChar: 5\n}), Es = y({\n    prefix: \"v\",\n    name: \"base32hex\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv\",\n    bitsPerChar: 5\n}), ws = y({\n    prefix: \"V\",\n    name: \"base32hexupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n    bitsPerChar: 5\n}), vs = y({\n    prefix: \"t\",\n    name: \"base32hexpad\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv=\",\n    bitsPerChar: 5\n}), Is = y({\n    prefix: \"T\",\n    name: \"base32hexpadupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",\n    bitsPerChar: 5\n}), Cs = y({\n    prefix: \"h\",\n    name: \"base32z\",\n    alphabet: \"ybndrfg8ejkmcpqxot1uwisza345h769\",\n    bitsPerChar: 5\n});\nvar Ts = Object.freeze({\n    __proto__: null,\n    base32: ys,\n    base32upper: ms,\n    base32pad: bs,\n    base32padupper: fs,\n    base32hex: Es,\n    base32hexupper: ws,\n    base32hexpad: vs,\n    base32hexpadupper: Is,\n    base32z: Cs\n});\nconst _s = V({\n    prefix: \"k\",\n    name: \"base36\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuvwxyz\"\n}), Rs = V({\n    prefix: \"K\",\n    name: \"base36upper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n});\nvar Ss = Object.freeze({\n    __proto__: null,\n    base36: _s,\n    base36upper: Rs\n});\nconst Ps = V({\n    name: \"base58btc\",\n    prefix: \"z\",\n    alphabet: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n}), xs = V({\n    name: \"base58flickr\",\n    prefix: \"Z\",\n    alphabet: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"\n});\nvar Os = Object.freeze({\n    __proto__: null,\n    base58btc: Ps,\n    base58flickr: xs\n});\nconst As = y({\n    prefix: \"m\",\n    name: \"base64\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    bitsPerChar: 6\n}), zs = y({\n    prefix: \"M\",\n    name: \"base64pad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n    bitsPerChar: 6\n}), Ns = y({\n    prefix: \"u\",\n    name: \"base64url\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bitsPerChar: 6\n}), Ls = y({\n    prefix: \"U\",\n    name: \"base64urlpad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",\n    bitsPerChar: 6\n});\nvar Us = Object.freeze({\n    __proto__: null,\n    base64: As,\n    base64pad: zs,\n    base64url: Ns,\n    base64urlpad: Ls\n});\nconst $e = Array.from(\"\\uD83D\\uDE80\\uD83E\\uDE90☄\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09☀\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02❤\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09☺\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E✌✨\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D❣\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33✋\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13⭐✅\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6✔\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90☹\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20☝\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B⚽\\uD83E\\uDD19☕\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81⚡\\uD83C\\uDF1E\\uD83C\\uDF88❌✊\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C✈\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74▶➡❓\\uD83D\\uDC8E\\uD83D\\uDCB8⬇\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A⚠\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37☎\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51❄\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42\"), Fs = $e.reduce((o, e, t)=>(o[t] = e, o), []), $s = $e.reduce((o, e, t)=>(o[e.codePointAt(0)] = t, o), []);\nfunction Bs(o) {\n    return o.reduce((e, t)=>(e += Fs[t], e), \"\");\n}\nfunction Ms(o) {\n    const e = [];\n    for (const t of o){\n        const i = $s[t.codePointAt(0)];\n        if (i === void 0) throw new Error(`Non-base256emoji character: ${t}`);\n        e.push(i);\n    }\n    return new Uint8Array(e);\n}\nconst ks = Q({\n    prefix: \"\\uD83D\\uDE80\",\n    name: \"base256emoji\",\n    encode: Bs,\n    decode: Ms\n});\nvar Ks = Object.freeze({\n    __proto__: null,\n    base256emoji: ks\n}), Vs = Me, Be = 128, qs = 127, js = ~qs, Gs = Math.pow(2, 31);\nfunction Me(o, e, t) {\n    e = e || [], t = t || 0;\n    for(var i = t; o >= Gs;)e[t++] = o & 255 | Be, o /= 128;\n    for(; o & js;)e[t++] = o & 255 | Be, o >>>= 7;\n    return e[t] = o | 0, Me.bytes = t - i + 1, e;\n}\nvar Ys = de, Hs = 128, ke = 127;\nfunction de(o, i) {\n    var t = 0, i = i || 0, s = 0, r = i, n, a = o.length;\n    do {\n        if (r >= a) throw de.bytes = 0, new RangeError(\"Could not decode varint\");\n        n = o[r++], t += s < 28 ? (n & ke) << s : (n & ke) * Math.pow(2, s), s += 7;\n    }while (n >= Hs);\n    return de.bytes = r - i, t;\n}\nvar Js = Math.pow(2, 7), Xs = Math.pow(2, 14), Ws = Math.pow(2, 21), Qs = Math.pow(2, 28), Zs = Math.pow(2, 35), er = Math.pow(2, 42), tr = Math.pow(2, 49), ir = Math.pow(2, 56), sr = Math.pow(2, 63), rr = function(o) {\n    return o < Js ? 1 : o < Xs ? 2 : o < Ws ? 3 : o < Qs ? 4 : o < Zs ? 5 : o < er ? 6 : o < tr ? 7 : o < ir ? 8 : o < sr ? 9 : 10;\n}, nr = {\n    encode: Vs,\n    decode: Ys,\n    encodingLength: rr\n}, Ke = nr;\nconst Ve = (o, e, t = 0)=>(Ke.encode(o, e, t), e), qe = (o)=>Ke.encodingLength(o), ge = (o, e)=>{\n    const t = e.byteLength, i = qe(o), s = i + qe(t), r = new Uint8Array(s + t);\n    return Ve(o, r, 0), Ve(t, r, i), r.set(e, s), new or(o, t, e, r);\n};\nclass or {\n    constructor(e, t, i, s){\n        this.code = e, this.size = t, this.digest = i, this.bytes = s;\n    }\n}\nconst je = ({ name: o, code: e, encode: t })=>new ar(o, e, t);\nclass ar {\n    constructor(e, t, i){\n        this.name = e, this.code = t, this.encode = i;\n    }\n    digest(e) {\n        if (e instanceof Uint8Array) {\n            const t = this.encode(e);\n            return t instanceof Uint8Array ? ge(this.code, t) : t.then((i)=>ge(this.code, i));\n        } else throw Error(\"Unknown type, must be binary type\");\n    }\n}\nconst Ge = (o)=>async (e)=>new Uint8Array(await crypto.subtle.digest(o, e)), hr = je({\n    name: \"sha2-256\",\n    code: 18,\n    encode: Ge(\"SHA-256\")\n}), cr = je({\n    name: \"sha2-512\",\n    code: 19,\n    encode: Ge(\"SHA-512\")\n});\nvar lr = Object.freeze({\n    __proto__: null,\n    sha256: hr,\n    sha512: cr\n});\nconst Ye = 0, ur = \"identity\", He = Ue, dr = (o)=>ge(Ye, He(o)), gr = {\n    code: Ye,\n    name: ur,\n    encode: He,\n    digest: dr\n};\nvar pr = Object.freeze({\n    __proto__: null,\n    identity: gr\n});\nnew TextEncoder, new TextDecoder;\nconst Je = {\n    ...os,\n    ...hs,\n    ...ls,\n    ...ds,\n    ...Ds,\n    ...Ts,\n    ...Ss,\n    ...Os,\n    ...Us,\n    ...Ks\n};\n({\n    ...lr,\n    ...pr\n});\nfunction Dr(o = 0) {\n    return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(o) : new Uint8Array(o);\n}\nfunction Xe(o, e, t, i) {\n    return {\n        name: o,\n        prefix: e,\n        encoder: {\n            name: o,\n            prefix: e,\n            encode: t\n        },\n        decoder: {\n            decode: i\n        }\n    };\n}\nconst We = Xe(\"utf8\", \"u\", (o)=>\"u\" + new TextDecoder(\"utf8\").decode(o), (o)=>new TextEncoder().encode(o.substring(1))), pe = Xe(\"ascii\", \"a\", (o)=>{\n    let e = \"a\";\n    for(let t = 0; t < o.length; t++)e += String.fromCharCode(o[t]);\n    return e;\n}, (o)=>{\n    o = o.substring(1);\n    const e = Dr(o.length);\n    for(let t = 0; t < o.length; t++)e[t] = o.charCodeAt(t);\n    return e;\n}), yr = {\n    utf8: We,\n    \"utf-8\": We,\n    hex: Je.base16,\n    latin1: pe,\n    ascii: pe,\n    binary: pe,\n    ...Je\n};\nfunction mr(o, e = \"utf8\") {\n    const t = yr[e];\n    if (!t) throw new Error(`Unsupported encoding \"${e}\"`);\n    return (e === \"utf8\" || e === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(o, \"utf8\") : t.decoder.decode(`${t.prefix}${o}`);\n}\nconst De = \"wc\", Qe = 2, Z = \"core\", z = `${De}@2:${Z}:`, Ze = {\n    name: Z,\n    logger: \"error\"\n}, et = {\n    database: \":memory:\"\n}, tt = \"crypto\", ye = \"client_ed25519_seed\", it = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY, st = \"keychain\", rt = \"0.3\", nt = \"messages\", ot = \"0.3\", at = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.SIX_HOURS, ht = \"publisher\", ct = \"irn\", lt = \"error\", me = \"wss://relay.walletconnect.com\", be = \"wss://relay.walletconnect.org\", ut = \"relayer\", f = {\n    message: \"relayer_message\",\n    message_ack: \"relayer_message_ack\",\n    connect: \"relayer_connect\",\n    disconnect: \"relayer_disconnect\",\n    error: \"relayer_error\",\n    connection_stalled: \"relayer_connection_stalled\",\n    transport_closed: \"relayer_transport_closed\",\n    publish: \"relayer_publish\"\n}, dt = \"_subscription\", E = {\n    payload: \"payload\",\n    connect: \"connect\",\n    disconnect: \"disconnect\",\n    error: \"error\"\n}, gt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_SECOND, br = {\n    database: \":memory:\"\n}, pt = \"2.13.0\", Dt = 1e4, yt = \"0.3\", mt = \"WALLETCONNECT_CLIENT_ID\", S = {\n    created: \"subscription_created\",\n    deleted: \"subscription_deleted\",\n    expired: \"subscription_expired\",\n    disabled: \"subscription_disabled\",\n    sync: \"subscription_sync\",\n    resubscribed: \"subscription_resubscribed\"\n}, fr = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS, bt = \"subscription\", ft = \"0.3\", Et = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_SECONDS * 1e3, wt = \"pairing\", vt = \"0.3\", Er = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS, B = {\n    wc_pairingDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 1e3\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 1001\n        }\n    },\n    wc_pairingPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1002\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1003\n        }\n    },\n    unregistered_method: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        }\n    }\n}, q = {\n    create: \"pairing_create\",\n    expire: \"pairing_expire\",\n    delete: \"pairing_delete\",\n    ping: \"pairing_ping\"\n}, I = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, It = \"history\", Ct = \"0.3\", Tt = \"expirer\", C = {\n    created: \"expirer_created\",\n    deleted: \"expirer_deleted\",\n    expired: \"expirer_expired\",\n    sync: \"expirer_sync\"\n}, _t = \"0.3\", wr = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY, ee = \"verify-api\", M = \"https://verify.walletconnect.com\", te = \"https://verify.walletconnect.org\", Rt = [\n    M,\n    te\n], St = \"echo\", Pt = \"https://echo.walletconnect.com\";\nclass xt {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.keychain = new Map, this.name = st, this.version = rt, this.initialized = !1, this.storagePrefix = z, this.init = async ()=>{\n            if (!this.initialized) {\n                const i = await this.getKeyChain();\n                typeof i < \"u\" && (this.keychain = i), this.initialized = !0;\n            }\n        }, this.has = (i)=>(this.isInitialized(), this.keychain.has(i)), this.set = async (i, s)=>{\n            this.isInitialized(), this.keychain.set(i, s), await this.persist();\n        }, this.get = (i)=>{\n            this.isInitialized();\n            const s = this.keychain.get(i);\n            if (typeof s > \"u\") {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${i}`);\n                throw new Error(r);\n            }\n            return s;\n        }, this.del = async (i)=>{\n            this.isInitialized(), this.keychain.delete(i), await this.persist();\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setKeyChain(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.mapToObj)(e));\n    }\n    async getKeyChain() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setKeyChain(this.keychain);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Ot {\n    constructor(e, t, i){\n        this.core = e, this.logger = t, this.name = tt, this.initialized = !1, this.init = async ()=>{\n            this.initialized || (await this.keychain.init(), this.initialized = !0);\n        }, this.hasKeys = (s)=>(this.isInitialized(), this.keychain.has(s)), this.getClientId = async ()=>{\n            this.isInitialized();\n            const s = await this.getClientSeed(), r = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.generateKeyPair(s);\n            return _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.encodeIss(r.publicKey);\n        }, this.generateKeyPair = ()=>{\n            this.isInitialized();\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateKeyPair)();\n            return this.setPrivateKey(s.publicKey, s.privateKey);\n        }, this.signJWT = async (s)=>{\n            this.isInitialized();\n            const r = await this.getClientSeed(), n = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.generateKeyPair(r), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateRandomBytes32)(), h = it;\n            return await _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.signJWT(a, s, h, n);\n        }, this.generateSharedKey = (s, r, n)=>{\n            this.isInitialized();\n            const a = this.getPrivateKey(s), h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.deriveSymKey)(a, r);\n            return this.setSymKey(h, n);\n        }, this.setSymKey = async (s, r)=>{\n            this.isInitialized();\n            const n = r || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashKey)(s);\n            return await this.keychain.set(n, s), n;\n        }, this.deleteKeyPair = async (s)=>{\n            this.isInitialized(), await this.keychain.del(s);\n        }, this.deleteSymKey = async (s)=>{\n            this.isInitialized(), await this.keychain.del(s);\n        }, this.encode = async (s, r, n)=>{\n            this.isInitialized();\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.validateEncoding)(n), h = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_4__.safeJsonStringify)(r);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isTypeOneEnvelope)(a)) {\n                const m = a.senderPublicKey, L = a.receiverPublicKey;\n                s = await this.generateSharedKey(m, L);\n            }\n            const l = this.getSymKey(s), { type: d, senderPublicKey: g } = a;\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.encrypt)({\n                type: d,\n                symKey: l,\n                message: h,\n                senderPublicKey: g\n            });\n        }, this.decode = async (s, r, n)=>{\n            this.isInitialized();\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.validateDecoding)(r, n);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isTypeOneEnvelope)(a)) {\n                const h = a.receiverPublicKey, l = a.senderPublicKey;\n                s = await this.generateSharedKey(h, l);\n            }\n            try {\n                const h = this.getSymKey(s), l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.decrypt)({\n                    symKey: h,\n                    encoded: r\n                });\n                return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_4__.safeJsonParse)(l);\n            } catch (h) {\n                this.logger.error(`Failed to decode message from topic: '${s}', clientId: '${await this.getClientId()}'`), this.logger.error(h);\n            }\n        }, this.getPayloadType = (s)=>{\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.deserialize)(s);\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.decodeTypeByte)(r.type);\n        }, this.getPayloadSenderPublicKey = (s)=>{\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.deserialize)(s);\n            return r.senderPublicKey ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_6__.toString)(r.senderPublicKey, _walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.BASE16) : void 0;\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.keychain = i || new xt(this.core, this.logger);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async setPrivateKey(e, t) {\n        return await this.keychain.set(e, t), e;\n    }\n    getPrivateKey(e) {\n        return this.keychain.get(e);\n    }\n    async getClientSeed() {\n        let e = \"\";\n        try {\n            e = this.keychain.get(ye);\n        } catch  {\n            e = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateRandomBytes32)(), await this.keychain.set(ye, e);\n        }\n        return mr(e, \"base16\");\n    }\n    getSymKey(e) {\n        return this.keychain.get(e);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass At extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IMessageTracker {\n    constructor(e, t){\n        super(e, t), this.logger = e, this.core = t, this.messages = new Map, this.name = nt, this.version = ot, this.initialized = !1, this.storagePrefix = z, this.init = async ()=>{\n            if (!this.initialized) {\n                this.logger.trace(\"Initialized\");\n                try {\n                    const i = await this.getRelayerMessages();\n                    typeof i < \"u\" && (this.messages = i), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                        type: \"method\",\n                        method: \"restore\",\n                        size: this.messages.size\n                    });\n                } catch (i) {\n                    this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i);\n                } finally{\n                    this.initialized = !0;\n                }\n            }\n        }, this.set = async (i, s)=>{\n            this.isInitialized();\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashMessage)(s);\n            let n = this.messages.get(i);\n            return typeof n > \"u\" && (n = {}), typeof n[r] < \"u\" || (n[r] = s, this.messages.set(i, n), await this.persist()), r;\n        }, this.get = (i)=>{\n            this.isInitialized();\n            let s = this.messages.get(i);\n            return typeof s > \"u\" && (s = {}), s;\n        }, this.has = (i, s)=>{\n            this.isInitialized();\n            const r = this.get(i), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashMessage)(s);\n            return typeof r[n] < \"u\";\n        }, this.del = async (i)=>{\n            this.isInitialized(), this.messages.delete(i), await this.persist();\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e, this.name), this.core = t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setRelayerMessages(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.mapToObj)(e));\n    }\n    async getRelayerMessages() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setRelayerMessages(this.messages);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass vr extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IPublisher {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = ht, this.queue = new Map, this.publishTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_MINUTE), this.failedPublishTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_SECOND), this.needsTransportRestart = !1, this.publish = async (i, s, r)=>{\n            var n;\n            this.logger.debug(\"Publishing Payload\"), this.logger.trace({\n                type: \"method\",\n                method: \"publish\",\n                params: {\n                    topic: i,\n                    message: s,\n                    opts: r\n                }\n            });\n            const a = r?.ttl || at, h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolName)(r), l = r?.prompt || !1, d = r?.tag || 0, g = r?.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.getBigIntRpcId)().toString(), m = {\n                topic: i,\n                message: s,\n                opts: {\n                    ttl: a,\n                    relay: h,\n                    prompt: l,\n                    tag: d,\n                    id: g\n                }\n            }, L = `Failed to publish payload, please try again. id:${g} tag:${d}`, u = Date.now();\n            let p, T = 1;\n            try {\n                for(; p === void 0;){\n                    if (Date.now() - u > this.publishTimeout) throw new Error(L);\n                    this.logger.trace({\n                        id: g,\n                        attempts: T\n                    }, `publisher.publish - attempt ${T}`), p = await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.rpcPublish(i, s, a, h, l, d, g).catch((D)=>this.logger.warn(D)), this.publishTimeout, L), T++, p || await new Promise((D)=>setTimeout(D, this.failedPublishTimeout));\n                }\n                this.relayer.events.emit(f.publish, m), this.logger.debug(\"Successfully Published Payload\"), this.logger.trace({\n                    type: \"method\",\n                    method: \"publish\",\n                    params: {\n                        id: g,\n                        topic: i,\n                        message: s,\n                        opts: r\n                    }\n                });\n            } catch (D) {\n                if (this.logger.debug(\"Failed to Publish Payload\"), this.logger.error(D), (n = r?.internal) != null && n.throwOnFailedPublish) throw D;\n                this.queue.set(g, m);\n            }\n        }, this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.registerEventListeners();\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    rpcPublish(e, t, i, s, r, n, a) {\n        var h, l, d, g;\n        const m = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(s.protocol).publish,\n            params: {\n                topic: e,\n                message: t,\n                ttl: i,\n                prompt: r,\n                tag: n\n            },\n            id: a\n        };\n        return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isUndefined)((h = m.params) == null ? void 0 : h.prompt) && ((l = m.params) == null || delete l.prompt), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isUndefined)((d = m.params) == null ? void 0 : d.tag) && ((g = m.params) == null || delete g.tag), this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"message\",\n            direction: \"outgoing\",\n            request: m\n        }), this.relayer.request(m);\n    }\n    removeRequestFromQueue(e) {\n        this.queue.delete(e);\n    }\n    checkQueue() {\n        this.queue.forEach(async (e)=>{\n            const { topic: t, message: i, opts: s } = e;\n            await this.publish(t, i, s);\n        });\n    }\n    registerEventListeners() {\n        this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, ()=>{\n            if (this.needsTransportRestart) {\n                this.needsTransportRestart = !1, this.relayer.events.emit(f.connection_stalled);\n                return;\n            }\n            this.checkQueue();\n        }), this.relayer.on(f.message_ack, (e)=>{\n            this.removeRequestFromQueue(e.id.toString());\n        });\n    }\n}\nclass Ir {\n    constructor(){\n        this.map = new Map, this.set = (e, t)=>{\n            const i = this.get(e);\n            this.exists(e, t) || this.map.set(e, [\n                ...i,\n                t\n            ]);\n        }, this.get = (e)=>this.map.get(e) || [], this.exists = (e, t)=>this.get(e).includes(t), this.delete = (e, t)=>{\n            if (typeof t > \"u\") {\n                this.map.delete(e);\n                return;\n            }\n            if (!this.map.has(e)) return;\n            const i = this.get(e);\n            if (!this.exists(e, t)) return;\n            const s = i.filter((r)=>r !== t);\n            if (!s.length) {\n                this.map.delete(e);\n                return;\n            }\n            this.map.set(e, s);\n        }, this.clear = ()=>{\n            this.map.clear();\n        };\n    }\n    get topics() {\n        return Array.from(this.map.keys());\n    }\n}\nvar Cr = Object.defineProperty, Tr = Object.defineProperties, _r = Object.getOwnPropertyDescriptors, zt = Object.getOwnPropertySymbols, Rr = Object.prototype.hasOwnProperty, Sr = Object.prototype.propertyIsEnumerable, Nt = (o, e, t)=>e in o ? Cr(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, j = (o, e)=>{\n    for(var t in e || (e = {}))Rr.call(e, t) && Nt(o, t, e[t]);\n    if (zt) for (var t of zt(e))Sr.call(e, t) && Nt(o, t, e[t]);\n    return o;\n}, fe = (o, e)=>Tr(o, _r(e));\nclass Lt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.ISubscriber {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.subscriptions = new Map, this.topicMap = new Ir, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = bt, this.version = ft, this.pending = new Map, this.cached = [], this.initialized = !1, this.pendingSubscriptionWatchLabel = \"pending_sub_watch_label\", this.pollingInterval = 20, this.storagePrefix = z, this.subscribeTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_MINUTE), this.restartInProgress = !1, this.batchSubscribeTopicsLimit = 500, this.pendingBatchMessages = [], this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId());\n        }, this.subscribe = async (i, s)=>{\n            await this.restartToComplete(), this.isInitialized(), this.logger.debug(\"Subscribing Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"subscribe\",\n                params: {\n                    topic: i,\n                    opts: s\n                }\n            });\n            try {\n                const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolName)(s), n = {\n                    topic: i,\n                    relay: r\n                };\n                this.pending.set(i, n);\n                const a = await this.rpcSubscribe(i, r);\n                return typeof a == \"string\" && (this.onSubscribe(a, n), this.logger.debug(\"Successfully Subscribed Topic\"), this.logger.trace({\n                    type: \"method\",\n                    method: \"subscribe\",\n                    params: {\n                        topic: i,\n                        opts: s\n                    }\n                })), a;\n            } catch (r) {\n                throw this.logger.debug(\"Failed to Subscribe Topic\"), this.logger.error(r), r;\n            }\n        }, this.unsubscribe = async (i, s)=>{\n            await this.restartToComplete(), this.isInitialized(), typeof s?.id < \"u\" ? await this.unsubscribeById(i, s.id, s) : await this.unsubscribeByTopic(i, s);\n        }, this.isSubscribed = async (i)=>{\n            if (this.topics.includes(i)) return !0;\n            const s = `${this.pendingSubscriptionWatchLabel}_${i}`;\n            return await new Promise((r, n)=>{\n                const a = new _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.Watch;\n                a.start(s);\n                const h = setInterval(()=>{\n                    !this.pending.has(i) && this.topics.includes(i) && (clearInterval(h), a.stop(s), r(!0)), a.elapsed(s) >= Et && (clearInterval(h), a.stop(s), n(new Error(\"Subscription resolution timeout\")));\n                }, this.pollingInterval);\n            }).catch(()=>!1);\n        }, this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.start = async ()=>{\n            await this.onConnect();\n        }, this.stop = async ()=>{\n            await this.onDisconnect();\n        }, this.restart = async ()=>{\n            this.restartInProgress = !0, await this.restore(), await this.reset(), this.restartInProgress = !1;\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.clientId = \"\";\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.subscriptions.size;\n    }\n    get ids() {\n        return Array.from(this.subscriptions.keys());\n    }\n    get values() {\n        return Array.from(this.subscriptions.values());\n    }\n    get topics() {\n        return this.topicMap.topics;\n    }\n    hasSubscription(e, t) {\n        let i = !1;\n        try {\n            i = this.getSubscription(e).topic === t;\n        } catch  {}\n        return i;\n    }\n    onEnable() {\n        this.cached = [], this.initialized = !0;\n    }\n    onDisable() {\n        this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();\n    }\n    async unsubscribeByTopic(e, t) {\n        const i = this.topicMap.get(e);\n        await Promise.all(i.map(async (s)=>await this.unsubscribeById(e, s, t)));\n    }\n    async unsubscribeById(e, t, i) {\n        this.logger.debug(\"Unsubscribing Topic\"), this.logger.trace({\n            type: \"method\",\n            method: \"unsubscribe\",\n            params: {\n                topic: e,\n                id: t,\n                opts: i\n            }\n        });\n        try {\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolName)(i);\n            await this.rpcUnsubscribe(e, t, s);\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"USER_DISCONNECTED\", `${this.name}, ${e}`);\n            await this.onUnsubscribe(e, t, r), this.logger.debug(\"Successfully Unsubscribed Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"unsubscribe\",\n                params: {\n                    topic: e,\n                    id: t,\n                    opts: i\n                }\n            });\n        } catch (s) {\n            throw this.logger.debug(\"Failed to Unsubscribe Topic\"), this.logger.error(s), s;\n        }\n    }\n    async rpcSubscribe(e, t) {\n        const i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(t.protocol).subscribe,\n            params: {\n                topic: e\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        });\n        try {\n            return await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.relayer.request(i).catch((s)=>this.logger.warn(s)), this.subscribeTimeout) ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashMessage)(e + this.clientId) : null;\n        } catch  {\n            this.logger.debug(\"Outgoing Relay Subscribe Payload stalled\"), this.relayer.events.emit(f.connection_stalled);\n        }\n        return null;\n    }\n    async rpcBatchSubscribe(e) {\n        if (!e.length) return;\n        const t = e[0].relay, i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(t.protocol).batchSubscribe,\n            params: {\n                topics: e.map((s)=>s.topic)\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        });\n        try {\n            return await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.relayer.request(i).catch((s)=>this.logger.warn(s)), this.subscribeTimeout);\n        } catch  {\n            this.relayer.events.emit(f.connection_stalled);\n        }\n    }\n    async rpcBatchFetchMessages(e) {\n        if (!e.length) return;\n        const t = e[0].relay, i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(t.protocol).batchFetchMessages,\n            params: {\n                topics: e.map((r)=>r.topic)\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        });\n        let s;\n        try {\n            s = await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.relayer.request(i).catch((r)=>this.logger.warn(r)), this.subscribeTimeout);\n        } catch  {\n            this.relayer.events.emit(f.connection_stalled);\n        }\n        return s;\n    }\n    rpcUnsubscribe(e, t, i) {\n        const s = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(i.protocol).unsubscribe,\n            params: {\n                topic: e,\n                id: t\n            }\n        };\n        return this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: s\n        }), this.relayer.request(s);\n    }\n    onSubscribe(e, t) {\n        this.setSubscription(e, fe(j({}, t), {\n            id: e\n        })), this.pending.delete(t.topic);\n    }\n    onBatchSubscribe(e) {\n        e.length && e.forEach((t)=>{\n            this.setSubscription(t.id, j({}, t)), this.pending.delete(t.topic);\n        });\n    }\n    async onUnsubscribe(e, t, i) {\n        this.events.removeAllListeners(t), this.hasSubscription(t, e) && this.deleteSubscription(t, i), await this.relayer.messages.del(e);\n    }\n    async setRelayerSubscriptions(e) {\n        await this.relayer.core.storage.setItem(this.storageKey, e);\n    }\n    async getRelayerSubscriptions() {\n        return await this.relayer.core.storage.getItem(this.storageKey);\n    }\n    setSubscription(e, t) {\n        this.logger.debug(\"Setting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"setSubscription\",\n            id: e,\n            subscription: t\n        }), this.addSubscription(e, t);\n    }\n    addSubscription(e, t) {\n        this.subscriptions.set(e, j({}, t)), this.topicMap.set(t.topic, e), this.events.emit(S.created, t);\n    }\n    getSubscription(e) {\n        this.logger.debug(\"Getting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"getSubscription\",\n            id: e\n        });\n        const t = this.subscriptions.get(e);\n        if (!t) {\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(i);\n        }\n        return t;\n    }\n    deleteSubscription(e, t) {\n        this.logger.debug(\"Deleting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"deleteSubscription\",\n            id: e,\n            reason: t\n        });\n        const i = this.getSubscription(e);\n        this.subscriptions.delete(e), this.topicMap.delete(i.topic, e), this.events.emit(S.deleted, fe(j({}, i), {\n            reason: t\n        }));\n    }\n    async persist() {\n        await this.setRelayerSubscriptions(this.values), this.events.emit(S.sync);\n    }\n    async reset() {\n        if (this.cached.length) {\n            const e = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);\n            for(let t = 0; t < e; t++){\n                const i = this.cached.splice(0, this.batchSubscribeTopicsLimit);\n                await this.batchFetchMessages(i), await this.batchSubscribe(i);\n            }\n        }\n        this.events.emit(S.resubscribed);\n    }\n    async restore() {\n        try {\n            const e = await this.getRelayerSubscriptions();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.subscriptions.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                subscriptions: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);\n        }\n    }\n    async batchSubscribe(e) {\n        if (!e.length) return;\n        const t = await this.rpcBatchSubscribe(e);\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidArray)(t) && this.onBatchSubscribe(t.map((i, s)=>fe(j({}, e[s]), {\n                id: i\n            })));\n    }\n    async batchFetchMessages(e) {\n        if (!e.length) return;\n        this.logger.trace(`Fetching batch messages for ${e.length} subscriptions`);\n        const t = await this.rpcBatchFetchMessages(e);\n        t && t.messages && (this.pendingBatchMessages = this.pendingBatchMessages.concat(t.messages));\n    }\n    async onConnect() {\n        await this.restart(), this.onEnable();\n    }\n    onDisconnect() {\n        this.onDisable();\n    }\n    async checkPending() {\n        if (!this.initialized || !this.relayer.connected) return;\n        const e = [];\n        this.pending.forEach((t)=>{\n            e.push(t);\n        }), await this.batchSubscribe(e), this.pendingBatchMessages.length && (await this.relayer.handleBatchMessageEvents(this.pendingBatchMessages), this.pendingBatchMessages = []);\n    }\n    registerEventListeners() {\n        this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, async ()=>{\n            await this.checkPending();\n        }), this.events.on(S.created, async (e)=>{\n            const t = S.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), await this.persist();\n        }), this.events.on(S.deleted, async (e)=>{\n            const t = S.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), await this.persist();\n        });\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async restartToComplete() {\n        this.restartInProgress && await new Promise((e)=>{\n            const t = setInterval(()=>{\n                this.restartInProgress || (clearInterval(t), e());\n            }, this.pollingInterval);\n        });\n    }\n}\nvar Pr = Object.defineProperty, Ut = Object.getOwnPropertySymbols, xr = Object.prototype.hasOwnProperty, Or = Object.prototype.propertyIsEnumerable, Ft = (o, e, t)=>e in o ? Pr(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, Ar = (o, e)=>{\n    for(var t in e || (e = {}))xr.call(e, t) && Ft(o, t, e[t]);\n    if (Ut) for (var t of Ut(e))Or.call(e, t) && Ft(o, t, e[t]);\n    return o;\n};\nclass $t extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IRelayer {\n    constructor(e){\n        super(e), this.protocol = \"wc\", this.version = 2, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = ut, this.transportExplicitlyClosed = !1, this.initialized = !1, this.connectionAttemptInProgress = !1, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = [\n            \"socket hang up\",\n            \"stalled\",\n            \"interrupted\"\n        ], this.hasExperiencedNetworkDisruption = !1, this.requestsInFlight = new Map, this.heartBeatTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_SECONDS + _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_SECOND), this.request = async (t)=>{\n            var i, s;\n            this.logger.debug(\"Publishing Request Payload\");\n            const r = t.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.getBigIntRpcId)().toString();\n            await this.toEstablishConnection();\n            try {\n                const n = this.provider.request(t);\n                this.requestsInFlight.set(r, {\n                    promise: n,\n                    request: t\n                }), this.logger.trace({\n                    id: r,\n                    method: t.method,\n                    topic: (i = t.params) == null ? void 0 : i.topic\n                }, \"relayer.request - attempt to publish...\");\n                const a = await new Promise(async (h, l)=>{\n                    const d = ()=>{\n                        l(new Error(`relayer.request - publish interrupted, id: ${r}`));\n                    };\n                    this.provider.on(E.disconnect, d);\n                    const g = await n;\n                    this.provider.off(E.disconnect, d), h(g);\n                });\n                return this.logger.trace({\n                    id: r,\n                    method: t.method,\n                    topic: (s = t.params) == null ? void 0 : s.topic\n                }, \"relayer.request - published\"), a;\n            } catch (n) {\n                throw this.logger.debug(`Failed to Publish Request: ${r}`), n;\n            } finally{\n                this.requestsInFlight.delete(r);\n            }\n        }, this.resetPingTimeout = ()=>{\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isNode)()) try {\n                clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(()=>{\n                    var t, i, s;\n                    (s = (i = (t = this.provider) == null ? void 0 : t.connection) == null ? void 0 : i.socket) == null || s.terminate();\n                }, this.heartBeatTimeout);\n            } catch (t) {\n                this.logger.warn(t);\n            }\n        }, this.onPayloadHandler = (t)=>{\n            this.onProviderPayload(t), this.resetPingTimeout();\n        }, this.onConnectHandler = ()=>{\n            this.startPingTimeout(), this.events.emit(f.connect);\n        }, this.onDisconnectHandler = ()=>{\n            this.onProviderDisconnect();\n        }, this.onProviderErrorHandler = (t)=>{\n            this.logger.error(t), this.events.emit(f.error, t), this.logger.info(\"Fatal socket error received, closing transport\"), this.transportClose();\n        }, this.registerProviderListeners = ()=>{\n            this.provider.on(E.payload, this.onPayloadHandler), this.provider.on(E.connect, this.onConnectHandler), this.provider.on(E.disconnect, this.onDisconnectHandler), this.provider.on(E.error, this.onProviderErrorHandler);\n        }, this.core = e.core, this.logger = typeof e.logger < \"u\" && typeof e.logger != \"string\" ? (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e.logger, this.name) : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: e.logger || lt\n        })), this.messages = new At(this.logger, e.core), this.subscriber = new Lt(this, this.logger), this.publisher = new vr(this, this.logger), this.relayUrl = e?.relayUrl || me, this.projectId = e.projectId, this.bundleId = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getBundleId)(), this.provider = {};\n    }\n    async init() {\n        this.logger.trace(\"Initialized\"), this.registerEventListeners(), await Promise.all([\n            this.messages.init(),\n            this.subscriber.init()\n        ]);\n        try {\n            await this.transportOpen();\n        } catch  {\n            this.logger.warn(`Connection via ${this.relayUrl} failed, attempting to connect via failover domain ${be}...`), await this.restartTransport(be);\n        }\n        this.initialized = !0, setTimeout(async ()=>{\n            this.subscriber.topics.length === 0 && this.subscriber.pending.size === 0 && (this.logger.info(\"No topics subscribed to after init, closing transport\"), await this.transportClose(), this.transportExplicitlyClosed = !1);\n        }, Dt);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get connected() {\n        var e, t, i;\n        return ((i = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : i.readyState) === 1;\n    }\n    get connecting() {\n        var e, t, i;\n        return ((i = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : i.readyState) === 0;\n    }\n    async publish(e, t, i) {\n        this.isInitialized(), await this.publisher.publish(e, t, i), await this.recordMessageEvent({\n            topic: e,\n            message: t,\n            publishedAt: Date.now()\n        });\n    }\n    async subscribe(e, t) {\n        var i;\n        this.isInitialized();\n        let s = ((i = this.subscriber.topicMap.get(e)) == null ? void 0 : i[0]) || \"\", r;\n        const n = (a)=>{\n            a.topic === e && (this.subscriber.off(S.created, n), r());\n        };\n        return await Promise.all([\n            new Promise((a)=>{\n                r = a, this.subscriber.on(S.created, n);\n            }),\n            new Promise(async (a)=>{\n                s = await this.subscriber.subscribe(e, t) || s, a();\n            })\n        ]), s;\n    }\n    async unsubscribe(e, t) {\n        this.isInitialized(), await this.subscriber.unsubscribe(e, t);\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async transportDisconnect() {\n        if (!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0) try {\n            await Promise.all(Array.from(this.requestsInFlight.values()).map((e)=>e.promise));\n        } catch (e) {\n            this.logger.warn(e);\n        }\n        this.hasExperiencedNetworkDisruption || this.connected ? await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.provider.disconnect(), 2e3, \"provider.disconnect()\").catch(()=>this.onProviderDisconnect()) : this.onProviderDisconnect();\n    }\n    async transportClose() {\n        this.transportExplicitlyClosed = !0, await this.transportDisconnect();\n    }\n    async transportOpen(e) {\n        await this.confirmOnlineStateOrThrow(), e && e !== this.relayUrl && (this.relayUrl = e, await this.transportDisconnect()), await this.createProvider(), this.connectionAttemptInProgress = !0, this.transportExplicitlyClosed = !1;\n        try {\n            await new Promise(async (t, i)=>{\n                const s = ()=>{\n                    this.provider.off(E.disconnect, s), i(new Error(\"Connection interrupted while trying to subscribe\"));\n                };\n                this.provider.on(E.disconnect, s), await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.provider.connect(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_MINUTE), `Socket stalled when trying to connect to ${this.relayUrl}`).catch((r)=>{\n                    i(r);\n                }), await this.subscriber.start(), this.hasExperiencedNetworkDisruption = !1, t();\n            });\n        } catch (t) {\n            this.logger.error(t);\n            const i = t;\n            if (this.hasExperiencedNetworkDisruption = !0, !this.isConnectionStalled(i.message)) throw t;\n        } finally{\n            this.connectionAttemptInProgress = !1;\n        }\n    }\n    async restartTransport(e) {\n        this.connectionAttemptInProgress || (this.relayUrl = e || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen());\n    }\n    async confirmOnlineStateOrThrow() {\n        if (!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isOnline)()) throw new Error(\"No internet connection detected. Please restart your network and try again.\");\n    }\n    async handleBatchMessageEvents(e) {\n        if (e?.length === 0) {\n            this.logger.trace(\"Batch message events is empty. Ignoring...\");\n            return;\n        }\n        const t = e.sort((i, s)=>i.publishedAt - s.publishedAt);\n        this.logger.trace(`Batch of ${t.length} message events sorted`);\n        for (const i of t)try {\n            await this.onMessageEvent(i);\n        } catch (s) {\n            this.logger.warn(s);\n        }\n        this.logger.trace(`Batch of ${t.length} message events processed`);\n    }\n    startPingTimeout() {\n        var e, t, i, s, r;\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isNode)()) try {\n            (t = (e = this.provider) == null ? void 0 : e.connection) != null && t.socket && ((r = (s = (i = this.provider) == null ? void 0 : i.connection) == null ? void 0 : s.socket) == null || r.once(\"ping\", ()=>{\n                this.resetPingTimeout();\n            })), this.resetPingTimeout();\n        } catch (n) {\n            this.logger.warn(n);\n        }\n    }\n    isConnectionStalled(e) {\n        return this.staleConnectionErrors.some((t)=>e.includes(t));\n    }\n    async createProvider() {\n        this.provider.connection && this.unregisterProviderListeners();\n        const e = await this.core.crypto.signJWT(this.relayUrl);\n        this.provider = new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__.JsonRpcProvider(new _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatRelayRpcUrl)({\n            sdkVersion: pt,\n            protocol: this.protocol,\n            version: this.version,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId,\n            auth: e,\n            useOnCloseEvent: !0,\n            bundleId: this.bundleId\n        }))), this.registerProviderListeners();\n    }\n    async recordMessageEvent(e) {\n        const { topic: t, message: i } = e;\n        await this.messages.set(t, i);\n    }\n    async shouldIgnoreMessageEvent(e) {\n        const { topic: t, message: i } = e;\n        if (!i || i.length === 0) return this.logger.debug(`Ignoring invalid/empty message: ${i}`), !0;\n        if (!await this.subscriber.isSubscribed(t)) return this.logger.debug(`Ignoring message for non-subscribed topic ${t}`), !0;\n        const s = this.messages.has(t, i);\n        return s && this.logger.debug(`Ignoring duplicate message: ${i}`), s;\n    }\n    async onProviderPayload(e) {\n        if (this.logger.debug(\"Incoming Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"incoming\",\n            payload: e\n        }), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(e)) {\n            if (!e.method.endsWith(dt)) return;\n            const t = e.params, { topic: i, message: s, publishedAt: r } = t.data, n = {\n                topic: i,\n                message: s,\n                publishedAt: r\n            };\n            this.logger.debug(\"Emitting Relayer Payload\"), this.logger.trace(Ar({\n                type: \"event\",\n                event: t.id\n            }, n)), this.events.emit(t.id, n), await this.acknowledgePayload(e), await this.onMessageEvent(n);\n        } else (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(e) && this.events.emit(f.message_ack, e);\n    }\n    async onMessageEvent(e) {\n        await this.shouldIgnoreMessageEvent(e) || (this.events.emit(f.message, e), await this.recordMessageEvent(e));\n    }\n    async acknowledgePayload(e) {\n        const t = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(e.id, !0);\n        await this.provider.connection.send(t);\n    }\n    unregisterProviderListeners() {\n        this.provider.off(E.payload, this.onPayloadHandler), this.provider.off(E.connect, this.onConnectHandler), this.provider.off(E.disconnect, this.onDisconnectHandler), this.provider.off(E.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);\n    }\n    async registerEventListeners() {\n        let e = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isOnline)();\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.subscribeToNetworkChange)(async (t)=>{\n            e !== t && (e = t, t ? await this.restartTransport().catch((i)=>this.logger.error(i)) : (this.hasExperiencedNetworkDisruption = !0, await this.transportDisconnect(), this.transportExplicitlyClosed = !1));\n        });\n    }\n    async onProviderDisconnect() {\n        await this.subscriber.stop(), this.requestsInFlight.clear(), clearTimeout(this.pingTimeout), this.events.emit(f.disconnect), this.connectionAttemptInProgress = !1, !this.transportExplicitlyClosed && setTimeout(async ()=>{\n            await this.transportOpen().catch((e)=>this.logger.error(e));\n        }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(gt));\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async toEstablishConnection() {\n        await this.confirmOnlineStateOrThrow(), !this.connected && (this.connectionAttemptInProgress && await new Promise((e)=>{\n            const t = setInterval(()=>{\n                this.connected && (clearInterval(t), e());\n            }, this.connectionStatusPollingInterval);\n        }), await this.transportOpen());\n    }\n}\nvar zr = Object.defineProperty, Bt = Object.getOwnPropertySymbols, Nr = Object.prototype.hasOwnProperty, Lr = Object.prototype.propertyIsEnumerable, Mt = (o, e, t)=>e in o ? zr(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, kt = (o, e)=>{\n    for(var t in e || (e = {}))Nr.call(e, t) && Mt(o, t, e[t]);\n    if (Bt) for (var t of Bt(e))Lr.call(e, t) && Mt(o, t, e[t]);\n    return o;\n};\nclass Kt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IStore {\n    constructor(e, t, i, s = z, r = void 0){\n        super(e, t, i, s), this.core = e, this.logger = t, this.name = i, this.map = new Map, this.version = yt, this.cached = [], this.initialized = !1, this.storagePrefix = z, this.recentlyDeleted = [], this.recentlyDeletedLimit = 200, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((n)=>{\n                this.getKey && n !== null && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isUndefined)(n) ? this.map.set(this.getKey(n), n) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isProposalStruct)(n) ? this.map.set(n.id, n) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isSessionStruct)(n) && this.map.set(n.topic, n);\n            }), this.cached = [], this.initialized = !0);\n        }, this.set = async (n, a)=>{\n            this.isInitialized(), this.map.has(n) ? await this.update(n, a) : (this.logger.debug(\"Setting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                key: n,\n                value: a\n            }), this.map.set(n, a), await this.persist());\n        }, this.get = (n)=>(this.isInitialized(), this.logger.debug(\"Getting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                key: n\n            }), this.getData(n)), this.getAll = (n)=>(this.isInitialized(), n ? this.values.filter((a)=>Object.keys(n).every((h)=>lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default()(a[h], n[h]))) : this.values), this.update = async (n, a)=>{\n            this.isInitialized(), this.logger.debug(\"Updating value\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                key: n,\n                update: a\n            });\n            const h = kt(kt({}, this.getData(n)), a);\n            this.map.set(n, h), await this.persist();\n        }, this.delete = async (n, a)=>{\n            this.isInitialized(), this.map.has(n) && (this.logger.debug(\"Deleting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                key: n,\n                reason: a\n            }), this.map.delete(n), this.addToRecentlyDeleted(n), await this.persist());\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.storagePrefix = s, this.getKey = r;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.map.size;\n    }\n    get keys() {\n        return Array.from(this.map.keys());\n    }\n    get values() {\n        return Array.from(this.map.values());\n    }\n    addToRecentlyDeleted(e) {\n        this.recentlyDeleted.push(e), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);\n    }\n    async setDataStore(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getDataStore() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getData(e) {\n        const t = this.map.get(e);\n        if (!t) {\n            if (this.recentlyDeleted.includes(e)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `Record was recently deleted - ${this.name}: ${e}`);\n                throw this.logger.error(s), new Error(s);\n            }\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.error(i), new Error(i);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setDataStore(this.values);\n    }\n    async restore() {\n        try {\n            const e = await this.getDataStore();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.map.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                value: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Vt {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.name = wt, this.version = vt, this.events = new (events__WEBPACK_IMPORTED_MODULE_0___default()), this.initialized = !1, this.storagePrefix = z, this.ignoredPayloadTypes = [\n            _walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.TYPE_1\n        ], this.registeredMethods = [], this.init = async ()=>{\n            this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = !0, this.logger.trace(\"Initialized\"));\n        }, this.register = ({ methods: i })=>{\n            this.isInitialized(), this.registeredMethods = [\n                ...new Set([\n                    ...this.registeredMethods,\n                    ...i\n                ])\n            ];\n        }, this.create = async (i)=>{\n            this.isInitialized();\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateRandomBytes32)(), r = await this.core.crypto.setSymKey(s), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_MINUTES), a = {\n                protocol: ct\n            }, h = {\n                topic: r,\n                expiry: n,\n                relay: a,\n                active: !1\n            }, l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatUri)({\n                protocol: this.core.protocol,\n                version: this.core.version,\n                topic: r,\n                symKey: s,\n                relay: a,\n                expiryTimestamp: n,\n                methods: i?.methods\n            });\n            return this.core.expirer.set(r, n), await this.pairings.set(r, h), await this.core.relayer.subscribe(r), {\n                topic: r,\n                uri: l\n            };\n        }, this.pair = async (i)=>{\n            this.isInitialized(), this.isValidPair(i);\n            const { topic: s, symKey: r, relay: n, expiryTimestamp: a, methods: h } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.parseUri)(i.uri);\n            let l;\n            if (this.pairings.keys.includes(s) && (l = this.pairings.get(s), l.active)) throw new Error(`Pairing already exists: ${s}. Please try again with a new connection URI.`);\n            const d = a || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_MINUTES), g = {\n                topic: s,\n                relay: n,\n                expiry: d,\n                active: !1,\n                methods: h\n            };\n            return this.core.expirer.set(s, d), await this.pairings.set(s, g), i.activatePairing && await this.activate({\n                topic: s\n            }), this.events.emit(q.create, g), this.core.crypto.keychain.has(s) || await this.core.crypto.setSymKey(r, s), await this.core.relayer.subscribe(s, {\n                relay: n\n            }), g;\n        }, this.activate = async ({ topic: i })=>{\n            this.isInitialized();\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS);\n            this.core.expirer.set(i, s), await this.pairings.update(i, {\n                active: !0,\n                expiry: s\n            });\n        }, this.ping = async (i)=>{\n            this.isInitialized(), await this.isValidPing(i);\n            const { topic: s } = i;\n            if (this.pairings.keys.includes(s)) {\n                const r = await this.sendRequest(s, \"wc_pairingPing\", {}), { done: n, resolve: a, reject: h } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.engineEvent)(\"pairing_ping\", r), ({ error: l })=>{\n                    l ? h(l) : a();\n                }), await n();\n            }\n        }, this.updateExpiry = async ({ topic: i, expiry: s })=>{\n            this.isInitialized(), await this.pairings.update(i, {\n                expiry: s\n            });\n        }, this.updateMetadata = async ({ topic: i, metadata: s })=>{\n            this.isInitialized(), await this.pairings.update(i, {\n                peerMetadata: s\n            });\n        }, this.getPairings = ()=>(this.isInitialized(), this.pairings.values), this.disconnect = async (i)=>{\n            this.isInitialized(), await this.isValidDisconnect(i);\n            const { topic: s } = i;\n            this.pairings.keys.includes(s) && (await this.sendRequest(s, \"wc_pairingDelete\", (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"USER_DISCONNECTED\")), await this.deletePairing(s));\n        }, this.sendRequest = async (i, s, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(s, r), a = await this.core.crypto.encode(i, n), h = B[s].req;\n            return this.core.history.set(i, n), this.core.relayer.publish(i, a, h), n.id;\n        }, this.sendResult = async (i, s, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(i, r), a = await this.core.crypto.encode(s, n), h = await this.core.history.get(s, i), l = B[h.request.method].res;\n            await this.core.relayer.publish(s, a, l), await this.core.history.resolve(n);\n        }, this.sendError = async (i, s, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcError)(i, r), a = await this.core.crypto.encode(s, n), h = await this.core.history.get(s, i), l = B[h.request.method] ? B[h.request.method].res : B.unregistered_method.res;\n            await this.core.relayer.publish(s, a, l), await this.core.history.resolve(n);\n        }, this.deletePairing = async (i, s)=>{\n            await this.core.relayer.unsubscribe(i), await Promise.all([\n                this.pairings.delete(i, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"USER_DISCONNECTED\")),\n                this.core.crypto.deleteSymKey(i),\n                s ? Promise.resolve() : this.core.expirer.del(i)\n            ]);\n        }, this.cleanup = async ()=>{\n            const i = this.pairings.getAll().filter((s)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isExpired)(s.expiry));\n            await Promise.all(i.map((s)=>this.deletePairing(s.topic)));\n        }, this.onRelayEventRequest = (i)=>{\n            const { topic: s, payload: r } = i;\n            switch(r.method){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingRequest(s, r);\n                case \"wc_pairingDelete\":\n                    return this.onPairingDeleteRequest(s, r);\n                default:\n                    return this.onUnknownRpcMethodRequest(s, r);\n            }\n        }, this.onRelayEventResponse = async (i)=>{\n            const { topic: s, payload: r } = i, n = (await this.core.history.get(s, r.id)).request.method;\n            switch(n){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingResponse(s, r);\n                default:\n                    return this.onUnknownRpcMethodResponse(n);\n            }\n        }, this.onPairingPingRequest = async (i, s)=>{\n            const { id: r } = s;\n            try {\n                this.isValidPing({\n                    topic: i\n                }), await this.sendResult(r, i, !0), this.events.emit(q.ping, {\n                    id: r,\n                    topic: i\n                });\n            } catch (n) {\n                await this.sendError(r, i, n), this.logger.error(n);\n            }\n        }, this.onPairingPingResponse = (i, s)=>{\n            const { id: r } = s;\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.engineEvent)(\"pairing_ping\", r), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.engineEvent)(\"pairing_ping\", r), {\n                    error: s.error\n                });\n            }, 500);\n        }, this.onPairingDeleteRequest = async (i, s)=>{\n            const { id: r } = s;\n            try {\n                this.isValidDisconnect({\n                    topic: i\n                }), await this.deletePairing(i), this.events.emit(q.delete, {\n                    id: r,\n                    topic: i\n                });\n            } catch (n) {\n                await this.sendError(r, i, n), this.logger.error(n);\n            }\n        }, this.onUnknownRpcMethodRequest = async (i, s)=>{\n            const { id: r, method: n } = s;\n            try {\n                if (this.registeredMethods.includes(n)) return;\n                const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", n);\n                await this.sendError(r, i, a), this.logger.error(a);\n            } catch (a) {\n                await this.sendError(r, i, a), this.logger.error(a);\n            }\n        }, this.onUnknownRpcMethodResponse = (i)=>{\n            this.registeredMethods.includes(i) || this.logger.error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", i));\n        }, this.isValidPair = (i)=>{\n            var s;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidParams)(i)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `pair() params: ${i}`);\n                throw new Error(n);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidUrl)(i.uri)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `pair() uri: ${i.uri}`);\n                throw new Error(n);\n            }\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.parseUri)(i.uri);\n            if (!((s = r?.relay) != null && s.protocol)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", \"pair() uri#relay-protocol\");\n                throw new Error(n);\n            }\n            if (!(r != null && r.symKey)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", \"pair() uri#symKey\");\n                throw new Error(n);\n            }\n            if (r != null && r.expiryTimestamp && (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(r?.expiryTimestamp) < Date.now()) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"EXPIRED\", \"pair() URI has expired. Please try again with a new connection URI.\");\n                throw new Error(n);\n            }\n        }, this.isValidPing = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidParams)(i)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${i}`);\n                throw new Error(r);\n            }\n            const { topic: s } = i;\n            await this.isValidPairingTopic(s);\n        }, this.isValidDisconnect = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidParams)(i)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${i}`);\n                throw new Error(r);\n            }\n            const { topic: s } = i;\n            await this.isValidPairingTopic(s);\n        }, this.isValidPairingTopic = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidString)(i, !1)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${i}`);\n                throw new Error(s);\n            }\n            if (!this.pairings.keys.includes(i)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${i}`);\n                throw new Error(s);\n            }\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isExpired)(this.pairings.get(i).expiry)) {\n                await this.deletePairing(i);\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"EXPIRED\", `pairing topic: ${i}`);\n                throw new Error(s);\n            }\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.pairings = new Kt(this.core, this.logger, this.name, this.storagePrefix);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    registerRelayerEvents() {\n        this.core.relayer.on(f.message, async (e)=>{\n            const { topic: t, message: i } = e;\n            if (!this.pairings.keys.includes(t) || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i))) return;\n            const s = await this.core.crypto.decode(t, i);\n            try {\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(s) ? (this.core.history.set(t, s), this.onRelayEventRequest({\n                    topic: t,\n                    payload: s\n                })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(s) && (await this.core.history.resolve(s), await this.onRelayEventResponse({\n                    topic: t,\n                    payload: s\n                }), this.core.history.delete(t, s.id));\n            } catch (r) {\n                this.logger.error(r);\n            }\n        });\n    }\n    registerExpirerEvents() {\n        this.core.expirer.on(C.expired, async (e)=>{\n            const { topic: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.parseExpirerTarget)(e.target);\n            t && this.pairings.keys.includes(t) && (await this.deletePairing(t, !0), this.events.emit(q.expire, {\n                topic: t\n            }));\n        });\n    }\n}\nclass qt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IJsonRpcHistory {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.records = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = It, this.version = Ct, this.cached = [], this.initialized = !1, this.storagePrefix = z, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((i)=>this.records.set(i.id, i)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.set = (i, s, r)=>{\n            if (this.isInitialized(), this.logger.debug(\"Setting JSON-RPC request history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                topic: i,\n                request: s,\n                chainId: r\n            }), this.records.has(s.id)) return;\n            const n = {\n                id: s.id,\n                topic: i,\n                request: {\n                    method: s.method,\n                    params: s.params || null\n                },\n                chainId: r,\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS)\n            };\n            this.records.set(n.id, n), this.persist(), this.events.emit(I.created, n);\n        }, this.resolve = async (i)=>{\n            if (this.isInitialized(), this.logger.debug(\"Updating JSON-RPC response history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                response: i\n            }), !this.records.has(i.id)) return;\n            const s = await this.getRecord(i.id);\n            typeof s.response > \"u\" && (s.response = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(i) ? {\n                error: i.error\n            } : {\n                result: i.result\n            }, this.records.set(s.id, s), this.persist(), this.events.emit(I.updated, s));\n        }, this.get = async (i, s)=>(this.isInitialized(), this.logger.debug(\"Getting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                topic: i,\n                id: s\n            }), await this.getRecord(s)), this.delete = (i, s)=>{\n            this.isInitialized(), this.logger.debug(\"Deleting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                id: s\n            }), this.values.forEach((r)=>{\n                if (r.topic === i) {\n                    if (typeof s < \"u\" && r.id !== s) return;\n                    this.records.delete(r.id), this.events.emit(I.deleted, r);\n                }\n            }), this.persist();\n        }, this.exists = async (i, s)=>(this.isInitialized(), this.records.has(s) ? (await this.getRecord(s)).topic === i : !1), this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get size() {\n        return this.records.size;\n    }\n    get keys() {\n        return Array.from(this.records.keys());\n    }\n    get values() {\n        return Array.from(this.records.values());\n    }\n    get pending() {\n        const e = [];\n        return this.values.forEach((t)=>{\n            if (typeof t.response < \"u\") return;\n            const i = {\n                topic: t.topic,\n                request: (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(t.request.method, t.request.params, t.id),\n                chainId: t.chainId\n            };\n            return e.push(i);\n        }), e;\n    }\n    async setJsonRpcRecords(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getJsonRpcRecords() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getRecord(e) {\n        this.isInitialized();\n        const t = this.records.get(e);\n        if (!t) {\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(i);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setJsonRpcRecords(this.values), this.events.emit(I.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getJsonRpcRecords();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.records.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                records: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);\n        }\n    }\n    registerEventListeners() {\n        this.events.on(I.created, (e)=>{\n            const t = I.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.events.on(I.updated, (e)=>{\n            const t = I.updated;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.events.on(I.deleted, (e)=>{\n            const t = I.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, ()=>{\n            this.cleanup();\n        });\n    }\n    cleanup() {\n        try {\n            this.isInitialized();\n            let e = !1;\n            this.records.forEach((t)=>{\n                (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(t.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${t.id}`), this.records.delete(t.id), this.events.emit(I.deleted, t, !1), e = !0);\n            }), e && this.persist();\n        } catch (e) {\n            this.logger.warn(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass jt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IExpirer {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.expirations = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = Tt, this.version = _t, this.cached = [], this.initialized = !1, this.storagePrefix = z, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((i)=>this.expirations.set(i.target, i)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.has = (i)=>{\n            try {\n                const s = this.formatTarget(i);\n                return typeof this.getExpiration(s) < \"u\";\n            } catch  {\n                return !1;\n            }\n        }, this.set = (i, s)=>{\n            this.isInitialized();\n            const r = this.formatTarget(i), n = {\n                target: r,\n                expiry: s\n            };\n            this.expirations.set(r, n), this.checkExpiry(r, n), this.events.emit(C.created, {\n                target: r,\n                expiration: n\n            });\n        }, this.get = (i)=>{\n            this.isInitialized();\n            const s = this.formatTarget(i);\n            return this.getExpiration(s);\n        }, this.del = (i)=>{\n            if (this.isInitialized(), this.has(i)) {\n                const s = this.formatTarget(i), r = this.getExpiration(s);\n                this.expirations.delete(s), this.events.emit(C.deleted, {\n                    target: s,\n                    expiration: r\n                });\n            }\n        }, this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.expirations.size;\n    }\n    get keys() {\n        return Array.from(this.expirations.keys());\n    }\n    get values() {\n        return Array.from(this.expirations.values());\n    }\n    formatTarget(e) {\n        if (typeof e == \"string\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatTopicTarget)(e);\n        if (typeof e == \"number\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatIdTarget)(e);\n        const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"UNKNOWN_TYPE\", `Target type: ${typeof e}`);\n        throw new Error(t);\n    }\n    async setExpirations(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getExpirations() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    async persist() {\n        await this.setExpirations(this.values), this.events.emit(C.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getExpirations();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.expirations.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                expirations: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);\n        }\n    }\n    getExpiration(e) {\n        const t = this.expirations.get(e);\n        if (!t) {\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.warn(i), new Error(i);\n        }\n        return t;\n    }\n    checkExpiry(e, t) {\n        const { expiry: i } = t;\n        (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(i) - Date.now() <= 0 && this.expire(e, t);\n    }\n    expire(e, t) {\n        this.expirations.delete(e), this.events.emit(C.expired, {\n            target: e,\n            expiration: t\n        });\n    }\n    checkExpirations() {\n        this.core.relayer.connected && this.expirations.forEach((e, t)=>this.checkExpiry(t, e));\n    }\n    registerEventListeners() {\n        this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, ()=>this.checkExpirations()), this.events.on(C.created, (e)=>{\n            const t = C.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(C.expired, (e)=>{\n            const t = C.expired;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(C.deleted, (e)=>{\n            const t = C.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        });\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Gt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IVerify {\n    constructor(e, t){\n        super(e, t), this.projectId = e, this.logger = t, this.name = ee, this.initialized = !1, this.queue = [], this.verifyDisabled = !1, this.init = async (i)=>{\n            if (this.verifyDisabled || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isReactNative)() || !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isBrowser)()) return;\n            const s = this.getVerifyUrl(i?.verifyUrl);\n            this.verifyUrl !== s && this.removeIframe(), this.verifyUrl = s;\n            try {\n                await this.createIframe();\n            } catch (r) {\n                this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(r);\n            }\n            if (!this.initialized) {\n                this.removeIframe(), this.verifyUrl = te;\n                try {\n                    await this.createIframe();\n                } catch (r) {\n                    this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(r), this.verifyDisabled = !0;\n                }\n            }\n        }, this.register = async (i)=>{\n            this.initialized ? this.sendPost(i.attestationId) : (this.addToQueue(i.attestationId), await this.init());\n        }, this.resolve = async (i)=>{\n            if (this.isDevEnv) return \"\";\n            const s = this.getVerifyUrl(i?.verifyUrl);\n            let r;\n            try {\n                r = await this.fetchAttestation(i.attestationId, s);\n            } catch (n) {\n                this.logger.info(`failed to resolve attestation: ${i.attestationId} from url: ${s}`), this.logger.info(n), r = await this.fetchAttestation(i.attestationId, te);\n            }\n            return r;\n        }, this.fetchAttestation = async (i, s)=>{\n            this.logger.info(`resolving attestation: ${i} from url: ${s}`);\n            const r = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_SECOND * 2), n = await fetch(`${s}/attestation/${i}`, {\n                signal: this.abortController.signal\n            });\n            return clearTimeout(r), n.status === 200 ? await n.json() : void 0;\n        }, this.addToQueue = (i)=>{\n            this.queue.push(i);\n        }, this.processQueue = ()=>{\n            this.queue.length !== 0 && (this.queue.forEach((i)=>this.sendPost(i)), this.queue = []);\n        }, this.sendPost = (i)=>{\n            var s;\n            try {\n                if (!this.iframe) return;\n                (s = this.iframe.contentWindow) == null || s.postMessage(i, \"*\"), this.logger.info(`postMessage sent: ${i} ${this.verifyUrl}`);\n            } catch  {}\n        }, this.createIframe = async ()=>{\n            let i;\n            const s = (r)=>{\n                r.data === \"verify_ready\" && (this.onInit(), window.removeEventListener(\"message\", s), i());\n            };\n            await Promise.race([\n                new Promise((r)=>{\n                    const n = document.getElementById(ee);\n                    if (n) return this.iframe = n, this.onInit(), r();\n                    window.addEventListener(\"message\", s);\n                    const a = document.createElement(\"iframe\");\n                    a.id = ee, a.src = `${this.verifyUrl}/${this.projectId}`, a.style.display = \"none\", document.body.append(a), this.iframe = a, i = r;\n                }),\n                new Promise((r, n)=>setTimeout(()=>{\n                        window.removeEventListener(\"message\", s), n(\"verify iframe load timeout\");\n                    }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_SECONDS)))\n            ]);\n        }, this.onInit = ()=>{\n            this.initialized = !0, this.processQueue();\n        }, this.removeIframe = ()=>{\n            this.iframe && (this.iframe.remove(), this.iframe = void 0, this.initialized = !1);\n        }, this.getVerifyUrl = (i)=>{\n            let s = i || M;\n            return Rt.includes(s) || (this.logger.info(`verify url: ${s}, not included in trusted list, assigning default: ${M}`), s = M), s;\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.verifyUrl = M, this.abortController = new AbortController, this.isDevEnv = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isNode)() && process.env.IS_VITEST;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    startAbortTimer(e) {\n        return this.abortController = new AbortController, setTimeout(()=>this.abortController.abort(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(e));\n    }\n}\nclass Yt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IEchoClient {\n    constructor(e, t){\n        super(e, t), this.projectId = e, this.logger = t, this.context = St, this.registerDeviceToken = async (i)=>{\n            const { clientId: s, token: r, notificationType: n, enableEncrypted: a = !1 } = i, h = `${Pt}/${this.projectId}/clients`;\n            await isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_12___default()(h, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    client_id: s,\n                    type: n,\n                    token: r,\n                    always_raw: a\n                })\n            });\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.context);\n    }\n}\nvar Ur = Object.defineProperty, Ht = Object.getOwnPropertySymbols, Fr = Object.prototype.hasOwnProperty, $r = Object.prototype.propertyIsEnumerable, Jt = (o, e, t)=>e in o ? Ur(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, Xt = (o, e)=>{\n    for(var t in e || (e = {}))Fr.call(e, t) && Jt(o, t, e[t]);\n    if (Ht) for (var t of Ht(e))$r.call(e, t) && Jt(o, t, e[t]);\n    return o;\n};\nclass ie extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.ICore {\n    constructor(e){\n        var t;\n        super(e), this.protocol = De, this.version = Qe, this.name = Z, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.initialized = !1, this.on = (n, a)=>this.events.on(n, a), this.once = (n, a)=>this.events.once(n, a), this.off = (n, a)=>this.events.off(n, a), this.removeListener = (n, a)=>this.events.removeListener(n, a), this.projectId = e?.projectId, this.relayUrl = e?.relayUrl || me, this.customStoragePrefix = e != null && e.customStoragePrefix ? `:${e.customStoragePrefix}` : \"\";\n        const i = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: typeof e?.logger == \"string\" && e.logger ? e.logger : Ze.logger\n        }), { logger: s, chunkLoggerController: r } = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generatePlatformLogger)({\n            opts: i,\n            maxSizeInBytes: e?.maxLogBlobSizeInBytes,\n            loggerOverride: e?.logger\n        });\n        this.logChunkController = r, (t = this.logChunkController) != null && t.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async ()=>{\n            var n, a;\n            (n = this.logChunkController) != null && n.downloadLogsBlobInBrowser && ((a = this.logChunkController) == null || a.downloadLogsBlobInBrowser({\n                clientId: await this.crypto.getClientId()\n            }));\n        }), this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(s, this.name), this.heartbeat = new _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HeartBeat, this.crypto = new Ot(this, this.logger, e?.keychain), this.history = new qt(this, this.logger), this.expirer = new jt(this, this.logger), this.storage = e != null && e.storage ? e.storage : new _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_1__[\"default\"](Xt(Xt({}, et), e?.storageOptions)), this.relayer = new $t({\n            core: this,\n            logger: this.logger,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId\n        }), this.pairing = new Vt(this, this.logger), this.verify = new Gt(this.projectId || \"\", this.logger), this.echoClient = new Yt(this.projectId || \"\", this.logger);\n    }\n    static async init(e) {\n        const t = new ie(e);\n        await t.initialize();\n        const i = await t.crypto.getClientId();\n        return await t.storage.setItem(mt, i), t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async start() {\n        this.initialized || await this.initialize();\n    }\n    async getLogsBlob() {\n        var e;\n        return (e = this.logChunkController) == null ? void 0 : e.logsToBlob({\n            clientId: await this.crypto.getClientId()\n        });\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = !0, this.logger.info(\"Core Initialization Success\");\n        } catch (e) {\n            throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;\n        }\n    }\n}\nconst Br = ie;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/@walletconnect/keyvaluestorage/dist/index.es.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/@walletconnect/keyvaluestorage/dist/index.es.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyValueStorage: () => (/* binding */ h),\n/* harmony export */   \"default\": () => (/* binding */ h)\n/* harmony export */ });\n/* harmony import */ var unstorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unstorage */ \"(ssr)/./node_modules/unstorage/dist/index.mjs\");\n/* harmony import */ var idb_keyval__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! idb-keyval */ \"(ssr)/./node_modules/idb-keyval/dist/index.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n\n\n\nfunction C(i) {\n    return i;\n}\nconst x = \"idb-keyval\";\nvar z = (i = {})=>{\n    const t = i.base && i.base.length > 0 ? `${i.base}:` : \"\", e = (s)=>t + s;\n    let n;\n    return i.dbName && i.storeName && (n = (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.createStore)(i.dbName, i.storeName)), {\n        name: x,\n        options: i,\n        async hasItem (s) {\n            return !(typeof await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) > \"u\");\n        },\n        async getItem (s) {\n            return await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) ?? null;\n        },\n        setItem (s, a) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.set)(e(s), a, n);\n        },\n        removeItem (s) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.del)(e(s), n);\n        },\n        getKeys () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.keys)(n);\n        },\n        clear () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.clear)(n);\n        }\n    };\n};\nconst D = \"WALLET_CONNECT_V2_INDEXED_DB\", E = \"keyvaluestorage\";\nclass _ {\n    constructor(){\n        this.indexedDb = (0,unstorage__WEBPACK_IMPORTED_MODULE_2__.createStorage)({\n            driver: z({\n                dbName: D,\n                storeName: E\n            })\n        });\n    }\n    async getKeys() {\n        return this.indexedDb.getKeys();\n    }\n    async getEntries() {\n        return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t)=>[\n                t.key,\n                t.value\n            ]);\n    }\n    async getItem(t) {\n        const e = await this.indexedDb.getItem(t);\n        if (e !== null) return e;\n    }\n    async setItem(t, e) {\n        await this.indexedDb.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        await this.indexedDb.removeItem(t);\n    }\n}\nvar l = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, c = {\n    exports: {}\n};\n(function() {\n    let i;\n    function t() {}\n    i = t, i.prototype.getItem = function(e) {\n        return this.hasOwnProperty(e) ? String(this[e]) : null;\n    }, i.prototype.setItem = function(e, n) {\n        this[e] = String(n);\n    }, i.prototype.removeItem = function(e) {\n        delete this[e];\n    }, i.prototype.clear = function() {\n        const e = this;\n        Object.keys(e).forEach(function(n) {\n            e[n] = void 0, delete e[n];\n        });\n    }, i.prototype.key = function(e) {\n        return e = e || 0, Object.keys(this)[e];\n    }, i.prototype.__defineGetter__(\"length\", function() {\n        return Object.keys(this).length;\n    }), typeof l < \"u\" && l.localStorage ? c.exports = l.localStorage :  false ? 0 : c.exports = new t;\n})();\nfunction k(i) {\n    var t;\n    return [\n        i[0],\n        (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)((t = i[1]) != null ? t : \"\")\n    ];\n}\nclass K {\n    constructor(){\n        this.localStorage = c.exports;\n    }\n    async getKeys() {\n        return Object.keys(this.localStorage);\n    }\n    async getEntries() {\n        return Object.entries(this.localStorage).map(k);\n    }\n    async getItem(t) {\n        const e = this.localStorage.getItem(t);\n        if (e !== null) return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)(e);\n    }\n    async setItem(t, e) {\n        this.localStorage.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        this.localStorage.removeItem(t);\n    }\n}\nconst N = \"wc_storage_version\", y = 1, O = async (i, t, e)=>{\n    const n = N, s = await t.getItem(n);\n    if (s && s >= y) {\n        e(t);\n        return;\n    }\n    const a = await i.getKeys();\n    if (!a.length) {\n        e(t);\n        return;\n    }\n    const m = [];\n    for(; a.length;){\n        const r = a.shift();\n        if (!r) continue;\n        const o = r.toLowerCase();\n        if (o.includes(\"wc@\") || o.includes(\"walletconnect\") || o.includes(\"wc_\") || o.includes(\"wallet_connect\")) {\n            const f = await i.getItem(r);\n            await t.setItem(r, f), m.push(r);\n        }\n    }\n    await t.setItem(n, y), e(t), j(i, m);\n}, j = async (i, t)=>{\n    t.length && t.forEach(async (e)=>{\n        await i.removeItem(e);\n    });\n};\nclass h {\n    constructor(){\n        this.initialized = !1, this.setInitialized = (e)=>{\n            this.storage = e, this.initialized = !0;\n        };\n        const t = new K;\n        this.storage = t;\n        try {\n            const e = new _;\n            O(t, e, this.setInitialized);\n        } catch  {\n            this.initialized = !0;\n        }\n    }\n    async getKeys() {\n        return await this.initialize(), this.storage.getKeys();\n    }\n    async getEntries() {\n        return await this.initialize(), this.storage.getEntries();\n    }\n    async getItem(t) {\n        return await this.initialize(), this.storage.getItem(t);\n    }\n    async setItem(t, e) {\n        return await this.initialize(), this.storage.setItem(t, e);\n    }\n    async removeItem(t) {\n        return await this.initialize(), this.storage.removeItem(t);\n    }\n    async initialize() {\n        this.initialized || await new Promise((t)=>{\n            const e = setInterval(()=>{\n                this.initialized && (clearInterval(e), t());\n            }, 20);\n        });\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qva2V5dmFsdWVzdG9yYWdlL2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEM7QUFBeUY7QUFBZ0Y7QUFBQSxTQUFTa0IsRUFBRUMsQ0FBQztJQUFFLE9BQU9BO0FBQUM7QUFBQyxNQUFNQyxJQUFFO0FBQWEsSUFBSUMsSUFBRSxDQUFDRixJQUFFLENBQUMsQ0FBQztJQUFJLE1BQU1HLElBQUVILEVBQUVJLElBQUksSUFBRUosRUFBRUksSUFBSSxDQUFDQyxNQUFNLEdBQUMsSUFBRSxDQUFDLEVBQUVMLEVBQUVJLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBQyxJQUFHRSxJQUFFQyxDQUFBQSxJQUFHSixJQUFFSTtJQUFFLElBQUlDO0lBQUUsT0FBT1IsRUFBRVMsTUFBTSxJQUFFVCxFQUFFVSxTQUFTLElBQUdGLENBQUFBLElBQUV4Qix1REFBQ0EsQ0FBQ2dCLEVBQUVTLE1BQU0sRUFBQ1QsRUFBRVUsU0FBUyxJQUFHO1FBQUNDLE1BQUtWO1FBQUVXLFNBQVFaO1FBQUUsTUFBTWEsU0FBUU4sQ0FBQztZQUFFLE9BQU0sQ0FBRSxRQUFPLE1BQU1yQiwrQ0FBQ0EsQ0FBQ29CLEVBQUVDLElBQUdDLEtBQUcsR0FBRTtRQUFFO1FBQUUsTUFBTU0sU0FBUVAsQ0FBQztZQUFFLE9BQU8sTUFBTXJCLCtDQUFDQSxDQUFDb0IsRUFBRUMsSUFBR0MsTUFBSTtRQUFJO1FBQUVPLFNBQVFSLENBQUMsRUFBQ1MsQ0FBQztZQUFFLE9BQU81QiwrQ0FBQ0EsQ0FBQ2tCLEVBQUVDLElBQUdTLEdBQUVSO1FBQUU7UUFBRVMsWUFBV1YsQ0FBQztZQUFFLE9BQU9qQiwrQ0FBQ0EsQ0FBQ2dCLEVBQUVDLElBQUdDO1FBQUU7UUFBRVU7WUFBVSxPQUFPMUIsZ0RBQUNBLENBQUNnQjtRQUFFO1FBQUVmO1lBQVEsT0FBT0MsaURBQUNBLENBQUNj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LElBQUksQ0FBQ3NDLFVBQVUsSUFBRyxJQUFJLENBQUNELE9BQU8sQ0FBQ3JDLFVBQVU7SUFBRTtJQUFDLE1BQU1YLFFBQVFYLENBQUMsRUFBQztRQUFDLE9BQU8sTUFBTSxJQUFJLENBQUM0RCxVQUFVLElBQUcsSUFBSSxDQUFDRCxPQUFPLENBQUNoRCxPQUFPLENBQUNYO0lBQUU7SUFBQyxNQUFNWSxRQUFRWixDQUFDLEVBQUNHLENBQUMsRUFBQztRQUFDLE9BQU8sTUFBTSxJQUFJLENBQUN5RCxVQUFVLElBQUcsSUFBSSxDQUFDRCxPQUFPLENBQUMvQyxPQUFPLENBQUNaLEdBQUVHO0lBQUU7SUFBQyxNQUFNVyxXQUFXZCxDQUFDLEVBQUM7UUFBQyxPQUFPLE1BQU0sSUFBSSxDQUFDNEQsVUFBVSxJQUFHLElBQUksQ0FBQ0QsT0FBTyxDQUFDN0MsVUFBVSxDQUFDZDtJQUFFO0lBQUMsTUFBTTRELGFBQVk7UUFBQyxJQUFJLENBQUNILFdBQVcsSUFBRSxNQUFNLElBQUlJLFFBQVE3RCxDQUFBQTtZQUFJLE1BQU1HLElBQUUyRCxZQUFZO2dCQUFLLElBQUksQ0FBQ0wsV0FBVyxJQUFHTSxDQUFBQSxjQUFjNUQsSUFBR0gsR0FBRTtZQUFFLEdBQUU7UUFBRztJQUFFO0FBQUM7QUFBMkMsQ0FDNzdHLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qva2V5dmFsdWVzdG9yYWdlL2Rpc3QvaW5kZXguZXMuanM/NTAzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7Y3JlYXRlU3RvcmFnZSBhcyB3fWZyb21cInVuc3RvcmFnZVwiO2ltcG9ydHtjcmVhdGVTdG9yZSBhcyBJLGdldCBhcyB1LHNldCBhcyBwLGRlbCBhcyBiLGtleXMgYXMgdixjbGVhciBhcyBTfWZyb21cImlkYi1rZXl2YWxcIjtpbXBvcnR7c2FmZUpzb25TdHJpbmdpZnkgYXMgZyxzYWZlSnNvblBhcnNlIGFzIGR9ZnJvbVwiQHdhbGxldGNvbm5lY3Qvc2FmZS1qc29uXCI7ZnVuY3Rpb24gQyhpKXtyZXR1cm4gaX1jb25zdCB4PVwiaWRiLWtleXZhbFwiO3ZhciB6PShpPXt9KT0+e2NvbnN0IHQ9aS5iYXNlJiZpLmJhc2UubGVuZ3RoPjA/YCR7aS5iYXNlfTpgOlwiXCIsZT1zPT50K3M7bGV0IG47cmV0dXJuIGkuZGJOYW1lJiZpLnN0b3JlTmFtZSYmKG49SShpLmRiTmFtZSxpLnN0b3JlTmFtZSkpLHtuYW1lOngsb3B0aW9uczppLGFzeW5jIGhhc0l0ZW0ocyl7cmV0dXJuISh0eXBlb2YgYXdhaXQgdShlKHMpLG4pPlwidVwiKX0sYXN5bmMgZ2V0SXRlbShzKXtyZXR1cm4gYXdhaXQgdShlKHMpLG4pPz9udWxsfSxzZXRJdGVtKHMsYSl7cmV0dXJuIHAoZShzKSxhLG4pfSxyZW1vdmVJdGVtKHMpe3JldHVybiBiKGUocyksbil9LGdldEtleXMoKXtyZXR1cm4gdihuKX0sY2xlYXIoKXtyZXR1cm4gUyhuKX19fTtjb25zdCBEPVwiV0FMTEVUX0NPTk5FQ1RfVjJfSU5ERVhFRF9EQlwiLEU9XCJrZXl2YWx1ZXN0b3JhZ2VcIjtjbGFzcyBfe2NvbnN0cnVjdG9yKCl7dGhpcy5pbmRleGVkRGI9dyh7ZHJpdmVyOnooe2RiTmFtZTpELHN0b3JlTmFtZTpFfSl9KX1hc3luYyBnZXRLZXlzKCl7cmV0dXJuIHRoaXMuaW5kZXhlZERiLmdldEtleXMoKX1hc3luYyBnZXRFbnRyaWVzKCl7cmV0dXJuKGF3YWl0IHRoaXMuaW5kZXhlZERiLmdldEl0ZW1zKGF3YWl0IHRoaXMuaW5kZXhlZERiLmdldEtleXMoKSkpLm1hcCh0PT5bdC5rZXksdC52YWx1ZV0pfWFzeW5jIGdldEl0ZW0odCl7Y29uc3QgZT1hd2FpdCB0aGlzLmluZGV4ZWREYi5nZXRJdGVtKHQpO2lmKGUhPT1udWxsKXJldHVybiBlfWFzeW5jIHNldEl0ZW0odCxlKXthd2FpdCB0aGlzLmluZGV4ZWREYi5zZXRJdGVtKHQsZyhlKSl9YXN5bmMgcmVtb3ZlSXRlbSh0KXthd2FpdCB0aGlzLmluZGV4ZWREYi5yZW1vdmVJdGVtKHQpfX12YXIgbD10eXBlb2YgZ2xvYmFsVGhpczxcInVcIj9nbG9iYWxUaGlzOnR5cGVvZiB3aW5kb3c8XCJ1XCI/d2luZG93OnR5cGVvZiBnbG9iYWw8XCJ1XCI/Z2xvYmFsOnR5cGVvZiBzZWxmPFwidVwiP3NlbGY6e30sYz17ZXhwb3J0czp7fX07KGZ1bmN0aW9uKCl7bGV0IGk7ZnVuY3Rpb24gdCgpe31pPXQsaS5wcm90b3R5cGUuZ2V0SXRlbT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5oYXNPd25Qcm9wZXJ0eShlKT9TdHJpbmcodGhpc1tlXSk6bnVsbH0saS5wcm90b3R5cGUuc2V0SXRlbT1mdW5jdGlvbihlLG4pe3RoaXNbZV09U3RyaW5nKG4pfSxpLnByb3RvdHlwZS5yZW1vdmVJdGVtPWZ1bmN0aW9uKGUpe2RlbGV0ZSB0aGlzW2VdfSxpLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe2NvbnN0IGU9dGhpcztPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe2Vbbl09dm9pZCAwLGRlbGV0ZSBlW25dfSl9LGkucHJvdG90eXBlLmtleT1mdW5jdGlvbihlKXtyZXR1cm4gZT1lfHwwLE9iamVjdC5rZXlzKHRoaXMpW2VdfSxpLnByb3RvdHlwZS5fX2RlZmluZUdldHRlcl9fKFwibGVuZ3RoXCIsZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0LmtleXModGhpcykubGVuZ3RofSksdHlwZW9mIGw8XCJ1XCImJmwubG9jYWxTdG9yYWdlP2MuZXhwb3J0cz1sLmxvY2FsU3RvcmFnZTp0eXBlb2Ygd2luZG93PFwidVwiJiZ3aW5kb3cubG9jYWxTdG9yYWdlP2MuZXhwb3J0cz13aW5kb3cubG9jYWxTdG9yYWdlOmMuZXhwb3J0cz1uZXcgdH0pKCk7ZnVuY3Rpb24gayhpKXt2YXIgdDtyZXR1cm5baVswXSxkKCh0PWlbMV0pIT1udWxsP3Q6XCJcIildfWNsYXNzIEt7Y29uc3RydWN0b3IoKXt0aGlzLmxvY2FsU3RvcmFnZT1jLmV4cG9ydHN9YXN5bmMgZ2V0S2V5cygpe3JldHVybiBPYmplY3Qua2V5cyh0aGlzLmxvY2FsU3RvcmFnZSl9YXN5bmMgZ2V0RW50cmllcygpe3JldHVybiBPYmplY3QuZW50cmllcyh0aGlzLmxvY2FsU3RvcmFnZSkubWFwKGspfWFzeW5jIGdldEl0ZW0odCl7Y29uc3QgZT10aGlzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKHQpO2lmKGUhPT1udWxsKXJldHVybiBkKGUpfWFzeW5jIHNldEl0ZW0odCxlKXt0aGlzLmxvY2FsU3RvcmFnZS5zZXRJdGVtKHQsZyhlKSl9YXN5bmMgcmVtb3ZlSXRlbSh0KXt0aGlzLmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHQpfX1jb25zdCBOPVwid2Nfc3RvcmFnZV92ZXJzaW9uXCIseT0xLE89YXN5bmMoaSx0LGUpPT57Y29uc3Qgbj1OLHM9YXdhaXQgdC5nZXRJdGVtKG4pO2lmKHMmJnM+PXkpe2UodCk7cmV0dXJufWNvbnN0IGE9YXdhaXQgaS5nZXRLZXlzKCk7aWYoIWEubGVuZ3RoKXtlKHQpO3JldHVybn1jb25zdCBtPVtdO2Zvcig7YS5sZW5ndGg7KXtjb25zdCByPWEuc2hpZnQoKTtpZighciljb250aW51ZTtjb25zdCBvPXIudG9Mb3dlckNhc2UoKTtpZihvLmluY2x1ZGVzKFwid2NAXCIpfHxvLmluY2x1ZGVzKFwid2FsbGV0Y29ubmVjdFwiKXx8by5pbmNsdWRlcyhcIndjX1wiKXx8by5pbmNsdWRlcyhcIndhbGxldF9jb25uZWN0XCIpKXtjb25zdCBmPWF3YWl0IGkuZ2V0SXRlbShyKTthd2FpdCB0LnNldEl0ZW0ocixmKSxtLnB1c2gocil9fWF3YWl0IHQuc2V0SXRlbShuLHkpLGUodCksaihpLG0pfSxqPWFzeW5jKGksdCk9Pnt0Lmxlbmd0aCYmdC5mb3JFYWNoKGFzeW5jIGU9Pnthd2FpdCBpLnJlbW92ZUl0ZW0oZSl9KX07Y2xhc3MgaHtjb25zdHJ1Y3Rvcigpe3RoaXMuaW5pdGlhbGl6ZWQ9ITEsdGhpcy5zZXRJbml0aWFsaXplZD1lPT57dGhpcy5zdG9yYWdlPWUsdGhpcy5pbml0aWFsaXplZD0hMH07Y29uc3QgdD1uZXcgSzt0aGlzLnN0b3JhZ2U9dDt0cnl7Y29uc3QgZT1uZXcgXztPKHQsZSx0aGlzLnNldEluaXRpYWxpemVkKX1jYXRjaHt0aGlzLmluaXRpYWxpemVkPSEwfX1hc3luYyBnZXRLZXlzKCl7cmV0dXJuIGF3YWl0IHRoaXMuaW5pdGlhbGl6ZSgpLHRoaXMuc3RvcmFnZS5nZXRLZXlzKCl9YXN5bmMgZ2V0RW50cmllcygpe3JldHVybiBhd2FpdCB0aGlzLmluaXRpYWxpemUoKSx0aGlzLnN0b3JhZ2UuZ2V0RW50cmllcygpfWFzeW5jIGdldEl0ZW0odCl7cmV0dXJuIGF3YWl0IHRoaXMuaW5pdGlhbGl6ZSgpLHRoaXMuc3RvcmFnZS5nZXRJdGVtKHQpfWFzeW5jIHNldEl0ZW0odCxlKXtyZXR1cm4gYXdhaXQgdGhpcy5pbml0aWFsaXplKCksdGhpcy5zdG9yYWdlLnNldEl0ZW0odCxlKX1hc3luYyByZW1vdmVJdGVtKHQpe3JldHVybiBhd2FpdCB0aGlzLmluaXRpYWxpemUoKSx0aGlzLnN0b3JhZ2UucmVtb3ZlSXRlbSh0KX1hc3luYyBpbml0aWFsaXplKCl7dGhpcy5pbml0aWFsaXplZHx8YXdhaXQgbmV3IFByb21pc2UodD0+e2NvbnN0IGU9c2V0SW50ZXJ2YWwoKCk9Pnt0aGlzLmluaXRpYWxpemVkJiYoY2xlYXJJbnRlcnZhbChlKSx0KCkpfSwyMCl9KX19ZXhwb3J0e2ggYXMgS2V5VmFsdWVTdG9yYWdlLGggYXMgZGVmYXVsdH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJjcmVhdGVTdG9yYWdlIiwidyIsImNyZWF0ZVN0b3JlIiwiSSIsImdldCIsInUiLCJzZXQiLCJwIiwiZGVsIiwiYiIsImtleXMiLCJ2IiwiY2xlYXIiLCJTIiwic2FmZUpzb25TdHJpbmdpZnkiLCJnIiwic2FmZUpzb25QYXJzZSIsImQiLCJDIiwiaSIsIngiLCJ6IiwidCIsImJhc2UiLCJsZW5ndGgiLCJlIiwicyIsIm4iLCJkYk5hbWUiLCJzdG9yZU5hbWUiLCJuYW1lIiwib3B0aW9ucyIsImhhc0l0ZW0iLCJnZXRJdGVtIiwic2V0SXRlbSIsImEiLCJyZW1vdmVJdGVtIiwiZ2V0S2V5cyIsIkQiLCJFIiwiXyIsImNvbnN0cnVjdG9yIiwiaW5kZXhlZERiIiwiZHJpdmVyIiwiZ2V0RW50cmllcyIsImdldEl0ZW1zIiwibWFwIiwia2V5IiwidmFsdWUiLCJsIiwiZ2xvYmFsVGhpcyIsIndpbmRvdyIsImdsb2JhbCIsInNlbGYiLCJjIiwiZXhwb3J0cyIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiU3RyaW5nIiwiT2JqZWN0IiwiZm9yRWFjaCIsIl9fZGVmaW5lR2V0dGVyX18iLCJsb2NhbFN0b3JhZ2UiLCJrIiwiSyIsImVudHJpZXMiLCJOIiwieSIsIk8iLCJtIiwiciIsInNoaWZ0IiwibyIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJmIiwicHVzaCIsImoiLCJoIiwiaW5pdGlhbGl6ZWQiLCJzZXRJbml0aWFsaXplZCIsInN0b3JhZ2UiLCJpbml0aWFsaXplIiwiUHJvbWlzZSIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsIktleVZhbHVlU3RvcmFnZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/crypto.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;\nfunction getBrowerCrypto() {\n    return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};\n}\nexports.getBrowerCrypto = getBrowerCrypto;\nfunction getSubtleCrypto() {\n    const browserCrypto = getBrowerCrypto();\n    return browserCrypto.subtle || browserCrypto.webkitSubtle;\n}\nexports.getSubtleCrypto = getSubtleCrypto;\nfunction isBrowserCryptoAvailable() {\n    return !!getBrowerCrypto() && !!getSubtleCrypto();\n}\nexports.isBrowserCryptoAvailable = isBrowserCryptoAvailable; //# sourceMappingURL=crypto.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvY3J5cHRvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBR0EsdUJBQXVCLEdBQUdBLHVCQUF1QixHQUFHLEtBQUs7QUFDNUYsU0FBU0k7SUFDTCxPQUFPLENBQUNDLFdBQVcsUUFBUUEsV0FBVyxLQUFLLElBQUksS0FBSyxJQUFJQSxPQUFPQyxNQUFNLEtBQU1ELENBQUFBLFdBQVcsUUFBUUEsV0FBVyxLQUFLLElBQUksS0FBSyxJQUFJQSxPQUFPRSxRQUFRLEtBQUssQ0FBQztBQUNwSjtBQUNBUCx1QkFBdUIsR0FBR0k7QUFDMUIsU0FBU0Q7SUFDTCxNQUFNSyxnQkFBZ0JKO0lBQ3RCLE9BQU9JLGNBQWNDLE1BQU0sSUFBSUQsY0FBY0UsWUFBWTtBQUM3RDtBQUNBVix1QkFBdUIsR0FBR0c7QUFDMUIsU0FBU0Q7SUFDTCxPQUFPLENBQUMsQ0FBQ0UscUJBQXFCLENBQUMsQ0FBQ0Q7QUFDcEM7QUFDQUgsZ0NBQWdDLEdBQUdFLDBCQUNuQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2NyeXB0by5qcz82ZGQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0Jyb3dzZXJDcnlwdG9BdmFpbGFibGUgPSBleHBvcnRzLmdldFN1YnRsZUNyeXB0byA9IGV4cG9ydHMuZ2V0QnJvd2VyQ3J5cHRvID0gdm9pZCAwO1xuZnVuY3Rpb24gZ2V0QnJvd2VyQ3J5cHRvKCkge1xuICAgIHJldHVybiAoZ2xvYmFsID09PSBudWxsIHx8IGdsb2JhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZ2xvYmFsLmNyeXB0bykgfHwgKGdsb2JhbCA9PT0gbnVsbCB8fCBnbG9iYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGdsb2JhbC5tc0NyeXB0bykgfHwge307XG59XG5leHBvcnRzLmdldEJyb3dlckNyeXB0byA9IGdldEJyb3dlckNyeXB0bztcbmZ1bmN0aW9uIGdldFN1YnRsZUNyeXB0bygpIHtcbiAgICBjb25zdCBicm93c2VyQ3J5cHRvID0gZ2V0QnJvd2VyQ3J5cHRvKCk7XG4gICAgcmV0dXJuIGJyb3dzZXJDcnlwdG8uc3VidGxlIHx8IGJyb3dzZXJDcnlwdG8ud2Via2l0U3VidGxlO1xufVxuZXhwb3J0cy5nZXRTdWJ0bGVDcnlwdG8gPSBnZXRTdWJ0bGVDcnlwdG87XG5mdW5jdGlvbiBpc0Jyb3dzZXJDcnlwdG9BdmFpbGFibGUoKSB7XG4gICAgcmV0dXJuICEhZ2V0QnJvd2VyQ3J5cHRvKCkgJiYgISFnZXRTdWJ0bGVDcnlwdG8oKTtcbn1cbmV4cG9ydHMuaXNCcm93c2VyQ3J5cHRvQXZhaWxhYmxlID0gaXNCcm93c2VyQ3J5cHRvQXZhaWxhYmxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3J5cHRvLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzQnJvd3NlckNyeXB0b0F2YWlsYWJsZSIsImdldFN1YnRsZUNyeXB0byIsImdldEJyb3dlckNyeXB0byIsImdsb2JhbCIsImNyeXB0byIsIm1zQ3J5cHRvIiwiYnJvd3NlckNyeXB0byIsInN1YnRsZSIsIndlYmtpdFN1YnRsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/env.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowser = exports.isNode = exports.isReactNative = void 0;\nfunction isReactNative() {\n    return typeof document === \"undefined\" && typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\";\n}\nexports.isReactNative = isReactNative;\nfunction isNode() {\n    return typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\";\n}\nexports.isNode = isNode;\nfunction isBrowser() {\n    return !isReactNative() && !isNode();\n}\nexports.isBrowser = isBrowser; //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvZW52LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQkFBaUIsR0FBR0EsY0FBYyxHQUFHQSxxQkFBcUIsR0FBRyxLQUFLO0FBQ2xFLFNBQVNJO0lBQ0wsT0FBUSxPQUFPQyxhQUFhLGVBQ3hCLE9BQU9DLGNBQWMsZUFDckJBLFVBQVVDLE9BQU8sS0FBSztBQUM5QjtBQUNBUCxxQkFBcUIsR0FBR0k7QUFDeEIsU0FBU0Q7SUFDTCxPQUFRLE9BQU9LLFlBQVksZUFDdkIsT0FBT0EsUUFBUUMsUUFBUSxLQUFLLGVBQzVCLE9BQU9ELFFBQVFDLFFBQVEsQ0FBQ0MsSUFBSSxLQUFLO0FBQ3pDO0FBQ0FWLGNBQWMsR0FBR0c7QUFDakIsU0FBU0Q7SUFDTCxPQUFPLENBQUNFLG1CQUFtQixDQUFDRDtBQUNoQztBQUNBSCxpQkFBaUIsR0FBR0UsV0FDcEIsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9lbnZpcm9ubWVudC9kaXN0L2Nqcy9lbnYuanM/NDM4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNCcm93c2VyID0gZXhwb3J0cy5pc05vZGUgPSBleHBvcnRzLmlzUmVhY3ROYXRpdmUgPSB2b2lkIDA7XG5mdW5jdGlvbiBpc1JlYWN0TmF0aXZlKCkge1xuICAgIHJldHVybiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiICYmXG4gICAgICAgIHR5cGVvZiBuYXZpZ2F0b3IgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09IFwiUmVhY3ROYXRpdmVcIik7XG59XG5leHBvcnRzLmlzUmVhY3ROYXRpdmUgPSBpc1JlYWN0TmF0aXZlO1xuZnVuY3Rpb24gaXNOb2RlKCkge1xuICAgIHJldHVybiAodHlwZW9mIHByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdHlwZW9mIHByb2Nlc3MudmVyc2lvbnMgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdHlwZW9mIHByb2Nlc3MudmVyc2lvbnMubm9kZSAhPT0gXCJ1bmRlZmluZWRcIik7XG59XG5leHBvcnRzLmlzTm9kZSA9IGlzTm9kZTtcbmZ1bmN0aW9uIGlzQnJvd3NlcigpIHtcbiAgICByZXR1cm4gIWlzUmVhY3ROYXRpdmUoKSAmJiAhaXNOb2RlKCk7XG59XG5leHBvcnRzLmlzQnJvd3NlciA9IGlzQnJvd3Nlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpc0Jyb3dzZXIiLCJpc05vZGUiLCJpc1JlYWN0TmF0aXZlIiwiZG9jdW1lbnQiLCJuYXZpZ2F0b3IiLCJwcm9kdWN0IiwicHJvY2VzcyIsInZlcnNpb25zIiwibm9kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./crypto */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./env */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsb0ZBQVUsR0FBR0g7QUFDMUNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsOEVBQU8sR0FBR0gsVUFDdkMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9lbnZpcm9ubWVudC9kaXN0L2Nqcy9pbmRleC5qcz81YzI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyeXB0b1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lbnZcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/ethereum-provider/dist/index.es.js":
/*!************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/dist/index.es.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthereumProvider: () => (/* binding */ z),\n/* harmony export */   OPTIONAL_EVENTS: () => (/* binding */ M),\n/* harmony export */   OPTIONAL_METHODS: () => (/* binding */ y),\n/* harmony export */   REQUIRED_EVENTS: () => (/* binding */ g),\n/* harmony export */   REQUIRED_METHODS: () => (/* binding */ u),\n/* harmony export */   \"default\": () => (/* binding */ C)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/universal-provider */ \"(ssr)/./node_modules/@walletconnect/universal-provider/dist/index.es.js\");\n\n\n\nconst T = \"wc\", S = \"ethereum_provider\", $ = `${T}@2:${S}:`, j = \"https://rpc.walletconnect.com/v1/\", u = [\n    \"eth_sendTransaction\",\n    \"personal_sign\"\n], y = [\n    \"eth_accounts\",\n    \"eth_requestAccounts\",\n    \"eth_sendRawTransaction\",\n    \"eth_sign\",\n    \"eth_signTransaction\",\n    \"eth_signTypedData\",\n    \"eth_signTypedData_v3\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"personal_sign\",\n    \"wallet_switchEthereumChain\",\n    \"wallet_addEthereumChain\",\n    \"wallet_getPermissions\",\n    \"wallet_requestPermissions\",\n    \"wallet_registerOnboarding\",\n    \"wallet_watchAsset\",\n    \"wallet_scanQRCode\",\n    \"wallet_sendCalls\",\n    \"wallet_getCapabilities\",\n    \"wallet_getCallsStatus\",\n    \"wallet_showCallsStatus\"\n], g = [\n    \"chainChanged\",\n    \"accountsChanged\"\n], M = [\n    \"chainChanged\",\n    \"accountsChanged\",\n    \"message\",\n    \"disconnect\",\n    \"connect\"\n];\nvar q = Object.defineProperty, N = Object.defineProperties, D = Object.getOwnPropertyDescriptors, O = Object.getOwnPropertySymbols, U = Object.prototype.hasOwnProperty, Q = Object.prototype.propertyIsEnumerable, b = (a, t, s)=>t in a ? q(a, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : a[t] = s, p = (a, t)=>{\n    for(var s in t || (t = {}))U.call(t, s) && b(a, s, t[s]);\n    if (O) for (var s of O(t))Q.call(t, s) && b(a, s, t[s]);\n    return a;\n}, E = (a, t)=>N(a, D(t));\nfunction m(a) {\n    return Number(a[0].split(\":\")[1]);\n}\nfunction v(a) {\n    return `0x${a.toString(16)}`;\n}\nfunction L(a) {\n    const { chains: t, optionalChains: s, methods: i, optionalMethods: e, events: n, optionalEvents: o, rpcMap: r } = a;\n    if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(t)) throw new Error(\"Invalid chains\");\n    const c = {\n        chains: t,\n        methods: i || u,\n        events: n || g,\n        rpcMap: p({}, t.length ? {\n            [m(t)]: r[m(t)]\n        } : {})\n    }, h = n?.filter((l)=>!g.includes(l)), d = i?.filter((l)=>!u.includes(l));\n    if (!s && !o && !e && !(h != null && h.length) && !(d != null && d.length)) return {\n        required: t.length ? c : void 0\n    };\n    const w = h?.length && d?.length || !s, I = {\n        chains: [\n            ...new Set(w ? c.chains.concat(s || []) : s)\n        ],\n        methods: [\n            ...new Set(c.methods.concat(e != null && e.length ? e : y))\n        ],\n        events: [\n            ...new Set(c.events.concat(o != null && o.length ? o : M))\n        ],\n        rpcMap: r\n    };\n    return {\n        required: t.length ? c : void 0,\n        optional: s.length ? I : void 0\n    };\n}\nclass C {\n    constructor(){\n        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.namespace = \"eip155\", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = $, this.on = (t, s)=>(this.events.on(t, s), this), this.once = (t, s)=>(this.events.once(t, s), this), this.removeListener = (t, s)=>(this.events.removeListener(t, s), this), this.off = (t, s)=>(this.events.off(t, s), this), this.parseAccount = (t)=>this.isCompatibleChainId(t) ? this.parseAccountId(t).address : t, this.signer = {}, this.rpc = {};\n    }\n    static async init(t) {\n        const s = new C;\n        return await s.initialize(t), s;\n    }\n    async request(t, s) {\n        return await this.signer.request(t, this.formatChainId(this.chainId), s);\n    }\n    sendAsync(t, s, i) {\n        this.signer.sendAsync(t, s, this.formatChainId(this.chainId), i);\n    }\n    get connected() {\n        return this.signer.client ? this.signer.client.core.relayer.connected : !1;\n    }\n    get connecting() {\n        return this.signer.client ? this.signer.client.core.relayer.connecting : !1;\n    }\n    async enable() {\n        return this.session || await this.connect(), await this.request({\n            method: \"eth_requestAccounts\"\n        });\n    }\n    async connect(t) {\n        if (!this.signer.client) throw new Error(\"Provider not initialized. Call init() first\");\n        this.loadConnectOpts(t);\n        const { required: s, optional: i } = L(this.rpc);\n        try {\n            const e = await new Promise(async (o, r)=>{\n                var c;\n                this.rpc.showQrModal && ((c = this.modal) == null || c.subscribeModal((h)=>{\n                    !h.open && !this.signer.session && (this.signer.abortPairingAttempt(), r(new Error(\"Connection request reset. Please try again.\")));\n                })), await this.signer.connect(E(p({\n                    namespaces: p({}, s && {\n                        [this.namespace]: s\n                    })\n                }, i && {\n                    optionalNamespaces: {\n                        [this.namespace]: i\n                    }\n                }), {\n                    pairingTopic: t?.pairingTopic\n                })).then((h)=>{\n                    o(h);\n                }).catch((h)=>{\n                    r(new Error(h.message));\n                });\n            });\n            if (!e) return;\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getAccountsFromNamespaces)(e.namespaces, [\n                this.namespace\n            ]);\n            this.setChainIds(this.rpc.chains.length ? this.rpc.chains : n), this.setAccounts(n), this.events.emit(\"connect\", {\n                chainId: v(this.chainId)\n            });\n        } catch (e) {\n            throw this.signer.logger.error(e), e;\n        } finally{\n            this.modal && this.modal.closeModal();\n        }\n    }\n    async authenticate(t) {\n        if (!this.signer.client) throw new Error(\"Provider not initialized. Call init() first\");\n        this.loadConnectOpts({\n            chains: t?.chains\n        });\n        try {\n            const s = await new Promise(async (e, n)=>{\n                var o;\n                this.rpc.showQrModal && ((o = this.modal) == null || o.subscribeModal((r)=>{\n                    !r.open && !this.signer.session && (this.signer.abortPairingAttempt(), n(new Error(\"Connection request reset. Please try again.\")));\n                })), await this.signer.authenticate(E(p({}, t), {\n                    chains: this.rpc.chains\n                })).then((r)=>{\n                    e(r);\n                }).catch((r)=>{\n                    n(new Error(r.message));\n                });\n            }), i = s.session;\n            if (i) {\n                const e = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getAccountsFromNamespaces)(i.namespaces, [\n                    this.namespace\n                ]);\n                this.setChainIds(this.rpc.chains.length ? this.rpc.chains : e), this.setAccounts(e), this.events.emit(\"connect\", {\n                    chainId: v(this.chainId)\n                });\n            }\n            return s;\n        } catch (s) {\n            throw this.signer.logger.error(s), s;\n        } finally{\n            this.modal && this.modal.closeModal();\n        }\n    }\n    async disconnect() {\n        this.session && await this.signer.disconnect(), this.reset();\n    }\n    get isWalletConnect() {\n        return !0;\n    }\n    get session() {\n        return this.signer.session;\n    }\n    registerEventListeners() {\n        this.signer.on(\"session_event\", (t)=>{\n            const { params: s } = t, { event: i } = s;\n            i.name === \"accountsChanged\" ? (this.accounts = this.parseAccounts(i.data), this.events.emit(\"accountsChanged\", this.accounts)) : i.name === \"chainChanged\" ? this.setChainId(this.formatChainId(i.data)) : this.events.emit(i.name, i.data), this.events.emit(\"session_event\", t);\n        }), this.signer.on(\"chainChanged\", (t)=>{\n            const s = parseInt(t);\n            this.chainId = s, this.events.emit(\"chainChanged\", v(this.chainId)), this.persist();\n        }), this.signer.on(\"session_update\", (t)=>{\n            this.events.emit(\"session_update\", t);\n        }), this.signer.on(\"session_delete\", (t)=>{\n            this.reset(), this.events.emit(\"session_delete\", t), this.events.emit(\"disconnect\", E(p({}, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getSdkError)(\"USER_DISCONNECTED\")), {\n                data: t.topic,\n                name: \"USER_DISCONNECTED\"\n            }));\n        }), this.signer.on(\"display_uri\", (t)=>{\n            var s, i;\n            this.rpc.showQrModal && ((s = this.modal) == null || s.closeModal(), (i = this.modal) == null || i.openModal({\n                uri: t\n            })), this.events.emit(\"display_uri\", t);\n        });\n    }\n    switchEthereumChain(t) {\n        this.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: t.toString(16)\n                }\n            ]\n        });\n    }\n    isCompatibleChainId(t) {\n        return typeof t == \"string\" ? t.startsWith(`${this.namespace}:`) : !1;\n    }\n    formatChainId(t) {\n        return `${this.namespace}:${t}`;\n    }\n    parseChainId(t) {\n        return Number(t.split(\":\")[1]);\n    }\n    setChainIds(t) {\n        const s = t.filter((i)=>this.isCompatibleChainId(i)).map((i)=>this.parseChainId(i));\n        s.length && (this.chainId = s[0], this.events.emit(\"chainChanged\", v(this.chainId)), this.persist());\n    }\n    setChainId(t) {\n        if (this.isCompatibleChainId(t)) {\n            const s = this.parseChainId(t);\n            this.chainId = s, this.switchEthereumChain(s);\n        }\n    }\n    parseAccountId(t) {\n        const [s, i, e] = t.split(\":\");\n        return {\n            chainId: `${s}:${i}`,\n            address: e\n        };\n    }\n    setAccounts(t) {\n        this.accounts = t.filter((s)=>this.parseChainId(this.parseAccountId(s).chainId) === this.chainId).map((s)=>this.parseAccountId(s).address), this.events.emit(\"accountsChanged\", this.accounts);\n    }\n    getRpcConfig(t) {\n        var s, i;\n        const e = (s = t?.chains) != null ? s : [], n = (i = t?.optionalChains) != null ? i : [], o = e.concat(n);\n        if (!o.length) throw new Error(\"No chains specified in either `chains` or `optionalChains`\");\n        const r = e.length ? t?.methods || u : [], c = e.length ? t?.events || g : [], h = t?.optionalMethods || [], d = t?.optionalEvents || [], w = t?.rpcMap || this.buildRpcMap(o, t.projectId), I = t?.qrModalOptions || void 0;\n        return {\n            chains: e?.map((l)=>this.formatChainId(l)),\n            optionalChains: n.map((l)=>this.formatChainId(l)),\n            methods: r,\n            events: c,\n            optionalMethods: h,\n            optionalEvents: d,\n            rpcMap: w,\n            showQrModal: !!(t != null && t.showQrModal),\n            qrModalOptions: I,\n            projectId: t.projectId,\n            metadata: t.metadata\n        };\n    }\n    buildRpcMap(t, s) {\n        const i = {};\n        return t.forEach((e)=>{\n            i[e] = this.getRpcUrl(e, s);\n        }), i;\n    }\n    async initialize(t) {\n        if (this.rpc = this.getRpcConfig(t), this.chainId = this.rpc.chains.length ? m(this.rpc.chains) : m(this.rpc.optionalChains), this.signer = await _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_1__.UniversalProvider.init({\n            projectId: this.rpc.projectId,\n            metadata: this.rpc.metadata,\n            disableProviderPing: t.disableProviderPing,\n            relayUrl: t.relayUrl,\n            storageOptions: t.storageOptions\n        }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {\n            let s;\n            try {\n                const { WalletConnectModal: i } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/@walletconnect\").then(__webpack_require__.bind(__webpack_require__, /*! @walletconnect/modal */ \"(ssr)/./node_modules/@walletconnect/modal/dist/index.js\"));\n                s = i;\n            } catch  {\n                throw new Error(\"To use QR modal, please install @walletconnect/modal package\");\n            }\n            if (s) try {\n                this.modal = new s(p({\n                    projectId: this.rpc.projectId\n                }, this.rpc.qrModalOptions));\n            } catch (i) {\n                throw this.signer.logger.error(i), new Error(\"Could not generate WalletConnectModal Instance\");\n            }\n        }\n    }\n    loadConnectOpts(t) {\n        if (!t) return;\n        const { chains: s, optionalChains: i, rpcMap: e } = t;\n        s && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(s) && (this.rpc.chains = s.map((n)=>this.formatChainId(n)), s.forEach((n)=>{\n            this.rpc.rpcMap[n] = e?.[n] || this.getRpcUrl(n);\n        })), i && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(i) && (this.rpc.optionalChains = [], this.rpc.optionalChains = i?.map((n)=>this.formatChainId(n)), i.forEach((n)=>{\n            this.rpc.rpcMap[n] = e?.[n] || this.getRpcUrl(n);\n        }));\n    }\n    getRpcUrl(t, s) {\n        var i;\n        return ((i = this.rpc.rpcMap) == null ? void 0 : i[t]) || `${j}?chainId=eip155:${t}&projectId=${s || this.rpc.projectId}`;\n    }\n    async loadPersistedSession() {\n        if (this.session) try {\n            const t = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`), s = this.session.namespaces[`${this.namespace}:${t}`] ? this.session.namespaces[`${this.namespace}:${t}`] : this.session.namespaces[this.namespace];\n            this.setChainIds(t ? [\n                this.formatChainId(t)\n            ] : s?.accounts), this.setAccounts(s?.accounts);\n        } catch (t) {\n            this.signer.logger.error(\"Failed to load persisted session, clearing state...\"), this.signer.logger.error(t), await this.disconnect().catch((s)=>this.signer.logger.warn(s));\n        }\n    }\n    reset() {\n        this.chainId = 1, this.accounts = [];\n    }\n    persist() {\n        this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);\n    }\n    parseAccounts(t) {\n        return typeof t == \"string\" || t instanceof String ? [\n            this.parseAccount(t)\n        ] : t.map((s)=>this.parseAccount(s));\n    }\n}\nconst z = C;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/ethereum-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js":
/*!***************************************************************!*\
  !*** ./node_modules/@walletconnect/events/dist/esm/events.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* binding */ IEvents)\n/* harmony export */ });\nclass IEvents {\n} //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2V2ZW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUE7QUFDYixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2V2ZW50cy5qcz8xMDU2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBJRXZlbnRzIHtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50cy5qcy5tYXAiXSwibmFtZXMiOlsiSUV2ZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@walletconnect/events/dist/esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* reexport safe */ _events__WEBPACK_IMPORTED_MODULE_0__.IEvents)\n/* harmony export */ });\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js\");\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlCLENBQ3pCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2luZGV4LmpzP2QzMGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vZXZlbnRzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/heartbeat/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HEARTBEAT_EVENTS: () => (/* binding */ r),\n/* harmony export */   HEARTBEAT_INTERVAL: () => (/* binding */ s),\n/* harmony export */   HeartBeat: () => (/* binding */ i),\n/* harmony export */   IHeartBeat: () => (/* binding */ n)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\");\n\n\n\nclass n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_2__.IEvents {\n    constructor(e){\n        super();\n    }\n}\nconst s = _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_SECONDS, r = {\n    pulse: \"heartbeat_pulse\"\n};\nclass i extends n {\n    constructor(e){\n        super(e), this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.interval = s, this.interval = e?.interval || s;\n    }\n    static async init(e) {\n        const t = new i(e);\n        return await t.init(), t;\n    }\n    async init() {\n        await this.initialize();\n    }\n    stop() {\n        clearInterval(this.intervalRef);\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async initialize() {\n        this.intervalRef = setInterval(()=>this.pulse(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(this.interval));\n    }\n    pulse() {\n        this.events.emit(r.pulse);\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvaGVhcnRiZWF0L2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXNDO0FBQXNFO0FBQWdEO0FBQUEsTUFBTVEsVUFBVUQsMERBQUNBO0lBQUNFLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUs7SUFBRTtBQUFDO0FBQUMsTUFBTUMsSUFBRVIsNkRBQUNBLEVBQUNTLElBQUU7SUFBQ0MsT0FBTTtBQUFpQjtBQUFFLE1BQU1DLFVBQVVOO0lBQUVDLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssQ0FBQ0EsSUFBRyxJQUFJLENBQUNLLE1BQU0sR0FBQyxJQUFJZCxnREFBQ0EsRUFBQyxJQUFJLENBQUNlLFFBQVEsR0FBQ0wsR0FBRSxJQUFJLENBQUNLLFFBQVEsR0FBQ04sR0FBR00sWUFBVUw7SUFBQztJQUFDLGFBQWFNLEtBQUtQLENBQUMsRUFBQztRQUFDLE1BQU1RLElBQUUsSUFBSUosRUFBRUo7UUFBRyxPQUFPLE1BQU1RLEVBQUVELElBQUksSUFBR0M7SUFBQztJQUFDLE1BQU1ELE9BQU07UUFBQyxNQUFNLElBQUksQ0FBQ0UsVUFBVTtJQUFFO0lBQUNDLE9BQU07UUFBQ0MsY0FBYyxJQUFJLENBQUNDLFdBQVc7SUFBQztJQUFDQyxHQUFHYixDQUFDLEVBQUNRLENBQUMsRUFBQztRQUFDLElBQUksQ0FBQ0gsTUFBTSxDQUFDUSxFQUFFLENBQUNiLEdBQUVRO0lBQUU7SUFBQ00sS0FBS2QsQ0FBQyxFQUFDUSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNILE1BQU0sQ0FBQ1MsSUFBSSxDQUFDZCxHQUFFUTtJQUFFO0lBQUNPLElBQUlmLENBQUMsRUFBQ1EsQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDSCxNQUFNLENBQUNVLEdBQUcsQ0FBQ2YsR0FBRVE7SUFBRTtJQUFDUSxlQUFlaEIsQ0FBQyxFQUFDUSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNILE1BQU0sQ0FBQ1csY0FBYyxDQUFDaEIsR0FBRVE7SUFBRTtJQUFDLE1BQU1DLGFBQVk7UUFBQyxJQUFJLENBQUNHLFdBQVcsR0FBQ0ssWUFBWSxJQUFJLElBQUksQ0FBQ2QsS0FBSyxJQUFHUixrRUFBQ0EsQ0FBQyxJQUFJLENBQUNXLFFBQVE7SUFBRTtJQUFDSCxRQUFPO1FBQUMsSUFBSSxDQUFDRSxNQUFNLENBQUNhLElBQUksQ0FBQ2hCLEVBQUVDLEtBQUs7SUFBQztBQUFDO0FBQXNGLENBQ3h6QixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2luZGV4LmVzLmpzP2QzMDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0e0V2ZW50RW1pdHRlciBhcyBhfWZyb21cImV2ZW50c1wiO2ltcG9ydHtGSVZFX1NFQ09ORFMgYXMgbyx0b01pbGlzZWNvbmRzIGFzIGx9ZnJvbVwiQHdhbGxldGNvbm5lY3QvdGltZVwiO2ltcG9ydHtJRXZlbnRzIGFzIHZ9ZnJvbVwiQHdhbGxldGNvbm5lY3QvZXZlbnRzXCI7Y2xhc3MgbiBleHRlbmRzIHZ7Y29uc3RydWN0b3IoZSl7c3VwZXIoKX19Y29uc3Qgcz1vLHI9e3B1bHNlOlwiaGVhcnRiZWF0X3B1bHNlXCJ9O2NsYXNzIGkgZXh0ZW5kcyBue2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpLHRoaXMuZXZlbnRzPW5ldyBhLHRoaXMuaW50ZXJ2YWw9cyx0aGlzLmludGVydmFsPWU/LmludGVydmFsfHxzfXN0YXRpYyBhc3luYyBpbml0KGUpe2NvbnN0IHQ9bmV3IGkoZSk7cmV0dXJuIGF3YWl0IHQuaW5pdCgpLHR9YXN5bmMgaW5pdCgpe2F3YWl0IHRoaXMuaW5pdGlhbGl6ZSgpfXN0b3AoKXtjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWxSZWYpfW9uKGUsdCl7dGhpcy5ldmVudHMub24oZSx0KX1vbmNlKGUsdCl7dGhpcy5ldmVudHMub25jZShlLHQpfW9mZihlLHQpe3RoaXMuZXZlbnRzLm9mZihlLHQpfXJlbW92ZUxpc3RlbmVyKGUsdCl7dGhpcy5ldmVudHMucmVtb3ZlTGlzdGVuZXIoZSx0KX1hc3luYyBpbml0aWFsaXplKCl7dGhpcy5pbnRlcnZhbFJlZj1zZXRJbnRlcnZhbCgoKT0+dGhpcy5wdWxzZSgpLGwodGhpcy5pbnRlcnZhbCkpfXB1bHNlKCl7dGhpcy5ldmVudHMuZW1pdChyLnB1bHNlKX19ZXhwb3J0e3IgYXMgSEVBUlRCRUFUX0VWRU5UUyxzIGFzIEhFQVJUQkVBVF9JTlRFUlZBTCxpIGFzIEhlYXJ0QmVhdCxuIGFzIElIZWFydEJlYXR9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXMuanMubWFwXG4iXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIiwiYSIsIkZJVkVfU0VDT05EUyIsIm8iLCJ0b01pbGlzZWNvbmRzIiwibCIsIklFdmVudHMiLCJ2IiwibiIsImNvbnN0cnVjdG9yIiwiZSIsInMiLCJyIiwicHVsc2UiLCJpIiwiZXZlbnRzIiwiaW50ZXJ2YWwiLCJpbml0IiwidCIsImluaXRpYWxpemUiLCJzdG9wIiwiY2xlYXJJbnRlcnZhbCIsImludGVydmFsUmVmIiwib24iLCJvbmNlIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJzZXRJbnRlcnZhbCIsImVtaXQiLCJIRUFSVEJFQVRfRVZFTlRTIiwiSEVBUlRCRUFUX0lOVEVSVkFMIiwiSGVhcnRCZWF0IiwiSUhlYXJ0QmVhdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpConnection: () => (/* binding */ f),\n/* harmony export */   \"default\": () => (/* binding */ f)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cross-fetch */ \"(ssr)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\nvar P = Object.defineProperty, w = Object.defineProperties, E = Object.getOwnPropertyDescriptors, c = Object.getOwnPropertySymbols, L = Object.prototype.hasOwnProperty, O = Object.prototype.propertyIsEnumerable, l = (r, t, e)=>t in r ? P(r, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : r[t] = e, p = (r, t)=>{\n    for(var e in t || (t = {}))L.call(t, e) && l(r, e, t[e]);\n    if (c) for (var e of c(t))O.call(t, e) && l(r, e, t[e]);\n    return r;\n}, v = (r, t)=>w(r, E(t));\nconst j = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n}, T = \"POST\", d = {\n    headers: j,\n    method: T\n}, g = 10;\nclass f {\n    constructor(t, e = !1){\n        if (this.url = t, this.disableProviderPing = e, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.isAvailable = !1, this.registering = !1, !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);\n        this.url = t, this.disableProviderPing = e;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(t, e) {\n        this.events.on(t, e);\n    }\n    once(t, e) {\n        this.events.once(t, e);\n    }\n    off(t, e) {\n        this.events.off(t, e);\n    }\n    removeListener(t, e) {\n        this.events.removeListener(t, e);\n    }\n    async open(t = this.url) {\n        await this.register(t);\n    }\n    async close() {\n        if (!this.isAvailable) throw new Error(\"Connection already closed\");\n        this.onClose();\n    }\n    async send(t) {\n        this.isAvailable || await this.register();\n        try {\n            const e = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)(t), s = await (await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(this.url, v(p({}, d), {\n                body: e\n            }))).json();\n            this.onPayload({\n                data: s\n            });\n        } catch (e) {\n            this.onError(t.id, e);\n        }\n    }\n    async register(t = this.url) {\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);\n        if (this.registering) {\n            const e = this.events.getMaxListeners();\n            return (this.events.listenerCount(\"register_error\") >= e || this.events.listenerCount(\"open\") >= e) && this.events.setMaxListeners(e + 1), new Promise((s, i)=>{\n                this.events.once(\"register_error\", (n)=>{\n                    this.resetMaxListeners(), i(n);\n                }), this.events.once(\"open\", ()=>{\n                    if (this.resetMaxListeners(), typeof this.isAvailable > \"u\") return i(new Error(\"HTTP connection is missing or invalid\"));\n                    s();\n                });\n            });\n        }\n        this.url = t, this.registering = !0;\n        try {\n            if (!this.disableProviderPing) {\n                const e = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)({\n                    id: 1,\n                    jsonrpc: \"2.0\",\n                    method: \"test\",\n                    params: []\n                });\n                await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(t, v(p({}, d), {\n                    body: e\n                }));\n            }\n            this.onOpen();\n        } catch (e) {\n            const s = this.parseError(e);\n            throw this.events.emit(\"register_error\", s), this.onClose(), s;\n        }\n    }\n    onOpen() {\n        this.isAvailable = !0, this.registering = !1, this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = !1, this.registering = !1, this.events.emit(\"close\");\n    }\n    onPayload(t) {\n        if (typeof t.data > \"u\") return;\n        const e = typeof t.data == \"string\" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(t.data) : t.data;\n        this.events.emit(\"payload\", e);\n    }\n    onError(t, e) {\n        const s = this.parseError(e), i = s.message || s.toString(), n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(t, i);\n        this.events.emit(\"payload\", n);\n    }\n    parseError(t, e = this.url) {\n        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.parseConnectionError)(t, e, \"HTTP\");\n    }\n    resetMaxListeners() {\n        this.events.getMaxListeners() > g && this.events.setMaxListeners(g);\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonRpcProvider: () => (/* binding */ o),\n/* harmony export */   \"default\": () => (/* binding */ o)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\nclass o extends _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.IJsonRpcProvider {\n    constructor(t){\n        super(t), this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.hasRegisteredEventListeners = !1, this.connection = this.setConnection(t), this.connection.connected && this.registerEventListeners();\n    }\n    async connect(t = this.connection) {\n        await this.open(t);\n    }\n    async disconnect() {\n        await this.close();\n    }\n    on(t, e) {\n        this.events.on(t, e);\n    }\n    once(t, e) {\n        this.events.once(t, e);\n    }\n    off(t, e) {\n        this.events.off(t, e);\n    }\n    removeListener(t, e) {\n        this.events.removeListener(t, e);\n    }\n    async request(t, e) {\n        return this.requestStrict((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.formatJsonRpcRequest)(t.method, t.params || [], t.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.getBigIntRpcId)().toString()), e);\n    }\n    async requestStrict(t, e) {\n        return new Promise(async (i, s)=>{\n            if (!this.connection.connected) try {\n                await this.open();\n            } catch (n) {\n                s(n);\n            }\n            this.events.on(`${t.id}`, (n)=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcError)(n) ? s(n.error) : i(n.result);\n            });\n            try {\n                await this.connection.send(t, e);\n            } catch (n) {\n                s(n);\n            }\n        });\n    }\n    setConnection(t = this.connection) {\n        return t;\n    }\n    onPayload(t) {\n        this.events.emit(\"payload\", t), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcResponse)(t) ? this.events.emit(`${t.id}`, t) : this.events.emit(\"message\", {\n            type: t.method,\n            data: t.params\n        });\n    }\n    onClose(t) {\n        t && t.code === 3e3 && this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${t.code} ${t.reason ? `(${t.reason})` : \"\"}`)), this.events.emit(\"disconnect\");\n    }\n    async open(t = this.connection) {\n        this.connection === t && this.connection.connected || (this.connection.connected && this.close(), typeof t == \"string\" && (await this.connection.open(t), t = this.connection), this.connection = this.setConnection(t), await this.connection.open(), this.registerEventListeners(), this.events.emit(\"connect\"));\n    }\n    async close() {\n        await this.connection.close();\n    }\n    registerEventListeners() {\n        this.hasRegisteredEventListeners || (this.connection.on(\"payload\", (t)=>this.onPayload(t)), this.connection.on(\"close\", (t)=>this.onClose(t)), this.connection.on(\"error\", (t)=>this.events.emit(\"error\", t)), this.connection.on(\"register_error\", (t)=>this.onClose()), this.hasRegisteredEventListeners = !0);\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy1wcm92aWRlci9kaXN0L2luZGV4LmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNDO0FBQXlKO0FBQUEsTUFBTVksVUFBVVQsMEVBQUNBO0lBQUNVLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssQ0FBQ0EsSUFBRyxJQUFJLENBQUNDLE1BQU0sR0FBQyxJQUFJZCxnREFBQ0EsRUFBQyxJQUFJLENBQUNlLDJCQUEyQixHQUFDLENBQUMsR0FBRSxJQUFJLENBQUNDLFVBQVUsR0FBQyxJQUFJLENBQUNDLGFBQWEsQ0FBQ0osSUFBRyxJQUFJLENBQUNHLFVBQVUsQ0FBQ0UsU0FBUyxJQUFFLElBQUksQ0FBQ0Msc0JBQXNCO0lBQUU7SUFBQyxNQUFNQyxRQUFRUCxJQUFFLElBQUksQ0FBQ0csVUFBVSxFQUFDO1FBQUMsTUFBTSxJQUFJLENBQUNLLElBQUksQ0FBQ1I7SUFBRTtJQUFDLE1BQU1TLGFBQVk7UUFBQyxNQUFNLElBQUksQ0FBQ0MsS0FBSztJQUFFO0lBQUNDLEdBQUdYLENBQUMsRUFBQ1ksQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDWCxNQUFNLENBQUNVLEVBQUUsQ0FBQ1gsR0FBRVk7SUFBRTtJQUFDQyxLQUFLYixDQUFDLEVBQUNZLENBQUMsRUFBQztRQUFDLElBQUksQ0FBQ1gsTUFBTSxDQUFDWSxJQUFJLENBQUNiLEdBQUVZO0lBQUU7SUFBQ0UsSUFBSWQsQ0FBQyxFQUFDWSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNYLE1BQU0sQ0FBQ2EsR0FBRyxDQUFDZCxHQUFFWTtJQUFFO0lBQUNHLGVBQWVmLENBQUMsRUFBQ1ksQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDWCxNQUFNLENBQUNjLGNBQWMsQ0FBQ2YsR0FBRVk7SUFBRTtJQUFDLE1BQU1JLFFBQVFoQixDQUFDLEVBQUNZLENBQUMsRUFBQztRQUFDLE9BQU8sSUFBSSxDQUFDSyxhQUFhLENBQUMxQixrRkFBQ0Es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T0FBTyxDQUFDakMsS0FBSSxJQUFJLENBQUNHLFVBQVUsQ0FBQ1EsRUFBRSxDQUFDLFNBQVFYLENBQUFBLElBQUcsSUFBSSxDQUFDQyxNQUFNLENBQUM2QixJQUFJLENBQUMsU0FBUTlCLEtBQUksSUFBSSxDQUFDRyxVQUFVLENBQUNRLEVBQUUsQ0FBQyxrQkFBaUJYLENBQUFBLElBQUcsSUFBSSxDQUFDaUMsT0FBTyxLQUFJLElBQUksQ0FBQy9CLDJCQUEyQixHQUFDLENBQUM7SUFBRTtBQUFDO0FBQTJDLENBQ3IrRCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtcHJvdmlkZXIvZGlzdC9pbmRleC5lcy5qcz83ZWU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydHtFdmVudEVtaXR0ZXIgYXMgY31mcm9tXCJldmVudHNcIjtpbXBvcnR7SUpzb25ScGNQcm92aWRlciBhcyByLGZvcm1hdEpzb25ScGNSZXF1ZXN0IGFzIGgsZ2V0QmlnSW50UnBjSWQgYXMgYSxpc0pzb25ScGNFcnJvciBhcyBkLGlzSnNvblJwY1Jlc3BvbnNlIGFzIHZ9ZnJvbVwiQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlsc1wiO2NsYXNzIG8gZXh0ZW5kcyBye2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMuZXZlbnRzPW5ldyBjLHRoaXMuaGFzUmVnaXN0ZXJlZEV2ZW50TGlzdGVuZXJzPSExLHRoaXMuY29ubmVjdGlvbj10aGlzLnNldENvbm5lY3Rpb24odCksdGhpcy5jb25uZWN0aW9uLmNvbm5lY3RlZCYmdGhpcy5yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCl9YXN5bmMgY29ubmVjdCh0PXRoaXMuY29ubmVjdGlvbil7YXdhaXQgdGhpcy5vcGVuKHQpfWFzeW5jIGRpc2Nvbm5lY3QoKXthd2FpdCB0aGlzLmNsb3NlKCl9b24odCxlKXt0aGlzLmV2ZW50cy5vbih0LGUpfW9uY2UodCxlKXt0aGlzLmV2ZW50cy5vbmNlKHQsZSl9b2ZmKHQsZSl7dGhpcy5ldmVudHMub2ZmKHQsZSl9cmVtb3ZlTGlzdGVuZXIodCxlKXt0aGlzLmV2ZW50cy5yZW1vdmVMaXN0ZW5lcih0LGUpfWFzeW5jIHJlcXVlc3QodCxlKXtyZXR1cm4gdGhpcy5yZXF1ZXN0U3RyaWN0KGgodC5tZXRob2QsdC5wYXJhbXN8fFtdLHQuaWR8fGEoKS50b1N0cmluZygpKSxlKX1hc3luYyByZXF1ZXN0U3RyaWN0KHQsZSl7cmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jKGkscyk9PntpZighdGhpcy5jb25uZWN0aW9uLmNvbm5lY3RlZCl0cnl7YXdhaXQgdGhpcy5vcGVuKCl9Y2F0Y2gobil7cyhuKX10aGlzLmV2ZW50cy5vbihgJHt0LmlkfWAsbj0+e2Qobik/cyhuLmVycm9yKTppKG4ucmVzdWx0KX0pO3RyeXthd2FpdCB0aGlzLmNvbm5lY3Rpb24uc2VuZCh0LGUpfWNhdGNoKG4pe3Mobil9fSl9c2V0Q29ubmVjdGlvbih0PXRoaXMuY29ubmVjdGlvbil7cmV0dXJuIHR9b25QYXlsb2FkKHQpe3RoaXMuZXZlbnRzLmVtaXQoXCJwYXlsb2FkXCIsdCksdih0KT90aGlzLmV2ZW50cy5lbWl0KGAke3QuaWR9YCx0KTp0aGlzLmV2ZW50cy5lbWl0KFwibWVzc2FnZVwiLHt0eXBlOnQubWV0aG9kLGRhdGE6dC5wYXJhbXN9KX1vbkNsb3NlKHQpe3QmJnQuY29kZT09PTNlMyYmdGhpcy5ldmVudHMuZW1pdChcImVycm9yXCIsbmV3IEVycm9yKGBXZWJTb2NrZXQgY29ubmVjdGlvbiBjbG9zZWQgYWJub3JtYWxseSB3aXRoIGNvZGU6ICR7dC5jb2RlfSAke3QucmVhc29uP2AoJHt0LnJlYXNvbn0pYDpcIlwifWApKSx0aGlzLmV2ZW50cy5lbWl0KFwiZGlzY29ubmVjdFwiKX1hc3luYyBvcGVuKHQ9dGhpcy5jb25uZWN0aW9uKXt0aGlzLmNvbm5lY3Rpb249PT10JiZ0aGlzLmNvbm5lY3Rpb24uY29ubmVjdGVkfHwodGhpcy5jb25uZWN0aW9uLmNvbm5lY3RlZCYmdGhpcy5jbG9zZSgpLHR5cGVvZiB0PT1cInN0cmluZ1wiJiYoYXdhaXQgdGhpcy5jb25uZWN0aW9uLm9wZW4odCksdD10aGlzLmNvbm5lY3Rpb24pLHRoaXMuY29ubmVjdGlvbj10aGlzLnNldENvbm5lY3Rpb24odCksYXdhaXQgdGhpcy5jb25uZWN0aW9uLm9wZW4oKSx0aGlzLnJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMoKSx0aGlzLmV2ZW50cy5lbWl0KFwiY29ubmVjdFwiKSl9YXN5bmMgY2xvc2UoKXthd2FpdCB0aGlzLmNvbm5lY3Rpb24uY2xvc2UoKX1yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCl7dGhpcy5oYXNSZWdpc3RlcmVkRXZlbnRMaXN0ZW5lcnN8fCh0aGlzLmNvbm5lY3Rpb24ub24oXCJwYXlsb2FkXCIsdD0+dGhpcy5vblBheWxvYWQodCkpLHRoaXMuY29ubmVjdGlvbi5vbihcImNsb3NlXCIsdD0+dGhpcy5vbkNsb3NlKHQpKSx0aGlzLmNvbm5lY3Rpb24ub24oXCJlcnJvclwiLHQ9PnRoaXMuZXZlbnRzLmVtaXQoXCJlcnJvclwiLHQpKSx0aGlzLmNvbm5lY3Rpb24ub24oXCJyZWdpc3Rlcl9lcnJvclwiLHQ9PnRoaXMub25DbG9zZSgpKSx0aGlzLmhhc1JlZ2lzdGVyZWRFdmVudExpc3RlbmVycz0hMCl9fWV4cG9ydHtvIGFzIEpzb25ScGNQcm92aWRlcixvIGFzIGRlZmF1bHR9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXMuanMubWFwXG4iXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIiwiYyIsIklKc29uUnBjUHJvdmlkZXIiLCJyIiwiZm9ybWF0SnNvblJwY1JlcXVlc3QiLCJoIiwiZ2V0QmlnSW50UnBjSWQiLCJhIiwiaXNKc29uUnBjRXJyb3IiLCJkIiwiaXNKc29uUnBjUmVzcG9uc2UiLCJ2IiwibyIsImNvbnN0cnVjdG9yIiwidCIsImV2ZW50cyIsImhhc1JlZ2lzdGVyZWRFdmVudExpc3RlbmVycyIsImNvbm5lY3Rpb24iLCJzZXRDb25uZWN0aW9uIiwiY29ubmVjdGVkIiwicmVnaXN0ZXJFdmVudExpc3RlbmVycyIsImNvbm5lY3QiLCJvcGVuIiwiZGlzY29ubmVjdCIsImNsb3NlIiwib24iLCJlIiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwicmVxdWVzdCIsInJlcXVlc3RTdHJpY3QiLCJtZXRob2QiLCJwYXJhbXMiLCJpZCIsInRvU3RyaW5nIiwiUHJvbWlzZSIsImkiLCJzIiwibiIsImVycm9yIiwicmVzdWx0Iiwic2VuZCIsIm9uUGF5bG9hZCIsImVtaXQiLCJ0eXBlIiwiZGF0YSIsIm9uQ2xvc2UiLCJjb2RlIiwiRXJyb3IiLCJyZWFzb24iLCJKc29uUnBjUHJvdmlkZXIiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* binding */ n),\n/* harmony export */   IEvents: () => (/* binding */ e),\n/* harmony export */   IJsonRpcConnection: () => (/* binding */ o),\n/* harmony export */   IJsonRpcProvider: () => (/* binding */ r)\n/* harmony export */ });\nclass e {\n}\nclass o extends e {\n    constructor(c){\n        super();\n    }\n}\nclass n extends e {\n    constructor(){\n        super();\n    }\n}\nclass r extends n {\n    constructor(c){\n        super();\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlcy9kaXN0L2luZGV4LmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxNQUFNQTtBQUFFO0FBQUMsTUFBTUMsVUFBVUQ7SUFBRUUsWUFBWUMsQ0FBQyxDQUFDO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNQyxVQUFVSjtJQUFFRSxhQUFhO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNRyxVQUFVRDtJQUFFRixZQUFZQyxDQUFDLENBQUM7UUFBQyxLQUFLO0lBQUU7QUFBQztBQUE4RixDQUNuTyxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9pbmRleC5lcy5qcz9iMTI5Il0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIGV7fWNsYXNzIG8gZXh0ZW5kcyBle2NvbnN0cnVjdG9yKGMpe3N1cGVyKCl9fWNsYXNzIG4gZXh0ZW5kcyBle2NvbnN0cnVjdG9yKCl7c3VwZXIoKX19Y2xhc3MgciBleHRlbmRzIG57Y29uc3RydWN0b3IoYyl7c3VwZXIoKX19ZXhwb3J0e24gYXMgSUJhc2VKc29uUnBjUHJvdmlkZXIsZSBhcyBJRXZlbnRzLG8gYXMgSUpzb25ScGNDb25uZWN0aW9uLHIgYXMgSUpzb25ScGNQcm92aWRlcn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJlIiwibyIsImNvbnN0cnVjdG9yIiwiYyIsIm4iLCJyIiwiSUJhc2VKc29uUnBjUHJvdmlkZXIiLCJJRXZlbnRzIiwiSUpzb25ScGNDb25uZWN0aW9uIiwiSUpzb25ScGNQcm92aWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* binding */ DEFAULT_ERROR),\n/* harmony export */   INTERNAL_ERROR: () => (/* binding */ INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* binding */ INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* binding */ INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* binding */ METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* binding */ PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* binding */ RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* binding */ SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* binding */ SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* binding */ STANDARD_ERROR_MAP)\n/* harmony export */ });\nconst PARSE_ERROR = \"PARSE_ERROR\";\nconst INVALID_REQUEST = \"INVALID_REQUEST\";\nconst METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nconst INVALID_PARAMS = \"INVALID_PARAMS\";\nconst INTERNAL_ERROR = \"INTERNAL_ERROR\";\nconst SERVER_ERROR = \"SERVER_ERROR\";\nconst RESERVED_ERROR_CODES = [\n    -32700,\n    -32600,\n    -32601,\n    -32602,\n    -32603\n];\nconst SERVER_ERROR_CODE_RANGE = [\n    -32000,\n    -32099\n];\nconst STANDARD_ERROR_MAP = {\n    [PARSE_ERROR]: {\n        code: -32700,\n        message: \"Parse error\"\n    },\n    [INVALID_REQUEST]: {\n        code: -32600,\n        message: \"Invalid Request\"\n    },\n    [METHOD_NOT_FOUND]: {\n        code: -32601,\n        message: \"Method not found\"\n    },\n    [INVALID_PARAMS]: {\n        code: -32602,\n        message: \"Invalid params\"\n    },\n    [INTERNAL_ERROR]: {\n        code: -32603,\n        message: \"Internal error\"\n    },\n    [SERVER_ERROR]: {\n        code: -32000,\n        message: \"Server error\"\n    }\n};\nconst DEFAULT_ERROR = SERVER_ERROR; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFPLE1BQU1BLGNBQWMsY0FBYztBQUNsQyxNQUFNQyxrQkFBa0Isa0JBQWtCO0FBQzFDLE1BQU1DLG1CQUFtQixtQkFBbUI7QUFDNUMsTUFBTUMsaUJBQWlCLGlCQUFpQjtBQUN4QyxNQUFNQyxpQkFBaUIsaUJBQWlCO0FBQ3hDLE1BQU1DLGVBQWUsZUFBZTtBQUNwQyxNQUFNQyx1QkFBdUI7SUFBQyxDQUFDO0lBQU8sQ0FBQztJQUFPLENBQUM7SUFBTyxDQUFDO0lBQU8sQ0FBQztDQUFNLENBQUM7QUFDdEUsTUFBTUMsMEJBQTBCO0lBQUMsQ0FBQztJQUFPLENBQUM7Q0FBTSxDQUFDO0FBQ2pELE1BQU1DLHFCQUFxQjtJQUM5QixDQUFDUixZQUFZLEVBQUU7UUFBRVMsTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBYztJQUN0RCxDQUFDVCxnQkFBZ0IsRUFBRTtRQUFFUSxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFrQjtJQUM5RCxDQUFDUixpQkFBaUIsRUFBRTtRQUFFTyxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFtQjtJQUNoRSxDQUFDUCxlQUFlLEVBQUU7UUFBRU0sTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBaUI7SUFDNUQsQ0FBQ04sZUFBZSxFQUFFO1FBQUVLLE1BQU0sQ0FBQztRQUFPQyxTQUFTO0lBQWlCO0lBQzVELENBQUNMLGFBQWEsRUFBRTtRQUFFSSxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFlO0FBQzVELEVBQUU7QUFDSyxNQUFNQyxnQkFBZ0JOLGFBQWEsQ0FDMUMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL2NvbnN0YW50cy5qcz85YzA1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBQQVJTRV9FUlJPUiA9IFwiUEFSU0VfRVJST1JcIjtcbmV4cG9ydCBjb25zdCBJTlZBTElEX1JFUVVFU1QgPSBcIklOVkFMSURfUkVRVUVTVFwiO1xuZXhwb3J0IGNvbnN0IE1FVEhPRF9OT1RfRk9VTkQgPSBcIk1FVEhPRF9OT1RfRk9VTkRcIjtcbmV4cG9ydCBjb25zdCBJTlZBTElEX1BBUkFNUyA9IFwiSU5WQUxJRF9QQVJBTVNcIjtcbmV4cG9ydCBjb25zdCBJTlRFUk5BTF9FUlJPUiA9IFwiSU5URVJOQUxfRVJST1JcIjtcbmV4cG9ydCBjb25zdCBTRVJWRVJfRVJST1IgPSBcIlNFUlZFUl9FUlJPUlwiO1xuZXhwb3J0IGNvbnN0IFJFU0VSVkVEX0VSUk9SX0NPREVTID0gWy0zMjcwMCwgLTMyNjAwLCAtMzI2MDEsIC0zMjYwMiwgLTMyNjAzXTtcbmV4cG9ydCBjb25zdCBTRVJWRVJfRVJST1JfQ09ERV9SQU5HRSA9IFstMzIwMDAsIC0zMjA5OV07XG5leHBvcnQgY29uc3QgU1RBTkRBUkRfRVJST1JfTUFQID0ge1xuICAgIFtQQVJTRV9FUlJPUl06IHsgY29kZTogLTMyNzAwLCBtZXNzYWdlOiBcIlBhcnNlIGVycm9yXCIgfSxcbiAgICBbSU5WQUxJRF9SRVFVRVNUXTogeyBjb2RlOiAtMzI2MDAsIG1lc3NhZ2U6IFwiSW52YWxpZCBSZXF1ZXN0XCIgfSxcbiAgICBbTUVUSE9EX05PVF9GT1VORF06IHsgY29kZTogLTMyNjAxLCBtZXNzYWdlOiBcIk1ldGhvZCBub3QgZm91bmRcIiB9LFxuICAgIFtJTlZBTElEX1BBUkFNU106IHsgY29kZTogLTMyNjAyLCBtZXNzYWdlOiBcIkludmFsaWQgcGFyYW1zXCIgfSxcbiAgICBbSU5URVJOQUxfRVJST1JdOiB7IGNvZGU6IC0zMjYwMywgbWVzc2FnZTogXCJJbnRlcm5hbCBlcnJvclwiIH0sXG4gICAgW1NFUlZFUl9FUlJPUl06IHsgY29kZTogLTMyMDAwLCBtZXNzYWdlOiBcIlNlcnZlciBlcnJvclwiIH0sXG59O1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfRVJST1IgPSBTRVJWRVJfRVJST1I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbIlBBUlNFX0VSUk9SIiwiSU5WQUxJRF9SRVFVRVNUIiwiTUVUSE9EX05PVF9GT1VORCIsIklOVkFMSURfUEFSQU1TIiwiSU5URVJOQUxfRVJST1IiLCJTRVJWRVJfRVJST1IiLCJSRVNFUlZFRF9FUlJPUl9DT0RFUyIsIlNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFIiwiU1RBTkRBUkRfRVJST1JfTUFQIiwiY29kZSIsIm1lc3NhZ2UiLCJERUZBVUxUX0VSUk9SIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNodeJs: () => (/* binding */ isNodeJs)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/environment */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"isNodeJs\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\nconst isNodeJs = _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__.isNode;\n //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9lbnYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9EO0FBQzdDLE1BQU1DLFdBQVdELDhEQUFNQSxDQUFDO0FBQ1ksQ0FDM0MsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL2Vudi5qcz82ODRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTm9kZSB9IGZyb20gXCJAd2FsbGV0Y29ubmVjdC9lbnZpcm9ubWVudFwiO1xuZXhwb3J0IGNvbnN0IGlzTm9kZUpzID0gaXNOb2RlO1xuZXhwb3J0ICogZnJvbSBcIkB3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50XCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnYuanMubWFwIl0sIm5hbWVzIjpbImlzTm9kZSIsImlzTm9kZUpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getError: () => (/* binding */ getError),\n/* harmony export */   getErrorByCode: () => (/* binding */ getErrorByCode),\n/* harmony export */   isReservedErrorCode: () => (/* binding */ isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* binding */ isServerErrorCode),\n/* harmony export */   isValidErrorCode: () => (/* binding */ isValidErrorCode),\n/* harmony export */   parseConnectionError: () => (/* binding */ parseConnectionError),\n/* harmony export */   validateJsonRpcError: () => (/* binding */ validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\nfunction isServerErrorCode(code) {\n    return code <= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[0] && code >= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[1];\n}\nfunction isReservedErrorCode(code) {\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES.includes(code);\n}\nfunction isValidErrorCode(code) {\n    return typeof code === \"number\";\n}\nfunction getError(type) {\n    if (!Object.keys(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).includes(type)) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).find((e)=>e.code === code);\n    if (!match) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction validateJsonRpcError(response) {\n    if (typeof response.error.code === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing code for JSON-RPC error\"\n        };\n    }\n    if (typeof response.error.message === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing message for JSON-RPC error\"\n        };\n    }\n    if (!isValidErrorCode(response.error.code)) {\n        return {\n            valid: false,\n            error: `Invalid error code type for JSON-RPC: ${response.error.code}`\n        };\n    }\n    if (isReservedErrorCode(response.error.code)) {\n        const error = getErrorByCode(response.error.code);\n        if (error.message !== _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR].message && response.error.message === error.message) {\n            return {\n                valid: false,\n                error: `Invalid error code message for JSON-RPC: ${response.error.code}`\n            };\n        }\n    }\n    return {\n        valid: true\n    };\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e;\n} //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFnSDtBQUN6RyxTQUFTSSxrQkFBa0JDLElBQUk7SUFDbEMsT0FBT0EsUUFBUUwsK0RBQXVCLENBQUMsRUFBRSxJQUFJSyxRQUFRTCwrREFBdUIsQ0FBQyxFQUFFO0FBQ25GO0FBQ08sU0FBU00sb0JBQW9CRCxJQUFJO0lBQ3BDLE9BQU9KLDREQUFvQkEsQ0FBQ00sUUFBUSxDQUFDRjtBQUN6QztBQUNPLFNBQVNHLGlCQUFpQkgsSUFBSTtJQUNqQyxPQUFPLE9BQU9BLFNBQVM7QUFDM0I7QUFDTyxTQUFTSSxTQUFTQyxJQUFJO0lBQ3pCLElBQUksQ0FBQ0MsT0FBT0MsSUFBSSxDQUFDViwwREFBa0JBLEVBQUVLLFFBQVEsQ0FBQ0csT0FBTztRQUNqRCxPQUFPUiwwREFBa0IsQ0FBQ0MscURBQWFBLENBQUM7SUFDNUM7SUFDQSxPQUFPRCwwREFBa0IsQ0FBQ1EsS0FBSztBQUNuQztBQUNPLFNBQVNHLGVBQWVSLElBQUk7SUFDL0IsTUFBTVMsUUFBUUgsT0FBT0ksTUFBTSxDQUFDYiwwREFBa0JBLEVBQUVjLElBQUksQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRVosSUFBSSxLQUFLQTtJQUNyRSxJQUFJLENBQUNTLE9BQU87UUFDUixPQUFPWiwwREFBa0IsQ0FBQ0MscURBQWFBLENBQUM7SUFDNUM7SUFDQSxPQUFPVztBQUNYO0FBQ08sU0FBU0kscUJBQXFCQyxRQUFRO0lBQ3pDLElBQUksT0FBT0EsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEtBQUssYUFBYTtRQUM1QyxPQUFPO1lBQUVnQixPQUFPO1lBQU9ELE9BQU87UUFBa0M7SUFDcEU7SUFDQSxJQUFJLE9BQU9ELFNBQVNDLEtBQUssQ0FBQ0UsT0FBTyxLQUFLLGFBQWE7UUFDL0MsT0FBTztZQUFFRCxPQUFPO1lBQU9ELE9BQU87UUFBcUM7SUFDdkU7SUFDQSxJQUFJLENBQUNaLGlCQUFpQlcsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEdBQUc7UUFDeEMsT0FBTztZQUNIZ0IsT0FBTztZQUNQRCxPQUFPLENBQUMsc0NBQXNDLEVBQUVELFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxDQUFDLENBQUM7UUFDekU7SUFDSjtJQUNBLElBQUlDLG9CQUFvQmEsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEdBQUc7UUFDMUMsTUFBTWUsUUFBUVAsZUFBZU0sU0FBU0MsS0FBSyxDQUFDZixJQUFJO1FBQ2hELElBQUllLE1BQU1FLE9BQU8sS0FBS3BCLDBEQUFrQixDQUFDQyxxREFBYUEsQ0FBQyxDQUFDbUIsT0FBTyxJQUMzREgsU0FBU0MsS0FBSyxDQUFDRSxPQUFPLEtBQUtGLE1BQU1FLE9BQU8sRUFBRTtZQUMxQyxPQUFPO2dCQUNIRCxPQUFPO2dCQUNQRCxPQUFPLENBQUMseUNBQXlDLEVBQUVELFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxDQUFDLENBQUM7WUFDNUU7UUFDSjtJQUNKO0lBQ0EsT0FBTztRQUFFZ0IsT0FBTztJQUFLO0FBQ3pCO0FBQ08sU0FBU0UscUJBQXFCTixDQUFDLEVBQUVPLEdBQUcsRUFBRWQsSUFBSTtJQUM3QyxPQUFPTyxFQUFFSyxPQUFPLENBQUNmLFFBQVEsQ0FBQyw0QkFBNEJVLEVBQUVLLE9BQU8sQ0FBQ2YsUUFBUSxDQUFDLDBCQUNuRSxJQUFJa0IsTUFBTSxDQUFDLFlBQVksRUFBRWYsS0FBSyxZQUFZLEVBQUVjLElBQUksQ0FBQyxJQUNqRFA7QUFDVixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9lcnJvci5qcz81OTU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFLCBSRVNFUlZFRF9FUlJPUl9DT0RFUywgU1RBTkRBUkRfRVJST1JfTUFQLCBERUZBVUxUX0VSUk9SLCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGlzU2VydmVyRXJyb3JDb2RlKGNvZGUpIHtcbiAgICByZXR1cm4gY29kZSA8PSBTRVJWRVJfRVJST1JfQ09ERV9SQU5HRVswXSAmJiBjb2RlID49IFNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFWzFdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUmVzZXJ2ZWRFcnJvckNvZGUoY29kZSkge1xuICAgIHJldHVybiBSRVNFUlZFRF9FUlJPUl9DT0RFUy5pbmNsdWRlcyhjb2RlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkRXJyb3JDb2RlKGNvZGUpIHtcbiAgICByZXR1cm4gdHlwZW9mIGNvZGUgPT09IFwibnVtYmVyXCI7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RXJyb3IodHlwZSkge1xuICAgIGlmICghT2JqZWN0LmtleXMoU1RBTkRBUkRfRVJST1JfTUFQKS5pbmNsdWRlcyh0eXBlKSkge1xuICAgICAgICByZXR1cm4gU1RBTkRBUkRfRVJST1JfTUFQW0RFRkFVTFRfRVJST1JdO1xuICAgIH1cbiAgICByZXR1cm4gU1RBTkRBUkRfRVJST1JfTUFQW3R5cGVdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEVycm9yQnlDb2RlKGNvZGUpIHtcbiAgICBjb25zdCBtYXRjaCA9IE9iamVjdC52YWx1ZXMoU1RBTkRBUkRfRVJST1JfTUFQKS5maW5kKGUgPT4gZS5jb2RlID09PSBjb2RlKTtcbiAgICBpZiAoIW1hdGNoKSB7XG4gICAgICAgIHJldHVybiBTVEFOREFSRF9FUlJPUl9NQVBbREVGQVVMVF9FUlJPUl07XG4gICAgfVxuICAgIHJldHVybiBtYXRjaDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUpzb25ScGNFcnJvcihyZXNwb25zZSkge1xuICAgIGlmICh0eXBlb2YgcmVzcG9uc2UuZXJyb3IuY29kZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXR1cm4geyB2YWxpZDogZmFsc2UsIGVycm9yOiBcIk1pc3NpbmcgY29kZSBmb3IgSlNPTi1SUEMgZXJyb3JcIiB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJlc3BvbnNlLmVycm9yLm1lc3NhZ2UgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBlcnJvcjogXCJNaXNzaW5nIG1lc3NhZ2UgZm9yIEpTT04tUlBDIGVycm9yXCIgfTtcbiAgICB9XG4gICAgaWYgKCFpc1ZhbGlkRXJyb3JDb2RlKHJlc3BvbnNlLmVycm9yLmNvZGUpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWxpZDogZmFsc2UsXG4gICAgICAgICAgICBlcnJvcjogYEludmFsaWQgZXJyb3IgY29kZSB0eXBlIGZvciBKU09OLVJQQzogJHtyZXNwb25zZS5lcnJvci5jb2RlfWAsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChpc1Jlc2VydmVkRXJyb3JDb2RlKHJlc3BvbnNlLmVycm9yLmNvZGUpKSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gZ2V0RXJyb3JCeUNvZGUocmVzcG9uc2UuZXJyb3IuY29kZSk7XG4gICAgICAgIGlmIChlcnJvci5tZXNzYWdlICE9PSBTVEFOREFSRF9FUlJPUl9NQVBbREVGQVVMVF9FUlJPUl0ubWVzc2FnZSAmJlxuICAgICAgICAgICAgcmVzcG9uc2UuZXJyb3IubWVzc2FnZSA9PT0gZXJyb3IubWVzc2FnZSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB2YWxpZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgZXJyb3I6IGBJbnZhbGlkIGVycm9yIGNvZGUgbWVzc2FnZSBmb3IgSlNPTi1SUEM6ICR7cmVzcG9uc2UuZXJyb3IuY29kZX1gLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyB2YWxpZDogdHJ1ZSB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ29ubmVjdGlvbkVycm9yKGUsIHVybCwgdHlwZSkge1xuICAgIHJldHVybiBlLm1lc3NhZ2UuaW5jbHVkZXMoXCJnZXRhZGRyaW5mbyBFTk9URk9VTkRcIikgfHwgZS5tZXNzYWdlLmluY2x1ZGVzKFwiY29ubmVjdCBFQ09OTlJFRlVTRURcIilcbiAgICAgICAgPyBuZXcgRXJyb3IoYFVuYXZhaWxhYmxlICR7dHlwZX0gUlBDIHVybCBhdCAke3VybH1gKVxuICAgICAgICA6IGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5qcy5tYXAiXSwibmFtZXMiOlsiU0VSVkVSX0VSUk9SX0NPREVfUkFOR0UiLCJSRVNFUlZFRF9FUlJPUl9DT0RFUyIsIlNUQU5EQVJEX0VSUk9SX01BUCIsIkRFRkFVTFRfRVJST1IiLCJpc1NlcnZlckVycm9yQ29kZSIsImNvZGUiLCJpc1Jlc2VydmVkRXJyb3JDb2RlIiwiaW5jbHVkZXMiLCJpc1ZhbGlkRXJyb3JDb2RlIiwiZ2V0RXJyb3IiLCJ0eXBlIiwiT2JqZWN0Iiwia2V5cyIsImdldEVycm9yQnlDb2RlIiwibWF0Y2giLCJ2YWx1ZXMiLCJmaW5kIiwiZSIsInZhbGlkYXRlSnNvblJwY0Vycm9yIiwicmVzcG9uc2UiLCJlcnJvciIsInZhbGlkIiwibWVzc2FnZSIsInBhcnNlQ29ubmVjdGlvbkVycm9yIiwidXJsIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatErrorMessage: () => (/* binding */ formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* binding */ formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* binding */ formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* binding */ formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* binding */ getBigIntRpcId),\n/* harmony export */   payloadId: () => (/* binding */ payloadId)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\n\nfunction payloadId(entropy = 3) {\n    const date = Date.now() * Math.pow(10, entropy);\n    const extra = Math.floor(Math.random() * Math.pow(10, entropy));\n    return date + extra;\n}\nfunction getBigIntRpcId(entropy = 6) {\n    return BigInt(payloadId(entropy));\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data)\n    };\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.SERVER_ERROR)), {\n            message: error\n        });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if ((0,_error__WEBPACK_IMPORTED_MODULE_0__.isReservedErrorCode)(error.code)) {\n        error = (0,_error__WEBPACK_IMPORTED_MODULE_0__.getErrorByCode)(error.code);\n    }\n    return error;\n} //# sourceMappingURL=format.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9mb3JtYXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBd0U7QUFDYjtBQUNwRCxTQUFTSyxVQUFVQyxVQUFVLENBQUM7SUFDakMsTUFBTUMsT0FBT0MsS0FBS0MsR0FBRyxLQUFLQyxLQUFLQyxHQUFHLENBQUMsSUFBSUw7SUFDdkMsTUFBTU0sUUFBUUYsS0FBS0csS0FBSyxDQUFDSCxLQUFLSSxNQUFNLEtBQUtKLEtBQUtDLEdBQUcsQ0FBQyxJQUFJTDtJQUN0RCxPQUFPQyxPQUFPSztBQUNsQjtBQUNPLFNBQVNHLGVBQWVULFVBQVUsQ0FBQztJQUN0QyxPQUFPVSxPQUFPWCxVQUFVQztBQUM1QjtBQUNPLFNBQVNXLHFCQUFxQkMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLEVBQUU7SUFDbkQsT0FBTztRQUNIQSxJQUFJQSxNQUFNZjtRQUNWZ0IsU0FBUztRQUNUSDtRQUNBQztJQUNKO0FBQ0o7QUFDTyxTQUFTRyxvQkFBb0JGLEVBQUUsRUFBRUcsTUFBTTtJQUMxQyxPQUFPO1FBQ0hIO1FBQ0FDLFNBQVM7UUFDVEU7SUFDSjtBQUNKO0FBQ08sU0FBU0MsbUJBQW1CSixFQUFFLEVBQUVLLEtBQUssRUFBRUMsSUFBSTtJQUM5QyxPQUFPO1FBQ0hOO1FBQ0FDLFNBQVM7UUFDVEksT0FBT0UsbUJBQW1CRixPQUFPQztJQUNyQztBQUNKO0FBQ08sU0FBU0MsbUJBQW1CRixLQUFLLEVBQUVDLElBQUk7SUFDMUMsSUFBSSxPQUFPRCxVQUFVLGFBQWE7UUFDOUIsT0FBT3pCLGdEQUFRQSxDQUFDRyxzREFBY0E7SUFDbEM7SUFDQSxJQUFJLE9BQU9zQixVQUFVLFVBQVU7UUFDM0JBLFFBQVFHLE9BQU9DLE1BQU0sQ0FBQ0QsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBRzdCLGdEQUFRQSxDQUFDSSxvREFBWUEsSUFBSTtZQUFFMEIsU0FBU0w7UUFBTTtJQUN0RjtJQUNBLElBQUksT0FBT0MsU0FBUyxhQUFhO1FBQzdCRCxNQUFNQyxJQUFJLEdBQUdBO0lBQ2pCO0lBQ0EsSUFBSXhCLDJEQUFtQkEsQ0FBQ3VCLE1BQU1NLElBQUksR0FBRztRQUNqQ04sUUFBUXhCLHNEQUFjQSxDQUFDd0IsTUFBTU0sSUFBSTtJQUNyQztJQUNBLE9BQU9OO0FBQ1gsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZm9ybWF0LmpzPzI1MDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RXJyb3IsIGdldEVycm9yQnlDb2RlLCBpc1Jlc2VydmVkRXJyb3JDb2RlIH0gZnJvbSBcIi4vZXJyb3JcIjtcbmltcG9ydCB7IElOVEVSTkFMX0VSUk9SLCBTRVJWRVJfRVJST1IgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmV4cG9ydCBmdW5jdGlvbiBwYXlsb2FkSWQoZW50cm9weSA9IDMpIHtcbiAgICBjb25zdCBkYXRlID0gRGF0ZS5ub3coKSAqIE1hdGgucG93KDEwLCBlbnRyb3B5KTtcbiAgICBjb25zdCBleHRyYSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1hdGgucG93KDEwLCBlbnRyb3B5KSk7XG4gICAgcmV0dXJuIGRhdGUgKyBleHRyYTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRCaWdJbnRScGNJZChlbnRyb3B5ID0gNikge1xuICAgIHJldHVybiBCaWdJbnQocGF5bG9hZElkKGVudHJvcHkpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRKc29uUnBjUmVxdWVzdChtZXRob2QsIHBhcmFtcywgaWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBpZDogaWQgfHwgcGF5bG9hZElkKCksXG4gICAgICAgIGpzb25ycGM6IFwiMi4wXCIsXG4gICAgICAgIG1ldGhvZCxcbiAgICAgICAgcGFyYW1zLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0SnNvblJwY1Jlc3VsdChpZCwgcmVzdWx0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaWQsXG4gICAgICAgIGpzb25ycGM6IFwiMi4wXCIsXG4gICAgICAgIHJlc3VsdCxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEpzb25ScGNFcnJvcihpZCwgZXJyb3IsIGRhdGEpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBpZCxcbiAgICAgICAganNvbnJwYzogXCIyLjBcIixcbiAgICAgICAgZXJyb3I6IGZvcm1hdEVycm9yTWVzc2FnZShlcnJvciwgZGF0YSksXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRFcnJvck1lc3NhZ2UoZXJyb3IsIGRhdGEpIHtcbiAgICBpZiAodHlwZW9mIGVycm9yID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiBnZXRFcnJvcihJTlRFUk5BTF9FUlJPUik7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZXJyb3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgZXJyb3IgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGdldEVycm9yKFNFUlZFUl9FUlJPUikpLCB7IG1lc3NhZ2U6IGVycm9yIH0pO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRhdGEgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgZXJyb3IuZGF0YSA9IGRhdGE7XG4gICAgfVxuICAgIGlmIChpc1Jlc2VydmVkRXJyb3JDb2RlKGVycm9yLmNvZGUpKSB7XG4gICAgICAgIGVycm9yID0gZ2V0RXJyb3JCeUNvZGUoZXJyb3IuY29kZSk7XG4gICAgfVxuICAgIHJldHVybiBlcnJvcjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvcm1hdC5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0RXJyb3IiLCJnZXRFcnJvckJ5Q29kZSIsImlzUmVzZXJ2ZWRFcnJvckNvZGUiLCJJTlRFUk5BTF9FUlJPUiIsIlNFUlZFUl9FUlJPUiIsInBheWxvYWRJZCIsImVudHJvcHkiLCJkYXRlIiwiRGF0ZSIsIm5vdyIsIk1hdGgiLCJwb3ciLCJleHRyYSIsImZsb29yIiwicmFuZG9tIiwiZ2V0QmlnSW50UnBjSWQiLCJCaWdJbnQiLCJmb3JtYXRKc29uUnBjUmVxdWVzdCIsIm1ldGhvZCIsInBhcmFtcyIsImlkIiwianNvbnJwYyIsImZvcm1hdEpzb25ScGNSZXN1bHQiLCJyZXN1bHQiLCJmb3JtYXRKc29uUnBjRXJyb3IiLCJlcnJvciIsImRhdGEiLCJmb3JtYXRFcnJvck1lc3NhZ2UiLCJPYmplY3QiLCJhc3NpZ24iLCJtZXNzYWdlIiwiY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR),\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcProvider),\n/* harmony export */   INTERNAL_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP),\n/* harmony export */   formatErrorMessage: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId),\n/* harmony export */   getError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getError),\n/* harmony export */   getErrorByCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getErrorByCode),\n/* harmony export */   isHttpUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isHttpUrl),\n/* harmony export */   isJsonRpcError: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcValidationInvalid),\n/* harmony export */   isLocalhostUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isLocalhostUrl),\n/* harmony export */   isReservedErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isServerErrorCode),\n/* harmony export */   isValidDefaultRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidDefaultRoute),\n/* harmony export */   isValidErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isValidErrorCode),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidWildcardRoute),\n/* harmony export */   isWsUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isWsUrl),\n/* harmony export */   parseConnectionError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.parseConnectionError),\n/* harmony export */   payloadId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.payloadId),\n/* harmony export */   validateJsonRpcError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./env */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _env__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"DEFAULT_ERROR\",\"INTERNAL_ERROR\",\"INVALID_PARAMS\",\"INVALID_REQUEST\",\"METHOD_NOT_FOUND\",\"PARSE_ERROR\",\"RESERVED_ERROR_CODES\",\"SERVER_ERROR\",\"SERVER_ERROR_CODE_RANGE\",\"STANDARD_ERROR_MAP\",\"getError\",\"getErrorByCode\",\"isReservedErrorCode\",\"isServerErrorCode\",\"isValidErrorCode\",\"parseConnectionError\",\"validateJsonRpcError\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _env__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\");\n/* harmony import */ var _routing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routing */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./url */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\");\n/* harmony import */ var _validators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./validators */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTRCO0FBQ0o7QUFDRjtBQUNHO0FBQ0M7QUFDRjtBQUNGO0FBQ08sQ0FDN0IsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL2luZGV4LmpzPzY4MGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9lcnJvclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vZW52XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9mb3JtYXRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3JvdXRpbmdcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R5cGVzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91cmxcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3ZhbGlkYXRvcnNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isValidDefaultRoute: () => (/* binding */ isValidDefaultRoute),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* binding */ isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* binding */ isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* binding */ isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* binding */ isValidWildcardRoute)\n/* harmony export */ });\nfunction isValidRoute(route) {\n    if (route.includes(\"*\")) {\n        return isValidWildcardRoute(route);\n    }\n    if (/\\W/g.test(route)) {\n        return false;\n    }\n    return true;\n}\nfunction isValidDefaultRoute(route) {\n    return route === \"*\";\n}\nfunction isValidWildcardRoute(route) {\n    if (isValidDefaultRoute(route)) {\n        return true;\n    }\n    if (!route.includes(\"*\")) {\n        return false;\n    }\n    if (route.split(\"*\").length !== 2) {\n        return false;\n    }\n    if (route.split(\"*\").filter((x)=>x.trim() === \"\").length !== 1) {\n        return false;\n    }\n    return true;\n}\nfunction isValidLeadingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[0].trim();\n}\nfunction isValidTrailingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[1].trim();\n} //# sourceMappingURL=routing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9yb3V0aW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU8sU0FBU0EsYUFBYUMsS0FBSztJQUM5QixJQUFJQSxNQUFNQyxRQUFRLENBQUMsTUFBTTtRQUNyQixPQUFPQyxxQkFBcUJGO0lBQ2hDO0lBQ0EsSUFBSSxNQUFNRyxJQUFJLENBQUNILFFBQVE7UUFDbkIsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYO0FBQ08sU0FBU0ksb0JBQW9CSixLQUFLO0lBQ3JDLE9BQU9BLFVBQVU7QUFDckI7QUFDTyxTQUFTRSxxQkFBcUJGLEtBQUs7SUFDdEMsSUFBSUksb0JBQW9CSixRQUFRO1FBQzVCLE9BQU87SUFDWDtJQUNBLElBQUksQ0FBQ0EsTUFBTUMsUUFBUSxDQUFDLE1BQU07UUFDdEIsT0FBTztJQUNYO0lBQ0EsSUFBSUQsTUFBTUssS0FBSyxDQUFDLEtBQUtDLE1BQU0sS0FBSyxHQUFHO1FBQy9CLE9BQU87SUFDWDtJQUNBLElBQUlOLE1BQU1LLEtBQUssQ0FBQyxLQUFLRSxNQUFNLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLElBQUksT0FBTyxJQUFJSCxNQUFNLEtBQUssR0FBRztRQUM1RCxPQUFPO0lBQ1g7SUFDQSxPQUFPO0FBQ1g7QUFDTyxTQUFTSSw0QkFBNEJWLEtBQUs7SUFDN0MsT0FBTyxDQUFDSSxvQkFBb0JKLFVBQVVFLHFCQUFxQkYsVUFBVSxDQUFDQSxNQUFNSyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQ0ksSUFBSTtBQUNsRztBQUNPLFNBQVNFLDZCQUE2QlgsS0FBSztJQUM5QyxPQUFPLENBQUNJLG9CQUFvQkosVUFBVUUscUJBQXFCRixVQUFVLENBQUNBLE1BQU1LLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDSSxJQUFJO0FBQ2xHLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL3JvdXRpbmcuanM/OTYwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNWYWxpZFJvdXRlKHJvdXRlKSB7XG4gICAgaWYgKHJvdXRlLmluY2x1ZGVzKFwiKlwiKSkge1xuICAgICAgICByZXR1cm4gaXNWYWxpZFdpbGRjYXJkUm91dGUocm91dGUpO1xuICAgIH1cbiAgICBpZiAoL1xcVy9nLnRlc3Qocm91dGUpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZERlZmF1bHRSb3V0ZShyb3V0ZSkge1xuICAgIHJldHVybiByb3V0ZSA9PT0gXCIqXCI7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZFdpbGRjYXJkUm91dGUocm91dGUpIHtcbiAgICBpZiAoaXNWYWxpZERlZmF1bHRSb3V0ZShyb3V0ZSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmICghcm91dGUuaW5jbHVkZXMoXCIqXCIpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHJvdXRlLnNwbGl0KFwiKlwiKS5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAocm91dGUuc3BsaXQoXCIqXCIpLmZpbHRlcih4ID0+IHgudHJpbSgpID09PSBcIlwiKS5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkTGVhZGluZ1dpbGRjYXJkUm91dGUocm91dGUpIHtcbiAgICByZXR1cm4gIWlzVmFsaWREZWZhdWx0Um91dGUocm91dGUpICYmIGlzVmFsaWRXaWxkY2FyZFJvdXRlKHJvdXRlKSAmJiAhcm91dGUuc3BsaXQoXCIqXCIpWzBdLnRyaW0oKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkVHJhaWxpbmdXaWxkY2FyZFJvdXRlKHJvdXRlKSB7XG4gICAgcmV0dXJuICFpc1ZhbGlkRGVmYXVsdFJvdXRlKHJvdXRlKSAmJiBpc1ZhbGlkV2lsZGNhcmRSb3V0ZShyb3V0ZSkgJiYgIXJvdXRlLnNwbGl0KFwiKlwiKVsxXS50cmltKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb3V0aW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJpc1ZhbGlkUm91dGUiLCJyb3V0ZSIsImluY2x1ZGVzIiwiaXNWYWxpZFdpbGRjYXJkUm91dGUiLCJ0ZXN0IiwiaXNWYWxpZERlZmF1bHRSb3V0ZSIsInNwbGl0IiwibGVuZ3RoIiwiZmlsdGVyIiwieCIsInRyaW0iLCJpc1ZhbGlkTGVhZGluZ1dpbGRjYXJkUm91dGUiLCJpc1ZhbGlkVHJhaWxpbmdXaWxkY2FyZFJvdXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcProvider)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/jsonrpc-types */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js\");\n //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2QyxDQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdHlwZXMuanM/MjYyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpUrl: () => (/* binding */ isHttpUrl),\n/* harmony export */   isLocalhostUrl: () => (/* binding */ isLocalhostUrl),\n/* harmony export */   isWsUrl: () => (/* binding */ isWsUrl)\n/* harmony export */ });\nconst HTTP_REGEX = \"^https?:\";\nconst WS_REGEX = \"^wss?:\";\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length) return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\") return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, HTTP_REGEX);\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, WS_REGEX);\n}\nfunction isLocalhostUrl(url) {\n    return new RegExp(\"wss?://localhost(:d{2,5})?\").test(url);\n} //# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS91cmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsTUFBTUEsYUFBYTtBQUNuQixNQUFNQyxXQUFXO0FBQ2pCLFNBQVNDLGVBQWVDLEdBQUc7SUFDdkIsTUFBTUMsVUFBVUQsSUFBSUUsS0FBSyxDQUFDLElBQUlDLE9BQU8sU0FBUztJQUM5QyxJQUFJLENBQUNGLFdBQVcsQ0FBQ0EsUUFBUUcsTUFBTSxFQUMzQjtJQUNKLE9BQU9ILE9BQU8sQ0FBQyxFQUFFO0FBQ3JCO0FBQ0EsU0FBU0ksbUJBQW1CTCxHQUFHLEVBQUVNLEtBQUs7SUFDbEMsTUFBTUMsV0FBV1IsZUFBZUM7SUFDaEMsSUFBSSxPQUFPTyxhQUFhLGFBQ3BCLE9BQU87SUFDWCxPQUFPLElBQUlKLE9BQU9HLE9BQU9FLElBQUksQ0FBQ0Q7QUFDbEM7QUFDTyxTQUFTRSxVQUFVVCxHQUFHO0lBQ3pCLE9BQU9LLG1CQUFtQkwsS0FBS0g7QUFDbkM7QUFDTyxTQUFTYSxRQUFRVixHQUFHO0lBQ3ZCLE9BQU9LLG1CQUFtQkwsS0FBS0Y7QUFDbkM7QUFDTyxTQUFTYSxlQUFlWCxHQUFHO0lBQzlCLE9BQU8sSUFBSUcsT0FBTyw4QkFBOEJLLElBQUksQ0FBQ1I7QUFDekQsRUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdXJsLmpzPzgzMjgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSFRUUF9SRUdFWCA9IFwiXmh0dHBzPzpcIjtcbmNvbnN0IFdTX1JFR0VYID0gXCJed3NzPzpcIjtcbmZ1bmN0aW9uIGdldFVybFByb3RvY29sKHVybCkge1xuICAgIGNvbnN0IG1hdGNoZXMgPSB1cmwubWF0Y2gobmV3IFJlZ0V4cCgvXlxcdys6LywgXCJnaVwiKSk7XG4gICAgaWYgKCFtYXRjaGVzIHx8ICFtYXRjaGVzLmxlbmd0aClcbiAgICAgICAgcmV0dXJuO1xuICAgIHJldHVybiBtYXRjaGVzWzBdO1xufVxuZnVuY3Rpb24gbWF0Y2hSZWdleFByb3RvY29sKHVybCwgcmVnZXgpIHtcbiAgICBjb25zdCBwcm90b2NvbCA9IGdldFVybFByb3RvY29sKHVybCk7XG4gICAgaWYgKHR5cGVvZiBwcm90b2NvbCA9PT0gXCJ1bmRlZmluZWRcIilcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiBuZXcgUmVnRXhwKHJlZ2V4KS50ZXN0KHByb3RvY29sKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0h0dHBVcmwodXJsKSB7XG4gICAgcmV0dXJuIG1hdGNoUmVnZXhQcm90b2NvbCh1cmwsIEhUVFBfUkVHRVgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzV3NVcmwodXJsKSB7XG4gICAgcmV0dXJuIG1hdGNoUmVnZXhQcm90b2NvbCh1cmwsIFdTX1JFR0VYKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0xvY2FsaG9zdFVybCh1cmwpIHtcbiAgICByZXR1cm4gbmV3IFJlZ0V4cChcIndzcz86Ly9sb2NhbGhvc3QoOmR7Miw1fSk/XCIpLnRlc3QodXJsKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVybC5qcy5tYXAiXSwibmFtZXMiOlsiSFRUUF9SRUdFWCIsIldTX1JFR0VYIiwiZ2V0VXJsUHJvdG9jb2wiLCJ1cmwiLCJtYXRjaGVzIiwibWF0Y2giLCJSZWdFeHAiLCJsZW5ndGgiLCJtYXRjaFJlZ2V4UHJvdG9jb2wiLCJyZWdleCIsInByb3RvY29sIiwidGVzdCIsImlzSHR0cFVybCIsImlzV3NVcmwiLCJpc0xvY2FsaG9zdFVybCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isJsonRpcError: () => (/* binding */ isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* binding */ isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* binding */ isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* binding */ isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* binding */ isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* binding */ isJsonRpcValidationInvalid)\n/* harmony export */ });\nfunction isJsonRpcPayload(payload) {\n    return typeof payload === \"object\" && \"id\" in payload && \"jsonrpc\" in payload && payload.jsonrpc === \"2.0\";\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nfunction isJsonRpcValidationInvalid(validation) {\n    return \"error\" in validation && validation.valid === false;\n} //# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFPLFNBQVNBLGlCQUFpQkMsT0FBTztJQUNwQyxPQUFRLE9BQU9BLFlBQVksWUFDdkIsUUFBUUEsV0FDUixhQUFhQSxXQUNiQSxRQUFRQyxPQUFPLEtBQUs7QUFDNUI7QUFDTyxTQUFTQyxpQkFBaUJGLE9BQU87SUFDcEMsT0FBT0QsaUJBQWlCQyxZQUFZLFlBQVlBO0FBQ3BEO0FBQ08sU0FBU0csa0JBQWtCSCxPQUFPO0lBQ3JDLE9BQU9ELGlCQUFpQkMsWUFBYUksQ0FBQUEsZ0JBQWdCSixZQUFZSyxlQUFlTCxRQUFPO0FBQzNGO0FBQ08sU0FBU0ksZ0JBQWdCSixPQUFPO0lBQ25DLE9BQU8sWUFBWUE7QUFDdkI7QUFDTyxTQUFTSyxlQUFlTCxPQUFPO0lBQ2xDLE9BQU8sV0FBV0E7QUFDdEI7QUFDTyxTQUFTTSwyQkFBMkJDLFVBQVU7SUFDakQsT0FBTyxXQUFXQSxjQUFjQSxXQUFXQyxLQUFLLEtBQUs7QUFDekQsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdmFsaWRhdG9ycy5qcz80NzRiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0pzb25ScGNQYXlsb2FkKHBheWxvYWQpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBwYXlsb2FkID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgIFwiaWRcIiBpbiBwYXlsb2FkICYmXG4gICAgICAgIFwianNvbnJwY1wiIGluIHBheWxvYWQgJiZcbiAgICAgICAgcGF5bG9hZC5qc29ucnBjID09PSBcIjIuMFwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0pzb25ScGNSZXF1ZXN0KHBheWxvYWQpIHtcbiAgICByZXR1cm4gaXNKc29uUnBjUGF5bG9hZChwYXlsb2FkKSAmJiBcIm1ldGhvZFwiIGluIHBheWxvYWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNKc29uUnBjUmVzcG9uc2UocGF5bG9hZCkge1xuICAgIHJldHVybiBpc0pzb25ScGNQYXlsb2FkKHBheWxvYWQpICYmIChpc0pzb25ScGNSZXN1bHQocGF5bG9hZCkgfHwgaXNKc29uUnBjRXJyb3IocGF5bG9hZCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY1Jlc3VsdChwYXlsb2FkKSB7XG4gICAgcmV0dXJuIFwicmVzdWx0XCIgaW4gcGF5bG9hZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0pzb25ScGNFcnJvcihwYXlsb2FkKSB7XG4gICAgcmV0dXJuIFwiZXJyb3JcIiBpbiBwYXlsb2FkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY1ZhbGlkYXRpb25JbnZhbGlkKHZhbGlkYXRpb24pIHtcbiAgICByZXR1cm4gXCJlcnJvclwiIGluIHZhbGlkYXRpb24gJiYgdmFsaWRhdGlvbi52YWxpZCA9PT0gZmFsc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YWxpZGF0b3JzLmpzLm1hcCJdLCJuYW1lcyI6WyJpc0pzb25ScGNQYXlsb2FkIiwicGF5bG9hZCIsImpzb25ycGMiLCJpc0pzb25ScGNSZXF1ZXN0IiwiaXNKc29uUnBjUmVzcG9uc2UiLCJpc0pzb25ScGNSZXN1bHQiLCJpc0pzb25ScGNFcnJvciIsImlzSnNvblJwY1ZhbGlkYXRpb25JbnZhbGlkIiwidmFsaWRhdGlvbiIsInZhbGlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WsConnection: () => (/* binding */ f),\n/* harmony export */   \"default\": () => (/* binding */ f)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\nconst w = ()=>typeof WebSocket < \"u\" ? WebSocket : typeof global < \"u\" && typeof global.WebSocket < \"u\" ? global.WebSocket :  false ? 0 : typeof self < \"u\" && typeof self.WebSocket < \"u\" ? self.WebSocket : __webpack_require__(/*! ws */ \"(ssr)/./node_modules/ws/index.js\"), b = ()=>typeof WebSocket < \"u\" || typeof global < \"u\" && typeof global.WebSocket < \"u\" ||  false && 0 || typeof self < \"u\" && typeof self.WebSocket < \"u\", a = (c)=>c.split(\"?\")[0], h = 10, S = w();\nclass f {\n    constructor(e){\n        if (this.url = e, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.registering = !1, !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);\n        this.url = e;\n    }\n    get connected() {\n        return typeof this.socket < \"u\";\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async open(e = this.url) {\n        await this.register(e);\n    }\n    async close() {\n        return new Promise((e, t)=>{\n            if (typeof this.socket > \"u\") {\n                t(new Error(\"Connection already closed\"));\n                return;\n            }\n            this.socket.onclose = (n)=>{\n                this.onClose(n), e();\n            }, this.socket.close();\n        });\n    }\n    async send(e) {\n        typeof this.socket > \"u\" && (this.socket = await this.register());\n        try {\n            this.socket.send((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)(e));\n        } catch (t) {\n            this.onError(e.id, t);\n        }\n    }\n    register(e = this.url) {\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);\n        if (this.registering) {\n            const t = this.events.getMaxListeners();\n            return (this.events.listenerCount(\"register_error\") >= t || this.events.listenerCount(\"open\") >= t) && this.events.setMaxListeners(t + 1), new Promise((n, o)=>{\n                this.events.once(\"register_error\", (s)=>{\n                    this.resetMaxListeners(), o(s);\n                }), this.events.once(\"open\", ()=>{\n                    if (this.resetMaxListeners(), typeof this.socket > \"u\") return o(new Error(\"WebSocket connection is missing or invalid\"));\n                    n(this.socket);\n                });\n            });\n        }\n        return this.url = e, this.registering = !0, new Promise((t, n)=>{\n            const o = new URLSearchParams(e).get(\"origin\"), s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isReactNative)() ? {\n                headers: {\n                    origin: o\n                }\n            } : {\n                rejectUnauthorized: !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isLocalhostUrl)(e)\n            }, i = new S(e, [], s);\n            b() ? i.onerror = (r)=>{\n                const l = r;\n                n(this.emitError(l.error));\n            } : i.on(\"error\", (r)=>{\n                n(this.emitError(r));\n            }), i.onopen = ()=>{\n                this.onOpen(i), t(i);\n            };\n        });\n    }\n    onOpen(e) {\n        e.onmessage = (t)=>this.onPayload(t), e.onclose = (t)=>this.onClose(t), this.socket = e, this.registering = !1, this.events.emit(\"open\");\n    }\n    onClose(e) {\n        this.socket = void 0, this.registering = !1, this.events.emit(\"close\", e);\n    }\n    onPayload(e) {\n        if (typeof e.data > \"u\") return;\n        const t = typeof e.data == \"string\" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", t);\n    }\n    onError(e, t) {\n        const n = this.parseError(t), o = n.message || n.toString(), s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.formatJsonRpcError)(e, o);\n        this.events.emit(\"payload\", s);\n    }\n    parseError(e, t = this.url) {\n        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.parseConnectionError)(e, a(t), \"WS\");\n    }\n    resetMaxListeners() {\n        this.events.getMaxListeners() > h && this.events.setMaxListeners(h);\n    }\n    emitError(e) {\n        const t = this.parseError(new Error(e?.message || `WebSocket connection failed for host: ${a(this.url)}`));\n        return this.events.emit(\"register_error\", t), t;\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNDO0FBQWdGO0FBQWdKO0FBQUEsTUFBTWdCLElBQUUsSUFBSSxPQUFPQyxZQUFVLE1BQUlBLFlBQVUsT0FBT0MsU0FBTyxPQUFLLE9BQU9BLE9BQU9ELFNBQVMsR0FBQyxNQUFJQyxPQUFPRCxTQUFTLEdBQUMsTUFBOEMsR0FBQ0UsQ0FBZ0IsR0FBQyxPQUFPQyxPQUFLLE9BQUssT0FBT0EsS0FBS0gsU0FBUyxHQUFDLE1BQUlHLEtBQUtILFNBQVMsR0FBQ0ksbUJBQU9BLENBQUMsNENBQUksR0FBRUMsSUFBRSxJQUFJLE9BQU9MLFlBQVUsT0FBSyxPQUFPQyxTQUFPLE9BQUssT0FBT0EsT0FBT0QsU0FBUyxHQUFDLE9BQUssTUFBaUIsSUFBRSxDQUEyQixJQUFFLE9BQU9HLE9BQUssT0FBSyxPQUFPQSxLQUFLSCxTQUFTLEdBQUMsS0FBSU0sSUFBRUMsQ0FBQUEsSUFBR0EsRUFBRUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUNDLElBQUUsSUFBR0MsSUFBRVg7QUFBSSxNQUFNWTtJQUFFQyxZQUFZQyxDQUFDLENBQUM7UUFBQyxJQUFHLElBQUksQ0FBQ0MsR0FBRyxHQUFDRCxHQUFFLElBQUksQ0FBQ0UsTUFBTSxHQUFDLElBQUkvQixnREFBQ0EsRUFBQyxJQUFJLENBQUNnQyxXQUFXLEdBQUMsQ0FBQyxHQUFFLENBQUMxQixxRUFBQ0EsQ0FBQ3VCLElBQUcsTUFBTSxJQUFJSSxNQUFNLENBQUMsMERBQTBELEVBQUVKLEVBQUUsQ0FBQztRQUFFLElBQUksQ0FBQ0MsR0FBRyxHQUFDRDtJQUFDO0lBQUMsSUFBSUssWUFBVztRQUFDLE9BQU8sT0FBTyxJQUFJLENBQUNDLE1BQU0sR0FBQztJQUFHO0lBQUMsSUFBSUMsYUFBWTtRQUFDLE9BQU8sSUFBSSxDQUFDSixXQUFXO0lB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LFFBQVFyQixDQUFDLEVBQUNTLENBQUMsRUFBQztRQUFDLE1BQU1TLElBQUUsSUFBSSxDQUFDNEIsVUFBVSxDQUFDckMsSUFBR2lCLElBQUVSLEVBQUU2QixPQUFPLElBQUU3QixFQUFFOEIsUUFBUSxJQUFHckIsSUFBRTVDLGdGQUFDQSxDQUFDaUIsR0FBRTBCO1FBQUcsSUFBSSxDQUFDeEIsTUFBTSxDQUFDMEMsSUFBSSxDQUFDLFdBQVVqQjtJQUFFO0lBQUNtQixXQUFXOUMsQ0FBQyxFQUFDUyxJQUFFLElBQUksQ0FBQ1IsR0FBRyxFQUFDO1FBQUMsT0FBT2hCLGtGQUFDQSxDQUFDZSxHQUFFUCxFQUFFZ0IsSUFBRztJQUFLO0lBQUNtQixvQkFBbUI7UUFBQyxJQUFJLENBQUMxQixNQUFNLENBQUNxQixlQUFlLEtBQUczQixLQUFHLElBQUksQ0FBQ00sTUFBTSxDQUFDdUIsZUFBZSxDQUFDN0I7SUFBRTtJQUFDMEMsVUFBVXRDLENBQUMsRUFBQztRQUFDLE1BQU1TLElBQUUsSUFBSSxDQUFDcUMsVUFBVSxDQUFDLElBQUkxQyxNQUFNSixHQUFHK0MsV0FBUyxDQUFDLHNDQUFzQyxFQUFFdEQsRUFBRSxJQUFJLENBQUNRLEdBQUcsRUFBRSxDQUFDO1FBQUcsT0FBTyxJQUFJLENBQUNDLE1BQU0sQ0FBQzBDLElBQUksQ0FBQyxrQkFBaUJuQyxJQUFHQTtJQUFDO0FBQUM7QUFBd0MsQ0FDdmhHLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL2Rpc3QvaW5kZXguZXMuanM/YjYzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7RXZlbnRFbWl0dGVyIGFzIHV9ZnJvbVwiZXZlbnRzXCI7aW1wb3J0e3NhZmVKc29uU3RyaW5naWZ5IGFzIHAsc2FmZUpzb25QYXJzZSBhcyBnfWZyb21cIkB3YWxsZXRjb25uZWN0L3NhZmUtanNvblwiO2ltcG9ydHtpc1dzVXJsIGFzIGQsaXNSZWFjdE5hdGl2ZSBhcyB5LGlzTG9jYWxob3N0VXJsIGFzIG0sZm9ybWF0SnNvblJwY0Vycm9yIGFzIGsscGFyc2VDb25uZWN0aW9uRXJyb3IgYXMgdn1mcm9tXCJAd2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzXCI7Y29uc3Qgdz0oKT0+dHlwZW9mIFdlYlNvY2tldDxcInVcIj9XZWJTb2NrZXQ6dHlwZW9mIGdsb2JhbDxcInVcIiYmdHlwZW9mIGdsb2JhbC5XZWJTb2NrZXQ8XCJ1XCI/Z2xvYmFsLldlYlNvY2tldDp0eXBlb2Ygd2luZG93PFwidVwiJiZ0eXBlb2Ygd2luZG93LldlYlNvY2tldDxcInVcIj93aW5kb3cuV2ViU29ja2V0OnR5cGVvZiBzZWxmPFwidVwiJiZ0eXBlb2Ygc2VsZi5XZWJTb2NrZXQ8XCJ1XCI/c2VsZi5XZWJTb2NrZXQ6cmVxdWlyZShcIndzXCIpLGI9KCk9PnR5cGVvZiBXZWJTb2NrZXQ8XCJ1XCJ8fHR5cGVvZiBnbG9iYWw8XCJ1XCImJnR5cGVvZiBnbG9iYWwuV2ViU29ja2V0PFwidVwifHx0eXBlb2Ygd2luZG93PFwidVwiJiZ0eXBlb2Ygd2luZG93LldlYlNvY2tldDxcInVcInx8dHlwZW9mIHNlbGY8XCJ1XCImJnR5cGVvZiBzZWxmLldlYlNvY2tldDxcInVcIixhPWM9PmMuc3BsaXQoXCI/XCIpWzBdLGg9MTAsUz13KCk7Y2xhc3MgZntjb25zdHJ1Y3RvcihlKXtpZih0aGlzLnVybD1lLHRoaXMuZXZlbnRzPW5ldyB1LHRoaXMucmVnaXN0ZXJpbmc9ITEsIWQoZSkpdGhyb3cgbmV3IEVycm9yKGBQcm92aWRlZCBVUkwgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBXZWJTb2NrZXQgY29ubmVjdGlvbjogJHtlfWApO3RoaXMudXJsPWV9Z2V0IGNvbm5lY3RlZCgpe3JldHVybiB0eXBlb2YgdGhpcy5zb2NrZXQ8XCJ1XCJ9Z2V0IGNvbm5lY3RpbmcoKXtyZXR1cm4gdGhpcy5yZWdpc3RlcmluZ31vbihlLHQpe3RoaXMuZXZlbnRzLm9uKGUsdCl9b25jZShlLHQpe3RoaXMuZXZlbnRzLm9uY2UoZSx0KX1vZmYoZSx0KXt0aGlzLmV2ZW50cy5vZmYoZSx0KX1yZW1vdmVMaXN0ZW5lcihlLHQpe3RoaXMuZXZlbnRzLnJlbW92ZUxpc3RlbmVyKGUsdCl9YXN5bmMgb3BlbihlPXRoaXMudXJsKXthd2FpdCB0aGlzLnJlZ2lzdGVyKGUpfWFzeW5jIGNsb3NlKCl7cmV0dXJuIG5ldyBQcm9taXNlKChlLHQpPT57aWYodHlwZW9mIHRoaXMuc29ja2V0PlwidVwiKXt0KG5ldyBFcnJvcihcIkNvbm5lY3Rpb24gYWxyZWFkeSBjbG9zZWRcIikpO3JldHVybn10aGlzLnNvY2tldC5vbmNsb3NlPW49Pnt0aGlzLm9uQ2xvc2UobiksZSgpfSx0aGlzLnNvY2tldC5jbG9zZSgpfSl9YXN5bmMgc2VuZChlKXt0eXBlb2YgdGhpcy5zb2NrZXQ+XCJ1XCImJih0aGlzLnNvY2tldD1hd2FpdCB0aGlzLnJlZ2lzdGVyKCkpO3RyeXt0aGlzLnNvY2tldC5zZW5kKHAoZSkpfWNhdGNoKHQpe3RoaXMub25FcnJvcihlLmlkLHQpfX1yZWdpc3RlcihlPXRoaXMudXJsKXtpZighZChlKSl0aHJvdyBuZXcgRXJyb3IoYFByb3ZpZGVkIFVSTCBpcyBub3QgY29tcGF0aWJsZSB3aXRoIFdlYlNvY2tldCBjb25uZWN0aW9uOiAke2V9YCk7aWYodGhpcy5yZWdpc3RlcmluZyl7Y29uc3QgdD10aGlzLmV2ZW50cy5nZXRNYXhMaXN0ZW5lcnMoKTtyZXR1cm4odGhpcy5ldmVudHMubGlzdGVuZXJDb3VudChcInJlZ2lzdGVyX2Vycm9yXCIpPj10fHx0aGlzLmV2ZW50cy5saXN0ZW5lckNvdW50KFwib3BlblwiKT49dCkmJnRoaXMuZXZlbnRzLnNldE1heExpc3RlbmVycyh0KzEpLG5ldyBQcm9taXNlKChuLG8pPT57dGhpcy5ldmVudHMub25jZShcInJlZ2lzdGVyX2Vycm9yXCIscz0+e3RoaXMucmVzZXRNYXhMaXN0ZW5lcnMoKSxvKHMpfSksdGhpcy5ldmVudHMub25jZShcIm9wZW5cIiwoKT0+e2lmKHRoaXMucmVzZXRNYXhMaXN0ZW5lcnMoKSx0eXBlb2YgdGhpcy5zb2NrZXQ+XCJ1XCIpcmV0dXJuIG8obmV3IEVycm9yKFwiV2ViU29ja2V0IGNvbm5lY3Rpb24gaXMgbWlzc2luZyBvciBpbnZhbGlkXCIpKTtuKHRoaXMuc29ja2V0KX0pfSl9cmV0dXJuIHRoaXMudXJsPWUsdGhpcy5yZWdpc3RlcmluZz0hMCxuZXcgUHJvbWlzZSgodCxuKT0+e2NvbnN0IG89bmV3IFVSTFNlYXJjaFBhcmFtcyhlKS5nZXQoXCJvcmlnaW5cIikscz15KCk/e2hlYWRlcnM6e29yaWdpbjpvfX06e3JlamVjdFVuYXV0aG9yaXplZDohbShlKX0saT1uZXcgUyhlLFtdLHMpO2IoKT9pLm9uZXJyb3I9cj0+e2NvbnN0IGw9cjtuKHRoaXMuZW1pdEVycm9yKGwuZXJyb3IpKX06aS5vbihcImVycm9yXCIscj0+e24odGhpcy5lbWl0RXJyb3IocikpfSksaS5vbm9wZW49KCk9Pnt0aGlzLm9uT3BlbihpKSx0KGkpfX0pfW9uT3BlbihlKXtlLm9ubWVzc2FnZT10PT50aGlzLm9uUGF5bG9hZCh0KSxlLm9uY2xvc2U9dD0+dGhpcy5vbkNsb3NlKHQpLHRoaXMuc29ja2V0PWUsdGhpcy5yZWdpc3RlcmluZz0hMSx0aGlzLmV2ZW50cy5lbWl0KFwib3BlblwiKX1vbkNsb3NlKGUpe3RoaXMuc29ja2V0PXZvaWQgMCx0aGlzLnJlZ2lzdGVyaW5nPSExLHRoaXMuZXZlbnRzLmVtaXQoXCJjbG9zZVwiLGUpfW9uUGF5bG9hZChlKXtpZih0eXBlb2YgZS5kYXRhPlwidVwiKXJldHVybjtjb25zdCB0PXR5cGVvZiBlLmRhdGE9PVwic3RyaW5nXCI/ZyhlLmRhdGEpOmUuZGF0YTt0aGlzLmV2ZW50cy5lbWl0KFwicGF5bG9hZFwiLHQpfW9uRXJyb3IoZSx0KXtjb25zdCBuPXRoaXMucGFyc2VFcnJvcih0KSxvPW4ubWVzc2FnZXx8bi50b1N0cmluZygpLHM9ayhlLG8pO3RoaXMuZXZlbnRzLmVtaXQoXCJwYXlsb2FkXCIscyl9cGFyc2VFcnJvcihlLHQ9dGhpcy51cmwpe3JldHVybiB2KGUsYSh0KSxcIldTXCIpfXJlc2V0TWF4TGlzdGVuZXJzKCl7dGhpcy5ldmVudHMuZ2V0TWF4TGlzdGVuZXJzKCk+aCYmdGhpcy5ldmVudHMuc2V0TWF4TGlzdGVuZXJzKGgpfWVtaXRFcnJvcihlKXtjb25zdCB0PXRoaXMucGFyc2VFcnJvcihuZXcgRXJyb3IoZT8ubWVzc2FnZXx8YFdlYlNvY2tldCBjb25uZWN0aW9uIGZhaWxlZCBmb3IgaG9zdDogJHthKHRoaXMudXJsKX1gKSk7cmV0dXJuIHRoaXMuZXZlbnRzLmVtaXQoXCJyZWdpc3Rlcl9lcnJvclwiLHQpLHR9fWV4cG9ydHtmIGFzIFdzQ29ubmVjdGlvbixmIGFzIGRlZmF1bHR9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXMuanMubWFwXG4iXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIiwidSIsInNhZmVKc29uU3RyaW5naWZ5IiwicCIsInNhZmVKc29uUGFyc2UiLCJnIiwiaXNXc1VybCIsImQiLCJpc1JlYWN0TmF0aXZlIiwieSIsImlzTG9jYWxob3N0VXJsIiwibSIsImZvcm1hdEpzb25ScGNFcnJvciIsImsiLCJwYXJzZUNvbm5lY3Rpb25FcnJvciIsInYiLCJ3IiwiV2ViU29ja2V0IiwiZ2xvYmFsIiwid2luZG93Iiwic2VsZiIsInJlcXVpcmUiLCJiIiwiYSIsImMiLCJzcGxpdCIsImgiLCJTIiwiZiIsImNvbnN0cnVjdG9yIiwiZSIsInVybCIsImV2ZW50cyIsInJlZ2lzdGVyaW5nIiwiRXJyb3IiLCJjb25uZWN0ZWQiLCJzb2NrZXQiLCJjb25uZWN0aW5nIiwib24iLCJ0Iiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwib3BlbiIsInJlZ2lzdGVyIiwiY2xvc2UiLCJQcm9taXNlIiwib25jbG9zZSIsIm4iLCJvbkNsb3NlIiwic2VuZCIsIm9uRXJyb3IiLCJpZCIsImdldE1heExpc3RlbmVycyIsImxpc3RlbmVyQ291bnQiLCJzZXRNYXhMaXN0ZW5lcnMiLCJvIiwicyIsInJlc2V0TWF4TGlzdGVuZXJzIiwiVVJMU2VhcmNoUGFyYW1zIiwiZ2V0IiwiaGVhZGVycyIsIm9yaWdpbiIsInJlamVjdFVuYXV0aG9yaXplZCIsImkiLCJvbmVycm9yIiwiciIsImwiLCJlbWl0RXJyb3IiLCJlcnJvciIsIm9ub3BlbiIsIm9uT3BlbiIsIm9ubWVzc2FnZSIsIm9uUGF5bG9hZCIsImVtaXQiLCJkYXRhIiwicGFyc2VFcnJvciIsIm1lc3NhZ2UiLCJ0b1N0cmluZyIsIldzQ29ubmVjdGlvbiIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js":
/*!*************************************************************!*\
  !*** ./node_modules/@walletconnect/logger/dist/index.es.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_LOG_SIZE_IN_BYTES_DEFAULT: () => (/* binding */ l),\n/* harmony export */   PINO_CUSTOM_CONTEXT_KEY: () => (/* binding */ n),\n/* harmony export */   PINO_LOGGER_DEFAULTS: () => (/* binding */ c),\n/* harmony export */   formatChildLoggerContext: () => (/* binding */ w),\n/* harmony export */   generateChildLogger: () => (/* binding */ E),\n/* harmony export */   generateClientLogger: () => (/* binding */ C),\n/* harmony export */   generatePlatformLogger: () => (/* binding */ A),\n/* harmony export */   generateServerLogger: () => (/* binding */ I),\n/* harmony export */   getBrowserLoggerContext: () => (/* binding */ v),\n/* harmony export */   getDefaultLoggerOptions: () => (/* binding */ k),\n/* harmony export */   getLoggerContext: () => (/* binding */ y),\n/* harmony export */   pino: () => (/* reexport default from dynamic */ pino__WEBPACK_IMPORTED_MODULE_0___default.a),\n/* harmony export */   setBrowserLoggerContext: () => (/* binding */ b)\n/* harmony export */ });\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pino */ \"(ssr)/./node_modules/pino/pino.js\");\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pino__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n\n\n\nconst c = {\n    level: \"info\"\n}, n = \"custom_context\", l = 1e3 * 1024;\nclass O {\n    constructor(e){\n        this.nodeValue = e, this.sizeInBytes = new TextEncoder().encode(this.nodeValue).length, this.next = null;\n    }\n    get value() {\n        return this.nodeValue;\n    }\n    get size() {\n        return this.sizeInBytes;\n    }\n}\nclass d {\n    constructor(e){\n        this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e, this.sizeInBytes = 0;\n    }\n    append(e) {\n        const t = new O(e);\n        if (t.size > this.maxSizeInBytes) throw new Error(`[LinkedList] Value too big to insert into list: ${e} with size ${t.size}`);\n        for(; this.size + t.size > this.maxSizeInBytes;)this.shift();\n        this.head ? (this.tail && (this.tail.next = t), this.tail = t) : (this.head = t, this.tail = t), this.lengthInNodes++, this.sizeInBytes += t.size;\n    }\n    shift() {\n        if (!this.head) return;\n        const e = this.head;\n        this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e.size;\n    }\n    toArray() {\n        const e = [];\n        let t = this.head;\n        for(; t !== null;)e.push(t.value), t = t.next;\n        return e;\n    }\n    get length() {\n        return this.lengthInNodes;\n    }\n    get size() {\n        return this.sizeInBytes;\n    }\n    toOrderedArray() {\n        return Array.from(this);\n    }\n    [Symbol.iterator]() {\n        let e = this.head;\n        return {\n            next: ()=>{\n                if (!e) return {\n                    done: !0,\n                    value: null\n                };\n                const t = e.value;\n                return e = e.next, {\n                    done: !1,\n                    value: t\n                };\n            }\n        };\n    }\n}\nclass L {\n    constructor(e, t = l){\n        this.level = e ?? \"error\", this.levelValue = pino__WEBPACK_IMPORTED_MODULE_0__.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = t, this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);\n    }\n    forwardToConsole(e, t) {\n        t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.error ? console.error(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.warn ? console.warn(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.debug ? console.debug(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.trace ? console.trace(e) : console.log(e);\n    }\n    appendToLogs(e) {\n        this.logs.append((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)({\n            timestamp: new Date().toISOString(),\n            log: e\n        }));\n        const t = typeof e == \"string\" ? JSON.parse(e).level : e.level;\n        t >= this.levelValue && this.forwardToConsole(e, t);\n    }\n    getLogs() {\n        return this.logs;\n    }\n    clearLogs() {\n        this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);\n    }\n    getLogArray() {\n        return Array.from(this.logs);\n    }\n    logsToBlob(e) {\n        const t = this.getLogArray();\n        return t.push((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)({\n            extraMetadata: e\n        })), new Blob(t, {\n            type: \"application/json\"\n        });\n    }\n}\nclass m {\n    constructor(e, t = l){\n        this.baseChunkLogger = new L(e, t);\n    }\n    write(e) {\n        this.baseChunkLogger.appendToLogs(e);\n    }\n    getLogs() {\n        return this.baseChunkLogger.getLogs();\n    }\n    clearLogs() {\n        this.baseChunkLogger.clearLogs();\n    }\n    getLogArray() {\n        return this.baseChunkLogger.getLogArray();\n    }\n    logsToBlob(e) {\n        return this.baseChunkLogger.logsToBlob(e);\n    }\n    downloadLogsBlobInBrowser(e) {\n        const t = URL.createObjectURL(this.logsToBlob(e)), o = document.createElement(\"a\");\n        o.href = t, o.download = `walletconnect-logs-${new Date().toISOString()}.txt`, document.body.appendChild(o), o.click(), document.body.removeChild(o), URL.revokeObjectURL(t);\n    }\n}\nclass B {\n    constructor(e, t = l){\n        this.baseChunkLogger = new L(e, t);\n    }\n    write(e) {\n        this.baseChunkLogger.appendToLogs(e);\n    }\n    getLogs() {\n        return this.baseChunkLogger.getLogs();\n    }\n    clearLogs() {\n        this.baseChunkLogger.clearLogs();\n    }\n    getLogArray() {\n        return this.baseChunkLogger.getLogArray();\n    }\n    logsToBlob(e) {\n        return this.baseChunkLogger.logsToBlob(e);\n    }\n}\nvar x = Object.defineProperty, S = Object.defineProperties, _ = Object.getOwnPropertyDescriptors, p = Object.getOwnPropertySymbols, T = Object.prototype.hasOwnProperty, z = Object.prototype.propertyIsEnumerable, f = (r, e, t)=>e in r ? x(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, i = (r, e)=>{\n    for(var t in e || (e = {}))T.call(e, t) && f(r, t, e[t]);\n    if (p) for (var t of p(e))z.call(e, t) && f(r, t, e[t]);\n    return r;\n}, g = (r, e)=>S(r, _(e));\nfunction k(r) {\n    return g(i({}, r), {\n        level: r?.level || c.level\n    });\n}\nfunction v(r, e = n) {\n    return r[e] || \"\";\n}\nfunction b(r, e, t = n) {\n    return r[t] = e, r;\n}\nfunction y(r, e = n) {\n    let t = \"\";\n    return typeof r.bindings > \"u\" ? t = v(r, e) : t = r.bindings().context || \"\", t;\n}\nfunction w(r, e, t = n) {\n    const o = y(r, t);\n    return o.trim() ? `${o}/${e}` : e;\n}\nfunction E(r, e, t = n) {\n    const o = w(r, e, t), a = r.child({\n        context: o\n    });\n    return b(a, o, t);\n}\nfunction C(r) {\n    var e, t;\n    const o = new m((e = r.opts) == null ? void 0 : e.level, r.maxSizeInBytes);\n    return {\n        logger: pino__WEBPACK_IMPORTED_MODULE_0___default()(g(i({}, r.opts), {\n            level: \"trace\",\n            browser: g(i({}, (t = r.opts) == null ? void 0 : t.browser), {\n                write: (a)=>o.write(a)\n            })\n        })),\n        chunkLoggerController: o\n    };\n}\nfunction I(r) {\n    var e;\n    const t = new B((e = r.opts) == null ? void 0 : e.level, r.maxSizeInBytes);\n    return {\n        logger: pino__WEBPACK_IMPORTED_MODULE_0___default()(g(i({}, r.opts), {\n            level: \"trace\"\n        }), t),\n        chunkLoggerController: t\n    };\n}\nfunction A(r) {\n    return typeof r.loggerOverride < \"u\" && typeof r.loggerOverride != \"string\" ? {\n        logger: r.loggerOverride,\n        chunkLoggerController: null\n    } :  false ? 0 : I(r);\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-api/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RELAY_JSONRPC: () => (/* binding */ C),\n/* harmony export */   isPublishMethod: () => (/* binding */ c),\n/* harmony export */   isPublishParams: () => (/* binding */ h),\n/* harmony export */   isPublishRequest: () => (/* binding */ P),\n/* harmony export */   isSubscribeMethod: () => (/* binding */ b),\n/* harmony export */   isSubscribeParams: () => (/* binding */ a),\n/* harmony export */   isSubscribeRequest: () => (/* binding */ R),\n/* harmony export */   isSubscriptionMethod: () => (/* binding */ m),\n/* harmony export */   isSubscriptionParams: () => (/* binding */ d),\n/* harmony export */   isSubscriptionRequest: () => (/* binding */ S),\n/* harmony export */   isUnsubscribeMethod: () => (/* binding */ o),\n/* harmony export */   isUnsubscribeParams: () => (/* binding */ p),\n/* harmony export */   isUnsubscribeRequest: () => (/* binding */ _),\n/* harmony export */   parsePublishRequest: () => (/* binding */ q),\n/* harmony export */   parseSubscribeRequest: () => (/* binding */ g),\n/* harmony export */   parseSubscriptionRequest: () => (/* binding */ k),\n/* harmony export */   parseUnsubscribeRequest: () => (/* binding */ E)\n/* harmony export */ });\nfunction e(s, r, i = \"string\") {\n    if (!s[r] || typeof s[r] !== i) throw new Error(`Missing or invalid \"${r}\" param`);\n}\nfunction l(s, r) {\n    let i = !0;\n    return r.forEach((t)=>{\n        t in s || (i = !1);\n    }), i;\n}\nfunction f(s, r) {\n    return Array.isArray(s) ? s.length === r : Object.keys(s).length === r;\n}\nfunction w(s, r) {\n    return Array.isArray(s) ? s.length >= r : Object.keys(s).length >= r;\n}\nfunction u(s, r, i) {\n    return (i.length ? w(s, r.length) : f(s, r.length)) ? l(s, r) : !1;\n}\nfunction n(s, r, i = \"_\") {\n    const t = s.split(i);\n    return t[t.length - 1].trim().toLowerCase() === r.trim().toLowerCase();\n}\nfunction R(s) {\n    return b(s.method) && a(s.params);\n}\nfunction b(s) {\n    return n(s, \"subscribe\");\n}\nfunction a(s) {\n    return u(s, [\n        \"topic\"\n    ], []);\n}\nfunction P(s) {\n    return c(s.method) && h(s.params);\n}\nfunction c(s) {\n    return n(s, \"publish\");\n}\nfunction h(s) {\n    return u(s, [\n        \"message\",\n        \"topic\",\n        \"ttl\"\n    ], [\n        \"prompt\",\n        \"tag\"\n    ]);\n}\nfunction _(s) {\n    return o(s.method) && p(s.params);\n}\nfunction o(s) {\n    return n(s, \"unsubscribe\");\n}\nfunction p(s) {\n    return u(s, [\n        \"id\",\n        \"topic\"\n    ], []);\n}\nfunction S(s) {\n    return m(s.method) && d(s.params);\n}\nfunction m(s) {\n    return n(s, \"subscription\");\n}\nfunction d(s) {\n    return u(s, [\n        \"id\",\n        \"data\"\n    ], []);\n}\nfunction g(s) {\n    if (!b(s.method)) throw new Error(\"JSON-RPC Request has invalid subscribe method\");\n    if (!a(s.params)) throw new Error(\"JSON-RPC Request has invalid subscribe params\");\n    const r = s.params;\n    return e(r, \"topic\"), r;\n}\nfunction q(s) {\n    if (!c(s.method)) throw new Error(\"JSON-RPC Request has invalid publish method\");\n    if (!h(s.params)) throw new Error(\"JSON-RPC Request has invalid publish params\");\n    const r = s.params;\n    return e(r, \"topic\"), e(r, \"message\"), e(r, \"ttl\", \"number\"), r;\n}\nfunction E(s) {\n    if (!o(s.method)) throw new Error(\"JSON-RPC Request has invalid unsubscribe method\");\n    if (!p(s.params)) throw new Error(\"JSON-RPC Request has invalid unsubscribe params\");\n    const r = s.params;\n    return e(r, \"id\"), r;\n}\nfunction k(s) {\n    if (!m(s.method)) throw new Error(\"JSON-RPC Request has invalid subscription method\");\n    if (!d(s.params)) throw new Error(\"JSON-RPC Request has invalid subscription params\");\n    const r = s.params;\n    return e(r, \"id\"), e(r, \"data\"), r;\n}\nconst C = {\n    waku: {\n        publish: \"waku_publish\",\n        batchPublish: \"waku_batchPublish\",\n        subscribe: \"waku_subscribe\",\n        batchSubscribe: \"waku_batchSubscribe\",\n        subscription: \"waku_subscription\",\n        unsubscribe: \"waku_unsubscribe\",\n        batchUnsubscribe: \"waku_batchUnsubscribe\",\n        batchFetchMessages: \"waku_batchFetchMessages\"\n    },\n    irn: {\n        publish: \"irn_publish\",\n        batchPublish: \"irn_batchPublish\",\n        subscribe: \"irn_subscribe\",\n        batchSubscribe: \"irn_batchSubscribe\",\n        subscription: \"irn_subscription\",\n        unsubscribe: \"irn_unsubscribe\",\n        batchUnsubscribe: \"irn_batchUnsubscribe\",\n        batchFetchMessages: \"irn_batchFetchMessages\"\n    },\n    iridium: {\n        publish: \"iridium_publish\",\n        batchPublish: \"iridium_batchPublish\",\n        subscribe: \"iridium_subscribe\",\n        batchSubscribe: \"iridium_batchSubscribe\",\n        subscription: \"iridium_subscription\",\n        unsubscribe: \"iridium_unsubscribe\",\n        batchUnsubscribe: \"iridium_batchUnsubscribe\",\n        batchFetchMessages: \"iridium_batchFetchMessages\"\n    }\n};\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/api.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair),\n/* harmony export */   signJWT: () => (/* binding */ signJWT),\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stablelib/ed25519 */ \"(ssr)/./node_modules/@stablelib/ed25519/lib/ed25519.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/./node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n\n\nfunction generateKeyPair(seed = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(_constants__WEBPACK_IMPORTED_MODULE_3__.KEY_PAIR_SEED_LENGTH)) {\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.generateKeyPairFromSeed(seed);\n}\nasync function signJWT(sub, aud, ttl, keyPair, iat = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.fromMiliseconds)(Date.now())) {\n    const header = {\n        alg: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG,\n        typ: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP\n    };\n    const iss = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeIss)(keyPair.publicKey);\n    const exp = iat + ttl;\n    const payload = {\n        iss,\n        sub,\n        aud,\n        iat,\n        exp\n    };\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeData)({\n        header,\n        payload\n    });\n    const signature = _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.sign(keyPair.secretKey, data);\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeJWT)({\n        header,\n        payload,\n        signature\n    });\n}\nasync function verifyJWT(jwt) {\n    const { header, payload, data, signature } = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(jwt);\n    if (header.alg !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG || header.typ !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP) {\n        throw new Error(\"JWT must use EdDSA algorithm\");\n    }\n    const publicKey = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeIss)(payload.iss);\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.verify(publicKey, data, signature);\n} //# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ0U7QUFDTTtBQUNnQztBQUNKO0FBQzNFLFNBQVNXLGdCQUFnQkMsT0FBT1gsOERBQVdBLENBQUNJLDREQUFvQkEsQ0FBQztJQUNwRSxPQUFPTCx1RUFBK0IsQ0FBQ1k7QUFDM0M7QUFDTyxlQUFlRSxRQUFRQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPLEVBQUVDLE1BQU1qQixvRUFBZUEsQ0FBQ2tCLEtBQUtDLEdBQUcsR0FBRztJQUNuRixNQUFNQyxTQUFTO1FBQUVDLEtBQUtwQix1REFBZUE7UUFBRXFCLEtBQUtwQix1REFBZUE7SUFBQztJQUM1RCxNQUFNcUIsTUFBTWhCLGlEQUFTQSxDQUFDUyxRQUFRUSxTQUFTO0lBQ3ZDLE1BQU1DLE1BQU1SLE1BQU1GO0lBQ2xCLE1BQU1XLFVBQVU7UUFBRUg7UUFBS1Y7UUFBS0M7UUFBS0c7UUFBS1E7SUFBSTtJQUMxQyxNQUFNRSxPQUFPckIsa0RBQVVBLENBQUM7UUFBRWM7UUFBUU07SUFBUTtJQUMxQyxNQUFNRSxZQUFZOUIsb0RBQVksQ0FBQ2tCLFFBQVFjLFNBQVMsRUFBRUg7SUFDbEQsT0FBT25CLGlEQUFTQSxDQUFDO1FBQUVZO1FBQVFNO1FBQVNFO0lBQVU7QUFDbEQ7QUFDTyxlQUFlRyxVQUFVQyxHQUFHO0lBQy9CLE1BQU0sRUFBRVosTUFBTSxFQUFFTSxPQUFPLEVBQUVDLElBQUksRUFBRUMsU0FBUyxFQUFFLEdBQUd2QixpREFBU0EsQ0FBQzJCO0lBQ3ZELElBQUlaLE9BQU9DLEdBQUcsS0FBS3BCLHVEQUFlQSxJQUFJbUIsT0FBT0UsR0FBRyxLQUFLcEIsdURBQWVBLEVBQUU7UUFDbEUsTUFBTSxJQUFJK0IsTUFBTTtJQUNwQjtJQUNBLE1BQU1ULFlBQVlwQixpREFBU0EsQ0FBQ3NCLFFBQVFILEdBQUc7SUFDdkMsT0FBT3pCLHNEQUFjLENBQUMwQixXQUFXRyxNQUFNQztBQUMzQyxFQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9hcGkuanM/MmM0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBlZDI1NTE5IGZyb20gXCJAc3RhYmxlbGliL2VkMjU1MTlcIjtcbmltcG9ydCB7IHJhbmRvbUJ5dGVzIH0gZnJvbSBcIkBzdGFibGVsaWIvcmFuZG9tXCI7XG5pbXBvcnQgeyBmcm9tTWlsaXNlY29uZHMgfSBmcm9tIFwiQHdhbGxldGNvbm5lY3QvdGltZVwiO1xuaW1wb3J0IHsgSldUX0lSSURJVU1fQUxHLCBKV1RfSVJJRElVTV9UWVAsIEtFWV9QQUlSX1NFRURfTEVOR1RILCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZGVjb2RlSXNzLCBkZWNvZGVKV1QsIGVuY29kZURhdGEsIGVuY29kZUlzcywgZW5jb2RlSldULCB9IGZyb20gXCIuL3V0aWxzXCI7XG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVLZXlQYWlyKHNlZWQgPSByYW5kb21CeXRlcyhLRVlfUEFJUl9TRUVEX0xFTkdUSCkpIHtcbiAgICByZXR1cm4gZWQyNTUxOS5nZW5lcmF0ZUtleVBhaXJGcm9tU2VlZChzZWVkKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduSldUKHN1YiwgYXVkLCB0dGwsIGtleVBhaXIsIGlhdCA9IGZyb21NaWxpc2Vjb25kcyhEYXRlLm5vdygpKSkge1xuICAgIGNvbnN0IGhlYWRlciA9IHsgYWxnOiBKV1RfSVJJRElVTV9BTEcsIHR5cDogSldUX0lSSURJVU1fVFlQIH07XG4gICAgY29uc3QgaXNzID0gZW5jb2RlSXNzKGtleVBhaXIucHVibGljS2V5KTtcbiAgICBjb25zdCBleHAgPSBpYXQgKyB0dGw7XG4gICAgY29uc3QgcGF5bG9hZCA9IHsgaXNzLCBzdWIsIGF1ZCwgaWF0LCBleHAgfTtcbiAgICBjb25zdCBkYXRhID0gZW5jb2RlRGF0YSh7IGhlYWRlciwgcGF5bG9hZCB9KTtcbiAgICBjb25zdCBzaWduYXR1cmUgPSBlZDI1NTE5LnNpZ24oa2V5UGFpci5zZWNyZXRLZXksIGRhdGEpO1xuICAgIHJldHVybiBlbmNvZGVKV1QoeyBoZWFkZXIsIHBheWxvYWQsIHNpZ25hdHVyZSB9KTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlKV1Qoand0KSB7XG4gICAgY29uc3QgeyBoZWFkZXIsIHBheWxvYWQsIGRhdGEsIHNpZ25hdHVyZSB9ID0gZGVjb2RlSldUKGp3dCk7XG4gICAgaWYgKGhlYWRlci5hbGcgIT09IEpXVF9JUklESVVNX0FMRyB8fCBoZWFkZXIudHlwICE9PSBKV1RfSVJJRElVTV9UWVApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSldUIG11c3QgdXNlIEVkRFNBIGFsZ29yaXRobVwiKTtcbiAgICB9XG4gICAgY29uc3QgcHVibGljS2V5ID0gZGVjb2RlSXNzKHBheWxvYWQuaXNzKTtcbiAgICByZXR1cm4gZWQyNTUxOS52ZXJpZnkocHVibGljS2V5LCBkYXRhLCBzaWduYXR1cmUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6WyJlZDI1NTE5IiwicmFuZG9tQnl0ZXMiLCJmcm9tTWlsaXNlY29uZHMiLCJKV1RfSVJJRElVTV9BTEciLCJKV1RfSVJJRElVTV9UWVAiLCJLRVlfUEFJUl9TRUVEX0xFTkdUSCIsImRlY29kZUlzcyIsImRlY29kZUpXVCIsImVuY29kZURhdGEiLCJlbmNvZGVJc3MiLCJlbmNvZGVKV1QiLCJnZW5lcmF0ZUtleVBhaXIiLCJzZWVkIiwiZ2VuZXJhdGVLZXlQYWlyRnJvbVNlZWQiLCJzaWduSldUIiwic3ViIiwiYXVkIiwidHRsIiwia2V5UGFpciIsImlhdCIsIkRhdGUiLCJub3ciLCJoZWFkZXIiLCJhbGciLCJ0eXAiLCJpc3MiLCJwdWJsaWNLZXkiLCJleHAiLCJwYXlsb2FkIiwiZGF0YSIsInNpZ25hdHVyZSIsInNpZ24iLCJzZWNyZXRLZXkiLCJ2ZXJpZnlKV1QiLCJqd3QiLCJFcnJvciIsInZlcmlmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* binding */ DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* binding */ DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* binding */ DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* binding */ DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* binding */ JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* binding */ JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* binding */ JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* binding */ JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* binding */ JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* binding */ KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* binding */ MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* binding */ MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* binding */ MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* binding */ MULTICODEC_ED25519_LENGTH)\n/* harmony export */ });\nconst JWT_IRIDIUM_ALG = \"EdDSA\";\nconst JWT_IRIDIUM_TYP = \"JWT\";\nconst JWT_DELIMITER = \".\";\nconst JWT_ENCODING = \"base64url\";\nconst JSON_ENCODING = \"utf8\";\nconst DATA_ENCODING = \"utf8\";\nconst DID_DELIMITER = \":\";\nconst DID_PREFIX = \"did\";\nconst DID_METHOD = \"key\";\nconst MULTICODEC_ED25519_ENCODING = \"base58btc\";\nconst MULTICODEC_ED25519_BASE = \"z\";\nconst MULTICODEC_ED25519_HEADER = \"K36\";\nconst MULTICODEC_ED25519_LENGTH = 32;\nconst KEY_PAIR_SEED_LENGTH = 32; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxrQkFBa0IsUUFBUTtBQUNoQyxNQUFNQyxrQkFBa0IsTUFBTTtBQUM5QixNQUFNQyxnQkFBZ0IsSUFBSTtBQUMxQixNQUFNQyxlQUFlLFlBQVk7QUFDakMsTUFBTUMsZ0JBQWdCLE9BQU87QUFDN0IsTUFBTUMsZ0JBQWdCLE9BQU87QUFDN0IsTUFBTUMsZ0JBQWdCLElBQUk7QUFDMUIsTUFBTUMsYUFBYSxNQUFNO0FBQ3pCLE1BQU1DLGFBQWEsTUFBTTtBQUN6QixNQUFNQyw4QkFBOEIsWUFBWTtBQUNoRCxNQUFNQywwQkFBMEIsSUFBSTtBQUNwQyxNQUFNQyw0QkFBNEIsTUFBTTtBQUN4QyxNQUFNQyw0QkFBNEIsR0FBRztBQUNyQyxNQUFNQyx1QkFBdUIsR0FBRyxDQUN2QyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vY29uc3RhbnRzLmpzPzVkOGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEpXVF9JUklESVVNX0FMRyA9IFwiRWREU0FcIjtcbmV4cG9ydCBjb25zdCBKV1RfSVJJRElVTV9UWVAgPSBcIkpXVFwiO1xuZXhwb3J0IGNvbnN0IEpXVF9ERUxJTUlURVIgPSBcIi5cIjtcbmV4cG9ydCBjb25zdCBKV1RfRU5DT0RJTkcgPSBcImJhc2U2NHVybFwiO1xuZXhwb3J0IGNvbnN0IEpTT05fRU5DT0RJTkcgPSBcInV0ZjhcIjtcbmV4cG9ydCBjb25zdCBEQVRBX0VOQ09ESU5HID0gXCJ1dGY4XCI7XG5leHBvcnQgY29uc3QgRElEX0RFTElNSVRFUiA9IFwiOlwiO1xuZXhwb3J0IGNvbnN0IERJRF9QUkVGSVggPSBcImRpZFwiO1xuZXhwb3J0IGNvbnN0IERJRF9NRVRIT0QgPSBcImtleVwiO1xuZXhwb3J0IGNvbnN0IE1VTFRJQ09ERUNfRUQyNTUxOV9FTkNPRElORyA9IFwiYmFzZTU4YnRjXCI7XG5leHBvcnQgY29uc3QgTVVMVElDT0RFQ19FRDI1NTE5X0JBU0UgPSBcInpcIjtcbmV4cG9ydCBjb25zdCBNVUxUSUNPREVDX0VEMjU1MTlfSEVBREVSID0gXCJLMzZcIjtcbmV4cG9ydCBjb25zdCBNVUxUSUNPREVDX0VEMjU1MTlfTEVOR1RIID0gMzI7XG5leHBvcnQgY29uc3QgS0VZX1BBSVJfU0VFRF9MRU5HVEggPSAzMjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiSldUX0lSSURJVU1fQUxHIiwiSldUX0lSSURJVU1fVFlQIiwiSldUX0RFTElNSVRFUiIsIkpXVF9FTkNPRElORyIsIkpTT05fRU5DT0RJTkciLCJEQVRBX0VOQ09ESU5HIiwiRElEX0RFTElNSVRFUiIsIkRJRF9QUkVGSVgiLCJESURfTUVUSE9EIiwiTVVMVElDT0RFQ19FRDI1NTE5X0VOQ09ESU5HIiwiTVVMVElDT0RFQ19FRDI1NTE5X0JBU0UiLCJNVUxUSUNPREVDX0VEMjU1MTlfSEVBREVSIiwiTVVMVElDT0RFQ19FRDI1NTE5X0xFTkdUSCIsIktFWV9QQUlSX1NFRURfTEVOR1RIIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_LENGTH),\n/* harmony export */   decodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeData),\n/* harmony export */   decodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeIss),\n/* harmony export */   decodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJSON),\n/* harmony export */   decodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJWT),\n/* harmony export */   decodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeSig),\n/* harmony export */   encodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeData),\n/* harmony export */   encodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeIss),\n/* harmony export */   encodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJSON),\n/* harmony export */   encodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJWT),\n/* harmony export */   encodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeSig),\n/* harmony export */   generateKeyPair: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.generateKeyPair),\n/* harmony export */   signJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.signJWT),\n/* harmony export */   verifyJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"generateKeyPair\",\"signJWT\",\"verifyJWT\",\"DATA_ENCODING\",\"DID_DELIMITER\",\"DID_METHOD\",\"DID_PREFIX\",\"JSON_ENCODING\",\"JWT_DELIMITER\",\"JWT_ENCODING\",\"JWT_IRIDIUM_ALG\",\"JWT_IRIDIUM_TYP\",\"KEY_PAIR_SEED_LENGTH\",\"MULTICODEC_ED25519_BASE\",\"MULTICODEC_ED25519_ENCODING\",\"MULTICODEC_ED25519_HEADER\",\"MULTICODEC_ED25519_LENGTH\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFzQjtBQUNNO0FBQ0o7QUFDQSxDQUN4QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vaW5kZXguanM/NTRlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9hcGlcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NvbnN0YW50c1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHlwZXNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3V0aWxzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/types.js ***!
  \******************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vdHlwZXMuanM/NjczZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUNBQWlDIiwiZmlsZSI6Iihzc3IpLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vdHlwZXMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeData: () => (/* binding */ decodeData),\n/* harmony export */   decodeIss: () => (/* binding */ decodeIss),\n/* harmony export */   decodeJSON: () => (/* binding */ decodeJSON),\n/* harmony export */   decodeJWT: () => (/* binding */ decodeJWT),\n/* harmony export */   decodeSig: () => (/* binding */ decodeSig),\n/* harmony export */   encodeData: () => (/* binding */ encodeData),\n/* harmony export */   encodeIss: () => (/* binding */ encodeIss),\n/* harmony export */   encodeJSON: () => (/* binding */ encodeJSON),\n/* harmony export */   encodeJWT: () => (/* binding */ encodeJWT),\n/* harmony export */   encodeSig: () => (/* binding */ encodeSig)\n/* harmony export */ });\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8arrays/concat */ \"(ssr)/./node_modules/uint8arrays/esm/src/concat.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/uint8arrays/esm/src/to-string.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/uint8arrays/esm/src/from-string.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n\n\n\n\n\nfunction decodeJSON(str) {\n    return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonParse)((0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(str, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonStringify)(val), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    const header = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(_constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER, _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const multicodec = _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__.concat)([\n        header,\n        publicKey\n    ]), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    return [\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX,\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD,\n        multicodec\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n    if (prefix !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX || method !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    const base = multicodec.slice(0, 1);\n    if (base !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE) {\n        throw new Error(`Issuer must be a key in mulicodec format`);\n    }\n    const bytes = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(multicodec.slice(1), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const type = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes.slice(0, 2), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    if (type !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER) {\n        throw new Error(`Issuer must be a public key with type \"Ed25519\"`);\n    }\n    const publicKey = bytes.slice(2);\n    if (publicKey.length !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\nfunction encodeSig(bytes) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(encoded, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeData(params) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)([\n        encodeJSON(params.header),\n        encodeJSON(params.payload)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    const params = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(data, _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING).split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    return {\n        header,\n        payload\n    };\n}\nfunction encodeJWT(params) {\n    return [\n        encodeJSON(params.header),\n        encodeJSON(params.payload),\n        encodeSig(params.signature)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    const params = jwt.split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    const signature = decodeSig(params[2]);\n    const data = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(params.slice(0, 2).join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n    return {\n        header,\n        payload,\n        signature,\n        data\n    };\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),\n/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)\n/* harmony export */ });\nconst JSONStringify = (data)=>JSON.stringify(data, (_, value)=>typeof value === \"bigint\" ? value.toString() + \"n\" : value);\nconst JSONParse = (json)=>{\n    const numbersBiggerThanMaxInt = /([\\[:])?(\\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\\}\\]])/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, '$1\"$2n\"$3');\n    return JSON.parse(serializedData, (_, value)=>{\n        const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n        if (isCustomFormatBigInt) return BigInt(value.substring(0, value.length - 1));\n        return value;\n    });\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    } catch (_a) {\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvc2FmZS1qc29uL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsZ0JBQWdCQyxDQUFBQSxPQUFRQyxLQUFLQyxTQUFTLENBQUNGLE1BQU0sQ0FBQ0csR0FBR0MsUUFBVSxPQUFPQSxVQUFVLFdBQVdBLE1BQU1DLFFBQVEsS0FBSyxNQUFNRDtBQUN0SCxNQUFNRSxZQUFZQyxDQUFBQTtJQUNkLE1BQU1DLDBCQUEwQjtJQUNoQyxNQUFNQyxpQkFBaUJGLEtBQUtHLE9BQU8sQ0FBQ0YseUJBQXlCO0lBQzdELE9BQU9QLEtBQUtVLEtBQUssQ0FBQ0YsZ0JBQWdCLENBQUNOLEdBQUdDO1FBQ2xDLE1BQU1RLHVCQUF1QixPQUFPUixVQUFVLFlBQVlBLE1BQU1TLEtBQUssQ0FBQztRQUN0RSxJQUFJRCxzQkFDQSxPQUFPRSxPQUFPVixNQUFNVyxTQUFTLENBQUMsR0FBR1gsTUFBTVksTUFBTSxHQUFHO1FBQ3BELE9BQU9aO0lBQ1g7QUFDSjtBQUNPLFNBQVNhLGNBQWNiLEtBQUs7SUFDL0IsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDM0IsTUFBTSxJQUFJYyxNQUFNLENBQUMscUNBQXFDLEVBQUUsT0FBT2QsTUFBTSxDQUFDO0lBQzFFO0lBQ0EsSUFBSTtRQUNBLE9BQU9FLFVBQVVGO0lBQ3JCLEVBQ0EsT0FBT2UsSUFBSTtRQUNQLE9BQU9mO0lBQ1g7QUFDSjtBQUNPLFNBQVNnQixrQkFBa0JoQixLQUFLO0lBQ25DLE9BQU8sT0FBT0EsVUFBVSxXQUFXQSxRQUFRTCxjQUFjSyxVQUFVO0FBQ3ZFLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9zYWZlLWpzb24vZGlzdC9lc20vaW5kZXguanM/ZTJkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBKU09OU3RyaW5naWZ5ID0gZGF0YSA9PiBKU09OLnN0cmluZ2lmeShkYXRhLCAoXywgdmFsdWUpID0+IHR5cGVvZiB2YWx1ZSA9PT0gXCJiaWdpbnRcIiA/IHZhbHVlLnRvU3RyaW5nKCkgKyBcIm5cIiA6IHZhbHVlKTtcbmNvbnN0IEpTT05QYXJzZSA9IGpzb24gPT4ge1xuICAgIGNvbnN0IG51bWJlcnNCaWdnZXJUaGFuTWF4SW50ID0gLyhbXFxbOl0pPyhcXGR7MTcsfXwoPzpbOV0oPzpbMS05XTA3MTk5MjU0NzQwOTkxfDBbMS05XTcxOTkyNTQ3NDA5OTF8MDBbOC05XTE5OTI1NDc0MDk5MXwwMDdbMi05XTk5MjU0NzQwOTkxfDAwNzE5OVszLTldNTQ3NDA5OTF8MDA3MTk5Mls2LTldNDc0MDk5MXwwMDcxOTkyNVs1LTldNzQwOTkxfDAwNzE5OTI1NFs4LTldNDA5OTF8MDA3MTk5MjU0N1s1LTldMDk5MXwwMDcxOTkyNTQ3NFsxLTldOTkxfDAwNzE5OTI1NDc0MDk5WzItOV0pKSkoWyxcXH1cXF1dKS9nO1xuICAgIGNvbnN0IHNlcmlhbGl6ZWREYXRhID0ganNvbi5yZXBsYWNlKG51bWJlcnNCaWdnZXJUaGFuTWF4SW50LCBcIiQxXFxcIiQyblxcXCIkM1wiKTtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShzZXJpYWxpemVkRGF0YSwgKF8sIHZhbHVlKSA9PiB7XG4gICAgICAgIGNvbnN0IGlzQ3VzdG9tRm9ybWF0QmlnSW50ID0gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmIHZhbHVlLm1hdGNoKC9eXFxkK24kLyk7XG4gICAgICAgIGlmIChpc0N1c3RvbUZvcm1hdEJpZ0ludClcbiAgICAgICAgICAgIHJldHVybiBCaWdJbnQodmFsdWUuc3Vic3RyaW5nKDAsIHZhbHVlLmxlbmd0aCAtIDEpKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0pO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBzYWZlSnNvblBhcnNlKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBzYWZlIGpzb24gcGFyc2UgdmFsdWUgb2YgdHlwZSAke3R5cGVvZiB2YWx1ZX1gKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIEpTT05QYXJzZSh2YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIChfYSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNhZmVKc29uU3RyaW5naWZ5KHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiA/IHZhbHVlIDogSlNPTlN0cmluZ2lmeSh2YWx1ZSkgfHwgXCJcIjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJKU09OU3RyaW5naWZ5IiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJfIiwidmFsdWUiLCJ0b1N0cmluZyIsIkpTT05QYXJzZSIsImpzb24iLCJudW1iZXJzQmlnZ2VyVGhhbk1heEludCIsInNlcmlhbGl6ZWREYXRhIiwicmVwbGFjZSIsInBhcnNlIiwiaXNDdXN0b21Gb3JtYXRCaWdJbnQiLCJtYXRjaCIsIkJpZ0ludCIsInN1YnN0cmluZyIsImxlbmd0aCIsInNhZmVKc29uUGFyc2UiLCJFcnJvciIsIl9hIiwic2FmZUpzb25TdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/sign-client/dist/index.es.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/dist/index.es.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AUTH_CONTEXT: () => (/* binding */ He),\n/* harmony export */   AUTH_KEYS_CONTEXT: () => (/* binding */ Ye),\n/* harmony export */   AUTH_PAIRING_TOPIC_CONTEXT: () => (/* binding */ Xe),\n/* harmony export */   AUTH_PROTOCOL: () => (/* binding */ ze),\n/* harmony export */   AUTH_PUBLIC_KEY_NAME: () => (/* binding */ J),\n/* harmony export */   AUTH_REQUEST_CONTEXT: () => (/* binding */ Je),\n/* harmony export */   AUTH_STORAGE_PREFIX: () => (/* binding */ X),\n/* harmony export */   AUTH_VERSION: () => (/* binding */ Ht),\n/* harmony export */   ENGINE_CONTEXT: () => (/* binding */ Fe),\n/* harmony export */   ENGINE_QUEUE_STATES: () => (/* binding */ D),\n/* harmony export */   ENGINE_RPC_OPTS: () => (/* binding */ f),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ Qt),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ Ft),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ jt),\n/* harmony export */   METHODS_TO_VERIFY: () => (/* binding */ je),\n/* harmony export */   PROPOSAL_CONTEXT: () => (/* binding */ Ue),\n/* harmony export */   PROPOSAL_EXPIRY: () => (/* binding */ zt),\n/* harmony export */   PROPOSAL_EXPIRY_MESSAGE: () => (/* binding */ Ge),\n/* harmony export */   REQUEST_CONTEXT: () => (/* binding */ Qe),\n/* harmony export */   SESSION_CONTEXT: () => (/* binding */ ke),\n/* harmony export */   SESSION_EXPIRY: () => (/* binding */ L),\n/* harmony export */   SESSION_REQUEST_EXPIRY_BOUNDARIES: () => (/* binding */ ne),\n/* harmony export */   SIGN_CLIENT_CONTEXT: () => (/* binding */ Se),\n/* harmony export */   SIGN_CLIENT_DEFAULT: () => (/* binding */ re),\n/* harmony export */   SIGN_CLIENT_EVENTS: () => (/* binding */ Gt),\n/* harmony export */   SIGN_CLIENT_PROTOCOL: () => (/* binding */ Re),\n/* harmony export */   SIGN_CLIENT_STORAGE_OPTIONS: () => (/* binding */ kt),\n/* harmony export */   SIGN_CLIENT_STORAGE_PREFIX: () => (/* binding */ ie),\n/* harmony export */   SIGN_CLIENT_VERSION: () => (/* binding */ Ee),\n/* harmony export */   SessionStore: () => (/* binding */ os),\n/* harmony export */   SignClient: () => (/* binding */ as),\n/* harmony export */   WALLETCONNECT_DEEPLINK_CHOICE: () => (/* binding */ _e),\n/* harmony export */   \"default\": () => (/* binding */ oe)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/core */ \"(ssr)/./node_modules/@walletconnect/core/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\");\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\n\n\n\nconst Re = \"wc\", Ee = 2, Se = \"client\", ie = `${Re}@${Ee}:${Se}:`, re = {\n    name: Se,\n    logger: \"error\",\n    controller: !1,\n    relayUrl: \"wss://relay.walletconnect.com\"\n}, Gt = {\n    session_proposal: \"session_proposal\",\n    session_update: \"session_update\",\n    session_extend: \"session_extend\",\n    session_ping: \"session_ping\",\n    session_delete: \"session_delete\",\n    session_expire: \"session_expire\",\n    session_request: \"session_request\",\n    session_request_sent: \"session_request_sent\",\n    session_event: \"session_event\",\n    proposal_expire: \"proposal_expire\",\n    session_authenticate: \"session_authenticate\",\n    session_request_expire: \"session_request_expire\"\n}, kt = {\n    database: \":memory:\"\n}, _e = \"WALLETCONNECT_DEEPLINK_CHOICE\", Ft = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, Qt = \"history\", jt = \"0.3\", Ue = \"proposal\", zt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_DAYS, Ge = \"Proposal expired\", ke = \"session\", L = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS, Fe = \"engine\", f = {\n    wc_sessionPropose: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1100\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1101\n        }\n    },\n    wc_sessionSettle: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1102\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1103\n        }\n    },\n    wc_sessionUpdate: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1104\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1105\n        }\n    },\n    wc_sessionExtend: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1106\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1107\n        }\n    },\n    wc_sessionRequest: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1108\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1109\n        }\n    },\n    wc_sessionEvent: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1110\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1111\n        }\n    },\n    wc_sessionDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1112\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1113\n        }\n    },\n    wc_sessionPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1114\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1115\n        }\n    },\n    wc_sessionAuthenticate: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_HOUR,\n            prompt: !0,\n            tag: 1116\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_HOUR,\n            prompt: !1,\n            tag: 1117\n        }\n    }\n}, ne = {\n    min: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n    max: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS\n}, D = {\n    idle: \"IDLE\",\n    active: \"ACTIVE\"\n}, Qe = \"request\", je = [\n    \"wc_sessionPropose\",\n    \"wc_sessionRequest\",\n    \"wc_authRequest\"\n], ze = \"wc\", Ht = 1.5, He = \"auth\", Ye = \"authKeys\", Xe = \"pairingTopics\", Je = \"requests\", X = `${ze}@${1.5}:${He}:`, J = `${X}:PUB_KEY`;\nvar Yt = Object.defineProperty, Xt = Object.defineProperties, Jt = Object.getOwnPropertyDescriptors, Be = Object.getOwnPropertySymbols, Bt = Object.prototype.hasOwnProperty, Wt = Object.prototype.propertyIsEnumerable, We = (R, n, t)=>n in R ? Yt(R, n, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : R[n] = t, y = (R, n)=>{\n    for(var t in n || (n = {}))Bt.call(n, t) && We(R, t, n[t]);\n    if (Be) for (var t of Be(n))Wt.call(n, t) && We(R, t, n[t]);\n    return R;\n}, M = (R, n)=>Xt(R, Jt(n));\nclass Zt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IEngine {\n    constructor(n){\n        super(n), this.name = Fe, this.events = new (events__WEBPACK_IMPORTED_MODULE_1___default()), this.initialized = !1, this.requestQueue = {\n            state: D.idle,\n            queue: []\n        }, this.sessionRequestQueue = {\n            state: D.idle,\n            queue: []\n        }, this.requestQueueDelay = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_SECOND, this.expectedPairingMethodMap = new Map, this.recentlyDeletedMap = new Map, this.recentlyDeletedLimit = 200, this.init = async ()=>{\n            this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), this.client.core.pairing.register({\n                methods: Object.keys(f)\n            }), this.initialized = !0, setTimeout(()=>{\n                this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay)));\n        }, this.connect = async (t)=>{\n            await this.isInitialized();\n            const e = M(y({}, t), {\n                requiredNamespaces: t.requiredNamespaces || {},\n                optionalNamespaces: t.optionalNamespaces || {}\n            });\n            await this.isValidConnect(e);\n            const { pairingTopic: s, requiredNamespaces: i, optionalNamespaces: r, sessionProperties: o, relays: a } = e;\n            let c = s, h, p = !1;\n            try {\n                c && (p = this.client.core.pairing.pairings.get(c).active);\n            } catch (P) {\n                throw this.client.logger.error(`connect() -> pairing.get(${c}) failed`), P;\n            }\n            if (!c || !p) {\n                const { topic: P, uri: v } = await this.client.core.pairing.create();\n                c = P, h = v;\n            }\n            if (!c) {\n                const { message: P } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `connect() pairing topic: ${c}`);\n                throw new Error(P);\n            }\n            const g = await this.client.core.crypto.generateKeyPair(), d = f.wc_sessionPropose.req.ttl || _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES, w = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(d), m = y({\n                requiredNamespaces: i,\n                optionalNamespaces: r,\n                relays: a ?? [\n                    {\n                        protocol: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_DEFAULT_PROTOCOL\n                    }\n                ],\n                proposer: {\n                    publicKey: g,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: w\n            }, o && {\n                sessionProperties: o\n            }), { reject: E, resolve: O, done: S } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(d, Ge);\n            this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), async ({ error: P, session: v })=>{\n                if (P) E(P);\n                else if (v) {\n                    v.self.publicKey = g;\n                    const B = M(y({}, v), {\n                        requiredNamespaces: m.requiredNamespaces,\n                        optionalNamespaces: m.optionalNamespaces\n                    });\n                    await this.client.session.set(v.topic, B), await this.setExpiry(v.topic, v.expiry), c && await this.client.core.pairing.updateMetadata({\n                        topic: c,\n                        metadata: v.peer.metadata\n                    }), O(B);\n                }\n            });\n            const N = await this.sendRequest({\n                topic: c,\n                method: \"wc_sessionPropose\",\n                params: m,\n                throwOnFailedPublish: !0\n            });\n            return await this.setProposal(N, y({\n                id: N\n            }, m)), {\n                uri: h,\n                approval: S\n            };\n        }, this.pair = async (t)=>{\n            await this.isInitialized();\n            try {\n                return await this.client.core.pairing.pair(t);\n            } catch (e) {\n                throw this.client.logger.error(\"pair() failed\"), e;\n            }\n        }, this.approve = async (t)=>{\n            await this.isInitialized();\n            try {\n                await this.isValidApprove(t);\n            } catch (S) {\n                throw this.client.logger.error(\"approve() -> isValidApprove() failed\"), S;\n            }\n            const { id: e, relayProtocol: s, namespaces: i, sessionProperties: r, sessionConfig: o } = t;\n            let a;\n            try {\n                a = this.client.proposal.get(e);\n            } catch (S) {\n                throw this.client.logger.error(`approve() -> proposal.get(${e}) failed`), S;\n            }\n            let { pairingTopic: c, proposer: h, requiredNamespaces: p, optionalNamespaces: g } = a;\n            c = c || \"\";\n            const d = await this.client.core.crypto.generateKeyPair(), w = h.publicKey, m = await this.client.core.crypto.generateSharedKey(d, w), E = y(y({\n                relay: {\n                    protocol: s ?? \"irn\"\n                },\n                namespaces: i,\n                pairingTopic: c,\n                controller: {\n                    publicKey: d,\n                    metadata: this.client.metadata\n                },\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(L)\n            }, r && {\n                sessionProperties: r\n            }), o && {\n                sessionConfig: o\n            });\n            await this.client.core.relayer.subscribe(m);\n            const O = M(y({}, E), {\n                topic: m,\n                requiredNamespaces: p,\n                optionalNamespaces: g,\n                pairingTopic: c,\n                acknowledged: !1,\n                self: E.controller,\n                peer: {\n                    publicKey: h.publicKey,\n                    metadata: h.metadata\n                },\n                controller: d\n            });\n            await this.client.session.set(m, O);\n            try {\n                await this.sendResult({\n                    id: e,\n                    topic: c,\n                    result: {\n                        relay: {\n                            protocol: s ?? \"irn\"\n                        },\n                        responderPublicKey: d\n                    },\n                    throwOnFailedPublish: !0\n                }), await this.sendRequest({\n                    topic: m,\n                    method: \"wc_sessionSettle\",\n                    params: E,\n                    throwOnFailedPublish: !0\n                });\n            } catch (S) {\n                throw this.client.logger.error(S), this.client.session.delete(m, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), await this.client.core.relayer.unsubscribe(m), S;\n            }\n            return await this.client.core.pairing.updateMetadata({\n                topic: c,\n                metadata: h.metadata\n            }), await this.client.proposal.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), await this.client.core.pairing.activate({\n                topic: c\n            }), await this.setExpiry(m, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(L)), {\n                topic: m,\n                acknowledged: ()=>new Promise((S)=>setTimeout(()=>S(this.client.session.get(m)), 500))\n            };\n        }, this.reject = async (t)=>{\n            await this.isInitialized();\n            try {\n                await this.isValidReject(t);\n            } catch (r) {\n                throw this.client.logger.error(\"reject() -> isValidReject() failed\"), r;\n            }\n            const { id: e, reason: s } = t;\n            let i;\n            try {\n                i = this.client.proposal.get(e).pairingTopic;\n            } catch (r) {\n                throw this.client.logger.error(`reject() -> proposal.get(${e}) failed`), r;\n            }\n            i && (await this.sendError({\n                id: e,\n                topic: i,\n                error: s\n            }), await this.client.proposal.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")));\n        }, this.update = async (t)=>{\n            await this.isInitialized();\n            try {\n                await this.isValidUpdate(t);\n            } catch (p) {\n                throw this.client.logger.error(\"update() -> isValidUpdate() failed\"), p;\n            }\n            const { topic: e, namespaces: s } = t, { done: i, resolve: r, reject: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(), a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), h = this.client.session.get(e).namespaces;\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", a), ({ error: p })=>{\n                p ? o(p) : r();\n            }), await this.client.session.update(e, {\n                namespaces: s\n            }), await this.sendRequest({\n                topic: e,\n                method: \"wc_sessionUpdate\",\n                params: {\n                    namespaces: s\n                },\n                throwOnFailedPublish: !0,\n                clientRpcId: a,\n                relayRpcId: c\n            }).catch((p)=>{\n                this.client.logger.error(p), this.client.session.update(e, {\n                    namespaces: h\n                }), o(p);\n            }), {\n                acknowledged: i\n            };\n        }, this.extend = async (t)=>{\n            await this.isInitialized();\n            try {\n                await this.isValidExtend(t);\n            } catch (a) {\n                throw this.client.logger.error(\"extend() -> isValidExtend() failed\"), a;\n            }\n            const { topic: e } = t, s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), { done: i, resolve: r, reject: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), ({ error: a })=>{\n                a ? o(a) : r();\n            }), await this.setExpiry(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(L)), this.sendRequest({\n                topic: e,\n                method: \"wc_sessionExtend\",\n                params: {},\n                clientRpcId: s,\n                throwOnFailedPublish: !0\n            }).catch((a)=>{\n                o(a);\n            }), {\n                acknowledged: i\n            };\n        }, this.request = async (t)=>{\n            await this.isInitialized();\n            try {\n                await this.isValidRequest(t);\n            } catch (d) {\n                throw this.client.logger.error(\"request() -> isValidRequest() failed\"), d;\n            }\n            const { chainId: e, request: s, topic: i, expiry: r = f.wc_sessionRequest.req.ttl } = t, o = this.client.session.get(i), a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), { done: h, resolve: p, reject: g } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(r, \"Request expired. Please try again.\");\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", a), ({ error: d, result: w })=>{\n                d ? g(d) : p(w);\n            }), await Promise.all([\n                new Promise(async (d)=>{\n                    await this.sendRequest({\n                        clientRpcId: a,\n                        relayRpcId: c,\n                        topic: i,\n                        method: \"wc_sessionRequest\",\n                        params: {\n                            request: M(y({}, s), {\n                                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(r)\n                            }),\n                            chainId: e\n                        },\n                        expiry: r,\n                        throwOnFailedPublish: !0\n                    }).catch((w)=>g(w)), this.client.events.emit(\"session_request_sent\", {\n                        topic: i,\n                        request: s,\n                        chainId: e,\n                        id: a\n                    }), d();\n                }),\n                new Promise(async (d)=>{\n                    var w;\n                    if (!((w = o.sessionConfig) != null && w.disableDeepLink)) {\n                        const m = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDeepLink)(this.client.core.storage, _e);\n                        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.handleDeeplinkRedirect)({\n                            id: a,\n                            topic: i,\n                            wcDeepLink: m\n                        });\n                    }\n                    d();\n                }),\n                h()\n            ]).then((d)=>d[2]);\n        }, this.respond = async (t)=>{\n            await this.isInitialized(), await this.isValidRespond(t);\n            const { topic: e, response: s } = t, { id: i } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? await this.sendResult({\n                id: i,\n                topic: e,\n                result: s.result,\n                throwOnFailedPublish: !0\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && await this.sendError({\n                id: i,\n                topic: e,\n                error: s.error\n            }), this.cleanupAfterResponse(t);\n        }, this.ping = async (t)=>{\n            await this.isInitialized();\n            try {\n                await this.isValidPing(t);\n            } catch (s) {\n                throw this.client.logger.error(\"ping() -> isValidPing() failed\"), s;\n            }\n            const { topic: e } = t;\n            if (this.client.session.keys.includes(e)) {\n                const s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), i = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), { done: r, resolve: o, reject: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), ({ error: c })=>{\n                    c ? a(c) : o();\n                }), await Promise.all([\n                    this.sendRequest({\n                        topic: e,\n                        method: \"wc_sessionPing\",\n                        params: {},\n                        throwOnFailedPublish: !0,\n                        clientRpcId: s,\n                        relayRpcId: i\n                    }),\n                    r()\n                ]);\n            } else this.client.core.pairing.pairings.keys.includes(e) && await this.client.core.pairing.ping({\n                topic: e\n            });\n        }, this.emit = async (t)=>{\n            await this.isInitialized(), await this.isValidEmit(t);\n            const { topic: e, event: s, chainId: i } = t, r = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString();\n            await this.sendRequest({\n                topic: e,\n                method: \"wc_sessionEvent\",\n                params: {\n                    event: s,\n                    chainId: i\n                },\n                throwOnFailedPublish: !0,\n                relayRpcId: r\n            });\n        }, this.disconnect = async (t)=>{\n            await this.isInitialized(), await this.isValidDisconnect(t);\n            const { topic: e } = t;\n            if (this.client.session.keys.includes(e)) await this.sendRequest({\n                topic: e,\n                method: \"wc_sessionDelete\",\n                params: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"),\n                throwOnFailedPublish: !0\n            }), await this.deleteSession({\n                topic: e,\n                emitEvent: !1\n            });\n            else if (this.client.core.pairing.pairings.keys.includes(e)) await this.client.core.pairing.disconnect({\n                topic: e\n            });\n            else {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISMATCHED_TOPIC\", `Session or pairing topic not found: ${e}`);\n                throw new Error(s);\n            }\n        }, this.find = (t)=>(this.isInitialized(), this.client.session.getAll().filter((e)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isSessionCompatible)(e, t))), this.getPendingSessionRequests = ()=>this.client.pendingRequest.getAll(), this.authenticate = async (t)=>{\n            this.isInitialized(), this.isValidAuthenticate(t);\n            const { chains: e, statement: s = \"\", uri: i, domain: r, nonce: o, type: a, exp: c, nbf: h, methods: p = [], expiry: g } = t, d = [\n                ...t.resources || []\n            ], { topic: w, uri: m } = await this.client.core.pairing.create({\n                methods: [\n                    \"wc_sessionAuthenticate\"\n                ]\n            });\n            this.client.logger.info({\n                message: \"Generated new pairing\",\n                pairing: {\n                    topic: w,\n                    uri: m\n                }\n            });\n            const E = await this.client.core.crypto.generateKeyPair(), O = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(E);\n            if (await Promise.all([\n                this.client.auth.authKeys.set(J, {\n                    responseTopic: O,\n                    publicKey: E\n                }),\n                this.client.auth.pairingTopics.set(O, {\n                    topic: O,\n                    pairingTopic: w\n                })\n            ]), await this.client.core.relayer.subscribe(O), this.client.logger.info(`sending request to new pairing topic: ${w}`), p.length > 0) {\n                const { namespace: T } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(e[0]);\n                let _ = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createEncodedRecap)(T, \"request\", p);\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(d) && (_ = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeEncodedRecaps)(_, d.pop())), d.push(_);\n            }\n            const S = g && g > f.wc_sessionAuthenticate.req.ttl ? g : f.wc_sessionAuthenticate.req.ttl, N = {\n                authPayload: {\n                    type: a ?? \"caip122\",\n                    chains: e,\n                    statement: s,\n                    aud: i,\n                    domain: r,\n                    version: \"1\",\n                    nonce: o,\n                    iat: new Date().toISOString(),\n                    exp: c,\n                    nbf: h,\n                    resources: d\n                },\n                requester: {\n                    publicKey: E,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(S)\n            }, P = {\n                eip155: {\n                    chains: e,\n                    methods: [\n                        ...new Set([\n                            \"personal_sign\",\n                            ...p\n                        ])\n                    ],\n                    events: [\n                        \"chainChanged\",\n                        \"accountsChanged\"\n                    ]\n                }\n            }, v = {\n                requiredNamespaces: {},\n                optionalNamespaces: P,\n                relays: [\n                    {\n                        protocol: \"irn\"\n                    }\n                ],\n                proposer: {\n                    publicKey: E,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(f.wc_sessionPropose.req.ttl)\n            }, { done: B, resolve: Ie, reject: ae } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(S, \"Request expired\"), W = async ({ error: T, session: _ })=>{\n                if (this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", K), ce), T) ae(T);\n                else if (_) {\n                    _.self.publicKey = E, await this.client.session.set(_.topic, _), await this.setExpiry(_.topic, _.expiry), w && await this.client.core.pairing.updateMetadata({\n                        topic: w,\n                        metadata: _.peer.metadata\n                    });\n                    const j = this.client.session.get(_.topic);\n                    await this.deleteProposal(Q), Ie({\n                        session: j\n                    });\n                }\n            }, ce = async (T)=>{\n                if (await this.deletePendingAuthRequest(K, {\n                    message: \"fulfilled\",\n                    code: 0\n                }), T.error) {\n                    const z = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", \"wc_sessionAuthenticate\");\n                    return T.error.code === z.code ? void 0 : (this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), W), ae(T.error.message));\n                }\n                await this.deleteProposal(Q), this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), W);\n                const { cacaos: _, responder: j } = T.result, le = [], fe = [];\n                for (const z of _){\n                    await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.validateSignedCacao)({\n                        cacao: z,\n                        projectId: this.client.core.projectId\n                    }) || (this.client.logger.error(z, \"Signature verification failed\"), ae((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"SESSION_SETTLEMENT_FAILED\", \"Signature verification failed\")));\n                    const { p: he } = z, pe = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(he.resources), qe = [\n                        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getNamespacedDidChainId)(he.iss)\n                    ], et = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDidAddress)(he.iss);\n                    if (pe) {\n                        const de = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getMethodsFromRecap)(pe), tt = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getChainsFromRecap)(pe);\n                        le.push(...de), qe.push(...tt);\n                    }\n                    for (const de of qe)fe.push(`${de}:${et}`);\n                }\n                const Z = await this.client.core.crypto.generateSharedKey(E, j.publicKey);\n                let ee;\n                le.length > 0 && (ee = {\n                    topic: Z,\n                    acknowledged: !0,\n                    self: {\n                        publicKey: E,\n                        metadata: this.client.metadata\n                    },\n                    peer: j,\n                    controller: j.publicKey,\n                    expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(L),\n                    requiredNamespaces: {},\n                    optionalNamespaces: {},\n                    relay: {\n                        protocol: \"irn\"\n                    },\n                    pairingTopic: w,\n                    namespaces: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.buildNamespacesFromAuth)([\n                        ...new Set(le)\n                    ], [\n                        ...new Set(fe)\n                    ])\n                }, await this.client.core.relayer.subscribe(Z), await this.client.session.set(Z, ee), ee = this.client.session.get(Z)), Ie({\n                    auths: _,\n                    session: ee\n                });\n            }, K = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), Q = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)();\n            this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), W), this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", K), ce);\n            try {\n                await Promise.all([\n                    this.sendRequest({\n                        topic: w,\n                        method: \"wc_sessionAuthenticate\",\n                        params: N,\n                        expiry: t.expiry,\n                        throwOnFailedPublish: !0,\n                        clientRpcId: K\n                    }),\n                    this.sendRequest({\n                        topic: w,\n                        method: \"wc_sessionPropose\",\n                        params: v,\n                        expiry: f.wc_sessionPropose.req.ttl,\n                        throwOnFailedPublish: !0,\n                        clientRpcId: Q\n                    })\n                ]);\n            } catch (T) {\n                throw this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), W), this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", K), ce), T;\n            }\n            return await this.setProposal(Q, y({\n                id: Q\n            }, v)), await this.setAuthRequest(K, {\n                request: M(y({}, N), {\n                    verifyContext: {}\n                }),\n                pairingTopic: w\n            }), {\n                uri: m,\n                response: B\n            };\n        }, this.approveSessionAuthenticate = async (t)=>{\n            this.isInitialized();\n            const { id: e, auths: s } = t, i = this.getPendingAuthRequest(e);\n            if (!i) throw new Error(`Could not find pending auth request with id ${e}`);\n            const r = i.requester.publicKey, o = await this.client.core.crypto.generateKeyPair(), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(r), c = {\n                type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1,\n                receiverPublicKey: r,\n                senderPublicKey: o\n            }, h = [], p = [];\n            for (const w of s){\n                if (!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.validateSignedCacao)({\n                    cacao: w,\n                    projectId: this.client.core.projectId\n                })) {\n                    const N = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"SESSION_SETTLEMENT_FAILED\", \"Signature verification failed\");\n                    throw await this.sendError({\n                        id: e,\n                        topic: a,\n                        error: N,\n                        encodeOpts: c\n                    }), new Error(N.message);\n                }\n                const { p: m } = w, E = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(m.resources), O = [\n                    (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getNamespacedDidChainId)(m.iss)\n                ], S = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDidAddress)(m.iss);\n                if (E) {\n                    const N = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getMethodsFromRecap)(E), P = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getChainsFromRecap)(E);\n                    h.push(...N), O.push(...P);\n                }\n                for (const N of O)p.push(`${N}:${S}`);\n            }\n            const g = await this.client.core.crypto.generateSharedKey(o, r);\n            let d;\n            return h?.length > 0 && (d = {\n                topic: g,\n                acknowledged: !0,\n                self: {\n                    publicKey: o,\n                    metadata: this.client.metadata\n                },\n                peer: {\n                    publicKey: r,\n                    metadata: i.requester.metadata\n                },\n                controller: r,\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(L),\n                authentication: s,\n                requiredNamespaces: {},\n                optionalNamespaces: {},\n                relay: {\n                    protocol: \"irn\"\n                },\n                pairingTopic: \"\",\n                namespaces: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.buildNamespacesFromAuth)([\n                    ...new Set(h)\n                ], [\n                    ...new Set(p)\n                ])\n            }, await this.client.core.relayer.subscribe(g), await this.client.session.set(g, d)), await this.sendResult({\n                topic: a,\n                id: e,\n                result: {\n                    cacaos: s,\n                    responder: {\n                        publicKey: o,\n                        metadata: this.client.metadata\n                    }\n                },\n                encodeOpts: c,\n                throwOnFailedPublish: !0\n            }), await this.client.auth.requests.delete(e, {\n                message: \"fullfilled\",\n                code: 0\n            }), await this.client.core.pairing.activate({\n                topic: i.pairingTopic\n            }), {\n                session: d\n            };\n        }, this.rejectSessionAuthenticate = async (t)=>{\n            await this.isInitialized();\n            const { id: e, reason: s } = t, i = this.getPendingAuthRequest(e);\n            if (!i) throw new Error(`Could not find pending auth request with id ${e}`);\n            const r = i.requester.publicKey, o = await this.client.core.crypto.generateKeyPair(), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(r), c = {\n                type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1,\n                receiverPublicKey: r,\n                senderPublicKey: o\n            };\n            await this.sendError({\n                id: e,\n                topic: a,\n                error: s,\n                encodeOpts: c\n            }), await this.client.auth.requests.delete(e, {\n                message: \"rejected\",\n                code: 0\n            }), await this.client.proposal.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n        }, this.formatAuthMessage = (t)=>{\n            this.isInitialized();\n            const { request: e, iss: s } = t;\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.formatMessage)(e, s);\n        }, this.cleanupDuplicatePairings = async (t)=>{\n            if (t.pairingTopic) try {\n                const e = this.client.core.pairing.pairings.get(t.pairingTopic), s = this.client.core.pairing.pairings.getAll().filter((i)=>{\n                    var r, o;\n                    return ((r = i.peerMetadata) == null ? void 0 : r.url) && ((o = i.peerMetadata) == null ? void 0 : o.url) === t.peer.metadata.url && i.topic && i.topic !== e.topic;\n                });\n                if (s.length === 0) return;\n                this.client.logger.info(`Cleaning up ${s.length} duplicate pairing(s)`), await Promise.all(s.map((i)=>this.client.core.pairing.disconnect({\n                        topic: i.topic\n                    }))), this.client.logger.info(\"Duplicate pairings clean up finished\");\n            } catch (e) {\n                this.client.logger.error(e);\n            }\n        }, this.deleteSession = async (t)=>{\n            const { topic: e, expirerHasDeleted: s = !1, emitEvent: i = !0, id: r = 0 } = t, { self: o } = this.client.session.get(e);\n            await this.client.core.relayer.unsubscribe(e), await this.client.session.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.addToRecentlyDeleted(e, \"session\"), this.client.core.crypto.keychain.has(o.publicKey) && await this.client.core.crypto.deleteKeyPair(o.publicKey), this.client.core.crypto.keychain.has(e) && await this.client.core.crypto.deleteSymKey(e), s || this.client.core.expirer.del(e), this.client.core.storage.removeItem(_e).catch((a)=>this.client.logger.warn(a)), this.getPendingSessionRequests().forEach((a)=>{\n                a.topic === e && this.deletePendingSessionRequest(a.id, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n            }), i && this.client.events.emit(\"session_delete\", {\n                id: r,\n                topic: e\n            });\n        }, this.deleteProposal = async (t, e)=>{\n            await Promise.all([\n                this.client.proposal.delete(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")),\n                e ? Promise.resolve() : this.client.core.expirer.del(t)\n            ]), this.addToRecentlyDeleted(t, \"proposal\");\n        }, this.deletePendingSessionRequest = async (t, e, s = !1)=>{\n            await Promise.all([\n                this.client.pendingRequest.delete(t, e),\n                s ? Promise.resolve() : this.client.core.expirer.del(t)\n            ]), this.addToRecentlyDeleted(t, \"request\"), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i)=>i.id !== t), s && (this.sessionRequestQueue.state = D.idle, this.client.events.emit(\"session_request_expire\", {\n                id: t\n            }));\n        }, this.deletePendingAuthRequest = async (t, e, s = !1)=>{\n            await Promise.all([\n                this.client.auth.requests.delete(t, e),\n                s ? Promise.resolve() : this.client.core.expirer.del(t)\n            ]);\n        }, this.setExpiry = async (t, e)=>{\n            this.client.session.keys.includes(t) && (this.client.core.expirer.set(t, e), await this.client.session.update(t, {\n                expiry: e\n            }));\n        }, this.setProposal = async (t, e)=>{\n            this.client.core.expirer.set(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(f.wc_sessionPropose.req.ttl)), await this.client.proposal.set(t, e);\n        }, this.setAuthRequest = async (t, e)=>{\n            const { request: s, pairingTopic: i } = e;\n            this.client.core.expirer.set(t, s.expiryTimestamp), await this.client.auth.requests.set(t, {\n                authPayload: s.authPayload,\n                requester: s.requester,\n                expiryTimestamp: s.expiryTimestamp,\n                id: t,\n                pairingTopic: i,\n                verifyContext: s.verifyContext\n            });\n        }, this.setPendingSessionRequest = async (t)=>{\n            const { id: e, topic: s, params: i, verifyContext: r } = t, o = i.request.expiryTimestamp || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(f.wc_sessionRequest.req.ttl);\n            this.client.core.expirer.set(e, o), await this.client.pendingRequest.set(e, {\n                id: e,\n                topic: s,\n                params: i,\n                verifyContext: r\n            });\n        }, this.sendRequest = async (t)=>{\n            const { topic: e, method: s, params: i, expiry: r, relayRpcId: o, clientRpcId: a, throwOnFailedPublish: c } = t, h = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(s, i, a);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isBrowser)() && je.includes(s)) {\n                const d = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(h));\n                this.client.core.verify.register({\n                    attestationId: d\n                });\n            }\n            let p;\n            try {\n                p = await this.client.core.crypto.encode(e, h);\n            } catch (d) {\n                throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${e} failed`), d;\n            }\n            const g = f[s].req;\n            return r && (g.ttl = r), o && (g.id = o), this.client.core.history.set(e, h), c ? (g.internal = M(y({}, g.internal), {\n                throwOnFailedPublish: !0\n            }), await this.client.core.relayer.publish(e, p, g)) : this.client.core.relayer.publish(e, p, g).catch((d)=>this.client.logger.error(d)), h.id;\n        }, this.sendResult = async (t)=>{\n            const { id: e, topic: s, result: i, throwOnFailedPublish: r, encodeOpts: o } = t, a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult)(e, i);\n            let c;\n            try {\n                c = await this.client.core.crypto.encode(s, a, o);\n            } catch (g) {\n                throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${s} failed`), g;\n            }\n            let h;\n            try {\n                h = await this.client.core.history.get(s, e);\n            } catch (g) {\n                throw this.client.logger.error(`sendResult() -> history.get(${s}, ${e}) failed`), g;\n            }\n            const p = f[h.request.method].res;\n            r ? (p.internal = M(y({}, p.internal), {\n                throwOnFailedPublish: !0\n            }), await this.client.core.relayer.publish(s, c, p)) : this.client.core.relayer.publish(s, c, p).catch((g)=>this.client.logger.error(g)), await this.client.core.history.resolve(a);\n        }, this.sendError = async (t)=>{\n            const { id: e, topic: s, error: i, encodeOpts: r } = t, o = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(e, i);\n            let a;\n            try {\n                a = await this.client.core.crypto.encode(s, o, r);\n            } catch (p) {\n                throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${s} failed`), p;\n            }\n            let c;\n            try {\n                c = await this.client.core.history.get(s, e);\n            } catch (p) {\n                throw this.client.logger.error(`sendError() -> history.get(${s}, ${e}) failed`), p;\n            }\n            const h = f[c.request.method].res;\n            this.client.core.relayer.publish(s, a, h), await this.client.core.history.resolve(o);\n        }, this.cleanup = async ()=>{\n            const t = [], e = [];\n            this.client.session.getAll().forEach((s)=>{\n                let i = !1;\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(s.expiry) && (i = !0), this.client.core.crypto.keychain.has(s.topic) || (i = !0), i && t.push(s.topic);\n            }), this.client.proposal.getAll().forEach((s)=>{\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(s.expiryTimestamp) && e.push(s.id);\n            }), await Promise.all([\n                ...t.map((s)=>this.deleteSession({\n                        topic: s\n                    })),\n                ...e.map((s)=>this.deleteProposal(s))\n            ]);\n        }, this.onRelayEventRequest = async (t)=>{\n            this.requestQueue.queue.push(t), await this.processRequestsQueue();\n        }, this.processRequestsQueue = async ()=>{\n            if (this.requestQueue.state === D.active) {\n                this.client.logger.info(\"Request queue already active, skipping...\");\n                return;\n            }\n            for(this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0;){\n                this.requestQueue.state = D.active;\n                const t = this.requestQueue.queue.shift();\n                if (t) try {\n                    this.processRequest(t), await new Promise((e)=>setTimeout(e, 300));\n                } catch (e) {\n                    this.client.logger.warn(e);\n                }\n            }\n            this.requestQueue.state = D.idle;\n        }, this.processRequest = (t)=>{\n            const { topic: e, payload: s } = t, i = s.method;\n            if (!this.shouldIgnorePairingRequest({\n                topic: e,\n                requestMethod: i\n            })) switch(i){\n                case \"wc_sessionPropose\":\n                    return this.onSessionProposeRequest(e, s);\n                case \"wc_sessionSettle\":\n                    return this.onSessionSettleRequest(e, s);\n                case \"wc_sessionUpdate\":\n                    return this.onSessionUpdateRequest(e, s);\n                case \"wc_sessionExtend\":\n                    return this.onSessionExtendRequest(e, s);\n                case \"wc_sessionPing\":\n                    return this.onSessionPingRequest(e, s);\n                case \"wc_sessionDelete\":\n                    return this.onSessionDeleteRequest(e, s);\n                case \"wc_sessionRequest\":\n                    return this.onSessionRequest(e, s);\n                case \"wc_sessionEvent\":\n                    return this.onSessionEventRequest(e, s);\n                case \"wc_sessionAuthenticate\":\n                    return this.onSessionAuthenticateRequest(e, s);\n                default:\n                    return this.client.logger.info(`Unsupported request method ${i}`);\n            }\n        }, this.onRelayEventResponse = async (t)=>{\n            const { topic: e, payload: s } = t, i = (await this.client.core.history.get(e, s.id)).request.method;\n            switch(i){\n                case \"wc_sessionPropose\":\n                    return this.onSessionProposeResponse(e, s);\n                case \"wc_sessionSettle\":\n                    return this.onSessionSettleResponse(e, s);\n                case \"wc_sessionUpdate\":\n                    return this.onSessionUpdateResponse(e, s);\n                case \"wc_sessionExtend\":\n                    return this.onSessionExtendResponse(e, s);\n                case \"wc_sessionPing\":\n                    return this.onSessionPingResponse(e, s);\n                case \"wc_sessionRequest\":\n                    return this.onSessionRequestResponse(e, s);\n                case \"wc_sessionAuthenticate\":\n                    return this.onSessionAuthenticateResponse(e, s);\n                default:\n                    return this.client.logger.info(`Unsupported response method ${i}`);\n            }\n        }, this.onRelayEventUnknownPayload = (t)=>{\n            const { topic: e } = t, { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `Decoded payload on topic ${e} is not identifiable as a JSON-RPC request or a response.`);\n            throw new Error(s);\n        }, this.shouldIgnorePairingRequest = (t)=>{\n            const { topic: e, requestMethod: s } = t, i = this.expectedPairingMethodMap.get(e);\n            return !i || i.includes(s) ? !1 : !!(i.includes(\"wc_sessionAuthenticate\") && this.client.events.listenerCount(\"session_authenticate\") > 0);\n        }, this.onSessionProposeRequest = async (t, e)=>{\n            const { params: s, id: i } = e;\n            try {\n                this.isValidConnect(y({}, e.params));\n                const r = s.expiryTimestamp || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(f.wc_sessionPropose.req.ttl), o = y({\n                    id: i,\n                    pairingTopic: t,\n                    expiryTimestamp: r\n                }, s);\n                await this.setProposal(i, o);\n                const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(e)), c = await this.getVerifyContext(a, o.proposer.metadata);\n                this.client.events.emit(\"session_proposal\", {\n                    id: i,\n                    params: o,\n                    verifyContext: c\n                });\n            } catch (r) {\n                await this.sendError({\n                    id: i,\n                    topic: t,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.onSessionProposeResponse = async (t, e)=>{\n            const { id: s } = e;\n            if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(e)) {\n                const { result: i } = e;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    result: i\n                });\n                const r = this.client.proposal.get(s);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    proposal: r\n                });\n                const o = r.proposer.publicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    selfPublicKey: o\n                });\n                const a = i.responderPublicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    peerPublicKey: a\n                });\n                const c = await this.client.core.crypto.generateSharedKey(o, a);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    sessionTopic: c\n                });\n                const h = await this.client.core.relayer.subscribe(c);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    subscriptionId: h\n                }), await this.client.core.pairing.activate({\n                    topic: t\n                });\n            } else if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(e)) {\n                await this.client.proposal.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n                const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\");\n                if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners, 954`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                    error: e.error\n                });\n            }\n        }, this.onSessionSettleRequest = async (t, e)=>{\n            const { id: s, params: i } = e;\n            try {\n                this.isValidSessionSettleRequest(i);\n                const { relay: r, controller: o, expiry: a, namespaces: c, sessionProperties: h, pairingTopic: p, sessionConfig: g } = e.params, d = y(y({\n                    topic: t,\n                    relay: r,\n                    expiry: a,\n                    namespaces: c,\n                    acknowledged: !0,\n                    pairingTopic: p,\n                    requiredNamespaces: {},\n                    optionalNamespaces: {},\n                    controller: o.publicKey,\n                    self: {\n                        publicKey: \"\",\n                        metadata: this.client.metadata\n                    },\n                    peer: {\n                        publicKey: o.publicKey,\n                        metadata: o.metadata\n                    }\n                }, h && {\n                    sessionProperties: h\n                }), g && {\n                    sessionConfig: g\n                });\n                await this.sendResult({\n                    id: e.id,\n                    topic: t,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                });\n                const w = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\");\n                if (this.events.listenerCount(w) === 0) throw new Error(`emitting ${w} without any listeners 997`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                    session: d\n                }), this.cleanupDuplicatePairings(d);\n            } catch (r) {\n                await this.sendError({\n                    id: s,\n                    topic: t,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.onSessionSettleResponse = async (t, e)=>{\n            const { id: s } = e;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(e) ? (await this.client.session.update(t, {\n                acknowledged: !0\n            }), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", s), {})) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(e) && (await this.client.session.delete(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", s), {\n                error: e.error\n            }));\n        }, this.onSessionUpdateRequest = async (t, e)=>{\n            const { params: s, id: i } = e;\n            try {\n                const r = `${t}_session_update`, o = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(r);\n                if (o && this.isRequestOutOfSync(o, i)) {\n                    this.client.logger.info(`Discarding out of sync request - ${i}`), this.sendError({\n                        id: i,\n                        topic: t,\n                        error: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"INVALID_UPDATE_REQUEST\")\n                    });\n                    return;\n                }\n                this.isValidUpdate(y({\n                    topic: t\n                }, s));\n                try {\n                    _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(r, i), await this.client.session.update(t, {\n                        namespaces: s.namespaces\n                    }), await this.sendResult({\n                        id: i,\n                        topic: t,\n                        result: !0,\n                        throwOnFailedPublish: !0\n                    });\n                } catch (a) {\n                    throw _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.delete(r), a;\n                }\n                this.client.events.emit(\"session_update\", {\n                    id: i,\n                    topic: t,\n                    params: s\n                });\n            } catch (r) {\n                await this.sendError({\n                    id: i,\n                    topic: t,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.isRequestOutOfSync = (t, e)=>parseInt(e.toString().slice(0, -3)) <= parseInt(t.toString().slice(0, -3)), this.onSessionUpdateResponse = (t, e)=>{\n            const { id: s } = e, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(e) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(e) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s), {\n                error: e.error\n            });\n        }, this.onSessionExtendRequest = async (t, e)=>{\n            const { id: s } = e;\n            try {\n                this.isValidExtend({\n                    topic: t\n                }), await this.setExpiry(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(L)), await this.sendResult({\n                    id: s,\n                    topic: t,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                }), this.client.events.emit(\"session_extend\", {\n                    id: s,\n                    topic: t\n                });\n            } catch (i) {\n                await this.sendError({\n                    id: s,\n                    topic: t,\n                    error: i\n                }), this.client.logger.error(i);\n            }\n        }, this.onSessionExtendResponse = (t, e)=>{\n            const { id: s } = e, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(e) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(e) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), {\n                error: e.error\n            });\n        }, this.onSessionPingRequest = async (t, e)=>{\n            const { id: s } = e;\n            try {\n                this.isValidPing({\n                    topic: t\n                }), await this.sendResult({\n                    id: s,\n                    topic: t,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                }), this.client.events.emit(\"session_ping\", {\n                    id: s,\n                    topic: t\n                });\n            } catch (i) {\n                await this.sendError({\n                    id: s,\n                    topic: t,\n                    error: i\n                }), this.client.logger.error(i);\n            }\n        }, this.onSessionPingResponse = (t, e)=>{\n            const { id: s } = e, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(e) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(e) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), {\n                    error: e.error\n                });\n            }, 500);\n        }, this.onSessionDeleteRequest = async (t, e)=>{\n            const { id: s } = e;\n            try {\n                this.isValidDisconnect({\n                    topic: t,\n                    reason: e.params\n                }), await Promise.all([\n                    new Promise((i)=>{\n                        this.client.core.relayer.once(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.publish, async ()=>{\n                            i(await this.deleteSession({\n                                topic: t,\n                                id: s\n                            }));\n                        });\n                    }),\n                    this.sendResult({\n                        id: s,\n                        topic: t,\n                        result: !0,\n                        throwOnFailedPublish: !0\n                    }),\n                    this.cleanupPendingSentRequestsForTopic({\n                        topic: t,\n                        error: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")\n                    })\n                ]);\n            } catch (i) {\n                this.client.logger.error(i);\n            }\n        }, this.onSessionRequest = async (t, e)=>{\n            var s;\n            const { id: i, params: r } = e;\n            try {\n                await this.isValidRequest(y({\n                    topic: t\n                }, r));\n                const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionRequest\", r, i))), a = this.client.session.get(t), c = await this.getVerifyContext(o, a.peer.metadata), h = {\n                    id: i,\n                    topic: t,\n                    params: r,\n                    verifyContext: c\n                };\n                await this.setPendingSessionRequest(h), (s = this.client.signConfig) != null && s.disableRequestQueue ? this.emitSessionRequest(h) : (this.addSessionRequestToSessionRequestQueue(h), this.processSessionRequestQueue());\n            } catch (o) {\n                await this.sendError({\n                    id: i,\n                    topic: t,\n                    error: o\n                }), this.client.logger.error(o);\n            }\n        }, this.onSessionRequestResponse = (t, e)=>{\n            const { id: s } = e, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(e) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                result: e.result\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(e) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                error: e.error\n            });\n        }, this.onSessionEventRequest = async (t, e)=>{\n            const { id: s, params: i } = e;\n            try {\n                const r = `${t}_session_event_${i.event.name}`, o = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(r);\n                if (o && this.isRequestOutOfSync(o, s)) {\n                    this.client.logger.info(`Discarding out of sync request - ${s}`);\n                    return;\n                }\n                this.isValidEmit(y({\n                    topic: t\n                }, i)), this.client.events.emit(\"session_event\", {\n                    id: s,\n                    topic: t,\n                    params: i\n                }), _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(r, s);\n            } catch (r) {\n                await this.sendError({\n                    id: s,\n                    topic: t,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.onSessionAuthenticateResponse = (t, e)=>{\n            const { id: s } = e;\n            this.client.logger.trace({\n                type: \"method\",\n                method: \"onSessionAuthenticateResponse\",\n                topic: t,\n                payload: e\n            }), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(e) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                result: e.result\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(e) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                error: e.error\n            });\n        }, this.onSessionAuthenticateRequest = async (t, e)=>{\n            const { requester: s, authPayload: i, expiryTimestamp: r } = e.params, o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(e)), a = await this.getVerifyContext(o, this.client.metadata), c = {\n                requester: s,\n                pairingTopic: t,\n                id: e.id,\n                authPayload: i,\n                verifyContext: a,\n                expiryTimestamp: r\n            };\n            await this.setAuthRequest(e.id, {\n                request: c,\n                pairingTopic: t\n            }), this.client.events.emit(\"session_authenticate\", {\n                topic: t,\n                params: e.params,\n                id: e.id\n            });\n        }, this.addSessionRequestToSessionRequestQueue = (t)=>{\n            this.sessionRequestQueue.queue.push(t);\n        }, this.cleanupAfterResponse = (t)=>{\n            this.deletePendingSessionRequest(t.response.id, {\n                message: \"fulfilled\",\n                code: 0\n            }), setTimeout(()=>{\n                this.sessionRequestQueue.state = D.idle, this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay));\n        }, this.cleanupPendingSentRequestsForTopic = ({ topic: t, error: e })=>{\n            const s = this.client.core.history.pending;\n            s.length > 0 && s.filter((i)=>i.topic === t && i.request.method === \"wc_sessionRequest\").forEach((i)=>{\n                const r = i.request.id, o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", r);\n                if (this.events.listenerCount(o) === 0) throw new Error(`emitting ${o} without any listeners`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", i.request.id), {\n                    error: e\n                });\n            });\n        }, this.processSessionRequestQueue = ()=>{\n            if (this.sessionRequestQueue.state === D.active) {\n                this.client.logger.info(\"session request queue is already active.\");\n                return;\n            }\n            const t = this.sessionRequestQueue.queue[0];\n            if (!t) {\n                this.client.logger.info(\"session request queue is empty.\");\n                return;\n            }\n            try {\n                this.sessionRequestQueue.state = D.active, this.emitSessionRequest(t);\n            } catch (e) {\n                this.client.logger.error(e);\n            }\n        }, this.emitSessionRequest = (t)=>{\n            this.client.events.emit(\"session_request\", t);\n        }, this.onPairingCreated = (t)=>{\n            if (t.methods && this.expectedPairingMethodMap.set(t.topic, t.methods), t.active) return;\n            const e = this.client.proposal.getAll().find((s)=>s.pairingTopic === t.topic);\n            e && this.onSessionProposeRequest(t.topic, (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionPropose\", {\n                requiredNamespaces: e.requiredNamespaces,\n                optionalNamespaces: e.optionalNamespaces,\n                relays: e.relays,\n                proposer: e.proposer,\n                sessionProperties: e.sessionProperties\n            }, e.id));\n        }, this.isValidConnect = async (t)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(t)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() params: ${JSON.stringify(t)}`);\n                throw new Error(a);\n            }\n            const { pairingTopic: e, requiredNamespaces: s, optionalNamespaces: i, sessionProperties: r, relays: o } = t;\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(e) || await this.isValidPairingTopic(e), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelays)(o, !0)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() relays: ${o}`);\n                throw new Error(a);\n            }\n            !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(s) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(s) !== 0 && this.validateNamespaces(s, \"requiredNamespaces\"), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(i) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(i) !== 0 && this.validateNamespaces(i, \"optionalNamespaces\"), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(r) || this.validateSessionProps(r, \"sessionProperties\");\n        }, this.validateNamespaces = (t, e)=>{\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequiredNamespaces)(t, \"connect()\", e);\n            if (s) throw new Error(s.message);\n        }, this.isValidApprove = async (t)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(t)) throw new Error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() params: ${t}`).message);\n            const { id: e, namespaces: s, relayProtocol: i, sessionProperties: r } = t;\n            this.checkRecentlyDeleted(e), await this.isValidProposalId(e);\n            const o = this.client.proposal.get(e), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(s, \"approve()\");\n            if (a) throw new Error(a.message);\n            const c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(o.requiredNamespaces, s, \"approve()\");\n            if (c) throw new Error(c.message);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(i, !0)) {\n                const { message: h } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() relayProtocol: ${i}`);\n                throw new Error(h);\n            }\n            (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(r) || this.validateSessionProps(r, \"sessionProperties\");\n        }, this.isValidReject = async (t)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(t)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() params: ${t}`);\n                throw new Error(i);\n            }\n            const { id: e, reason: s } = t;\n            if (this.checkRecentlyDeleted(e), await this.isValidProposalId(e), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidErrorReason)(s)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() reason: ${JSON.stringify(s)}`);\n                throw new Error(i);\n            }\n        }, this.isValidSessionSettleRequest = (t)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(t)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `onSessionSettleRequest() params: ${t}`);\n                throw new Error(c);\n            }\n            const { relay: e, controller: s, namespaces: i, expiry: r } = t;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelay)(e)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", \"onSessionSettleRequest() relay protocol should be a string\");\n                throw new Error(c);\n            }\n            const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidController)(s, \"onSessionSettleRequest()\");\n            if (o) throw new Error(o.message);\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(i, \"onSessionSettleRequest()\");\n            if (a) throw new Error(a.message);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(r)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", \"onSessionSettleRequest()\");\n                throw new Error(c);\n            }\n        }, this.isValidUpdate = async (t)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(t)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `update() params: ${t}`);\n                throw new Error(a);\n            }\n            const { topic: e, namespaces: s } = t;\n            this.checkRecentlyDeleted(e), await this.isValidSessionTopic(e);\n            const i = this.client.session.get(e), r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(s, \"update()\");\n            if (r) throw new Error(r.message);\n            const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(i.requiredNamespaces, s, \"update()\");\n            if (o) throw new Error(o.message);\n        }, this.isValidExtend = async (t)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(t)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `extend() params: ${t}`);\n                throw new Error(s);\n            }\n            const { topic: e } = t;\n            this.checkRecentlyDeleted(e), await this.isValidSessionTopic(e);\n        }, this.isValidRequest = async (t)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(t)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() params: ${t}`);\n                throw new Error(a);\n            }\n            const { topic: e, request: s, chainId: i, expiry: r } = t;\n            this.checkRecentlyDeleted(e), await this.isValidSessionTopic(e);\n            const { namespaces: o } = this.client.session.get(e);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(o, i)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() chainId: ${i}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequest)(s)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() ${JSON.stringify(s)}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesRequest)(o, i, s.method)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() method: ${s.method}`);\n                throw new Error(a);\n            }\n            if (r && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequestExpiry)(r, ne)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() expiry: ${r}. Expiry must be a number (in seconds) between ${ne.min} and ${ne.max}`);\n                throw new Error(a);\n            }\n        }, this.isValidRespond = async (t)=>{\n            var e;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(t)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() params: ${t}`);\n                throw new Error(r);\n            }\n            const { topic: s, response: i } = t;\n            try {\n                await this.isValidSessionTopic(s);\n            } catch (r) {\n                throw (e = t?.response) != null && e.id && this.cleanupAfterResponse(t), r;\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidResponse)(i)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() response: ${JSON.stringify(i)}`);\n                throw new Error(r);\n            }\n        }, this.isValidPing = async (t)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(t)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${t}`);\n                throw new Error(s);\n            }\n            const { topic: e } = t;\n            await this.isValidSessionOrPairingTopic(e);\n        }, this.isValidEmit = async (t)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(t)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() params: ${t}`);\n                throw new Error(o);\n            }\n            const { topic: e, event: s, chainId: i } = t;\n            await this.isValidSessionTopic(e);\n            const { namespaces: r } = this.client.session.get(e);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(r, i)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() chainId: ${i}`);\n                throw new Error(o);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidEvent)(s)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(s)}`);\n                throw new Error(o);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesEvent)(r, i, s.name)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(s)}`);\n                throw new Error(o);\n            }\n        }, this.isValidDisconnect = async (t)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(t)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${t}`);\n                throw new Error(s);\n            }\n            const { topic: e } = t;\n            await this.isValidSessionOrPairingTopic(e);\n        }, this.isValidAuthenticate = (t)=>{\n            const { chains: e, uri: s, domain: i, nonce: r } = t;\n            if (!Array.isArray(e) || e.length === 0) throw new Error(\"chains is required and must be a non-empty array\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(s, !1)) throw new Error(\"uri is required parameter\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(i, !1)) throw new Error(\"domain is required parameter\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) throw new Error(\"nonce is required parameter\");\n            if ([\n                ...new Set(e.map((a)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(a).namespace))\n            ].length > 1) throw new Error(\"Multi-namespace requests are not supported. Please request single namespace only.\");\n            const { namespace: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(e[0]);\n            if (o !== \"eip155\") throw new Error(\"Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.\");\n        }, this.getVerifyContext = async (t, e)=>{\n            const s = {\n                verified: {\n                    verifyUrl: e.verifyUrl || _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.VERIFY_SERVER,\n                    validation: \"UNKNOWN\",\n                    origin: e.url || \"\"\n                }\n            };\n            try {\n                const i = await this.client.core.verify.resolve({\n                    attestationId: t,\n                    verifyUrl: e.verifyUrl\n                });\n                i && (s.verified.origin = i.origin, s.verified.isScam = i.isScam, s.verified.validation = i.origin === new URL(e.url).origin ? \"VALID\" : \"INVALID\");\n            } catch (i) {\n                this.client.logger.info(i);\n            }\n            return this.client.logger.info(`Verify context: ${JSON.stringify(s)}`), s;\n        }, this.validateSessionProps = (t, e)=>{\n            Object.values(t).forEach((s)=>{\n                if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(s, !1)) {\n                    const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `${e} must be in Record<string, string> format. Received: ${JSON.stringify(s)}`);\n                    throw new Error(i);\n                }\n            });\n        }, this.getPendingAuthRequest = (t)=>{\n            const e = this.client.auth.requests.get(t);\n            return typeof e == \"object\" ? e : void 0;\n        }, this.addToRecentlyDeleted = (t, e)=>{\n            if (this.recentlyDeletedMap.set(t, e), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {\n                let s = 0;\n                const i = this.recentlyDeletedLimit / 2;\n                for (const r of this.recentlyDeletedMap.keys()){\n                    if (s++ >= i) break;\n                    this.recentlyDeletedMap.delete(r);\n                }\n            }\n        }, this.checkRecentlyDeleted = (t)=>{\n            const e = this.recentlyDeletedMap.get(t);\n            if (e) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `Record was recently deleted - ${e}: ${t}`);\n                throw new Error(s);\n            }\n        };\n    }\n    async isInitialized() {\n        if (!this.initialized) {\n            const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(n);\n        }\n        await this.client.core.relayer.confirmOnlineStateOrThrow();\n    }\n    registerRelayerEvents() {\n        this.client.core.relayer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.message, async (n)=>{\n            const { topic: t, message: e } = n, { publicKey: s } = this.client.auth.authKeys.keys.includes(J) ? this.client.auth.authKeys.get(J) : {\n                responseTopic: void 0,\n                publicKey: void 0\n            }, i = await this.client.core.crypto.decode(t, e, {\n                receiverPublicKey: s\n            });\n            try {\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcRequest)(i) ? (this.client.core.history.set(t, i), this.onRelayEventRequest({\n                    topic: t,\n                    payload: i\n                })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResponse)(i) ? (await this.client.core.history.resolve(i), await this.onRelayEventResponse({\n                    topic: t,\n                    payload: i\n                }), this.client.core.history.delete(t, i.id)) : this.onRelayEventUnknownPayload({\n                    topic: t,\n                    payload: i\n                });\n            } catch (r) {\n                this.client.logger.error(r);\n            }\n        });\n    }\n    registerExpirerEvents() {\n        this.client.core.expirer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EXPIRER_EVENTS.expired, async (n)=>{\n            const { topic: t, id: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseExpirerTarget)(n.target);\n            if (e && this.client.pendingRequest.keys.includes(e)) return await this.deletePendingSessionRequest(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\"), !0);\n            if (e && this.client.auth.requests.keys.includes(e)) return await this.deletePendingAuthRequest(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\"), !0);\n            t ? this.client.session.keys.includes(t) && (await this.deleteSession({\n                topic: t,\n                expirerHasDeleted: !0\n            }), this.client.events.emit(\"session_expire\", {\n                topic: t\n            })) : e && (await this.deleteProposal(e, !0), this.client.events.emit(\"proposal_expire\", {\n                id: e\n            }));\n        });\n    }\n    registerPairingEvents() {\n        this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.PAIRING_EVENTS.create, (n)=>this.onPairingCreated(n)), this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.PAIRING_EVENTS.delete, (n)=>{\n            this.addToRecentlyDeleted(n.topic, \"pairing\");\n        });\n    }\n    isValidPairingTopic(n) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(n, !1)) {\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${n}`);\n            throw new Error(t);\n        }\n        if (!this.client.core.pairing.pairings.keys.includes(n)) {\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${n}`);\n            throw new Error(t);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.core.pairing.pairings.get(n).expiry)) {\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `pairing topic: ${n}`);\n            throw new Error(t);\n        }\n    }\n    async isValidSessionTopic(n) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(n, !1)) {\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session topic should be a string: ${n}`);\n            throw new Error(t);\n        }\n        if (this.checkRecentlyDeleted(n), !this.client.session.keys.includes(n)) {\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session topic doesn't exist: ${n}`);\n            throw new Error(t);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.session.get(n).expiry)) {\n            await this.deleteSession({\n                topic: n\n            });\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `session topic: ${n}`);\n            throw new Error(t);\n        }\n        if (!this.client.core.crypto.keychain.has(n)) {\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session topic does not exist in keychain: ${n}`);\n            throw await this.deleteSession({\n                topic: n\n            }), new Error(t);\n        }\n    }\n    async isValidSessionOrPairingTopic(n) {\n        if (this.checkRecentlyDeleted(n), this.client.session.keys.includes(n)) await this.isValidSessionTopic(n);\n        else if (this.client.core.pairing.pairings.keys.includes(n)) this.isValidPairingTopic(n);\n        else if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(n, !1)) {\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session or pairing topic doesn't exist: ${n}`);\n            throw new Error(t);\n        } else {\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session or pairing topic should be a string: ${n}`);\n            throw new Error(t);\n        }\n    }\n    async isValidProposalId(n) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidId)(n)) {\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `proposal id should be a number: ${n}`);\n            throw new Error(t);\n        }\n        if (!this.client.proposal.keys.includes(n)) {\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${n}`);\n            throw new Error(t);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.proposal.get(n).expiryTimestamp)) {\n            await this.deleteProposal(n);\n            const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `proposal id: ${n}`);\n            throw new Error(t);\n        }\n    }\n}\nclass es extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(n, t){\n        super(n, t, Ue, ie), this.core = n, this.logger = t;\n    }\n}\nclass Ze extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(n, t){\n        super(n, t, ke, ie), this.core = n, this.logger = t;\n    }\n}\nclass ts extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(n, t){\n        super(n, t, Qe, ie, (e)=>e.id), this.core = n, this.logger = t;\n    }\n}\nclass ss extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(n, t){\n        super(n, t, Ye, X, ()=>J), this.core = n, this.logger = t;\n    }\n}\nclass is extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(n, t){\n        super(n, t, Xe, X), this.core = n, this.logger = t;\n    }\n}\nclass rs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(n, t){\n        super(n, t, Je, X, (e)=>e.id), this.core = n, this.logger = t;\n    }\n}\nclass ns {\n    constructor(n, t){\n        this.core = n, this.logger = t, this.authKeys = new ss(this.core, this.logger), this.pairingTopics = new is(this.core, this.logger), this.requests = new rs(this.core, this.logger);\n    }\n    async init() {\n        await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init();\n    }\n}\nclass oe extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.ISignClient {\n    constructor(n){\n        super(n), this.protocol = Re, this.version = Ee, this.name = re.name, this.events = new events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter, this.on = (e, s)=>this.events.on(e, s), this.once = (e, s)=>this.events.once(e, s), this.off = (e, s)=>this.events.off(e, s), this.removeListener = (e, s)=>this.events.removeListener(e, s), this.removeAllListeners = (e)=>this.events.removeAllListeners(e), this.connect = async (e)=>{\n            try {\n                return await this.engine.connect(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.pair = async (e)=>{\n            try {\n                return await this.engine.pair(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.approve = async (e)=>{\n            try {\n                return await this.engine.approve(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.reject = async (e)=>{\n            try {\n                return await this.engine.reject(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.update = async (e)=>{\n            try {\n                return await this.engine.update(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.extend = async (e)=>{\n            try {\n                return await this.engine.extend(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.request = async (e)=>{\n            try {\n                return await this.engine.request(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.respond = async (e)=>{\n            try {\n                return await this.engine.respond(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.ping = async (e)=>{\n            try {\n                return await this.engine.ping(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.emit = async (e)=>{\n            try {\n                return await this.engine.emit(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.disconnect = async (e)=>{\n            try {\n                return await this.engine.disconnect(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.find = (e)=>{\n            try {\n                return this.engine.find(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.getPendingSessionRequests = ()=>{\n            try {\n                return this.engine.getPendingSessionRequests();\n            } catch (e) {\n                throw this.logger.error(e.message), e;\n            }\n        }, this.authenticate = async (e)=>{\n            try {\n                return await this.engine.authenticate(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.formatAuthMessage = (e)=>{\n            try {\n                return this.engine.formatAuthMessage(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.approveSessionAuthenticate = async (e)=>{\n            try {\n                return await this.engine.approveSessionAuthenticate(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.rejectSessionAuthenticate = async (e)=>{\n            try {\n                return await this.engine.rejectSessionAuthenticate(e);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.name = n?.name || re.name, this.metadata = n?.metadata || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getAppMetadata)(), this.signConfig = n?.signConfig;\n        const t = typeof n?.logger < \"u\" && typeof n?.logger != \"string\" ? n.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: n?.logger || re.logger\n        }));\n        this.core = n?.core || new _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Core(n), this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.generateChildLogger)(t, this.name), this.session = new Ze(this.core, this.logger), this.proposal = new es(this.core, this.logger), this.pendingRequest = new ts(this.core, this.logger), this.engine = new Zt(this), this.auth = new ns(this.core, this.logger);\n    }\n    static async init(n) {\n        const t = new oe(n);\n        return await t.initialize(), t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getLoggerContext)(this.logger);\n    }\n    get pairing() {\n        return this.core.pairing.pairings;\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), await this.auth.init(), this.core.verify.init({\n                verifyUrl: this.metadata.verifyUrl\n            }), this.logger.info(\"SignClient Initialization Success\");\n        } catch (n) {\n            throw this.logger.info(\"SignClient Initialization Failure\"), this.logger.error(n.message), n;\n        }\n    }\n}\nconst os = Ze, as = oe;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/sign-client/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./misc */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsbUZBQVEsR0FBR0g7QUFDeENFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsbUZBQVEsR0FBR0gsVUFDeEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL2NvbnN0YW50cy9pbmRleC5qcz8yZWUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL21pc2NcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdGltZVwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/misc.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;\nexports.ONE_HUNDRED = 100;\nexports.ONE_THOUSAND = 1000; //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvbWlzYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0JBQW9CLEdBQUdBLG1CQUFtQixHQUFHLEtBQUs7QUFDbERBLG1CQUFtQixHQUFHO0FBQ3RCQSxvQkFBb0IsR0FBRyxNQUN2QixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL21pc2MuanM/YjQzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT05FX1RIT1VTQU5EID0gZXhwb3J0cy5PTkVfSFVORFJFRCA9IHZvaWQgMDtcbmV4cG9ydHMuT05FX0hVTkRSRUQgPSAxMDA7XG5leHBvcnRzLk9ORV9USE9VU0FORCA9IDEwMDA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1taXNjLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk9ORV9USE9VU0FORCIsIk9ORV9IVU5EUkVEIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/time.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;\nexports.ONE_SECOND = 1;\nexports.FIVE_SECONDS = 5;\nexports.TEN_SECONDS = 10;\nexports.THIRTY_SECONDS = 30;\nexports.SIXTY_SECONDS = 60;\nexports.ONE_MINUTE = exports.SIXTY_SECONDS;\nexports.FIVE_MINUTES = exports.ONE_MINUTE * 5;\nexports.TEN_MINUTES = exports.ONE_MINUTE * 10;\nexports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;\nexports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;\nexports.ONE_HOUR = exports.SIXTY_MINUTES;\nexports.THREE_HOURS = exports.ONE_HOUR * 3;\nexports.SIX_HOURS = exports.ONE_HOUR * 6;\nexports.TWELVE_HOURS = exports.ONE_HOUR * 12;\nexports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;\nexports.ONE_DAY = exports.TWENTY_FOUR_HOURS;\nexports.THREE_DAYS = exports.ONE_DAY * 3;\nexports.FIVE_DAYS = exports.ONE_DAY * 5;\nexports.SEVEN_DAYS = exports.ONE_DAY * 7;\nexports.THIRTY_DAYS = exports.ONE_DAY * 30;\nexports.ONE_WEEK = exports.SEVEN_DAYS;\nexports.TWO_WEEKS = exports.ONE_WEEK * 2;\nexports.THREE_WEEKS = exports.ONE_WEEK * 3;\nexports.FOUR_WEEKS = exports.ONE_WEEK * 4;\nexports.ONE_YEAR = exports.ONE_DAY * 365; //# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvdGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0JBQWdCLEdBQUdBLGtCQUFrQixHQUFHQSxtQkFBbUIsR0FBR0EsaUJBQWlCLEdBQUdBLGdCQUFnQixHQUFHQSxtQkFBbUIsR0FBR0Esa0JBQWtCLEdBQUdBLGlCQUFpQixHQUFHQSxrQkFBa0IsR0FBR0EsZUFBZSxHQUFHQSx5QkFBeUIsR0FBR0Esb0JBQW9CLEdBQUdBLGlCQUFpQixHQUFHQSxtQkFBbUIsR0FBR0EsZ0JBQWdCLEdBQUdBLHFCQUFxQixHQUFHQSxzQkFBc0IsR0FBR0EsbUJBQW1CLEdBQUdBLG9CQUFvQixHQUFHQSxrQkFBa0IsR0FBR0EscUJBQXFCLEdBQUdBLHNCQUFzQixHQUFHQSxtQkFBbUIsR0FBR0Esb0JBQW9CLEdBQUdBLGtCQUFrQixHQUFHLEtBQUs7QUFDdGlCQSxrQkFBa0IsR0FBRztBQUNyQkEsb0JBQW9CLEdBQUc7QUFDdkJBLG1CQUFtQixHQUFHO0FBQ3RCQSxzQkFBc0IsR0FBRztBQUN6QkEscUJBQXFCLEdBQUc7QUFDeEJBLGtCQUFrQixHQUFHQSxRQUFRc0IsYUFBYTtBQUMxQ3RCLG9CQUFvQixHQUFHQSxRQUFRcUIsVUFBVSxHQUFHO0FBQzVDckIsbUJBQW1CLEdBQUdBLFFBQVFxQixVQUFVLEdBQUc7QUFDM0NyQixzQkFBc0IsR0FBR0EsUUFBUXFCLFVBQVUsR0FBRztBQUM5Q3JCLHFCQUFxQixHQUFHQSxRQUFRcUIsVUFBVSxHQUFHO0FBQzdDckIsZ0JBQWdCLEdBQUdBLFFBQVFpQixhQUFhO0FBQ3hDakIsbUJBQW1CLEdBQUdBLFFBQVFnQixRQUFRLEdBQUc7QUFDekNoQixpQkFBaUIsR0FBR0EsUUFBUWdCLFFBQVEsR0FBRztBQUN2Q2hCLG9CQUFvQixHQUFHQSxRQUFRZ0IsUUFBUSxHQUFHO0FBQzFDaEIseUJBQXlCLEdBQUdBLFFBQVFnQixRQUFRLEdBQUc7QUFDL0NoQixlQUFlLEdBQUdBLFFBQVFZLGlCQUFpQjtBQUMzQ1osa0JBQWtCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN2Q1gsaUJBQWlCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN0Q1gsa0JBQWtCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN2Q1gsbUJBQW1CLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN4Q1gsZ0JBQWdCLEdBQUdBLFFBQVFRLFVBQVU7QUFDckNSLGlCQUFpQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDdkNOLG1CQUFtQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDekNOLGtCQUFrQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDeENOLGdCQUFnQixHQUFHQSxRQUFRVyxPQUFPLEdBQUcsS0FDckMsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL2NvbnN0YW50cy90aW1lLmpzP2RkZDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk9ORV9ZRUFSID0gZXhwb3J0cy5GT1VSX1dFRUtTID0gZXhwb3J0cy5USFJFRV9XRUVLUyA9IGV4cG9ydHMuVFdPX1dFRUtTID0gZXhwb3J0cy5PTkVfV0VFSyA9IGV4cG9ydHMuVEhJUlRZX0RBWVMgPSBleHBvcnRzLlNFVkVOX0RBWVMgPSBleHBvcnRzLkZJVkVfREFZUyA9IGV4cG9ydHMuVEhSRUVfREFZUyA9IGV4cG9ydHMuT05FX0RBWSA9IGV4cG9ydHMuVFdFTlRZX0ZPVVJfSE9VUlMgPSBleHBvcnRzLlRXRUxWRV9IT1VSUyA9IGV4cG9ydHMuU0lYX0hPVVJTID0gZXhwb3J0cy5USFJFRV9IT1VSUyA9IGV4cG9ydHMuT05FX0hPVVIgPSBleHBvcnRzLlNJWFRZX01JTlVURVMgPSBleHBvcnRzLlRISVJUWV9NSU5VVEVTID0gZXhwb3J0cy5URU5fTUlOVVRFUyA9IGV4cG9ydHMuRklWRV9NSU5VVEVTID0gZXhwb3J0cy5PTkVfTUlOVVRFID0gZXhwb3J0cy5TSVhUWV9TRUNPTkRTID0gZXhwb3J0cy5USElSVFlfU0VDT05EUyA9IGV4cG9ydHMuVEVOX1NFQ09ORFMgPSBleHBvcnRzLkZJVkVfU0VDT05EUyA9IGV4cG9ydHMuT05FX1NFQ09ORCA9IHZvaWQgMDtcbmV4cG9ydHMuT05FX1NFQ09ORCA9IDE7XG5leHBvcnRzLkZJVkVfU0VDT05EUyA9IDU7XG5leHBvcnRzLlRFTl9TRUNPTkRTID0gMTA7XG5leHBvcnRzLlRISVJUWV9TRUNPTkRTID0gMzA7XG5leHBvcnRzLlNJWFRZX1NFQ09ORFMgPSA2MDtcbmV4cG9ydHMuT05FX01JTlVURSA9IGV4cG9ydHMuU0lYVFlfU0VDT05EUztcbmV4cG9ydHMuRklWRV9NSU5VVEVTID0gZXhwb3J0cy5PTkVfTUlOVVRFICogNTtcbmV4cG9ydHMuVEVOX01JTlVURVMgPSBleHBvcnRzLk9ORV9NSU5VVEUgKiAxMDtcbmV4cG9ydHMuVEhJUlRZX01JTlVURVMgPSBleHBvcnRzLk9ORV9NSU5VVEUgKiAzMDtcbmV4cG9ydHMuU0lYVFlfTUlOVVRFUyA9IGV4cG9ydHMuT05FX01JTlVURSAqIDYwO1xuZXhwb3J0cy5PTkVfSE9VUiA9IGV4cG9ydHMuU0lYVFlfTUlOVVRFUztcbmV4cG9ydHMuVEhSRUVfSE9VUlMgPSBleHBvcnRzLk9ORV9IT1VSICogMztcbmV4cG9ydHMuU0lYX0hPVVJTID0gZXhwb3J0cy5PTkVfSE9VUiAqIDY7XG5leHBvcnRzLlRXRUxWRV9IT1VSUyA9IGV4cG9ydHMuT05FX0hPVVIgKiAxMjtcbmV4cG9ydHMuVFdFTlRZX0ZPVVJfSE9VUlMgPSBleHBvcnRzLk9ORV9IT1VSICogMjQ7XG5leHBvcnRzLk9ORV9EQVkgPSBleHBvcnRzLlRXRU5UWV9GT1VSX0hPVVJTO1xuZXhwb3J0cy5USFJFRV9EQVlTID0gZXhwb3J0cy5PTkVfREFZICogMztcbmV4cG9ydHMuRklWRV9EQVlTID0gZXhwb3J0cy5PTkVfREFZICogNTtcbmV4cG9ydHMuU0VWRU5fREFZUyA9IGV4cG9ydHMuT05FX0RBWSAqIDc7XG5leHBvcnRzLlRISVJUWV9EQVlTID0gZXhwb3J0cy5PTkVfREFZICogMzA7XG5leHBvcnRzLk9ORV9XRUVLID0gZXhwb3J0cy5TRVZFTl9EQVlTO1xuZXhwb3J0cy5UV09fV0VFS1MgPSBleHBvcnRzLk9ORV9XRUVLICogMjtcbmV4cG9ydHMuVEhSRUVfV0VFS1MgPSBleHBvcnRzLk9ORV9XRUVLICogMztcbmV4cG9ydHMuRk9VUl9XRUVLUyA9IGV4cG9ydHMuT05FX1dFRUsgKiA0O1xuZXhwb3J0cy5PTkVfWUVBUiA9IGV4cG9ydHMuT05FX0RBWSAqIDM2NTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpbWUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiT05FX1lFQVIiLCJGT1VSX1dFRUtTIiwiVEhSRUVfV0VFS1MiLCJUV09fV0VFS1MiLCJPTkVfV0VFSyIsIlRISVJUWV9EQVlTIiwiU0VWRU5fREFZUyIsIkZJVkVfREFZUyIsIlRIUkVFX0RBWVMiLCJPTkVfREFZIiwiVFdFTlRZX0ZPVVJfSE9VUlMiLCJUV0VMVkVfSE9VUlMiLCJTSVhfSE9VUlMiLCJUSFJFRV9IT1VSUyIsIk9ORV9IT1VSIiwiU0lYVFlfTUlOVVRFUyIsIlRISVJUWV9NSU5VVEVTIiwiVEVOX01JTlVURVMiLCJGSVZFX01JTlVURVMiLCJPTkVfTUlOVVRFIiwiU0lYVFlfU0VDT05EUyIsIlRISVJUWV9TRUNPTkRTIiwiVEVOX1NFQ09ORFMiLCJGSVZFX1NFQ09ORFMiLCJPTkVfU0VDT05EIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywyRUFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx5RkFBYSxHQUFHSCxVQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvaW5kZXguanM/MjliNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93YXRjaFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/types/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSCxVQUN6QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdHlwZXMvaW5kZXguanM/MzYyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93YXRjaFwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/types/watch.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.IWatch = void 0;\nclass IWatch {\n}\nexports.IWatch = IWatch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy93YXRjaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsY0FBYyxHQUFHLEtBQUs7QUFDdEIsTUFBTUU7QUFDTjtBQUNBRixjQUFjLEdBQUdFLFFBQ2pCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy93YXRjaC5qcz80YmNkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JV2F0Y2ggPSB2b2lkIDA7XG5jbGFzcyBJV2F0Y2gge1xufVxuZXhwb3J0cy5JV2F0Y2ggPSBJV2F0Y2g7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YXRjaC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJJV2F0Y2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/convert.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromMiliseconds = exports.toMiliseconds = void 0;\nconst constants_1 = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\");\nfunction toMiliseconds(seconds) {\n    return seconds * constants_1.ONE_THOUSAND;\n}\nexports.toMiliseconds = toMiliseconds;\nfunction fromMiliseconds(miliseconds) {\n    return Math.floor(miliseconds / constants_1.ONE_THOUSAND);\n}\nexports.fromMiliseconds = fromMiliseconds; //# sourceMappingURL=convert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9jb252ZXJ0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUN2RCxNQUFNSSxjQUFjQyxtQkFBT0EsQ0FBQywwRkFBYztBQUMxQyxTQUFTRixjQUFjRyxPQUFPO0lBQzFCLE9BQU9BLFVBQVVGLFlBQVlHLFlBQVk7QUFDN0M7QUFDQVAscUJBQXFCLEdBQUdHO0FBQ3hCLFNBQVNELGdCQUFnQk0sV0FBVztJQUNoQyxPQUFPQyxLQUFLQyxLQUFLLENBQUNGLGNBQWNKLFlBQVlHLFlBQVk7QUFDNUQ7QUFDQVAsdUJBQXVCLEdBQUdFLGlCQUMxQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdXRpbHMvY29udmVydC5qcz85OTFkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mcm9tTWlsaXNlY29uZHMgPSBleHBvcnRzLnRvTWlsaXNlY29uZHMgPSB2b2lkIDA7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHNcIik7XG5mdW5jdGlvbiB0b01pbGlzZWNvbmRzKHNlY29uZHMpIHtcbiAgICByZXR1cm4gc2Vjb25kcyAqIGNvbnN0YW50c18xLk9ORV9USE9VU0FORDtcbn1cbmV4cG9ydHMudG9NaWxpc2Vjb25kcyA9IHRvTWlsaXNlY29uZHM7XG5mdW5jdGlvbiBmcm9tTWlsaXNlY29uZHMobWlsaXNlY29uZHMpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihtaWxpc2Vjb25kcyAvIGNvbnN0YW50c18xLk9ORV9USE9VU0FORCk7XG59XG5leHBvcnRzLmZyb21NaWxpc2Vjb25kcyA9IGZyb21NaWxpc2Vjb25kcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnZlcnQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZnJvbU1pbGlzZWNvbmRzIiwidG9NaWxpc2Vjb25kcyIsImNvbnN0YW50c18xIiwicmVxdWlyZSIsInNlY29uZHMiLCJPTkVfVEhPVVNBTkQiLCJtaWxpc2Vjb25kcyIsIk1hdGgiLCJmbG9vciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/delay.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.delay = void 0;\nfunction delay(timeout) {\n    return new Promise((resolve)=>{\n        setTimeout(()=>{\n            resolve(true);\n        }, timeout);\n    });\n}\nexports.delay = delay; //# sourceMappingURL=delay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9kZWxheS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsYUFBYSxHQUFHLEtBQUs7QUFDckIsU0FBU0UsTUFBTUMsT0FBTztJQUNsQixPQUFPLElBQUlDLFFBQVFDLENBQUFBO1FBQ2ZDLFdBQVc7WUFDUEQsUUFBUTtRQUNaLEdBQUdGO0lBQ1A7QUFDSjtBQUNBSCxhQUFhLEdBQUdFLE9BQ2hCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9kZWxheS5qcz85Yjk4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWxheSA9IHZvaWQgMDtcbmZ1bmN0aW9uIGRlbGF5KHRpbWVvdXQpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgfSwgdGltZW91dCk7XG4gICAgfSk7XG59XG5leHBvcnRzLmRlbGF5ID0gZGVsYXk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxheS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWxheSIsInRpbWVvdXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./delay */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./convert */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxxRkFBVyxHQUFHSCxVQUMzQyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdXRpbHMvaW5kZXguanM/YjdjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kZWxheVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb252ZXJ0XCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/watch.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Watch = void 0;\nclass Watch {\n    constructor(){\n        this.timestamps = new Map();\n    }\n    start(label) {\n        if (this.timestamps.has(label)) {\n            throw new Error(`Watch already started for label: ${label}`);\n        }\n        this.timestamps.set(label, {\n            started: Date.now()\n        });\n    }\n    stop(label) {\n        const timestamp = this.get(label);\n        if (typeof timestamp.elapsed !== \"undefined\") {\n            throw new Error(`Watch already stopped for label: ${label}`);\n        }\n        const elapsed = Date.now() - timestamp.started;\n        this.timestamps.set(label, {\n            started: timestamp.started,\n            elapsed\n        });\n    }\n    get(label) {\n        const timestamp = this.timestamps.get(label);\n        if (typeof timestamp === \"undefined\") {\n            throw new Error(`No timestamp found for label: ${label}`);\n        }\n        return timestamp;\n    }\n    elapsed(label) {\n        const timestamp = this.get(label);\n        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n        return elapsed;\n    }\n}\nexports.Watch = Watch;\nexports[\"default\"] = Watch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy93YXRjaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsYUFBYSxHQUFHLEtBQUs7QUFDckIsTUFBTUU7SUFDRkMsYUFBYztRQUNWLElBQUksQ0FBQ0MsVUFBVSxHQUFHLElBQUlDO0lBQzFCO0lBQ0FDLE1BQU1DLEtBQUssRUFBRTtRQUNULElBQUksSUFBSSxDQUFDSCxVQUFVLENBQUNJLEdBQUcsQ0FBQ0QsUUFBUTtZQUM1QixNQUFNLElBQUlFLE1BQU0sQ0FBQyxpQ0FBaUMsRUFBRUYsTUFBTSxDQUFDO1FBQy9EO1FBQ0EsSUFBSSxDQUFDSCxVQUFVLENBQUNNLEdBQUcsQ0FBQ0gsT0FBTztZQUFFSSxTQUFTQyxLQUFLQyxHQUFHO1FBQUc7SUFDckQ7SUFDQUMsS0FBS1AsS0FBSyxFQUFFO1FBQ1IsTUFBTVEsWUFBWSxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Q7UUFDM0IsSUFBSSxPQUFPUSxVQUFVRSxPQUFPLEtBQUssYUFBYTtZQUMxQyxNQUFNLElBQUlSLE1BQU0sQ0FBQyxpQ0FBaUMsRUFBRUYsTUFBTSxDQUFDO1FBQy9EO1FBQ0EsTUFBTVUsVUFBVUwsS0FBS0MsR0FBRyxLQUFLRSxVQUFVSixPQUFPO1FBQzlDLElBQUksQ0FBQ1AsVUFBVSxDQUFDTSxHQUFHLENBQUNILE9BQU87WUFBRUksU0FBU0ksVUFBVUosT0FBTztZQUFFTTtRQUFRO0lBQ3JFO0lBQ0FELElBQUlULEtBQUssRUFBRTtRQUNQLE1BQU1RLFlBQVksSUFBSSxDQUFDWCxVQUFVLENBQUNZLEdBQUcsQ0FBQ1Q7UUFDdEMsSUFBSSxPQUFPUSxjQUFjLGFBQWE7WUFDbEMsTUFBTSxJQUFJTixNQUFNLENBQUMsOEJBQThCLEVBQUVGLE1BQU0sQ0FBQztRQUM1RDtRQUNBLE9BQU9RO0lBQ1g7SUFDQUUsUUFBUVYsS0FBSyxFQUFFO1FBQ1gsTUFBTVEsWUFBWSxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Q7UUFDM0IsTUFBTVUsVUFBVUYsVUFBVUUsT0FBTyxJQUFJTCxLQUFLQyxHQUFHLEtBQUtFLFVBQVVKLE9BQU87UUFDbkUsT0FBT007SUFDWDtBQUNKO0FBQ0FqQixhQUFhLEdBQUdFO0FBQ2hCRixrQkFBZSxHQUFHRSxPQUNsQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvd2F0Y2guanM/MmRjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV2F0Y2ggPSB2b2lkIDA7XG5jbGFzcyBXYXRjaCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMudGltZXN0YW1wcyA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgc3RhcnQobGFiZWwpIHtcbiAgICAgICAgaWYgKHRoaXMudGltZXN0YW1wcy5oYXMobGFiZWwpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFdhdGNoIGFscmVhZHkgc3RhcnRlZCBmb3IgbGFiZWw6ICR7bGFiZWx9YCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50aW1lc3RhbXBzLnNldChsYWJlbCwgeyBzdGFydGVkOiBEYXRlLm5vdygpIH0pO1xuICAgIH1cbiAgICBzdG9wKGxhYmVsKSB7XG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IHRoaXMuZ2V0KGxhYmVsKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aW1lc3RhbXAuZWxhcHNlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBXYXRjaCBhbHJlYWR5IHN0b3BwZWQgZm9yIGxhYmVsOiAke2xhYmVsfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVsYXBzZWQgPSBEYXRlLm5vdygpIC0gdGltZXN0YW1wLnN0YXJ0ZWQ7XG4gICAgICAgIHRoaXMudGltZXN0YW1wcy5zZXQobGFiZWwsIHsgc3RhcnRlZDogdGltZXN0YW1wLnN0YXJ0ZWQsIGVsYXBzZWQgfSk7XG4gICAgfVxuICAgIGdldChsYWJlbCkge1xuICAgICAgICBjb25zdCB0aW1lc3RhbXAgPSB0aGlzLnRpbWVzdGFtcHMuZ2V0KGxhYmVsKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aW1lc3RhbXAgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gdGltZXN0YW1wIGZvdW5kIGZvciBsYWJlbDogJHtsYWJlbH1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGltZXN0YW1wO1xuICAgIH1cbiAgICBlbGFwc2VkKGxhYmVsKSB7XG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IHRoaXMuZ2V0KGxhYmVsKTtcbiAgICAgICAgY29uc3QgZWxhcHNlZCA9IHRpbWVzdGFtcC5lbGFwc2VkIHx8IERhdGUubm93KCkgLSB0aW1lc3RhbXAuc3RhcnRlZDtcbiAgICAgICAgcmV0dXJuIGVsYXBzZWQ7XG4gICAgfVxufVxuZXhwb3J0cy5XYXRjaCA9IFdhdGNoO1xuZXhwb3J0cy5kZWZhdWx0ID0gV2F0Y2g7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YXRjaC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJXYXRjaCIsImNvbnN0cnVjdG9yIiwidGltZXN0YW1wcyIsIk1hcCIsInN0YXJ0IiwibGFiZWwiLCJoYXMiLCJFcnJvciIsInNldCIsInN0YXJ0ZWQiLCJEYXRlIiwibm93Iiwic3RvcCIsInRpbWVzdGFtcCIsImdldCIsImVsYXBzZWQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/types/dist/index.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/types/dist/index.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ICore: () => (/* binding */ n),\n/* harmony export */   ICrypto: () => (/* binding */ l),\n/* harmony export */   IEchoClient: () => (/* binding */ v),\n/* harmony export */   IEngine: () => (/* binding */ w),\n/* harmony export */   IEngineEvents: () => (/* binding */ S),\n/* harmony export */   IExpirer: () => (/* binding */ E),\n/* harmony export */   IJsonRpcHistory: () => (/* binding */ h),\n/* harmony export */   IKeyChain: () => (/* binding */ x),\n/* harmony export */   IMessageTracker: () => (/* binding */ a),\n/* harmony export */   IPairing: () => (/* binding */ m),\n/* harmony export */   IPublisher: () => (/* binding */ u),\n/* harmony export */   IRelayer: () => (/* binding */ g),\n/* harmony export */   ISignClient: () => (/* binding */ b),\n/* harmony export */   ISignClientEvents: () => (/* binding */ C),\n/* harmony export */   IStore: () => (/* binding */ p),\n/* harmony export */   ISubscriber: () => (/* binding */ d),\n/* harmony export */   ISubscriberTopicMap: () => (/* binding */ I),\n/* harmony export */   IVerify: () => (/* binding */ y)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super(), this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass l {\n    constructor(s, t, o){\n        this.core = s, this.logger = t;\n    }\n}\nclass h extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t, this.records = new Map;\n    }\n}\nclass a {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass u extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass g extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super();\n    }\n}\nclass p {\n    constructor(s, t, o, M){\n        this.core = s, this.logger = t, this.name = o;\n    }\n}\nclass I {\n    constructor(){\n        this.map = new Map;\n    }\n}\nclass d extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass x {\n    constructor(s, t){\n        this.core = s, this.logger = t;\n    }\n}\nclass E extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t;\n    }\n}\nclass m {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass y {\n    constructor(s, t){\n        this.projectId = s, this.logger = t;\n    }\n}\nclass v {\n    constructor(s, t){\n        this.projectId = s, this.logger = t;\n    }\n}\nclass C extends (events__WEBPACK_IMPORTED_MODULE_1___default()) {\n    constructor(){\n        super();\n    }\n}\nclass b {\n    constructor(s){\n        this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass S extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    constructor(){\n        super();\n    }\n}\nclass w {\n    constructor(s){\n        this.client = s;\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdHlwZXMvZGlzdC9pbmRleC5lcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0Q7QUFBeUM7QUFBQSxNQUFNSyxVQUFVSiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ0MsSUFBSSxHQUFDRCxHQUFFLElBQUksQ0FBQ0UsUUFBUSxHQUFDLE1BQUssSUFBSSxDQUFDQyxPQUFPLEdBQUM7SUFBQztBQUFDO0FBQUMsTUFBTUM7SUFBRUwsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLEVBQUNDLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ0MsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNSSxVQUFVZiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxLQUFLLElBQUcsSUFBSSxDQUFDRSxJQUFJLEdBQUNQLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNILEdBQUUsSUFBSSxDQUFDSyxPQUFPLEdBQUMsSUFBSUM7SUFBRztBQUFDO0FBQUMsTUFBTUM7SUFBRWIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNHLE1BQU0sR0FBQ1IsR0FBRSxJQUFJLENBQUNPLElBQUksR0FBQ0Y7SUFBQztBQUFDO0FBQUMsTUFBTVEsVUFBVW5CLDBEQUFDQTtJQUFDSyxZQUFZQyxDQUFDLEVBQUNLLENBQUMsQ0FBQztRQUFDLEtBQUssSUFBRyxJQUFJLENBQUNTLE9BQU8sR0FBQ2QsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0g7SUFBQztBQUFDO0FBQUMsTUFBTVUsVUFBVXJCLDBEQUFDQTtJQUFDSyxZQUFZQyxDQUFDLENBQUM7UUFBQyxLQUFLO0lBQUU7QUFBQztBQUFDLE1BQU1nQjtJQUFFakIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLEVBQUNDLENBQUMsRUFBQ1csQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDVixJQUFJLEdBQUNQLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNILEdBQUUsSUFBSSxDQUFDYSxJQUFJLEdBQUNaO0lBQUM7QUFBQztBQUFDLE1BQU1hO0lBQUVwQixhQUFhO1FBQUMsSUFBSSxDQUFDcUIsR0FBRyxHQUFDLElBQUlUO0lBQUc7QUFBQztBQUFDLE1BQU1VLFVBQVUzQiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxLQUFLLElBQUcsSUFBSSxDQUFDUyxPQUFPLEdBQUNkLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1pQjtJQUFFdkIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNFLElBQUksR0FBQ1AsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0g7SUFBQztBQUFDO0FBQUMsTUFBTWtCLFVBQVU3QiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxLQUFLLElBQUcsSUFBSSxDQUFDRSxJQUFJLEdBQUNQLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1tQjtJQUFFekIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNHLE1BQU0sR0FBQ1IsR0FBRSxJQUFJLENBQUNPLElBQUksR0FBQ0Y7SUFBQztBQUFDO0FBQUMsTUFBTW9CO0lBQUUxQixZQUFZQyxDQUFDLEVBQUNLLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ3FCLFNBQVMsR0FBQzFCLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1zQjtJQUFFNUIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNxQixTQUFTLEdBQUMxQixHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNdUIsVUFBVWpDLCtDQUFDQTtJQUFDSSxhQUFhO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNOEI7SUFBRTlCLFlBQVlDLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ0MsSUFBSSxHQUFDRCxHQUFFLElBQUksQ0FBQ0UsUUFBUSxHQUFDLE1BQUssSUFBSSxDQUFDQyxPQUFPLEdBQUM7SUFBQztBQUFDO0FBQUMsTUFBTTJCLFVBQVVqQyxnREFBQ0E7SUFBQ0UsYUFBYTtRQUFDLEtBQUs7SUFBRTtBQUFDO0FBQUMsTUFBTWdDO0lBQUVoQyxZQUFZQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNnQyxNQUFNLEdBQUNoQztJQUFDO0FBQUM7QUFBZ1QsQ0FDMzZDLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdHlwZXMvZGlzdC9pbmRleC5lcy5qcz82MGE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydHtJRXZlbnRzIGFzIGV9ZnJvbVwiQHdhbGxldGNvbm5lY3QvZXZlbnRzXCI7aW1wb3J0IGMse0V2ZW50RW1pdHRlciBhcyBpfWZyb21cImV2ZW50c1wiO2NsYXNzIG4gZXh0ZW5kcyBle2NvbnN0cnVjdG9yKHMpe3N1cGVyKCksdGhpcy5vcHRzPXMsdGhpcy5wcm90b2NvbD1cIndjXCIsdGhpcy52ZXJzaW9uPTJ9fWNsYXNzIGx7Y29uc3RydWN0b3Iocyx0LG8pe3RoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIGggZXh0ZW5kcyBle2NvbnN0cnVjdG9yKHMsdCl7c3VwZXIoKSx0aGlzLmNvcmU9cyx0aGlzLmxvZ2dlcj10LHRoaXMucmVjb3Jkcz1uZXcgTWFwfX1jbGFzcyBhe2NvbnN0cnVjdG9yKHMsdCl7dGhpcy5sb2dnZXI9cyx0aGlzLmNvcmU9dH19Y2xhc3MgdSBleHRlbmRzIGV7Y29uc3RydWN0b3Iocyx0KXtzdXBlcigpLHRoaXMucmVsYXllcj1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIGcgZXh0ZW5kcyBle2NvbnN0cnVjdG9yKHMpe3N1cGVyKCl9fWNsYXNzIHB7Y29uc3RydWN0b3Iocyx0LG8sTSl7dGhpcy5jb3JlPXMsdGhpcy5sb2dnZXI9dCx0aGlzLm5hbWU9b319Y2xhc3MgSXtjb25zdHJ1Y3Rvcigpe3RoaXMubWFwPW5ldyBNYXB9fWNsYXNzIGQgZXh0ZW5kcyBle2NvbnN0cnVjdG9yKHMsdCl7c3VwZXIoKSx0aGlzLnJlbGF5ZXI9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyB4e2NvbnN0cnVjdG9yKHMsdCl7dGhpcy5jb3JlPXMsdGhpcy5sb2dnZXI9dH19Y2xhc3MgRSBleHRlbmRzIGV7Y29uc3RydWN0b3Iocyx0KXtzdXBlcigpLHRoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIG17Y29uc3RydWN0b3Iocyx0KXt0aGlzLmxvZ2dlcj1zLHRoaXMuY29yZT10fX1jbGFzcyB5e2NvbnN0cnVjdG9yKHMsdCl7dGhpcy5wcm9qZWN0SWQ9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyB2e2NvbnN0cnVjdG9yKHMsdCl7dGhpcy5wcm9qZWN0SWQ9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyBDIGV4dGVuZHMgY3tjb25zdHJ1Y3Rvcigpe3N1cGVyKCl9fWNsYXNzIGJ7Y29uc3RydWN0b3Iocyl7dGhpcy5vcHRzPXMsdGhpcy5wcm90b2NvbD1cIndjXCIsdGhpcy52ZXJzaW9uPTJ9fWNsYXNzIFMgZXh0ZW5kcyBpe2NvbnN0cnVjdG9yKCl7c3VwZXIoKX19Y2xhc3Mgd3tjb25zdHJ1Y3RvcihzKXt0aGlzLmNsaWVudD1zfX1leHBvcnR7biBhcyBJQ29yZSxsIGFzIElDcnlwdG8sdiBhcyBJRWNob0NsaWVudCx3IGFzIElFbmdpbmUsUyBhcyBJRW5naW5lRXZlbnRzLEUgYXMgSUV4cGlyZXIsaCBhcyBJSnNvblJwY0hpc3RvcnkseCBhcyBJS2V5Q2hhaW4sYSBhcyBJTWVzc2FnZVRyYWNrZXIsbSBhcyBJUGFpcmluZyx1IGFzIElQdWJsaXNoZXIsZyBhcyBJUmVsYXllcixiIGFzIElTaWduQ2xpZW50LEMgYXMgSVNpZ25DbGllbnRFdmVudHMscCBhcyBJU3RvcmUsZCBhcyBJU3Vic2NyaWJlcixJIGFzIElTdWJzY3JpYmVyVG9waWNNYXAseSBhcyBJVmVyaWZ5fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbIklFdmVudHMiLCJlIiwiYyIsIkV2ZW50RW1pdHRlciIsImkiLCJuIiwiY29uc3RydWN0b3IiLCJzIiwib3B0cyIsInByb3RvY29sIiwidmVyc2lvbiIsImwiLCJ0IiwibyIsImNvcmUiLCJsb2dnZXIiLCJoIiwicmVjb3JkcyIsIk1hcCIsImEiLCJ1IiwicmVsYXllciIsImciLCJwIiwiTSIsIm5hbWUiLCJJIiwibWFwIiwiZCIsIngiLCJFIiwibSIsInkiLCJwcm9qZWN0SWQiLCJ2IiwiQyIsImIiLCJTIiwidyIsImNsaWVudCIsIklDb3JlIiwiSUNyeXB0byIsIklFY2hvQ2xpZW50IiwiSUVuZ2luZSIsIklFbmdpbmVFdmVudHMiLCJJRXhwaXJlciIsIklKc29uUnBjSGlzdG9yeSIsIklLZXlDaGFpbiIsIklNZXNzYWdlVHJhY2tlciIsIklQYWlyaW5nIiwiSVB1Ymxpc2hlciIsIklSZWxheWVyIiwiSVNpZ25DbGllbnQiLCJJU2lnbkNsaWVudEV2ZW50cyIsIklTdG9yZSIsIklTdWJzY3JpYmVyIiwiSVN1YnNjcmliZXJUb3BpY01hcCIsIklWZXJpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/universal-provider/dist/index.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/dist/index.es.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniversalProvider: () => (/* binding */ hv),\n/* harmony export */   \"default\": () => (/* binding */ lr)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/sign-client */ \"(ssr)/./node_modules/@walletconnect/sign-client/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\");\n/* harmony import */ var _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-http-connection */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js\");\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\n\n\n\nconst xa = \"error\", Mg = \"wss://relay.walletconnect.com\", qg = \"wc\", Bg = \"universal_provider\", Ea = `${qg}@2:${Bg}:`, Gg = \"https://rpc.walletconnect.com/v1/\", Vn = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\"\n};\nvar ge = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, Ui = {\n    exports: {}\n}; /**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */ \n(function(A, u) {\n    (function() {\n        var i, p = \"4.17.21\", w = 200, b = \"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\", D = \"Expected a function\", En = \"Invalid `variable` option passed into `_.template`\", zt = \"__lodash_hash_undefined__\", pr = 500, It = \"__lodash_placeholder__\", Ln = 1, Fn = 2, xt = 4, Et = 1, ve = 2, vn = 1, ct = 2, Bi = 4, Dn = 8, yt = 16, Nn = 32, St = 64, Mn = 128, Kt = 256, dr = 512, Na = 30, Ha = \"...\", $a = 800, Ua = 16, Gi = 1, Wa = 2, Fa = 3, ht = 1 / 0, kn = 9007199254740991, Ma = 17976931348623157e292, _e = 0 / 0, Hn = 4294967295, qa = Hn - 1, Ba = Hn >>> 1, Ga = [\n            [\n                \"ary\",\n                Mn\n            ],\n            [\n                \"bind\",\n                vn\n            ],\n            [\n                \"bindKey\",\n                ct\n            ],\n            [\n                \"curry\",\n                Dn\n            ],\n            [\n                \"curryRight\",\n                yt\n            ],\n            [\n                \"flip\",\n                dr\n            ],\n            [\n                \"partial\",\n                Nn\n            ],\n            [\n                \"partialRight\",\n                St\n            ],\n            [\n                \"rearg\",\n                Kt\n            ]\n        ], Ot = \"[object Arguments]\", me = \"[object Array]\", za = \"[object AsyncFunction]\", Yt = \"[object Boolean]\", Zt = \"[object Date]\", Ka = \"[object DOMException]\", we = \"[object Error]\", Pe = \"[object Function]\", zi = \"[object GeneratorFunction]\", yn = \"[object Map]\", Jt = \"[object Number]\", Ya = \"[object Null]\", qn = \"[object Object]\", Ki = \"[object Promise]\", Za = \"[object Proxy]\", Xt = \"[object RegExp]\", Sn = \"[object Set]\", Qt = \"[object String]\", Ae = \"[object Symbol]\", Ja = \"[object Undefined]\", Vt = \"[object WeakMap]\", Xa = \"[object WeakSet]\", kt = \"[object ArrayBuffer]\", Rt = \"[object DataView]\", gr = \"[object Float32Array]\", vr = \"[object Float64Array]\", _r = \"[object Int8Array]\", mr = \"[object Int16Array]\", wr = \"[object Int32Array]\", Pr = \"[object Uint8Array]\", Ar = \"[object Uint8ClampedArray]\", Cr = \"[object Uint16Array]\", Ir = \"[object Uint32Array]\", Qa = /\\b__p \\+= '';/g, Va = /\\b(__p \\+=) '' \\+/g, ka = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g, Yi = /&(?:amp|lt|gt|quot|#39);/g, Zi = /[&<>\"']/g, ja = RegExp(Yi.source), no = RegExp(Zi.source), to = /<%-([\\s\\S]+?)%>/g, eo = /<%([\\s\\S]+?)%>/g, Ji = /<%=([\\s\\S]+?)%>/g, ro = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/, io = /^\\w*$/, so = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, xr = /[\\\\^$.*+?()[\\]{}|]/g, uo = RegExp(xr.source), Er = /^\\s+/, ao = /\\s/, oo = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/, fo = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/, co = /,? & /, ho = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g, lo = /[()=,{}\\[\\]\\/\\s]/, po = /\\\\(\\\\)?/g, go = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g, Xi = /\\w*$/, vo = /^[-+]0x[0-9a-f]+$/i, _o = /^0b[01]+$/i, mo = /^\\[object .+?Constructor\\]$/, wo = /^0o[0-7]+$/i, Po = /^(?:0|[1-9]\\d*)$/, Ao = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g, Ce = /($^)/, Co = /['\\n\\r\\u2028\\u2029\\\\]/g, Ie = \"\\ud800-\\udfff\", Io = \"\\\\u0300-\\\\u036f\", xo = \"\\\\ufe20-\\\\ufe2f\", Eo = \"\\\\u20d0-\\\\u20ff\", Qi = Io + xo + Eo, Vi = \"\\\\u2700-\\\\u27bf\", ki = \"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\", yo = \"\\\\xac\\\\xb1\\\\xd7\\\\xf7\", So = \"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\", Oo = \"\\\\u2000-\\\\u206f\", Ro = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\", ji = \"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\", ns = \"\\\\ufe0e\\\\ufe0f\", ts = yo + So + Oo + Ro, yr = \"['’]\", bo = \"[\" + Ie + \"]\", es = \"[\" + ts + \"]\", xe = \"[\" + Qi + \"]\", rs = \"\\\\d+\", To = \"[\" + Vi + \"]\", is = \"[\" + ki + \"]\", ss = \"[^\" + Ie + ts + rs + Vi + ki + ji + \"]\", Sr = \"\\ud83c[\\udffb-\\udfff]\", Lo = \"(?:\" + xe + \"|\" + Sr + \")\", us = \"[^\" + Ie + \"]\", Or = \"(?:\\ud83c[\\udde6-\\uddff]){2}\", Rr = \"[\\ud800-\\udbff][\\udc00-\\udfff]\", bt = \"[\" + ji + \"]\", as = \"\\\\u200d\", os = \"(?:\" + is + \"|\" + ss + \")\", Do = \"(?:\" + bt + \"|\" + ss + \")\", fs = \"(?:\" + yr + \"(?:d|ll|m|re|s|t|ve))?\", cs = \"(?:\" + yr + \"(?:D|LL|M|RE|S|T|VE))?\", hs = Lo + \"?\", ls = \"[\" + ns + \"]?\", No = \"(?:\" + as + \"(?:\" + [\n            us,\n            Or,\n            Rr\n        ].join(\"|\") + \")\" + ls + hs + \")*\", Ho = \"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\", $o = \"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\", ps = ls + hs + No, Uo = \"(?:\" + [\n            To,\n            Or,\n            Rr\n        ].join(\"|\") + \")\" + ps, Wo = \"(?:\" + [\n            us + xe + \"?\",\n            xe,\n            Or,\n            Rr,\n            bo\n        ].join(\"|\") + \")\", Fo = RegExp(yr, \"g\"), Mo = RegExp(xe, \"g\"), br = RegExp(Sr + \"(?=\" + Sr + \")|\" + Wo + ps, \"g\"), qo = RegExp([\n            bt + \"?\" + is + \"+\" + fs + \"(?=\" + [\n                es,\n                bt,\n                \"$\"\n            ].join(\"|\") + \")\",\n            Do + \"+\" + cs + \"(?=\" + [\n                es,\n                bt + os,\n                \"$\"\n            ].join(\"|\") + \")\",\n            bt + \"?\" + os + \"+\" + fs,\n            bt + \"+\" + cs,\n            $o,\n            Ho,\n            rs,\n            Uo\n        ].join(\"|\"), \"g\"), Bo = RegExp(\"[\" + as + Ie + Qi + ns + \"]\"), Go = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, zo = [\n            \"Array\",\n            \"Buffer\",\n            \"DataView\",\n            \"Date\",\n            \"Error\",\n            \"Float32Array\",\n            \"Float64Array\",\n            \"Function\",\n            \"Int8Array\",\n            \"Int16Array\",\n            \"Int32Array\",\n            \"Map\",\n            \"Math\",\n            \"Object\",\n            \"Promise\",\n            \"RegExp\",\n            \"Set\",\n            \"String\",\n            \"Symbol\",\n            \"TypeError\",\n            \"Uint8Array\",\n            \"Uint8ClampedArray\",\n            \"Uint16Array\",\n            \"Uint32Array\",\n            \"WeakMap\",\n            \"_\",\n            \"clearTimeout\",\n            \"isFinite\",\n            \"parseInt\",\n            \"setTimeout\"\n        ], Ko = -1, B = {};\n        B[gr] = B[vr] = B[_r] = B[mr] = B[wr] = B[Pr] = B[Ar] = B[Cr] = B[Ir] = !0, B[Ot] = B[me] = B[kt] = B[Yt] = B[Rt] = B[Zt] = B[we] = B[Pe] = B[yn] = B[Jt] = B[qn] = B[Xt] = B[Sn] = B[Qt] = B[Vt] = !1;\n        var q = {};\n        q[Ot] = q[me] = q[kt] = q[Rt] = q[Yt] = q[Zt] = q[gr] = q[vr] = q[_r] = q[mr] = q[wr] = q[yn] = q[Jt] = q[qn] = q[Xt] = q[Sn] = q[Qt] = q[Ae] = q[Pr] = q[Ar] = q[Cr] = q[Ir] = !0, q[we] = q[Pe] = q[Vt] = !1;\n        var Yo = {\n            À: \"A\",\n            Á: \"A\",\n            Â: \"A\",\n            Ã: \"A\",\n            Ä: \"A\",\n            Å: \"A\",\n            à: \"a\",\n            á: \"a\",\n            â: \"a\",\n            ã: \"a\",\n            ä: \"a\",\n            å: \"a\",\n            Ç: \"C\",\n            ç: \"c\",\n            Ð: \"D\",\n            ð: \"d\",\n            È: \"E\",\n            É: \"E\",\n            Ê: \"E\",\n            Ë: \"E\",\n            è: \"e\",\n            é: \"e\",\n            ê: \"e\",\n            ë: \"e\",\n            Ì: \"I\",\n            Í: \"I\",\n            Î: \"I\",\n            Ï: \"I\",\n            ì: \"i\",\n            í: \"i\",\n            î: \"i\",\n            ï: \"i\",\n            Ñ: \"N\",\n            ñ: \"n\",\n            Ò: \"O\",\n            Ó: \"O\",\n            Ô: \"O\",\n            Õ: \"O\",\n            Ö: \"O\",\n            Ø: \"O\",\n            ò: \"o\",\n            ó: \"o\",\n            ô: \"o\",\n            õ: \"o\",\n            ö: \"o\",\n            ø: \"o\",\n            Ù: \"U\",\n            Ú: \"U\",\n            Û: \"U\",\n            Ü: \"U\",\n            ù: \"u\",\n            ú: \"u\",\n            û: \"u\",\n            ü: \"u\",\n            Ý: \"Y\",\n            ý: \"y\",\n            ÿ: \"y\",\n            Æ: \"Ae\",\n            æ: \"ae\",\n            Þ: \"Th\",\n            þ: \"th\",\n            ß: \"ss\",\n            Ā: \"A\",\n            Ă: \"A\",\n            Ą: \"A\",\n            ā: \"a\",\n            ă: \"a\",\n            ą: \"a\",\n            Ć: \"C\",\n            Ĉ: \"C\",\n            Ċ: \"C\",\n            Č: \"C\",\n            ć: \"c\",\n            ĉ: \"c\",\n            ċ: \"c\",\n            č: \"c\",\n            Ď: \"D\",\n            Đ: \"D\",\n            ď: \"d\",\n            đ: \"d\",\n            Ē: \"E\",\n            Ĕ: \"E\",\n            Ė: \"E\",\n            Ę: \"E\",\n            Ě: \"E\",\n            ē: \"e\",\n            ĕ: \"e\",\n            ė: \"e\",\n            ę: \"e\",\n            ě: \"e\",\n            Ĝ: \"G\",\n            Ğ: \"G\",\n            Ġ: \"G\",\n            Ģ: \"G\",\n            ĝ: \"g\",\n            ğ: \"g\",\n            ġ: \"g\",\n            ģ: \"g\",\n            Ĥ: \"H\",\n            Ħ: \"H\",\n            ĥ: \"h\",\n            ħ: \"h\",\n            Ĩ: \"I\",\n            Ī: \"I\",\n            Ĭ: \"I\",\n            Į: \"I\",\n            İ: \"I\",\n            ĩ: \"i\",\n            ī: \"i\",\n            ĭ: \"i\",\n            į: \"i\",\n            ı: \"i\",\n            Ĵ: \"J\",\n            ĵ: \"j\",\n            Ķ: \"K\",\n            ķ: \"k\",\n            ĸ: \"k\",\n            Ĺ: \"L\",\n            Ļ: \"L\",\n            Ľ: \"L\",\n            Ŀ: \"L\",\n            Ł: \"L\",\n            ĺ: \"l\",\n            ļ: \"l\",\n            ľ: \"l\",\n            ŀ: \"l\",\n            ł: \"l\",\n            Ń: \"N\",\n            Ņ: \"N\",\n            Ň: \"N\",\n            Ŋ: \"N\",\n            ń: \"n\",\n            ņ: \"n\",\n            ň: \"n\",\n            ŋ: \"n\",\n            Ō: \"O\",\n            Ŏ: \"O\",\n            Ő: \"O\",\n            ō: \"o\",\n            ŏ: \"o\",\n            ő: \"o\",\n            Ŕ: \"R\",\n            Ŗ: \"R\",\n            Ř: \"R\",\n            ŕ: \"r\",\n            ŗ: \"r\",\n            ř: \"r\",\n            Ś: \"S\",\n            Ŝ: \"S\",\n            Ş: \"S\",\n            Š: \"S\",\n            ś: \"s\",\n            ŝ: \"s\",\n            ş: \"s\",\n            š: \"s\",\n            Ţ: \"T\",\n            Ť: \"T\",\n            Ŧ: \"T\",\n            ţ: \"t\",\n            ť: \"t\",\n            ŧ: \"t\",\n            Ũ: \"U\",\n            Ū: \"U\",\n            Ŭ: \"U\",\n            Ů: \"U\",\n            Ű: \"U\",\n            Ų: \"U\",\n            ũ: \"u\",\n            ū: \"u\",\n            ŭ: \"u\",\n            ů: \"u\",\n            ű: \"u\",\n            ų: \"u\",\n            Ŵ: \"W\",\n            ŵ: \"w\",\n            Ŷ: \"Y\",\n            ŷ: \"y\",\n            Ÿ: \"Y\",\n            Ź: \"Z\",\n            Ż: \"Z\",\n            Ž: \"Z\",\n            ź: \"z\",\n            ż: \"z\",\n            ž: \"z\",\n            Ĳ: \"IJ\",\n            ĳ: \"ij\",\n            Œ: \"Oe\",\n            œ: \"oe\",\n            ŉ: \"'n\",\n            ſ: \"s\"\n        }, Zo = {\n            \"&\": \"&amp;\",\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            '\"': \"&quot;\",\n            \"'\": \"&#39;\"\n        }, Jo = {\n            \"&amp;\": \"&\",\n            \"&lt;\": \"<\",\n            \"&gt;\": \">\",\n            \"&quot;\": '\"',\n            \"&#39;\": \"'\"\n        }, Xo = {\n            \"\\\\\": \"\\\\\",\n            \"'\": \"'\",\n            \"\\n\": \"n\",\n            \"\\r\": \"r\",\n            \"\\u2028\": \"u2028\",\n            \"\\u2029\": \"u2029\"\n        }, Qo = parseFloat, Vo = parseInt, ds = typeof ge == \"object\" && ge && ge.Object === Object && ge, ko = typeof self == \"object\" && self && self.Object === Object && self, k = ds || ko || Function(\"return this\")(), Tr = u && !u.nodeType && u, lt = Tr && !0 && A && !A.nodeType && A, gs = lt && lt.exports === Tr, Lr = gs && ds.process, _n = function() {\n            try {\n                var h = lt && lt.require && lt.require(\"util\").types;\n                return h || Lr && Lr.binding && Lr.binding(\"util\");\n            } catch  {}\n        }(), vs = _n && _n.isArrayBuffer, _s = _n && _n.isDate, ms = _n && _n.isMap, ws = _n && _n.isRegExp, Ps = _n && _n.isSet, As = _n && _n.isTypedArray;\n        function cn(h, g, d) {\n            switch(d.length){\n                case 0:\n                    return h.call(g);\n                case 1:\n                    return h.call(g, d[0]);\n                case 2:\n                    return h.call(g, d[0], d[1]);\n                case 3:\n                    return h.call(g, d[0], d[1], d[2]);\n            }\n            return h.apply(g, d);\n        }\n        function jo(h, g, d, C) {\n            for(var S = -1, U = h == null ? 0 : h.length; ++S < U;){\n                var X = h[S];\n                g(C, X, d(X), h);\n            }\n            return C;\n        }\n        function mn(h, g) {\n            for(var d = -1, C = h == null ? 0 : h.length; ++d < C && g(h[d], d, h) !== !1;);\n            return h;\n        }\n        function nf(h, g) {\n            for(var d = h == null ? 0 : h.length; d-- && g(h[d], d, h) !== !1;);\n            return h;\n        }\n        function Cs(h, g) {\n            for(var d = -1, C = h == null ? 0 : h.length; ++d < C;)if (!g(h[d], d, h)) return !1;\n            return !0;\n        }\n        function jn(h, g) {\n            for(var d = -1, C = h == null ? 0 : h.length, S = 0, U = []; ++d < C;){\n                var X = h[d];\n                g(X, d, h) && (U[S++] = X);\n            }\n            return U;\n        }\n        function Ee(h, g) {\n            var d = h == null ? 0 : h.length;\n            return !!d && Tt(h, g, 0) > -1;\n        }\n        function Dr(h, g, d) {\n            for(var C = -1, S = h == null ? 0 : h.length; ++C < S;)if (d(g, h[C])) return !0;\n            return !1;\n        }\n        function G(h, g) {\n            for(var d = -1, C = h == null ? 0 : h.length, S = Array(C); ++d < C;)S[d] = g(h[d], d, h);\n            return S;\n        }\n        function nt(h, g) {\n            for(var d = -1, C = g.length, S = h.length; ++d < C;)h[S + d] = g[d];\n            return h;\n        }\n        function Nr(h, g, d, C) {\n            var S = -1, U = h == null ? 0 : h.length;\n            for(C && U && (d = h[++S]); ++S < U;)d = g(d, h[S], S, h);\n            return d;\n        }\n        function tf(h, g, d, C) {\n            var S = h == null ? 0 : h.length;\n            for(C && S && (d = h[--S]); S--;)d = g(d, h[S], S, h);\n            return d;\n        }\n        function Hr(h, g) {\n            for(var d = -1, C = h == null ? 0 : h.length; ++d < C;)if (g(h[d], d, h)) return !0;\n            return !1;\n        }\n        var ef = $r(\"length\");\n        function rf(h) {\n            return h.split(\"\");\n        }\n        function sf(h) {\n            return h.match(ho) || [];\n        }\n        function Is(h, g, d) {\n            var C;\n            return d(h, function(S, U, X) {\n                if (g(S, U, X)) return C = U, !1;\n            }), C;\n        }\n        function ye(h, g, d, C) {\n            for(var S = h.length, U = d + (C ? 1 : -1); C ? U-- : ++U < S;)if (g(h[U], U, h)) return U;\n            return -1;\n        }\n        function Tt(h, g, d) {\n            return g === g ? _f(h, g, d) : ye(h, xs, d);\n        }\n        function uf(h, g, d, C) {\n            for(var S = d - 1, U = h.length; ++S < U;)if (C(h[S], g)) return S;\n            return -1;\n        }\n        function xs(h) {\n            return h !== h;\n        }\n        function Es(h, g) {\n            var d = h == null ? 0 : h.length;\n            return d ? Wr(h, g) / d : _e;\n        }\n        function $r(h) {\n            return function(g) {\n                return g == null ? i : g[h];\n            };\n        }\n        function Ur(h) {\n            return function(g) {\n                return h == null ? i : h[g];\n            };\n        }\n        function ys(h, g, d, C, S) {\n            return S(h, function(U, X, M) {\n                d = C ? (C = !1, U) : g(d, U, X, M);\n            }), d;\n        }\n        function af(h, g) {\n            var d = h.length;\n            for(h.sort(g); d--;)h[d] = h[d].value;\n            return h;\n        }\n        function Wr(h, g) {\n            for(var d, C = -1, S = h.length; ++C < S;){\n                var U = g(h[C]);\n                U !== i && (d = d === i ? U : d + U);\n            }\n            return d;\n        }\n        function Fr(h, g) {\n            for(var d = -1, C = Array(h); ++d < h;)C[d] = g(d);\n            return C;\n        }\n        function of(h, g) {\n            return G(g, function(d) {\n                return [\n                    d,\n                    h[d]\n                ];\n            });\n        }\n        function Ss(h) {\n            return h && h.slice(0, Ts(h) + 1).replace(Er, \"\");\n        }\n        function hn(h) {\n            return function(g) {\n                return h(g);\n            };\n        }\n        function Mr(h, g) {\n            return G(g, function(d) {\n                return h[d];\n            });\n        }\n        function jt(h, g) {\n            return h.has(g);\n        }\n        function Os(h, g) {\n            for(var d = -1, C = h.length; ++d < C && Tt(g, h[d], 0) > -1;);\n            return d;\n        }\n        function Rs(h, g) {\n            for(var d = h.length; d-- && Tt(g, h[d], 0) > -1;);\n            return d;\n        }\n        function ff(h, g) {\n            for(var d = h.length, C = 0; d--;)h[d] === g && ++C;\n            return C;\n        }\n        var cf = Ur(Yo), hf = Ur(Zo);\n        function lf(h) {\n            return \"\\\\\" + Xo[h];\n        }\n        function pf(h, g) {\n            return h == null ? i : h[g];\n        }\n        function Lt(h) {\n            return Bo.test(h);\n        }\n        function df(h) {\n            return Go.test(h);\n        }\n        function gf(h) {\n            for(var g, d = []; !(g = h.next()).done;)d.push(g.value);\n            return d;\n        }\n        function qr(h) {\n            var g = -1, d = Array(h.size);\n            return h.forEach(function(C, S) {\n                d[++g] = [\n                    S,\n                    C\n                ];\n            }), d;\n        }\n        function bs(h, g) {\n            return function(d) {\n                return h(g(d));\n            };\n        }\n        function tt(h, g) {\n            for(var d = -1, C = h.length, S = 0, U = []; ++d < C;){\n                var X = h[d];\n                (X === g || X === It) && (h[d] = It, U[S++] = d);\n            }\n            return U;\n        }\n        function Se(h) {\n            var g = -1, d = Array(h.size);\n            return h.forEach(function(C) {\n                d[++g] = C;\n            }), d;\n        }\n        function vf(h) {\n            var g = -1, d = Array(h.size);\n            return h.forEach(function(C) {\n                d[++g] = [\n                    C,\n                    C\n                ];\n            }), d;\n        }\n        function _f(h, g, d) {\n            for(var C = d - 1, S = h.length; ++C < S;)if (h[C] === g) return C;\n            return -1;\n        }\n        function mf(h, g, d) {\n            for(var C = d + 1; C--;)if (h[C] === g) return C;\n            return C;\n        }\n        function Dt(h) {\n            return Lt(h) ? Pf(h) : ef(h);\n        }\n        function On(h) {\n            return Lt(h) ? Af(h) : rf(h);\n        }\n        function Ts(h) {\n            for(var g = h.length; g-- && ao.test(h.charAt(g)););\n            return g;\n        }\n        var wf = Ur(Jo);\n        function Pf(h) {\n            for(var g = br.lastIndex = 0; br.test(h);)++g;\n            return g;\n        }\n        function Af(h) {\n            return h.match(br) || [];\n        }\n        function Cf(h) {\n            return h.match(qo) || [];\n        }\n        var If = function h(g) {\n            g = g == null ? k : Nt.defaults(k.Object(), g, Nt.pick(k, zo));\n            var d = g.Array, C = g.Date, S = g.Error, U = g.Function, X = g.Math, M = g.Object, Br = g.RegExp, xf = g.String, wn = g.TypeError, Oe = d.prototype, Ef = U.prototype, Ht = M.prototype, Re = g[\"__core-js_shared__\"], be = Ef.toString, F = Ht.hasOwnProperty, yf = 0, Ls = function() {\n                var n = /[^.]+$/.exec(Re && Re.keys && Re.keys.IE_PROTO || \"\");\n                return n ? \"Symbol(src)_1.\" + n : \"\";\n            }(), Te = Ht.toString, Sf = be.call(M), Of = k._, Rf = Br(\"^\" + be.call(F).replace(xr, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\"), Le = gs ? g.Buffer : i, et = g.Symbol, De = g.Uint8Array, Ds = Le ? Le.allocUnsafe : i, Ne = bs(M.getPrototypeOf, M), Ns = M.create, Hs = Ht.propertyIsEnumerable, He = Oe.splice, $s = et ? et.isConcatSpreadable : i, ne = et ? et.iterator : i, pt = et ? et.toStringTag : i, $e = function() {\n                try {\n                    var n = mt(M, \"defineProperty\");\n                    return n({}, \"\", {}), n;\n                } catch  {}\n            }(), bf = g.clearTimeout !== k.clearTimeout && g.clearTimeout, Tf = C && C.now !== k.Date.now && C.now, Lf = g.setTimeout !== k.setTimeout && g.setTimeout, Ue = X.ceil, We = X.floor, Gr = M.getOwnPropertySymbols, Df = Le ? Le.isBuffer : i, Us = g.isFinite, Nf = Oe.join, Hf = bs(M.keys, M), Q = X.max, nn = X.min, $f = C.now, Uf = g.parseInt, Ws = X.random, Wf = Oe.reverse, zr = mt(g, \"DataView\"), te = mt(g, \"Map\"), Kr = mt(g, \"Promise\"), $t = mt(g, \"Set\"), ee = mt(g, \"WeakMap\"), re = mt(M, \"create\"), Fe = ee && new ee, Ut = {}, Ff = wt(zr), Mf = wt(te), qf = wt(Kr), Bf = wt($t), Gf = wt(ee), Me = et ? et.prototype : i, ie = Me ? Me.valueOf : i, Fs = Me ? Me.toString : i;\n            function a(n) {\n                if (Y(n) && !O(n) && !(n instanceof H)) {\n                    if (n instanceof Pn) return n;\n                    if (F.call(n, \"__wrapped__\")) return Mu(n);\n                }\n                return new Pn(n);\n            }\n            var Wt = function() {\n                function n() {}\n                return function(t) {\n                    if (!K(t)) return {};\n                    if (Ns) return Ns(t);\n                    n.prototype = t;\n                    var e = new n;\n                    return n.prototype = i, e;\n                };\n            }();\n            function qe() {}\n            function Pn(n, t) {\n                this.__wrapped__ = n, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = i;\n            }\n            a.templateSettings = {\n                escape: to,\n                evaluate: eo,\n                interpolate: Ji,\n                variable: \"\",\n                imports: {\n                    _: a\n                }\n            }, a.prototype = qe.prototype, a.prototype.constructor = a, Pn.prototype = Wt(qe.prototype), Pn.prototype.constructor = Pn;\n            function H(n) {\n                this.__wrapped__ = n, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = Hn, this.__views__ = [];\n            }\n            function zf() {\n                var n = new H(this.__wrapped__);\n                return n.__actions__ = un(this.__actions__), n.__dir__ = this.__dir__, n.__filtered__ = this.__filtered__, n.__iteratees__ = un(this.__iteratees__), n.__takeCount__ = this.__takeCount__, n.__views__ = un(this.__views__), n;\n            }\n            function Kf() {\n                if (this.__filtered__) {\n                    var n = new H(this);\n                    n.__dir__ = -1, n.__filtered__ = !0;\n                } else n = this.clone(), n.__dir__ *= -1;\n                return n;\n            }\n            function Yf() {\n                var n = this.__wrapped__.value(), t = this.__dir__, e = O(n), r = t < 0, s = e ? n.length : 0, o = ih(0, s, this.__views__), f = o.start, c = o.end, l = c - f, v = r ? c : f - 1, _ = this.__iteratees__, m = _.length, P = 0, I = nn(l, this.__takeCount__);\n                if (!e || !r && s == l && I == l) return fu(n, this.__actions__);\n                var E = [];\n                n: for(; l-- && P < I;){\n                    v += t;\n                    for(var T = -1, y = n[v]; ++T < m;){\n                        var N = _[T], $ = N.iteratee, dn = N.type, sn = $(y);\n                        if (dn == Wa) y = sn;\n                        else if (!sn) {\n                            if (dn == Gi) continue n;\n                            break n;\n                        }\n                    }\n                    E[P++] = y;\n                }\n                return E;\n            }\n            H.prototype = Wt(qe.prototype), H.prototype.constructor = H;\n            function dt(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function Zf() {\n                this.__data__ = re ? re(null) : {}, this.size = 0;\n            }\n            function Jf(n) {\n                var t = this.has(n) && delete this.__data__[n];\n                return this.size -= t ? 1 : 0, t;\n            }\n            function Xf(n) {\n                var t = this.__data__;\n                if (re) {\n                    var e = t[n];\n                    return e === zt ? i : e;\n                }\n                return F.call(t, n) ? t[n] : i;\n            }\n            function Qf(n) {\n                var t = this.__data__;\n                return re ? t[n] !== i : F.call(t, n);\n            }\n            function Vf(n, t) {\n                var e = this.__data__;\n                return this.size += this.has(n) ? 0 : 1, e[n] = re && t === i ? zt : t, this;\n            }\n            dt.prototype.clear = Zf, dt.prototype.delete = Jf, dt.prototype.get = Xf, dt.prototype.has = Qf, dt.prototype.set = Vf;\n            function Bn(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function kf() {\n                this.__data__ = [], this.size = 0;\n            }\n            function jf(n) {\n                var t = this.__data__, e = Be(t, n);\n                if (e < 0) return !1;\n                var r = t.length - 1;\n                return e == r ? t.pop() : He.call(t, e, 1), --this.size, !0;\n            }\n            function nc(n) {\n                var t = this.__data__, e = Be(t, n);\n                return e < 0 ? i : t[e][1];\n            }\n            function tc(n) {\n                return Be(this.__data__, n) > -1;\n            }\n            function ec(n, t) {\n                var e = this.__data__, r = Be(e, n);\n                return r < 0 ? (++this.size, e.push([\n                    n,\n                    t\n                ])) : e[r][1] = t, this;\n            }\n            Bn.prototype.clear = kf, Bn.prototype.delete = jf, Bn.prototype.get = nc, Bn.prototype.has = tc, Bn.prototype.set = ec;\n            function Gn(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function rc() {\n                this.size = 0, this.__data__ = {\n                    hash: new dt,\n                    map: new (te || Bn),\n                    string: new dt\n                };\n            }\n            function ic(n) {\n                var t = nr(this, n).delete(n);\n                return this.size -= t ? 1 : 0, t;\n            }\n            function sc(n) {\n                return nr(this, n).get(n);\n            }\n            function uc(n) {\n                return nr(this, n).has(n);\n            }\n            function ac(n, t) {\n                var e = nr(this, n), r = e.size;\n                return e.set(n, t), this.size += e.size == r ? 0 : 1, this;\n            }\n            Gn.prototype.clear = rc, Gn.prototype.delete = ic, Gn.prototype.get = sc, Gn.prototype.has = uc, Gn.prototype.set = ac;\n            function gt(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.__data__ = new Gn; ++t < e;)this.add(n[t]);\n            }\n            function oc(n) {\n                return this.__data__.set(n, zt), this;\n            }\n            function fc(n) {\n                return this.__data__.has(n);\n            }\n            gt.prototype.add = gt.prototype.push = oc, gt.prototype.has = fc;\n            function Rn(n) {\n                var t = this.__data__ = new Bn(n);\n                this.size = t.size;\n            }\n            function cc() {\n                this.__data__ = new Bn, this.size = 0;\n            }\n            function hc(n) {\n                var t = this.__data__, e = t.delete(n);\n                return this.size = t.size, e;\n            }\n            function lc(n) {\n                return this.__data__.get(n);\n            }\n            function pc(n) {\n                return this.__data__.has(n);\n            }\n            function dc(n, t) {\n                var e = this.__data__;\n                if (e instanceof Bn) {\n                    var r = e.__data__;\n                    if (!te || r.length < w - 1) return r.push([\n                        n,\n                        t\n                    ]), this.size = ++e.size, this;\n                    e = this.__data__ = new Gn(r);\n                }\n                return e.set(n, t), this.size = e.size, this;\n            }\n            Rn.prototype.clear = cc, Rn.prototype.delete = hc, Rn.prototype.get = lc, Rn.prototype.has = pc, Rn.prototype.set = dc;\n            function Ms(n, t) {\n                var e = O(n), r = !e && Pt(n), s = !e && !r && at(n), o = !e && !r && !s && Bt(n), f = e || r || s || o, c = f ? Fr(n.length, xf) : [], l = c.length;\n                for(var v in n)(t || F.call(n, v)) && !(f && (v == \"length\" || s && (v == \"offset\" || v == \"parent\") || o && (v == \"buffer\" || v == \"byteLength\" || v == \"byteOffset\") || Zn(v, l))) && c.push(v);\n                return c;\n            }\n            function qs(n) {\n                var t = n.length;\n                return t ? n[ei(0, t - 1)] : i;\n            }\n            function gc(n, t) {\n                return tr(un(n), vt(t, 0, n.length));\n            }\n            function vc(n) {\n                return tr(un(n));\n            }\n            function Yr(n, t, e) {\n                (e !== i && !bn(n[t], e) || e === i && !(t in n)) && zn(n, t, e);\n            }\n            function se(n, t, e) {\n                var r = n[t];\n                (!(F.call(n, t) && bn(r, e)) || e === i && !(t in n)) && zn(n, t, e);\n            }\n            function Be(n, t) {\n                for(var e = n.length; e--;)if (bn(n[e][0], t)) return e;\n                return -1;\n            }\n            function _c(n, t, e, r) {\n                return rt(n, function(s, o, f) {\n                    t(r, s, e(s), f);\n                }), r;\n            }\n            function Bs(n, t) {\n                return n && Un(t, V(t), n);\n            }\n            function mc(n, t) {\n                return n && Un(t, on(t), n);\n            }\n            function zn(n, t, e) {\n                t == \"__proto__\" && $e ? $e(n, t, {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: e,\n                    writable: !0\n                }) : n[t] = e;\n            }\n            function Zr(n, t) {\n                for(var e = -1, r = t.length, s = d(r), o = n == null; ++e < r;)s[e] = o ? i : Si(n, t[e]);\n                return s;\n            }\n            function vt(n, t, e) {\n                return n === n && (e !== i && (n = n <= e ? n : e), t !== i && (n = n >= t ? n : t)), n;\n            }\n            function An(n, t, e, r, s, o) {\n                var f, c = t & Ln, l = t & Fn, v = t & xt;\n                if (e && (f = s ? e(n, r, s, o) : e(n)), f !== i) return f;\n                if (!K(n)) return n;\n                var _ = O(n);\n                if (_) {\n                    if (f = uh(n), !c) return un(n, f);\n                } else {\n                    var m = tn(n), P = m == Pe || m == zi;\n                    if (at(n)) return lu(n, c);\n                    if (m == qn || m == Ot || P && !s) {\n                        if (f = l || P ? {} : Tu(n), !c) return l ? Xc(n, mc(f, n)) : Jc(n, Bs(f, n));\n                    } else {\n                        if (!q[m]) return s ? n : {};\n                        f = ah(n, m, c);\n                    }\n                }\n                o || (o = new Rn);\n                var I = o.get(n);\n                if (I) return I;\n                o.set(n, f), ua(n) ? n.forEach(function(y) {\n                    f.add(An(y, t, e, y, n, o));\n                }) : ia(n) && n.forEach(function(y, N) {\n                    f.set(N, An(y, t, e, N, n, o));\n                });\n                var E = v ? l ? pi : li : l ? on : V, T = _ ? i : E(n);\n                return mn(T || n, function(y, N) {\n                    T && (N = y, y = n[N]), se(f, N, An(y, t, e, N, n, o));\n                }), f;\n            }\n            function wc(n) {\n                var t = V(n);\n                return function(e) {\n                    return Gs(e, n, t);\n                };\n            }\n            function Gs(n, t, e) {\n                var r = e.length;\n                if (n == null) return !r;\n                for(n = M(n); r--;){\n                    var s = e[r], o = t[s], f = n[s];\n                    if (f === i && !(s in n) || !o(f)) return !1;\n                }\n                return !0;\n            }\n            function zs(n, t, e) {\n                if (typeof n != \"function\") throw new wn(D);\n                return le(function() {\n                    n.apply(i, e);\n                }, t);\n            }\n            function ue(n, t, e, r) {\n                var s = -1, o = Ee, f = !0, c = n.length, l = [], v = t.length;\n                if (!c) return l;\n                e && (t = G(t, hn(e))), r ? (o = Dr, f = !1) : t.length >= w && (o = jt, f = !1, t = new gt(t));\n                n: for(; ++s < c;){\n                    var _ = n[s], m = e == null ? _ : e(_);\n                    if (_ = r || _ !== 0 ? _ : 0, f && m === m) {\n                        for(var P = v; P--;)if (t[P] === m) continue n;\n                        l.push(_);\n                    } else o(t, m, r) || l.push(_);\n                }\n                return l;\n            }\n            var rt = _u($n), Ks = _u(Xr, !0);\n            function Pc(n, t) {\n                var e = !0;\n                return rt(n, function(r, s, o) {\n                    return e = !!t(r, s, o), e;\n                }), e;\n            }\n            function Ge(n, t, e) {\n                for(var r = -1, s = n.length; ++r < s;){\n                    var o = n[r], f = t(o);\n                    if (f != null && (c === i ? f === f && !pn(f) : e(f, c))) var c = f, l = o;\n                }\n                return l;\n            }\n            function Ac(n, t, e, r) {\n                var s = n.length;\n                for(e = R(e), e < 0 && (e = -e > s ? 0 : s + e), r = r === i || r > s ? s : R(r), r < 0 && (r += s), r = e > r ? 0 : oa(r); e < r;)n[e++] = t;\n                return n;\n            }\n            function Ys(n, t) {\n                var e = [];\n                return rt(n, function(r, s, o) {\n                    t(r, s, o) && e.push(r);\n                }), e;\n            }\n            function j(n, t, e, r, s) {\n                var o = -1, f = n.length;\n                for(e || (e = fh), s || (s = []); ++o < f;){\n                    var c = n[o];\n                    t > 0 && e(c) ? t > 1 ? j(c, t - 1, e, r, s) : nt(s, c) : r || (s[s.length] = c);\n                }\n                return s;\n            }\n            var Jr = mu(), Zs = mu(!0);\n            function $n(n, t) {\n                return n && Jr(n, t, V);\n            }\n            function Xr(n, t) {\n                return n && Zs(n, t, V);\n            }\n            function ze(n, t) {\n                return jn(t, function(e) {\n                    return Jn(n[e]);\n                });\n            }\n            function _t(n, t) {\n                t = st(t, n);\n                for(var e = 0, r = t.length; n != null && e < r;)n = n[Wn(t[e++])];\n                return e && e == r ? n : i;\n            }\n            function Js(n, t, e) {\n                var r = t(n);\n                return O(n) ? r : nt(r, e(n));\n            }\n            function en(n) {\n                return n == null ? n === i ? Ja : Ya : pt && pt in M(n) ? rh(n) : vh(n);\n            }\n            function Qr(n, t) {\n                return n > t;\n            }\n            function Cc(n, t) {\n                return n != null && F.call(n, t);\n            }\n            function Ic(n, t) {\n                return n != null && t in M(n);\n            }\n            function xc(n, t, e) {\n                return n >= nn(t, e) && n < Q(t, e);\n            }\n            function Vr(n, t, e) {\n                for(var r = e ? Dr : Ee, s = n[0].length, o = n.length, f = o, c = d(o), l = 1 / 0, v = []; f--;){\n                    var _ = n[f];\n                    f && t && (_ = G(_, hn(t))), l = nn(_.length, l), c[f] = !e && (t || s >= 120 && _.length >= 120) ? new gt(f && _) : i;\n                }\n                _ = n[0];\n                var m = -1, P = c[0];\n                n: for(; ++m < s && v.length < l;){\n                    var I = _[m], E = t ? t(I) : I;\n                    if (I = e || I !== 0 ? I : 0, !(P ? jt(P, E) : r(v, E, e))) {\n                        for(f = o; --f;){\n                            var T = c[f];\n                            if (!(T ? jt(T, E) : r(n[f], E, e))) continue n;\n                        }\n                        P && P.push(E), v.push(I);\n                    }\n                }\n                return v;\n            }\n            function Ec(n, t, e, r) {\n                return $n(n, function(s, o, f) {\n                    t(r, e(s), o, f);\n                }), r;\n            }\n            function ae(n, t, e) {\n                t = st(t, n), n = Hu(n, t);\n                var r = n == null ? n : n[Wn(In(t))];\n                return r == null ? i : cn(r, n, e);\n            }\n            function Xs(n) {\n                return Y(n) && en(n) == Ot;\n            }\n            function yc(n) {\n                return Y(n) && en(n) == kt;\n            }\n            function Sc(n) {\n                return Y(n) && en(n) == Zt;\n            }\n            function oe(n, t, e, r, s) {\n                return n === t ? !0 : n == null || t == null || !Y(n) && !Y(t) ? n !== n && t !== t : Oc(n, t, e, r, oe, s);\n            }\n            function Oc(n, t, e, r, s, o) {\n                var f = O(n), c = O(t), l = f ? me : tn(n), v = c ? me : tn(t);\n                l = l == Ot ? qn : l, v = v == Ot ? qn : v;\n                var _ = l == qn, m = v == qn, P = l == v;\n                if (P && at(n)) {\n                    if (!at(t)) return !1;\n                    f = !0, _ = !1;\n                }\n                if (P && !_) return o || (o = new Rn), f || Bt(n) ? Ou(n, t, e, r, s, o) : th(n, t, l, e, r, s, o);\n                if (!(e & Et)) {\n                    var I = _ && F.call(n, \"__wrapped__\"), E = m && F.call(t, \"__wrapped__\");\n                    if (I || E) {\n                        var T = I ? n.value() : n, y = E ? t.value() : t;\n                        return o || (o = new Rn), s(T, y, e, r, o);\n                    }\n                }\n                return P ? (o || (o = new Rn), eh(n, t, e, r, s, o)) : !1;\n            }\n            function Rc(n) {\n                return Y(n) && tn(n) == yn;\n            }\n            function kr(n, t, e, r) {\n                var s = e.length, o = s, f = !r;\n                if (n == null) return !o;\n                for(n = M(n); s--;){\n                    var c = e[s];\n                    if (f && c[2] ? c[1] !== n[c[0]] : !(c[0] in n)) return !1;\n                }\n                for(; ++s < o;){\n                    c = e[s];\n                    var l = c[0], v = n[l], _ = c[1];\n                    if (f && c[2]) {\n                        if (v === i && !(l in n)) return !1;\n                    } else {\n                        var m = new Rn;\n                        if (r) var P = r(v, _, l, n, t, m);\n                        if (!(P === i ? oe(_, v, Et | ve, r, m) : P)) return !1;\n                    }\n                }\n                return !0;\n            }\n            function Qs(n) {\n                if (!K(n) || hh(n)) return !1;\n                var t = Jn(n) ? Rf : mo;\n                return t.test(wt(n));\n            }\n            function bc(n) {\n                return Y(n) && en(n) == Xt;\n            }\n            function Tc(n) {\n                return Y(n) && tn(n) == Sn;\n            }\n            function Lc(n) {\n                return Y(n) && ar(n.length) && !!B[en(n)];\n            }\n            function Vs(n) {\n                return typeof n == \"function\" ? n : n == null ? fn : typeof n == \"object\" ? O(n) ? nu(n[0], n[1]) : js(n) : wa(n);\n            }\n            function jr(n) {\n                if (!he(n)) return Hf(n);\n                var t = [];\n                for(var e in M(n))F.call(n, e) && e != \"constructor\" && t.push(e);\n                return t;\n            }\n            function Dc(n) {\n                if (!K(n)) return gh(n);\n                var t = he(n), e = [];\n                for(var r in n)r == \"constructor\" && (t || !F.call(n, r)) || e.push(r);\n                return e;\n            }\n            function ni(n, t) {\n                return n < t;\n            }\n            function ks(n, t) {\n                var e = -1, r = an(n) ? d(n.length) : [];\n                return rt(n, function(s, o, f) {\n                    r[++e] = t(s, o, f);\n                }), r;\n            }\n            function js(n) {\n                var t = gi(n);\n                return t.length == 1 && t[0][2] ? Du(t[0][0], t[0][1]) : function(e) {\n                    return e === n || kr(e, n, t);\n                };\n            }\n            function nu(n, t) {\n                return _i(n) && Lu(t) ? Du(Wn(n), t) : function(e) {\n                    var r = Si(e, n);\n                    return r === i && r === t ? Oi(e, n) : oe(t, r, Et | ve);\n                };\n            }\n            function Ke(n, t, e, r, s) {\n                n !== t && Jr(t, function(o, f) {\n                    if (s || (s = new Rn), K(o)) Nc(n, t, f, e, Ke, r, s);\n                    else {\n                        var c = r ? r(wi(n, f), o, f + \"\", n, t, s) : i;\n                        c === i && (c = o), Yr(n, f, c);\n                    }\n                }, on);\n            }\n            function Nc(n, t, e, r, s, o, f) {\n                var c = wi(n, e), l = wi(t, e), v = f.get(l);\n                if (v) {\n                    Yr(n, e, v);\n                    return;\n                }\n                var _ = o ? o(c, l, e + \"\", n, t, f) : i, m = _ === i;\n                if (m) {\n                    var P = O(l), I = !P && at(l), E = !P && !I && Bt(l);\n                    _ = l, P || I || E ? O(c) ? _ = c : Z(c) ? _ = un(c) : I ? (m = !1, _ = lu(l, !0)) : E ? (m = !1, _ = pu(l, !0)) : _ = [] : pe(l) || Pt(l) ? (_ = c, Pt(c) ? _ = fa(c) : (!K(c) || Jn(c)) && (_ = Tu(l))) : m = !1;\n                }\n                m && (f.set(l, _), s(_, l, r, o, f), f.delete(l)), Yr(n, e, _);\n            }\n            function tu(n, t) {\n                var e = n.length;\n                if (e) return t += t < 0 ? e : 0, Zn(t, e) ? n[t] : i;\n            }\n            function eu(n, t, e) {\n                t.length ? t = G(t, function(o) {\n                    return O(o) ? function(f) {\n                        return _t(f, o.length === 1 ? o[0] : o);\n                    } : o;\n                }) : t = [\n                    fn\n                ];\n                var r = -1;\n                t = G(t, hn(x()));\n                var s = ks(n, function(o, f, c) {\n                    var l = G(t, function(v) {\n                        return v(o);\n                    });\n                    return {\n                        criteria: l,\n                        index: ++r,\n                        value: o\n                    };\n                });\n                return af(s, function(o, f) {\n                    return Zc(o, f, e);\n                });\n            }\n            function Hc(n, t) {\n                return ru(n, t, function(e, r) {\n                    return Oi(n, r);\n                });\n            }\n            function ru(n, t, e) {\n                for(var r = -1, s = t.length, o = {}; ++r < s;){\n                    var f = t[r], c = _t(n, f);\n                    e(c, f) && fe(o, st(f, n), c);\n                }\n                return o;\n            }\n            function $c(n) {\n                return function(t) {\n                    return _t(t, n);\n                };\n            }\n            function ti(n, t, e, r) {\n                var s = r ? uf : Tt, o = -1, f = t.length, c = n;\n                for(n === t && (t = un(t)), e && (c = G(n, hn(e))); ++o < f;)for(var l = 0, v = t[o], _ = e ? e(v) : v; (l = s(c, _, l, r)) > -1;)c !== n && He.call(c, l, 1), He.call(n, l, 1);\n                return n;\n            }\n            function iu(n, t) {\n                for(var e = n ? t.length : 0, r = e - 1; e--;){\n                    var s = t[e];\n                    if (e == r || s !== o) {\n                        var o = s;\n                        Zn(s) ? He.call(n, s, 1) : si(n, s);\n                    }\n                }\n                return n;\n            }\n            function ei(n, t) {\n                return n + We(Ws() * (t - n + 1));\n            }\n            function Uc(n, t, e, r) {\n                for(var s = -1, o = Q(Ue((t - n) / (e || 1)), 0), f = d(o); o--;)f[r ? o : ++s] = n, n += e;\n                return f;\n            }\n            function ri(n, t) {\n                var e = \"\";\n                if (!n || t < 1 || t > kn) return e;\n                do t % 2 && (e += n), t = We(t / 2), t && (n += n);\n                while (t);\n                return e;\n            }\n            function L(n, t) {\n                return Pi(Nu(n, t, fn), n + \"\");\n            }\n            function Wc(n) {\n                return qs(Gt(n));\n            }\n            function Fc(n, t) {\n                var e = Gt(n);\n                return tr(e, vt(t, 0, e.length));\n            }\n            function fe(n, t, e, r) {\n                if (!K(n)) return n;\n                t = st(t, n);\n                for(var s = -1, o = t.length, f = o - 1, c = n; c != null && ++s < o;){\n                    var l = Wn(t[s]), v = e;\n                    if (l === \"__proto__\" || l === \"constructor\" || l === \"prototype\") return n;\n                    if (s != f) {\n                        var _ = c[l];\n                        v = r ? r(_, l, c) : i, v === i && (v = K(_) ? _ : Zn(t[s + 1]) ? [] : {});\n                    }\n                    se(c, l, v), c = c[l];\n                }\n                return n;\n            }\n            var su = Fe ? function(n, t) {\n                return Fe.set(n, t), n;\n            } : fn, Mc = $e ? function(n, t) {\n                return $e(n, \"toString\", {\n                    configurable: !0,\n                    enumerable: !1,\n                    value: bi(t),\n                    writable: !0\n                });\n            } : fn;\n            function qc(n) {\n                return tr(Gt(n));\n            }\n            function Cn(n, t, e) {\n                var r = -1, s = n.length;\n                t < 0 && (t = -t > s ? 0 : s + t), e = e > s ? s : e, e < 0 && (e += s), s = t > e ? 0 : e - t >>> 0, t >>>= 0;\n                for(var o = d(s); ++r < s;)o[r] = n[r + t];\n                return o;\n            }\n            function Bc(n, t) {\n                var e;\n                return rt(n, function(r, s, o) {\n                    return e = t(r, s, o), !e;\n                }), !!e;\n            }\n            function Ye(n, t, e) {\n                var r = 0, s = n == null ? r : n.length;\n                if (typeof t == \"number\" && t === t && s <= Ba) {\n                    for(; r < s;){\n                        var o = r + s >>> 1, f = n[o];\n                        f !== null && !pn(f) && (e ? f <= t : f < t) ? r = o + 1 : s = o;\n                    }\n                    return s;\n                }\n                return ii(n, t, fn, e);\n            }\n            function ii(n, t, e, r) {\n                var s = 0, o = n == null ? 0 : n.length;\n                if (o === 0) return 0;\n                t = e(t);\n                for(var f = t !== t, c = t === null, l = pn(t), v = t === i; s < o;){\n                    var _ = We((s + o) / 2), m = e(n[_]), P = m !== i, I = m === null, E = m === m, T = pn(m);\n                    if (f) var y = r || E;\n                    else v ? y = E && (r || P) : c ? y = E && P && (r || !I) : l ? y = E && P && !I && (r || !T) : I || T ? y = !1 : y = r ? m <= t : m < t;\n                    y ? s = _ + 1 : o = _;\n                }\n                return nn(o, qa);\n            }\n            function uu(n, t) {\n                for(var e = -1, r = n.length, s = 0, o = []; ++e < r;){\n                    var f = n[e], c = t ? t(f) : f;\n                    if (!e || !bn(c, l)) {\n                        var l = c;\n                        o[s++] = f === 0 ? 0 : f;\n                    }\n                }\n                return o;\n            }\n            function au(n) {\n                return typeof n == \"number\" ? n : pn(n) ? _e : +n;\n            }\n            function ln(n) {\n                if (typeof n == \"string\") return n;\n                if (O(n)) return G(n, ln) + \"\";\n                if (pn(n)) return Fs ? Fs.call(n) : \"\";\n                var t = n + \"\";\n                return t == \"0\" && 1 / n == -ht ? \"-0\" : t;\n            }\n            function it(n, t, e) {\n                var r = -1, s = Ee, o = n.length, f = !0, c = [], l = c;\n                if (e) f = !1, s = Dr;\n                else if (o >= w) {\n                    var v = t ? null : jc(n);\n                    if (v) return Se(v);\n                    f = !1, s = jt, l = new gt;\n                } else l = t ? [] : c;\n                n: for(; ++r < o;){\n                    var _ = n[r], m = t ? t(_) : _;\n                    if (_ = e || _ !== 0 ? _ : 0, f && m === m) {\n                        for(var P = l.length; P--;)if (l[P] === m) continue n;\n                        t && l.push(m), c.push(_);\n                    } else s(l, m, e) || (l !== c && l.push(m), c.push(_));\n                }\n                return c;\n            }\n            function si(n, t) {\n                return t = st(t, n), n = Hu(n, t), n == null || delete n[Wn(In(t))];\n            }\n            function ou(n, t, e, r) {\n                return fe(n, t, e(_t(n, t)), r);\n            }\n            function Ze(n, t, e, r) {\n                for(var s = n.length, o = r ? s : -1; (r ? o-- : ++o < s) && t(n[o], o, n););\n                return e ? Cn(n, r ? 0 : o, r ? o + 1 : s) : Cn(n, r ? o + 1 : 0, r ? s : o);\n            }\n            function fu(n, t) {\n                var e = n;\n                return e instanceof H && (e = e.value()), Nr(t, function(r, s) {\n                    return s.func.apply(s.thisArg, nt([\n                        r\n                    ], s.args));\n                }, e);\n            }\n            function ui(n, t, e) {\n                var r = n.length;\n                if (r < 2) return r ? it(n[0]) : [];\n                for(var s = -1, o = d(r); ++s < r;)for(var f = n[s], c = -1; ++c < r;)c != s && (o[s] = ue(o[s] || f, n[c], t, e));\n                return it(j(o, 1), t, e);\n            }\n            function cu(n, t, e) {\n                for(var r = -1, s = n.length, o = t.length, f = {}; ++r < s;){\n                    var c = r < o ? t[r] : i;\n                    e(f, n[r], c);\n                }\n                return f;\n            }\n            function ai(n) {\n                return Z(n) ? n : [];\n            }\n            function oi(n) {\n                return typeof n == \"function\" ? n : fn;\n            }\n            function st(n, t) {\n                return O(n) ? n : _i(n, t) ? [\n                    n\n                ] : Fu(W(n));\n            }\n            var Gc = L;\n            function ut(n, t, e) {\n                var r = n.length;\n                return e = e === i ? r : e, !t && e >= r ? n : Cn(n, t, e);\n            }\n            var hu = bf || function(n) {\n                return k.clearTimeout(n);\n            };\n            function lu(n, t) {\n                if (t) return n.slice();\n                var e = n.length, r = Ds ? Ds(e) : new n.constructor(e);\n                return n.copy(r), r;\n            }\n            function fi(n) {\n                var t = new n.constructor(n.byteLength);\n                return new De(t).set(new De(n)), t;\n            }\n            function zc(n, t) {\n                var e = t ? fi(n.buffer) : n.buffer;\n                return new n.constructor(e, n.byteOffset, n.byteLength);\n            }\n            function Kc(n) {\n                var t = new n.constructor(n.source, Xi.exec(n));\n                return t.lastIndex = n.lastIndex, t;\n            }\n            function Yc(n) {\n                return ie ? M(ie.call(n)) : {};\n            }\n            function pu(n, t) {\n                var e = t ? fi(n.buffer) : n.buffer;\n                return new n.constructor(e, n.byteOffset, n.length);\n            }\n            function du(n, t) {\n                if (n !== t) {\n                    var e = n !== i, r = n === null, s = n === n, o = pn(n), f = t !== i, c = t === null, l = t === t, v = pn(t);\n                    if (!c && !v && !o && n > t || o && f && l && !c && !v || r && f && l || !e && l || !s) return 1;\n                    if (!r && !o && !v && n < t || v && e && s && !r && !o || c && e && s || !f && s || !l) return -1;\n                }\n                return 0;\n            }\n            function Zc(n, t, e) {\n                for(var r = -1, s = n.criteria, o = t.criteria, f = s.length, c = e.length; ++r < f;){\n                    var l = du(s[r], o[r]);\n                    if (l) {\n                        if (r >= c) return l;\n                        var v = e[r];\n                        return l * (v == \"desc\" ? -1 : 1);\n                    }\n                }\n                return n.index - t.index;\n            }\n            function gu(n, t, e, r) {\n                for(var s = -1, o = n.length, f = e.length, c = -1, l = t.length, v = Q(o - f, 0), _ = d(l + v), m = !r; ++c < l;)_[c] = t[c];\n                for(; ++s < f;)(m || s < o) && (_[e[s]] = n[s]);\n                for(; v--;)_[c++] = n[s++];\n                return _;\n            }\n            function vu(n, t, e, r) {\n                for(var s = -1, o = n.length, f = -1, c = e.length, l = -1, v = t.length, _ = Q(o - c, 0), m = d(_ + v), P = !r; ++s < _;)m[s] = n[s];\n                for(var I = s; ++l < v;)m[I + l] = t[l];\n                for(; ++f < c;)(P || s < o) && (m[I + e[f]] = n[s++]);\n                return m;\n            }\n            function un(n, t) {\n                var e = -1, r = n.length;\n                for(t || (t = d(r)); ++e < r;)t[e] = n[e];\n                return t;\n            }\n            function Un(n, t, e, r) {\n                var s = !e;\n                e || (e = {});\n                for(var o = -1, f = t.length; ++o < f;){\n                    var c = t[o], l = r ? r(e[c], n[c], c, e, n) : i;\n                    l === i && (l = n[c]), s ? zn(e, c, l) : se(e, c, l);\n                }\n                return e;\n            }\n            function Jc(n, t) {\n                return Un(n, vi(n), t);\n            }\n            function Xc(n, t) {\n                return Un(n, Ru(n), t);\n            }\n            function Je(n, t) {\n                return function(e, r) {\n                    var s = O(e) ? jo : _c, o = t ? t() : {};\n                    return s(e, n, x(r, 2), o);\n                };\n            }\n            function Ft(n) {\n                return L(function(t, e) {\n                    var r = -1, s = e.length, o = s > 1 ? e[s - 1] : i, f = s > 2 ? e[2] : i;\n                    for(o = n.length > 3 && typeof o == \"function\" ? (s--, o) : i, f && rn(e[0], e[1], f) && (o = s < 3 ? i : o, s = 1), t = M(t); ++r < s;){\n                        var c = e[r];\n                        c && n(t, c, r, o);\n                    }\n                    return t;\n                });\n            }\n            function _u(n, t) {\n                return function(e, r) {\n                    if (e == null) return e;\n                    if (!an(e)) return n(e, r);\n                    for(var s = e.length, o = t ? s : -1, f = M(e); (t ? o-- : ++o < s) && r(f[o], o, f) !== !1;);\n                    return e;\n                };\n            }\n            function mu(n) {\n                return function(t, e, r) {\n                    for(var s = -1, o = M(t), f = r(t), c = f.length; c--;){\n                        var l = f[n ? c : ++s];\n                        if (e(o[l], l, o) === !1) break;\n                    }\n                    return t;\n                };\n            }\n            function Qc(n, t, e) {\n                var r = t & vn, s = ce(n);\n                function o() {\n                    var f = this && this !== k && this instanceof o ? s : n;\n                    return f.apply(r ? e : this, arguments);\n                }\n                return o;\n            }\n            function wu(n) {\n                return function(t) {\n                    t = W(t);\n                    var e = Lt(t) ? On(t) : i, r = e ? e[0] : t.charAt(0), s = e ? ut(e, 1).join(\"\") : t.slice(1);\n                    return r[n]() + s;\n                };\n            }\n            function Mt(n) {\n                return function(t) {\n                    return Nr(_a(va(t).replace(Fo, \"\")), n, \"\");\n                };\n            }\n            function ce(n) {\n                return function() {\n                    var t = arguments;\n                    switch(t.length){\n                        case 0:\n                            return new n;\n                        case 1:\n                            return new n(t[0]);\n                        case 2:\n                            return new n(t[0], t[1]);\n                        case 3:\n                            return new n(t[0], t[1], t[2]);\n                        case 4:\n                            return new n(t[0], t[1], t[2], t[3]);\n                        case 5:\n                            return new n(t[0], t[1], t[2], t[3], t[4]);\n                        case 6:\n                            return new n(t[0], t[1], t[2], t[3], t[4], t[5]);\n                        case 7:\n                            return new n(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);\n                    }\n                    var e = Wt(n.prototype), r = n.apply(e, t);\n                    return K(r) ? r : e;\n                };\n            }\n            function Vc(n, t, e) {\n                var r = ce(n);\n                function s() {\n                    for(var o = arguments.length, f = d(o), c = o, l = qt(s); c--;)f[c] = arguments[c];\n                    var v = o < 3 && f[0] !== l && f[o - 1] !== l ? [] : tt(f, l);\n                    if (o -= v.length, o < e) return xu(n, t, Xe, s.placeholder, i, f, v, i, i, e - o);\n                    var _ = this && this !== k && this instanceof s ? r : n;\n                    return cn(_, this, f);\n                }\n                return s;\n            }\n            function Pu(n) {\n                return function(t, e, r) {\n                    var s = M(t);\n                    if (!an(t)) {\n                        var o = x(e, 3);\n                        t = V(t), e = function(c) {\n                            return o(s[c], c, s);\n                        };\n                    }\n                    var f = n(t, e, r);\n                    return f > -1 ? s[o ? t[f] : f] : i;\n                };\n            }\n            function Au(n) {\n                return Yn(function(t) {\n                    var e = t.length, r = e, s = Pn.prototype.thru;\n                    for(n && t.reverse(); r--;){\n                        var o = t[r];\n                        if (typeof o != \"function\") throw new wn(D);\n                        if (s && !f && je(o) == \"wrapper\") var f = new Pn([], !0);\n                    }\n                    for(r = f ? r : e; ++r < e;){\n                        o = t[r];\n                        var c = je(o), l = c == \"wrapper\" ? di(o) : i;\n                        l && mi(l[0]) && l[1] == (Mn | Dn | Nn | Kt) && !l[4].length && l[9] == 1 ? f = f[je(l[0])].apply(f, l[3]) : f = o.length == 1 && mi(o) ? f[c]() : f.thru(o);\n                    }\n                    return function() {\n                        var v = arguments, _ = v[0];\n                        if (f && v.length == 1 && O(_)) return f.plant(_).value();\n                        for(var m = 0, P = e ? t[m].apply(this, v) : _; ++m < e;)P = t[m].call(this, P);\n                        return P;\n                    };\n                });\n            }\n            function Xe(n, t, e, r, s, o, f, c, l, v) {\n                var _ = t & Mn, m = t & vn, P = t & ct, I = t & (Dn | yt), E = t & dr, T = P ? i : ce(n);\n                function y() {\n                    for(var N = arguments.length, $ = d(N), dn = N; dn--;)$[dn] = arguments[dn];\n                    if (I) var sn = qt(y), gn = ff($, sn);\n                    if (r && ($ = gu($, r, s, I)), o && ($ = vu($, o, f, I)), N -= gn, I && N < v) {\n                        var J = tt($, sn);\n                        return xu(n, t, Xe, y.placeholder, e, $, J, c, l, v - N);\n                    }\n                    var Tn = m ? e : this, Qn = P ? Tn[n] : n;\n                    return N = $.length, c ? $ = _h($, c) : E && N > 1 && $.reverse(), _ && l < N && ($.length = l), this && this !== k && this instanceof y && (Qn = T || ce(Qn)), Qn.apply(Tn, $);\n                }\n                return y;\n            }\n            function Cu(n, t) {\n                return function(e, r) {\n                    return Ec(e, n, t(r), {});\n                };\n            }\n            function Qe(n, t) {\n                return function(e, r) {\n                    var s;\n                    if (e === i && r === i) return t;\n                    if (e !== i && (s = e), r !== i) {\n                        if (s === i) return r;\n                        typeof e == \"string\" || typeof r == \"string\" ? (e = ln(e), r = ln(r)) : (e = au(e), r = au(r)), s = n(e, r);\n                    }\n                    return s;\n                };\n            }\n            function ci(n) {\n                return Yn(function(t) {\n                    return t = G(t, hn(x())), L(function(e) {\n                        var r = this;\n                        return n(t, function(s) {\n                            return cn(s, r, e);\n                        });\n                    });\n                });\n            }\n            function Ve(n, t) {\n                t = t === i ? \" \" : ln(t);\n                var e = t.length;\n                if (e < 2) return e ? ri(t, n) : t;\n                var r = ri(t, Ue(n / Dt(t)));\n                return Lt(t) ? ut(On(r), 0, n).join(\"\") : r.slice(0, n);\n            }\n            function kc(n, t, e, r) {\n                var s = t & vn, o = ce(n);\n                function f() {\n                    for(var c = -1, l = arguments.length, v = -1, _ = r.length, m = d(_ + l), P = this && this !== k && this instanceof f ? o : n; ++v < _;)m[v] = r[v];\n                    for(; l--;)m[v++] = arguments[++c];\n                    return cn(P, s ? e : this, m);\n                }\n                return f;\n            }\n            function Iu(n) {\n                return function(t, e, r) {\n                    return r && typeof r != \"number\" && rn(t, e, r) && (e = r = i), t = Xn(t), e === i ? (e = t, t = 0) : e = Xn(e), r = r === i ? t < e ? 1 : -1 : Xn(r), Uc(t, e, r, n);\n                };\n            }\n            function ke(n) {\n                return function(t, e) {\n                    return typeof t == \"string\" && typeof e == \"string\" || (t = xn(t), e = xn(e)), n(t, e);\n                };\n            }\n            function xu(n, t, e, r, s, o, f, c, l, v) {\n                var _ = t & Dn, m = _ ? f : i, P = _ ? i : f, I = _ ? o : i, E = _ ? i : o;\n                t |= _ ? Nn : St, t &= ~(_ ? St : Nn), t & Bi || (t &= ~(vn | ct));\n                var T = [\n                    n,\n                    t,\n                    s,\n                    I,\n                    m,\n                    E,\n                    P,\n                    c,\n                    l,\n                    v\n                ], y = e.apply(i, T);\n                return mi(n) && $u(y, T), y.placeholder = r, Uu(y, n, t);\n            }\n            function hi(n) {\n                var t = X[n];\n                return function(e, r) {\n                    if (e = xn(e), r = r == null ? 0 : nn(R(r), 292), r && Us(e)) {\n                        var s = (W(e) + \"e\").split(\"e\"), o = t(s[0] + \"e\" + (+s[1] + r));\n                        return s = (W(o) + \"e\").split(\"e\"), +(s[0] + \"e\" + (+s[1] - r));\n                    }\n                    return t(e);\n                };\n            }\n            var jc = $t && 1 / Se(new $t([\n                ,\n                -0\n            ]))[1] == ht ? function(n) {\n                return new $t(n);\n            } : Di;\n            function Eu(n) {\n                return function(t) {\n                    var e = tn(t);\n                    return e == yn ? qr(t) : e == Sn ? vf(t) : of(t, n(t));\n                };\n            }\n            function Kn(n, t, e, r, s, o, f, c) {\n                var l = t & ct;\n                if (!l && typeof n != \"function\") throw new wn(D);\n                var v = r ? r.length : 0;\n                if (v || (t &= ~(Nn | St), r = s = i), f = f === i ? f : Q(R(f), 0), c = c === i ? c : R(c), v -= s ? s.length : 0, t & St) {\n                    var _ = r, m = s;\n                    r = s = i;\n                }\n                var P = l ? i : di(n), I = [\n                    n,\n                    t,\n                    e,\n                    r,\n                    s,\n                    _,\n                    m,\n                    o,\n                    f,\n                    c\n                ];\n                if (P && dh(I, P), n = I[0], t = I[1], e = I[2], r = I[3], s = I[4], c = I[9] = I[9] === i ? l ? 0 : n.length : Q(I[9] - v, 0), !c && t & (Dn | yt) && (t &= ~(Dn | yt)), !t || t == vn) var E = Qc(n, t, e);\n                else t == Dn || t == yt ? E = Vc(n, t, c) : (t == Nn || t == (vn | Nn)) && !s.length ? E = kc(n, t, e, r) : E = Xe.apply(i, I);\n                var T = P ? su : $u;\n                return Uu(T(E, I), n, t);\n            }\n            function yu(n, t, e, r) {\n                return n === i || bn(n, Ht[e]) && !F.call(r, e) ? t : n;\n            }\n            function Su(n, t, e, r, s, o) {\n                return K(n) && K(t) && (o.set(t, n), Ke(n, t, i, Su, o), o.delete(t)), n;\n            }\n            function nh(n) {\n                return pe(n) ? i : n;\n            }\n            function Ou(n, t, e, r, s, o) {\n                var f = e & Et, c = n.length, l = t.length;\n                if (c != l && !(f && l > c)) return !1;\n                var v = o.get(n), _ = o.get(t);\n                if (v && _) return v == t && _ == n;\n                var m = -1, P = !0, I = e & ve ? new gt : i;\n                for(o.set(n, t), o.set(t, n); ++m < c;){\n                    var E = n[m], T = t[m];\n                    if (r) var y = f ? r(T, E, m, t, n, o) : r(E, T, m, n, t, o);\n                    if (y !== i) {\n                        if (y) continue;\n                        P = !1;\n                        break;\n                    }\n                    if (I) {\n                        if (!Hr(t, function(N, $) {\n                            if (!jt(I, $) && (E === N || s(E, N, e, r, o))) return I.push($);\n                        })) {\n                            P = !1;\n                            break;\n                        }\n                    } else if (!(E === T || s(E, T, e, r, o))) {\n                        P = !1;\n                        break;\n                    }\n                }\n                return o.delete(n), o.delete(t), P;\n            }\n            function th(n, t, e, r, s, o, f) {\n                switch(e){\n                    case Rt:\n                        if (n.byteLength != t.byteLength || n.byteOffset != t.byteOffset) return !1;\n                        n = n.buffer, t = t.buffer;\n                    case kt:\n                        return !(n.byteLength != t.byteLength || !o(new De(n), new De(t)));\n                    case Yt:\n                    case Zt:\n                    case Jt:\n                        return bn(+n, +t);\n                    case we:\n                        return n.name == t.name && n.message == t.message;\n                    case Xt:\n                    case Qt:\n                        return n == t + \"\";\n                    case yn:\n                        var c = qr;\n                    case Sn:\n                        var l = r & Et;\n                        if (c || (c = Se), n.size != t.size && !l) return !1;\n                        var v = f.get(n);\n                        if (v) return v == t;\n                        r |= ve, f.set(n, t);\n                        var _ = Ou(c(n), c(t), r, s, o, f);\n                        return f.delete(n), _;\n                    case Ae:\n                        if (ie) return ie.call(n) == ie.call(t);\n                }\n                return !1;\n            }\n            function eh(n, t, e, r, s, o) {\n                var f = e & Et, c = li(n), l = c.length, v = li(t), _ = v.length;\n                if (l != _ && !f) return !1;\n                for(var m = l; m--;){\n                    var P = c[m];\n                    if (!(f ? P in t : F.call(t, P))) return !1;\n                }\n                var I = o.get(n), E = o.get(t);\n                if (I && E) return I == t && E == n;\n                var T = !0;\n                o.set(n, t), o.set(t, n);\n                for(var y = f; ++m < l;){\n                    P = c[m];\n                    var N = n[P], $ = t[P];\n                    if (r) var dn = f ? r($, N, P, t, n, o) : r(N, $, P, n, t, o);\n                    if (!(dn === i ? N === $ || s(N, $, e, r, o) : dn)) {\n                        T = !1;\n                        break;\n                    }\n                    y || (y = P == \"constructor\");\n                }\n                if (T && !y) {\n                    var sn = n.constructor, gn = t.constructor;\n                    sn != gn && \"constructor\" in n && \"constructor\" in t && !(typeof sn == \"function\" && sn instanceof sn && typeof gn == \"function\" && gn instanceof gn) && (T = !1);\n                }\n                return o.delete(n), o.delete(t), T;\n            }\n            function Yn(n) {\n                return Pi(Nu(n, i, Gu), n + \"\");\n            }\n            function li(n) {\n                return Js(n, V, vi);\n            }\n            function pi(n) {\n                return Js(n, on, Ru);\n            }\n            var di = Fe ? function(n) {\n                return Fe.get(n);\n            } : Di;\n            function je(n) {\n                for(var t = n.name + \"\", e = Ut[t], r = F.call(Ut, t) ? e.length : 0; r--;){\n                    var s = e[r], o = s.func;\n                    if (o == null || o == n) return s.name;\n                }\n                return t;\n            }\n            function qt(n) {\n                var t = F.call(a, \"placeholder\") ? a : n;\n                return t.placeholder;\n            }\n            function x() {\n                var n = a.iteratee || Ti;\n                return n = n === Ti ? Vs : n, arguments.length ? n(arguments[0], arguments[1]) : n;\n            }\n            function nr(n, t) {\n                var e = n.__data__;\n                return ch(t) ? e[typeof t == \"string\" ? \"string\" : \"hash\"] : e.map;\n            }\n            function gi(n) {\n                for(var t = V(n), e = t.length; e--;){\n                    var r = t[e], s = n[r];\n                    t[e] = [\n                        r,\n                        s,\n                        Lu(s)\n                    ];\n                }\n                return t;\n            }\n            function mt(n, t) {\n                var e = pf(n, t);\n                return Qs(e) ? e : i;\n            }\n            function rh(n) {\n                var t = F.call(n, pt), e = n[pt];\n                try {\n                    n[pt] = i;\n                    var r = !0;\n                } catch  {}\n                var s = Te.call(n);\n                return r && (t ? n[pt] = e : delete n[pt]), s;\n            }\n            var vi = Gr ? function(n) {\n                return n == null ? [] : (n = M(n), jn(Gr(n), function(t) {\n                    return Hs.call(n, t);\n                }));\n            } : Ni, Ru = Gr ? function(n) {\n                for(var t = []; n;)nt(t, vi(n)), n = Ne(n);\n                return t;\n            } : Ni, tn = en;\n            (zr && tn(new zr(new ArrayBuffer(1))) != Rt || te && tn(new te) != yn || Kr && tn(Kr.resolve()) != Ki || $t && tn(new $t) != Sn || ee && tn(new ee) != Vt) && (tn = function(n) {\n                var t = en(n), e = t == qn ? n.constructor : i, r = e ? wt(e) : \"\";\n                if (r) switch(r){\n                    case Ff:\n                        return Rt;\n                    case Mf:\n                        return yn;\n                    case qf:\n                        return Ki;\n                    case Bf:\n                        return Sn;\n                    case Gf:\n                        return Vt;\n                }\n                return t;\n            });\n            function ih(n, t, e) {\n                for(var r = -1, s = e.length; ++r < s;){\n                    var o = e[r], f = o.size;\n                    switch(o.type){\n                        case \"drop\":\n                            n += f;\n                            break;\n                        case \"dropRight\":\n                            t -= f;\n                            break;\n                        case \"take\":\n                            t = nn(t, n + f);\n                            break;\n                        case \"takeRight\":\n                            n = Q(n, t - f);\n                            break;\n                    }\n                }\n                return {\n                    start: n,\n                    end: t\n                };\n            }\n            function sh(n) {\n                var t = n.match(fo);\n                return t ? t[1].split(co) : [];\n            }\n            function bu(n, t, e) {\n                t = st(t, n);\n                for(var r = -1, s = t.length, o = !1; ++r < s;){\n                    var f = Wn(t[r]);\n                    if (!(o = n != null && e(n, f))) break;\n                    n = n[f];\n                }\n                return o || ++r != s ? o : (s = n == null ? 0 : n.length, !!s && ar(s) && Zn(f, s) && (O(n) || Pt(n)));\n            }\n            function uh(n) {\n                var t = n.length, e = new n.constructor(t);\n                return t && typeof n[0] == \"string\" && F.call(n, \"index\") && (e.index = n.index, e.input = n.input), e;\n            }\n            function Tu(n) {\n                return typeof n.constructor == \"function\" && !he(n) ? Wt(Ne(n)) : {};\n            }\n            function ah(n, t, e) {\n                var r = n.constructor;\n                switch(t){\n                    case kt:\n                        return fi(n);\n                    case Yt:\n                    case Zt:\n                        return new r(+n);\n                    case Rt:\n                        return zc(n, e);\n                    case gr:\n                    case vr:\n                    case _r:\n                    case mr:\n                    case wr:\n                    case Pr:\n                    case Ar:\n                    case Cr:\n                    case Ir:\n                        return pu(n, e);\n                    case yn:\n                        return new r;\n                    case Jt:\n                    case Qt:\n                        return new r(n);\n                    case Xt:\n                        return Kc(n);\n                    case Sn:\n                        return new r;\n                    case Ae:\n                        return Yc(n);\n                }\n            }\n            function oh(n, t) {\n                var e = t.length;\n                if (!e) return n;\n                var r = e - 1;\n                return t[r] = (e > 1 ? \"& \" : \"\") + t[r], t = t.join(e > 2 ? \", \" : \" \"), n.replace(oo, `{\n/* [wrapped with ` + t + `] */\n`);\n            }\n            function fh(n) {\n                return O(n) || Pt(n) || !!($s && n && n[$s]);\n            }\n            function Zn(n, t) {\n                var e = typeof n;\n                return t = t ?? kn, !!t && (e == \"number\" || e != \"symbol\" && Po.test(n)) && n > -1 && n % 1 == 0 && n < t;\n            }\n            function rn(n, t, e) {\n                if (!K(e)) return !1;\n                var r = typeof t;\n                return (r == \"number\" ? an(e) && Zn(t, e.length) : r == \"string\" && t in e) ? bn(e[t], n) : !1;\n            }\n            function _i(n, t) {\n                if (O(n)) return !1;\n                var e = typeof n;\n                return e == \"number\" || e == \"symbol\" || e == \"boolean\" || n == null || pn(n) ? !0 : io.test(n) || !ro.test(n) || t != null && n in M(t);\n            }\n            function ch(n) {\n                var t = typeof n;\n                return t == \"string\" || t == \"number\" || t == \"symbol\" || t == \"boolean\" ? n !== \"__proto__\" : n === null;\n            }\n            function mi(n) {\n                var t = je(n), e = a[t];\n                if (typeof e != \"function\" || !(t in H.prototype)) return !1;\n                if (n === e) return !0;\n                var r = di(e);\n                return !!r && n === r[0];\n            }\n            function hh(n) {\n                return !!Ls && Ls in n;\n            }\n            var lh = Re ? Jn : Hi;\n            function he(n) {\n                var t = n && n.constructor, e = typeof t == \"function\" && t.prototype || Ht;\n                return n === e;\n            }\n            function Lu(n) {\n                return n === n && !K(n);\n            }\n            function Du(n, t) {\n                return function(e) {\n                    return e == null ? !1 : e[n] === t && (t !== i || n in M(e));\n                };\n            }\n            function ph(n) {\n                var t = sr(n, function(r) {\n                    return e.size === pr && e.clear(), r;\n                }), e = t.cache;\n                return t;\n            }\n            function dh(n, t) {\n                var e = n[1], r = t[1], s = e | r, o = s < (vn | ct | Mn), f = r == Mn && e == Dn || r == Mn && e == Kt && n[7].length <= t[8] || r == (Mn | Kt) && t[7].length <= t[8] && e == Dn;\n                if (!(o || f)) return n;\n                r & vn && (n[2] = t[2], s |= e & vn ? 0 : Bi);\n                var c = t[3];\n                if (c) {\n                    var l = n[3];\n                    n[3] = l ? gu(l, c, t[4]) : c, n[4] = l ? tt(n[3], It) : t[4];\n                }\n                return c = t[5], c && (l = n[5], n[5] = l ? vu(l, c, t[6]) : c, n[6] = l ? tt(n[5], It) : t[6]), c = t[7], c && (n[7] = c), r & Mn && (n[8] = n[8] == null ? t[8] : nn(n[8], t[8])), n[9] == null && (n[9] = t[9]), n[0] = t[0], n[1] = s, n;\n            }\n            function gh(n) {\n                var t = [];\n                if (n != null) for(var e in M(n))t.push(e);\n                return t;\n            }\n            function vh(n) {\n                return Te.call(n);\n            }\n            function Nu(n, t, e) {\n                return t = Q(t === i ? n.length - 1 : t, 0), function() {\n                    for(var r = arguments, s = -1, o = Q(r.length - t, 0), f = d(o); ++s < o;)f[s] = r[t + s];\n                    s = -1;\n                    for(var c = d(t + 1); ++s < t;)c[s] = r[s];\n                    return c[t] = e(f), cn(n, this, c);\n                };\n            }\n            function Hu(n, t) {\n                return t.length < 2 ? n : _t(n, Cn(t, 0, -1));\n            }\n            function _h(n, t) {\n                for(var e = n.length, r = nn(t.length, e), s = un(n); r--;){\n                    var o = t[r];\n                    n[r] = Zn(o, e) ? s[o] : i;\n                }\n                return n;\n            }\n            function wi(n, t) {\n                if (!(t === \"constructor\" && typeof n[t] == \"function\") && t != \"__proto__\") return n[t];\n            }\n            var $u = Wu(su), le = Lf || function(n, t) {\n                return k.setTimeout(n, t);\n            }, Pi = Wu(Mc);\n            function Uu(n, t, e) {\n                var r = t + \"\";\n                return Pi(n, oh(r, mh(sh(r), e)));\n            }\n            function Wu(n) {\n                var t = 0, e = 0;\n                return function() {\n                    var r = $f(), s = Ua - (r - e);\n                    if (e = r, s > 0) {\n                        if (++t >= $a) return arguments[0];\n                    } else t = 0;\n                    return n.apply(i, arguments);\n                };\n            }\n            function tr(n, t) {\n                var e = -1, r = n.length, s = r - 1;\n                for(t = t === i ? r : t; ++e < t;){\n                    var o = ei(e, s), f = n[o];\n                    n[o] = n[e], n[e] = f;\n                }\n                return n.length = t, n;\n            }\n            var Fu = ph(function(n) {\n                var t = [];\n                return n.charCodeAt(0) === 46 && t.push(\"\"), n.replace(so, function(e, r, s, o) {\n                    t.push(s ? o.replace(po, \"$1\") : r || e);\n                }), t;\n            });\n            function Wn(n) {\n                if (typeof n == \"string\" || pn(n)) return n;\n                var t = n + \"\";\n                return t == \"0\" && 1 / n == -ht ? \"-0\" : t;\n            }\n            function wt(n) {\n                if (n != null) {\n                    try {\n                        return be.call(n);\n                    } catch  {}\n                    try {\n                        return n + \"\";\n                    } catch  {}\n                }\n                return \"\";\n            }\n            function mh(n, t) {\n                return mn(Ga, function(e) {\n                    var r = \"_.\" + e[0];\n                    t & e[1] && !Ee(n, r) && n.push(r);\n                }), n.sort();\n            }\n            function Mu(n) {\n                if (n instanceof H) return n.clone();\n                var t = new Pn(n.__wrapped__, n.__chain__);\n                return t.__actions__ = un(n.__actions__), t.__index__ = n.__index__, t.__values__ = n.__values__, t;\n            }\n            function wh(n, t, e) {\n                (e ? rn(n, t, e) : t === i) ? t = 1 : t = Q(R(t), 0);\n                var r = n == null ? 0 : n.length;\n                if (!r || t < 1) return [];\n                for(var s = 0, o = 0, f = d(Ue(r / t)); s < r;)f[o++] = Cn(n, s, s += t);\n                return f;\n            }\n            function Ph(n) {\n                for(var t = -1, e = n == null ? 0 : n.length, r = 0, s = []; ++t < e;){\n                    var o = n[t];\n                    o && (s[r++] = o);\n                }\n                return s;\n            }\n            function Ah() {\n                var n = arguments.length;\n                if (!n) return [];\n                for(var t = d(n - 1), e = arguments[0], r = n; r--;)t[r - 1] = arguments[r];\n                return nt(O(e) ? un(e) : [\n                    e\n                ], j(t, 1));\n            }\n            var Ch = L(function(n, t) {\n                return Z(n) ? ue(n, j(t, 1, Z, !0)) : [];\n            }), Ih = L(function(n, t) {\n                var e = In(t);\n                return Z(e) && (e = i), Z(n) ? ue(n, j(t, 1, Z, !0), x(e, 2)) : [];\n            }), xh = L(function(n, t) {\n                var e = In(t);\n                return Z(e) && (e = i), Z(n) ? ue(n, j(t, 1, Z, !0), i, e) : [];\n            });\n            function Eh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : R(t), Cn(n, t < 0 ? 0 : t, r)) : [];\n            }\n            function yh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : R(t), t = r - t, Cn(n, 0, t < 0 ? 0 : t)) : [];\n            }\n            function Sh(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !0, !0) : [];\n            }\n            function Oh(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !0) : [];\n            }\n            function Rh(n, t, e, r) {\n                var s = n == null ? 0 : n.length;\n                return s ? (e && typeof e != \"number\" && rn(n, t, e) && (e = 0, r = s), Ac(n, t, e, r)) : [];\n            }\n            function qu(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = e == null ? 0 : R(e);\n                return s < 0 && (s = Q(r + s, 0)), ye(n, x(t, 3), s);\n            }\n            function Bu(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = r - 1;\n                return e !== i && (s = R(e), s = e < 0 ? Q(r + s, 0) : nn(s, r - 1)), ye(n, x(t, 3), s, !0);\n            }\n            function Gu(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? j(n, 1) : [];\n            }\n            function bh(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? j(n, ht) : [];\n            }\n            function Th(n, t) {\n                var e = n == null ? 0 : n.length;\n                return e ? (t = t === i ? 1 : R(t), j(n, t)) : [];\n            }\n            function Lh(n) {\n                for(var t = -1, e = n == null ? 0 : n.length, r = {}; ++t < e;){\n                    var s = n[t];\n                    r[s[0]] = s[1];\n                }\n                return r;\n            }\n            function zu(n) {\n                return n && n.length ? n[0] : i;\n            }\n            function Dh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = e == null ? 0 : R(e);\n                return s < 0 && (s = Q(r + s, 0)), Tt(n, t, s);\n            }\n            function Nh(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? Cn(n, 0, -1) : [];\n            }\n            var Hh = L(function(n) {\n                var t = G(n, ai);\n                return t.length && t[0] === n[0] ? Vr(t) : [];\n            }), $h = L(function(n) {\n                var t = In(n), e = G(n, ai);\n                return t === In(e) ? t = i : e.pop(), e.length && e[0] === n[0] ? Vr(e, x(t, 2)) : [];\n            }), Uh = L(function(n) {\n                var t = In(n), e = G(n, ai);\n                return t = typeof t == \"function\" ? t : i, t && e.pop(), e.length && e[0] === n[0] ? Vr(e, i, t) : [];\n            });\n            function Wh(n, t) {\n                return n == null ? \"\" : Nf.call(n, t);\n            }\n            function In(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? n[t - 1] : i;\n            }\n            function Fh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = r;\n                return e !== i && (s = R(e), s = s < 0 ? Q(r + s, 0) : nn(s, r - 1)), t === t ? mf(n, t, s) : ye(n, xs, s, !0);\n            }\n            function Mh(n, t) {\n                return n && n.length ? tu(n, R(t)) : i;\n            }\n            var qh = L(Ku);\n            function Ku(n, t) {\n                return n && n.length && t && t.length ? ti(n, t) : n;\n            }\n            function Bh(n, t, e) {\n                return n && n.length && t && t.length ? ti(n, t, x(e, 2)) : n;\n            }\n            function Gh(n, t, e) {\n                return n && n.length && t && t.length ? ti(n, t, i, e) : n;\n            }\n            var zh = Yn(function(n, t) {\n                var e = n == null ? 0 : n.length, r = Zr(n, t);\n                return iu(n, G(t, function(s) {\n                    return Zn(s, e) ? +s : s;\n                }).sort(du)), r;\n            });\n            function Kh(n, t) {\n                var e = [];\n                if (!(n && n.length)) return e;\n                var r = -1, s = [], o = n.length;\n                for(t = x(t, 3); ++r < o;){\n                    var f = n[r];\n                    t(f, r, n) && (e.push(f), s.push(r));\n                }\n                return iu(n, s), e;\n            }\n            function Ai(n) {\n                return n == null ? n : Wf.call(n);\n            }\n            function Yh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (e && typeof e != \"number\" && rn(n, t, e) ? (t = 0, e = r) : (t = t == null ? 0 : R(t), e = e === i ? r : R(e)), Cn(n, t, e)) : [];\n            }\n            function Zh(n, t) {\n                return Ye(n, t);\n            }\n            function Jh(n, t, e) {\n                return ii(n, t, x(e, 2));\n            }\n            function Xh(n, t) {\n                var e = n == null ? 0 : n.length;\n                if (e) {\n                    var r = Ye(n, t);\n                    if (r < e && bn(n[r], t)) return r;\n                }\n                return -1;\n            }\n            function Qh(n, t) {\n                return Ye(n, t, !0);\n            }\n            function Vh(n, t, e) {\n                return ii(n, t, x(e, 2), !0);\n            }\n            function kh(n, t) {\n                var e = n == null ? 0 : n.length;\n                if (e) {\n                    var r = Ye(n, t, !0) - 1;\n                    if (bn(n[r], t)) return r;\n                }\n                return -1;\n            }\n            function jh(n) {\n                return n && n.length ? uu(n) : [];\n            }\n            function nl(n, t) {\n                return n && n.length ? uu(n, x(t, 2)) : [];\n            }\n            function tl(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? Cn(n, 1, t) : [];\n            }\n            function el(n, t, e) {\n                return n && n.length ? (t = e || t === i ? 1 : R(t), Cn(n, 0, t < 0 ? 0 : t)) : [];\n            }\n            function rl(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : R(t), t = r - t, Cn(n, t < 0 ? 0 : t, r)) : [];\n            }\n            function il(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !1, !0) : [];\n            }\n            function sl(n, t) {\n                return n && n.length ? Ze(n, x(t, 3)) : [];\n            }\n            var ul = L(function(n) {\n                return it(j(n, 1, Z, !0));\n            }), al = L(function(n) {\n                var t = In(n);\n                return Z(t) && (t = i), it(j(n, 1, Z, !0), x(t, 2));\n            }), ol = L(function(n) {\n                var t = In(n);\n                return t = typeof t == \"function\" ? t : i, it(j(n, 1, Z, !0), i, t);\n            });\n            function fl(n) {\n                return n && n.length ? it(n) : [];\n            }\n            function cl(n, t) {\n                return n && n.length ? it(n, x(t, 2)) : [];\n            }\n            function hl(n, t) {\n                return t = typeof t == \"function\" ? t : i, n && n.length ? it(n, i, t) : [];\n            }\n            function Ci(n) {\n                if (!(n && n.length)) return [];\n                var t = 0;\n                return n = jn(n, function(e) {\n                    if (Z(e)) return t = Q(e.length, t), !0;\n                }), Fr(t, function(e) {\n                    return G(n, $r(e));\n                });\n            }\n            function Yu(n, t) {\n                if (!(n && n.length)) return [];\n                var e = Ci(n);\n                return t == null ? e : G(e, function(r) {\n                    return cn(t, i, r);\n                });\n            }\n            var ll = L(function(n, t) {\n                return Z(n) ? ue(n, t) : [];\n            }), pl = L(function(n) {\n                return ui(jn(n, Z));\n            }), dl = L(function(n) {\n                var t = In(n);\n                return Z(t) && (t = i), ui(jn(n, Z), x(t, 2));\n            }), gl = L(function(n) {\n                var t = In(n);\n                return t = typeof t == \"function\" ? t : i, ui(jn(n, Z), i, t);\n            }), vl = L(Ci);\n            function _l(n, t) {\n                return cu(n || [], t || [], se);\n            }\n            function ml(n, t) {\n                return cu(n || [], t || [], fe);\n            }\n            var wl = L(function(n) {\n                var t = n.length, e = t > 1 ? n[t - 1] : i;\n                return e = typeof e == \"function\" ? (n.pop(), e) : i, Yu(n, e);\n            });\n            function Zu(n) {\n                var t = a(n);\n                return t.__chain__ = !0, t;\n            }\n            function Pl(n, t) {\n                return t(n), n;\n            }\n            function er(n, t) {\n                return t(n);\n            }\n            var Al = Yn(function(n) {\n                var t = n.length, e = t ? n[0] : 0, r = this.__wrapped__, s = function(o) {\n                    return Zr(o, n);\n                };\n                return t > 1 || this.__actions__.length || !(r instanceof H) || !Zn(e) ? this.thru(s) : (r = r.slice(e, +e + (t ? 1 : 0)), r.__actions__.push({\n                    func: er,\n                    args: [\n                        s\n                    ],\n                    thisArg: i\n                }), new Pn(r, this.__chain__).thru(function(o) {\n                    return t && !o.length && o.push(i), o;\n                }));\n            });\n            function Cl() {\n                return Zu(this);\n            }\n            function Il() {\n                return new Pn(this.value(), this.__chain__);\n            }\n            function xl() {\n                this.__values__ === i && (this.__values__ = aa(this.value()));\n                var n = this.__index__ >= this.__values__.length, t = n ? i : this.__values__[this.__index__++];\n                return {\n                    done: n,\n                    value: t\n                };\n            }\n            function El() {\n                return this;\n            }\n            function yl(n) {\n                for(var t, e = this; e instanceof qe;){\n                    var r = Mu(e);\n                    r.__index__ = 0, r.__values__ = i, t ? s.__wrapped__ = r : t = r;\n                    var s = r;\n                    e = e.__wrapped__;\n                }\n                return s.__wrapped__ = n, t;\n            }\n            function Sl() {\n                var n = this.__wrapped__;\n                if (n instanceof H) {\n                    var t = n;\n                    return this.__actions__.length && (t = new H(this)), t = t.reverse(), t.__actions__.push({\n                        func: er,\n                        args: [\n                            Ai\n                        ],\n                        thisArg: i\n                    }), new Pn(t, this.__chain__);\n                }\n                return this.thru(Ai);\n            }\n            function Ol() {\n                return fu(this.__wrapped__, this.__actions__);\n            }\n            var Rl = Je(function(n, t, e) {\n                F.call(n, e) ? ++n[e] : zn(n, e, 1);\n            });\n            function bl(n, t, e) {\n                var r = O(n) ? Cs : Pc;\n                return e && rn(n, t, e) && (t = i), r(n, x(t, 3));\n            }\n            function Tl(n, t) {\n                var e = O(n) ? jn : Ys;\n                return e(n, x(t, 3));\n            }\n            var Ll = Pu(qu), Dl = Pu(Bu);\n            function Nl(n, t) {\n                return j(rr(n, t), 1);\n            }\n            function Hl(n, t) {\n                return j(rr(n, t), ht);\n            }\n            function $l(n, t, e) {\n                return e = e === i ? 1 : R(e), j(rr(n, t), e);\n            }\n            function Ju(n, t) {\n                var e = O(n) ? mn : rt;\n                return e(n, x(t, 3));\n            }\n            function Xu(n, t) {\n                var e = O(n) ? nf : Ks;\n                return e(n, x(t, 3));\n            }\n            var Ul = Je(function(n, t, e) {\n                F.call(n, e) ? n[e].push(t) : zn(n, e, [\n                    t\n                ]);\n            });\n            function Wl(n, t, e, r) {\n                n = an(n) ? n : Gt(n), e = e && !r ? R(e) : 0;\n                var s = n.length;\n                return e < 0 && (e = Q(s + e, 0)), or(n) ? e <= s && n.indexOf(t, e) > -1 : !!s && Tt(n, t, e) > -1;\n            }\n            var Fl = L(function(n, t, e) {\n                var r = -1, s = typeof t == \"function\", o = an(n) ? d(n.length) : [];\n                return rt(n, function(f) {\n                    o[++r] = s ? cn(t, f, e) : ae(f, t, e);\n                }), o;\n            }), Ml = Je(function(n, t, e) {\n                zn(n, e, t);\n            });\n            function rr(n, t) {\n                var e = O(n) ? G : ks;\n                return e(n, x(t, 3));\n            }\n            function ql(n, t, e, r) {\n                return n == null ? [] : (O(t) || (t = t == null ? [] : [\n                    t\n                ]), e = r ? i : e, O(e) || (e = e == null ? [] : [\n                    e\n                ]), eu(n, t, e));\n            }\n            var Bl = Je(function(n, t, e) {\n                n[e ? 0 : 1].push(t);\n            }, function() {\n                return [\n                    [],\n                    []\n                ];\n            });\n            function Gl(n, t, e) {\n                var r = O(n) ? Nr : ys, s = arguments.length < 3;\n                return r(n, x(t, 4), e, s, rt);\n            }\n            function zl(n, t, e) {\n                var r = O(n) ? tf : ys, s = arguments.length < 3;\n                return r(n, x(t, 4), e, s, Ks);\n            }\n            function Kl(n, t) {\n                var e = O(n) ? jn : Ys;\n                return e(n, ur(x(t, 3)));\n            }\n            function Yl(n) {\n                var t = O(n) ? qs : Wc;\n                return t(n);\n            }\n            function Zl(n, t, e) {\n                (e ? rn(n, t, e) : t === i) ? t = 1 : t = R(t);\n                var r = O(n) ? gc : Fc;\n                return r(n, t);\n            }\n            function Jl(n) {\n                var t = O(n) ? vc : qc;\n                return t(n);\n            }\n            function Xl(n) {\n                if (n == null) return 0;\n                if (an(n)) return or(n) ? Dt(n) : n.length;\n                var t = tn(n);\n                return t == yn || t == Sn ? n.size : jr(n).length;\n            }\n            function Ql(n, t, e) {\n                var r = O(n) ? Hr : Bc;\n                return e && rn(n, t, e) && (t = i), r(n, x(t, 3));\n            }\n            var Vl = L(function(n, t) {\n                if (n == null) return [];\n                var e = t.length;\n                return e > 1 && rn(n, t[0], t[1]) ? t = [] : e > 2 && rn(t[0], t[1], t[2]) && (t = [\n                    t[0]\n                ]), eu(n, j(t, 1), []);\n            }), ir = Tf || function() {\n                return k.Date.now();\n            };\n            function kl(n, t) {\n                if (typeof t != \"function\") throw new wn(D);\n                return n = R(n), function() {\n                    if (--n < 1) return t.apply(this, arguments);\n                };\n            }\n            function Qu(n, t, e) {\n                return t = e ? i : t, t = n && t == null ? n.length : t, Kn(n, Mn, i, i, i, i, t);\n            }\n            function Vu(n, t) {\n                var e;\n                if (typeof t != \"function\") throw new wn(D);\n                return n = R(n), function() {\n                    return --n > 0 && (e = t.apply(this, arguments)), n <= 1 && (t = i), e;\n                };\n            }\n            var Ii = L(function(n, t, e) {\n                var r = vn;\n                if (e.length) {\n                    var s = tt(e, qt(Ii));\n                    r |= Nn;\n                }\n                return Kn(n, r, t, e, s);\n            }), ku = L(function(n, t, e) {\n                var r = vn | ct;\n                if (e.length) {\n                    var s = tt(e, qt(ku));\n                    r |= Nn;\n                }\n                return Kn(t, r, n, e, s);\n            });\n            function ju(n, t, e) {\n                t = e ? i : t;\n                var r = Kn(n, Dn, i, i, i, i, i, t);\n                return r.placeholder = ju.placeholder, r;\n            }\n            function na(n, t, e) {\n                t = e ? i : t;\n                var r = Kn(n, yt, i, i, i, i, i, t);\n                return r.placeholder = na.placeholder, r;\n            }\n            function ta(n, t, e) {\n                var r, s, o, f, c, l, v = 0, _ = !1, m = !1, P = !0;\n                if (typeof n != \"function\") throw new wn(D);\n                t = xn(t) || 0, K(e) && (_ = !!e.leading, m = \"maxWait\" in e, o = m ? Q(xn(e.maxWait) || 0, t) : o, P = \"trailing\" in e ? !!e.trailing : P);\n                function I(J) {\n                    var Tn = r, Qn = s;\n                    return r = s = i, v = J, f = n.apply(Qn, Tn), f;\n                }\n                function E(J) {\n                    return v = J, c = le(N, t), _ ? I(J) : f;\n                }\n                function T(J) {\n                    var Tn = J - l, Qn = J - v, Pa = t - Tn;\n                    return m ? nn(Pa, o - Qn) : Pa;\n                }\n                function y(J) {\n                    var Tn = J - l, Qn = J - v;\n                    return l === i || Tn >= t || Tn < 0 || m && Qn >= o;\n                }\n                function N() {\n                    var J = ir();\n                    if (y(J)) return $(J);\n                    c = le(N, T(J));\n                }\n                function $(J) {\n                    return c = i, P && r ? I(J) : (r = s = i, f);\n                }\n                function dn() {\n                    c !== i && hu(c), v = 0, r = l = s = c = i;\n                }\n                function sn() {\n                    return c === i ? f : $(ir());\n                }\n                function gn() {\n                    var J = ir(), Tn = y(J);\n                    if (r = arguments, s = this, l = J, Tn) {\n                        if (c === i) return E(l);\n                        if (m) return hu(c), c = le(N, t), I(l);\n                    }\n                    return c === i && (c = le(N, t)), f;\n                }\n                return gn.cancel = dn, gn.flush = sn, gn;\n            }\n            var jl = L(function(n, t) {\n                return zs(n, 1, t);\n            }), np = L(function(n, t, e) {\n                return zs(n, xn(t) || 0, e);\n            });\n            function tp(n) {\n                return Kn(n, dr);\n            }\n            function sr(n, t) {\n                if (typeof n != \"function\" || t != null && typeof t != \"function\") throw new wn(D);\n                var e = function() {\n                    var r = arguments, s = t ? t.apply(this, r) : r[0], o = e.cache;\n                    if (o.has(s)) return o.get(s);\n                    var f = n.apply(this, r);\n                    return e.cache = o.set(s, f) || o, f;\n                };\n                return e.cache = new (sr.Cache || Gn), e;\n            }\n            sr.Cache = Gn;\n            function ur(n) {\n                if (typeof n != \"function\") throw new wn(D);\n                return function() {\n                    var t = arguments;\n                    switch(t.length){\n                        case 0:\n                            return !n.call(this);\n                        case 1:\n                            return !n.call(this, t[0]);\n                        case 2:\n                            return !n.call(this, t[0], t[1]);\n                        case 3:\n                            return !n.call(this, t[0], t[1], t[2]);\n                    }\n                    return !n.apply(this, t);\n                };\n            }\n            function ep(n) {\n                return Vu(2, n);\n            }\n            var rp = Gc(function(n, t) {\n                t = t.length == 1 && O(t[0]) ? G(t[0], hn(x())) : G(j(t, 1), hn(x()));\n                var e = t.length;\n                return L(function(r) {\n                    for(var s = -1, o = nn(r.length, e); ++s < o;)r[s] = t[s].call(this, r[s]);\n                    return cn(n, this, r);\n                });\n            }), xi = L(function(n, t) {\n                var e = tt(t, qt(xi));\n                return Kn(n, Nn, i, t, e);\n            }), ea = L(function(n, t) {\n                var e = tt(t, qt(ea));\n                return Kn(n, St, i, t, e);\n            }), ip = Yn(function(n, t) {\n                return Kn(n, Kt, i, i, i, t);\n            });\n            function sp(n, t) {\n                if (typeof n != \"function\") throw new wn(D);\n                return t = t === i ? t : R(t), L(n, t);\n            }\n            function up(n, t) {\n                if (typeof n != \"function\") throw new wn(D);\n                return t = t == null ? 0 : Q(R(t), 0), L(function(e) {\n                    var r = e[t], s = ut(e, 0, t);\n                    return r && nt(s, r), cn(n, this, s);\n                });\n            }\n            function ap(n, t, e) {\n                var r = !0, s = !0;\n                if (typeof n != \"function\") throw new wn(D);\n                return K(e) && (r = \"leading\" in e ? !!e.leading : r, s = \"trailing\" in e ? !!e.trailing : s), ta(n, t, {\n                    leading: r,\n                    maxWait: t,\n                    trailing: s\n                });\n            }\n            function op(n) {\n                return Qu(n, 1);\n            }\n            function fp(n, t) {\n                return xi(oi(t), n);\n            }\n            function cp() {\n                if (!arguments.length) return [];\n                var n = arguments[0];\n                return O(n) ? n : [\n                    n\n                ];\n            }\n            function hp(n) {\n                return An(n, xt);\n            }\n            function lp(n, t) {\n                return t = typeof t == \"function\" ? t : i, An(n, xt, t);\n            }\n            function pp(n) {\n                return An(n, Ln | xt);\n            }\n            function dp(n, t) {\n                return t = typeof t == \"function\" ? t : i, An(n, Ln | xt, t);\n            }\n            function gp(n, t) {\n                return t == null || Gs(n, t, V(t));\n            }\n            function bn(n, t) {\n                return n === t || n !== n && t !== t;\n            }\n            var vp = ke(Qr), _p = ke(function(n, t) {\n                return n >= t;\n            }), Pt = Xs(function() {\n                return arguments;\n            }()) ? Xs : function(n) {\n                return Y(n) && F.call(n, \"callee\") && !Hs.call(n, \"callee\");\n            }, O = d.isArray, mp = vs ? hn(vs) : yc;\n            function an(n) {\n                return n != null && ar(n.length) && !Jn(n);\n            }\n            function Z(n) {\n                return Y(n) && an(n);\n            }\n            function wp(n) {\n                return n === !0 || n === !1 || Y(n) && en(n) == Yt;\n            }\n            var at = Df || Hi, Pp = _s ? hn(_s) : Sc;\n            function Ap(n) {\n                return Y(n) && n.nodeType === 1 && !pe(n);\n            }\n            function Cp(n) {\n                if (n == null) return !0;\n                if (an(n) && (O(n) || typeof n == \"string\" || typeof n.splice == \"function\" || at(n) || Bt(n) || Pt(n))) return !n.length;\n                var t = tn(n);\n                if (t == yn || t == Sn) return !n.size;\n                if (he(n)) return !jr(n).length;\n                for(var e in n)if (F.call(n, e)) return !1;\n                return !0;\n            }\n            function Ip(n, t) {\n                return oe(n, t);\n            }\n            function xp(n, t, e) {\n                e = typeof e == \"function\" ? e : i;\n                var r = e ? e(n, t) : i;\n                return r === i ? oe(n, t, i, e) : !!r;\n            }\n            function Ei(n) {\n                if (!Y(n)) return !1;\n                var t = en(n);\n                return t == we || t == Ka || typeof n.message == \"string\" && typeof n.name == \"string\" && !pe(n);\n            }\n            function Ep(n) {\n                return typeof n == \"number\" && Us(n);\n            }\n            function Jn(n) {\n                if (!K(n)) return !1;\n                var t = en(n);\n                return t == Pe || t == zi || t == za || t == Za;\n            }\n            function ra(n) {\n                return typeof n == \"number\" && n == R(n);\n            }\n            function ar(n) {\n                return typeof n == \"number\" && n > -1 && n % 1 == 0 && n <= kn;\n            }\n            function K(n) {\n                var t = typeof n;\n                return n != null && (t == \"object\" || t == \"function\");\n            }\n            function Y(n) {\n                return n != null && typeof n == \"object\";\n            }\n            var ia = ms ? hn(ms) : Rc;\n            function yp(n, t) {\n                return n === t || kr(n, t, gi(t));\n            }\n            function Sp(n, t, e) {\n                return e = typeof e == \"function\" ? e : i, kr(n, t, gi(t), e);\n            }\n            function Op(n) {\n                return sa(n) && n != +n;\n            }\n            function Rp(n) {\n                if (lh(n)) throw new S(b);\n                return Qs(n);\n            }\n            function bp(n) {\n                return n === null;\n            }\n            function Tp(n) {\n                return n == null;\n            }\n            function sa(n) {\n                return typeof n == \"number\" || Y(n) && en(n) == Jt;\n            }\n            function pe(n) {\n                if (!Y(n) || en(n) != qn) return !1;\n                var t = Ne(n);\n                if (t === null) return !0;\n                var e = F.call(t, \"constructor\") && t.constructor;\n                return typeof e == \"function\" && e instanceof e && be.call(e) == Sf;\n            }\n            var yi = ws ? hn(ws) : bc;\n            function Lp(n) {\n                return ra(n) && n >= -kn && n <= kn;\n            }\n            var ua = Ps ? hn(Ps) : Tc;\n            function or(n) {\n                return typeof n == \"string\" || !O(n) && Y(n) && en(n) == Qt;\n            }\n            function pn(n) {\n                return typeof n == \"symbol\" || Y(n) && en(n) == Ae;\n            }\n            var Bt = As ? hn(As) : Lc;\n            function Dp(n) {\n                return n === i;\n            }\n            function Np(n) {\n                return Y(n) && tn(n) == Vt;\n            }\n            function Hp(n) {\n                return Y(n) && en(n) == Xa;\n            }\n            var $p = ke(ni), Up = ke(function(n, t) {\n                return n <= t;\n            });\n            function aa(n) {\n                if (!n) return [];\n                if (an(n)) return or(n) ? On(n) : un(n);\n                if (ne && n[ne]) return gf(n[ne]());\n                var t = tn(n), e = t == yn ? qr : t == Sn ? Se : Gt;\n                return e(n);\n            }\n            function Xn(n) {\n                if (!n) return n === 0 ? n : 0;\n                if (n = xn(n), n === ht || n === -ht) {\n                    var t = n < 0 ? -1 : 1;\n                    return t * Ma;\n                }\n                return n === n ? n : 0;\n            }\n            function R(n) {\n                var t = Xn(n), e = t % 1;\n                return t === t ? e ? t - e : t : 0;\n            }\n            function oa(n) {\n                return n ? vt(R(n), 0, Hn) : 0;\n            }\n            function xn(n) {\n                if (typeof n == \"number\") return n;\n                if (pn(n)) return _e;\n                if (K(n)) {\n                    var t = typeof n.valueOf == \"function\" ? n.valueOf() : n;\n                    n = K(t) ? t + \"\" : t;\n                }\n                if (typeof n != \"string\") return n === 0 ? n : +n;\n                n = Ss(n);\n                var e = _o.test(n);\n                return e || wo.test(n) ? Vo(n.slice(2), e ? 2 : 8) : vo.test(n) ? _e : +n;\n            }\n            function fa(n) {\n                return Un(n, on(n));\n            }\n            function Wp(n) {\n                return n ? vt(R(n), -kn, kn) : n === 0 ? n : 0;\n            }\n            function W(n) {\n                return n == null ? \"\" : ln(n);\n            }\n            var Fp = Ft(function(n, t) {\n                if (he(t) || an(t)) {\n                    Un(t, V(t), n);\n                    return;\n                }\n                for(var e in t)F.call(t, e) && se(n, e, t[e]);\n            }), ca = Ft(function(n, t) {\n                Un(t, on(t), n);\n            }), fr = Ft(function(n, t, e, r) {\n                Un(t, on(t), n, r);\n            }), Mp = Ft(function(n, t, e, r) {\n                Un(t, V(t), n, r);\n            }), qp = Yn(Zr);\n            function Bp(n, t) {\n                var e = Wt(n);\n                return t == null ? e : Bs(e, t);\n            }\n            var Gp = L(function(n, t) {\n                n = M(n);\n                var e = -1, r = t.length, s = r > 2 ? t[2] : i;\n                for(s && rn(t[0], t[1], s) && (r = 1); ++e < r;)for(var o = t[e], f = on(o), c = -1, l = f.length; ++c < l;){\n                    var v = f[c], _ = n[v];\n                    (_ === i || bn(_, Ht[v]) && !F.call(n, v)) && (n[v] = o[v]);\n                }\n                return n;\n            }), zp = L(function(n) {\n                return n.push(i, Su), cn(ha, i, n);\n            });\n            function Kp(n, t) {\n                return Is(n, x(t, 3), $n);\n            }\n            function Yp(n, t) {\n                return Is(n, x(t, 3), Xr);\n            }\n            function Zp(n, t) {\n                return n == null ? n : Jr(n, x(t, 3), on);\n            }\n            function Jp(n, t) {\n                return n == null ? n : Zs(n, x(t, 3), on);\n            }\n            function Xp(n, t) {\n                return n && $n(n, x(t, 3));\n            }\n            function Qp(n, t) {\n                return n && Xr(n, x(t, 3));\n            }\n            function Vp(n) {\n                return n == null ? [] : ze(n, V(n));\n            }\n            function kp(n) {\n                return n == null ? [] : ze(n, on(n));\n            }\n            function Si(n, t, e) {\n                var r = n == null ? i : _t(n, t);\n                return r === i ? e : r;\n            }\n            function jp(n, t) {\n                return n != null && bu(n, t, Cc);\n            }\n            function Oi(n, t) {\n                return n != null && bu(n, t, Ic);\n            }\n            var nd = Cu(function(n, t, e) {\n                t != null && typeof t.toString != \"function\" && (t = Te.call(t)), n[t] = e;\n            }, bi(fn)), td = Cu(function(n, t, e) {\n                t != null && typeof t.toString != \"function\" && (t = Te.call(t)), F.call(n, t) ? n[t].push(e) : n[t] = [\n                    e\n                ];\n            }, x), ed = L(ae);\n            function V(n) {\n                return an(n) ? Ms(n) : jr(n);\n            }\n            function on(n) {\n                return an(n) ? Ms(n, !0) : Dc(n);\n            }\n            function rd(n, t) {\n                var e = {};\n                return t = x(t, 3), $n(n, function(r, s, o) {\n                    zn(e, t(r, s, o), r);\n                }), e;\n            }\n            function id(n, t) {\n                var e = {};\n                return t = x(t, 3), $n(n, function(r, s, o) {\n                    zn(e, s, t(r, s, o));\n                }), e;\n            }\n            var sd = Ft(function(n, t, e) {\n                Ke(n, t, e);\n            }), ha = Ft(function(n, t, e, r) {\n                Ke(n, t, e, r);\n            }), ud = Yn(function(n, t) {\n                var e = {};\n                if (n == null) return e;\n                var r = !1;\n                t = G(t, function(o) {\n                    return o = st(o, n), r || (r = o.length > 1), o;\n                }), Un(n, pi(n), e), r && (e = An(e, Ln | Fn | xt, nh));\n                for(var s = t.length; s--;)si(e, t[s]);\n                return e;\n            });\n            function ad(n, t) {\n                return la(n, ur(x(t)));\n            }\n            var od = Yn(function(n, t) {\n                return n == null ? {} : Hc(n, t);\n            });\n            function la(n, t) {\n                if (n == null) return {};\n                var e = G(pi(n), function(r) {\n                    return [\n                        r\n                    ];\n                });\n                return t = x(t), ru(n, e, function(r, s) {\n                    return t(r, s[0]);\n                });\n            }\n            function fd(n, t, e) {\n                t = st(t, n);\n                var r = -1, s = t.length;\n                for(s || (s = 1, n = i); ++r < s;){\n                    var o = n == null ? i : n[Wn(t[r])];\n                    o === i && (r = s, o = e), n = Jn(o) ? o.call(n) : o;\n                }\n                return n;\n            }\n            function cd(n, t, e) {\n                return n == null ? n : fe(n, t, e);\n            }\n            function hd(n, t, e, r) {\n                return r = typeof r == \"function\" ? r : i, n == null ? n : fe(n, t, e, r);\n            }\n            var pa = Eu(V), da = Eu(on);\n            function ld(n, t, e) {\n                var r = O(n), s = r || at(n) || Bt(n);\n                if (t = x(t, 4), e == null) {\n                    var o = n && n.constructor;\n                    s ? e = r ? new o : [] : K(n) ? e = Jn(o) ? Wt(Ne(n)) : {} : e = {};\n                }\n                return (s ? mn : $n)(n, function(f, c, l) {\n                    return t(e, f, c, l);\n                }), e;\n            }\n            function pd(n, t) {\n                return n == null ? !0 : si(n, t);\n            }\n            function dd(n, t, e) {\n                return n == null ? n : ou(n, t, oi(e));\n            }\n            function gd(n, t, e, r) {\n                return r = typeof r == \"function\" ? r : i, n == null ? n : ou(n, t, oi(e), r);\n            }\n            function Gt(n) {\n                return n == null ? [] : Mr(n, V(n));\n            }\n            function vd(n) {\n                return n == null ? [] : Mr(n, on(n));\n            }\n            function _d(n, t, e) {\n                return e === i && (e = t, t = i), e !== i && (e = xn(e), e = e === e ? e : 0), t !== i && (t = xn(t), t = t === t ? t : 0), vt(xn(n), t, e);\n            }\n            function md(n, t, e) {\n                return t = Xn(t), e === i ? (e = t, t = 0) : e = Xn(e), n = xn(n), xc(n, t, e);\n            }\n            function wd(n, t, e) {\n                if (e && typeof e != \"boolean\" && rn(n, t, e) && (t = e = i), e === i && (typeof t == \"boolean\" ? (e = t, t = i) : typeof n == \"boolean\" && (e = n, n = i)), n === i && t === i ? (n = 0, t = 1) : (n = Xn(n), t === i ? (t = n, n = 0) : t = Xn(t)), n > t) {\n                    var r = n;\n                    n = t, t = r;\n                }\n                if (e || n % 1 || t % 1) {\n                    var s = Ws();\n                    return nn(n + s * (t - n + Qo(\"1e-\" + ((s + \"\").length - 1))), t);\n                }\n                return ei(n, t);\n            }\n            var Pd = Mt(function(n, t, e) {\n                return t = t.toLowerCase(), n + (e ? ga(t) : t);\n            });\n            function ga(n) {\n                return Ri(W(n).toLowerCase());\n            }\n            function va(n) {\n                return n = W(n), n && n.replace(Ao, cf).replace(Mo, \"\");\n            }\n            function Ad(n, t, e) {\n                n = W(n), t = ln(t);\n                var r = n.length;\n                e = e === i ? r : vt(R(e), 0, r);\n                var s = e;\n                return e -= t.length, e >= 0 && n.slice(e, s) == t;\n            }\n            function Cd(n) {\n                return n = W(n), n && no.test(n) ? n.replace(Zi, hf) : n;\n            }\n            function Id(n) {\n                return n = W(n), n && uo.test(n) ? n.replace(xr, \"\\\\$&\") : n;\n            }\n            var xd = Mt(function(n, t, e) {\n                return n + (e ? \"-\" : \"\") + t.toLowerCase();\n            }), Ed = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + t.toLowerCase();\n            }), yd = wu(\"toLowerCase\");\n            function Sd(n, t, e) {\n                n = W(n), t = R(t);\n                var r = t ? Dt(n) : 0;\n                if (!t || r >= t) return n;\n                var s = (t - r) / 2;\n                return Ve(We(s), e) + n + Ve(Ue(s), e);\n            }\n            function Od(n, t, e) {\n                n = W(n), t = R(t);\n                var r = t ? Dt(n) : 0;\n                return t && r < t ? n + Ve(t - r, e) : n;\n            }\n            function Rd(n, t, e) {\n                n = W(n), t = R(t);\n                var r = t ? Dt(n) : 0;\n                return t && r < t ? Ve(t - r, e) + n : n;\n            }\n            function bd(n, t, e) {\n                return e || t == null ? t = 0 : t && (t = +t), Uf(W(n).replace(Er, \"\"), t || 0);\n            }\n            function Td(n, t, e) {\n                return (e ? rn(n, t, e) : t === i) ? t = 1 : t = R(t), ri(W(n), t);\n            }\n            function Ld() {\n                var n = arguments, t = W(n[0]);\n                return n.length < 3 ? t : t.replace(n[1], n[2]);\n            }\n            var Dd = Mt(function(n, t, e) {\n                return n + (e ? \"_\" : \"\") + t.toLowerCase();\n            });\n            function Nd(n, t, e) {\n                return e && typeof e != \"number\" && rn(n, t, e) && (t = e = i), e = e === i ? Hn : e >>> 0, e ? (n = W(n), n && (typeof t == \"string\" || t != null && !yi(t)) && (t = ln(t), !t && Lt(n)) ? ut(On(n), 0, e) : n.split(t, e)) : [];\n            }\n            var Hd = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + Ri(t);\n            });\n            function $d(n, t, e) {\n                return n = W(n), e = e == null ? 0 : vt(R(e), 0, n.length), t = ln(t), n.slice(e, e + t.length) == t;\n            }\n            function Ud(n, t, e) {\n                var r = a.templateSettings;\n                e && rn(n, t, e) && (t = i), n = W(n), t = fr({}, t, r, yu);\n                var s = fr({}, t.imports, r.imports, yu), o = V(s), f = Mr(s, o), c, l, v = 0, _ = t.interpolate || Ce, m = \"__p += '\", P = Br((t.escape || Ce).source + \"|\" + _.source + \"|\" + (_ === Ji ? go : Ce).source + \"|\" + (t.evaluate || Ce).source + \"|$\", \"g\"), I = \"//# sourceURL=\" + (F.call(t, \"sourceURL\") ? (t.sourceURL + \"\").replace(/\\s/g, \" \") : \"lodash.templateSources[\" + ++Ko + \"]\") + `\n`;\n                n.replace(P, function(y, N, $, dn, sn, gn) {\n                    return $ || ($ = dn), m += n.slice(v, gn).replace(Co, lf), N && (c = !0, m += `' +\n__e(` + N + `) +\n'`), sn && (l = !0, m += `';\n` + sn + `;\n__p += '`), $ && (m += `' +\n((__t = (` + $ + `)) == null ? '' : __t) +\n'`), v = gn + y.length, y;\n                }), m += `';\n`;\n                var E = F.call(t, \"variable\") && t.variable;\n                if (!E) m = `with (obj) {\n` + m + `\n}\n`;\n                else if (lo.test(E)) throw new S(En);\n                m = (l ? m.replace(Qa, \"\") : m).replace(Va, \"$1\").replace(ka, \"$1;\"), m = \"function(\" + (E || \"obj\") + `) {\n` + (E ? \"\" : `obj || (obj = {});\n`) + \"var __t, __p = ''\" + (c ? \", __e = _.escape\" : \"\") + (l ? `, __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n` : `;\n`) + m + `return __p\n}`;\n                var T = ma(function() {\n                    return U(o, I + \"return \" + m).apply(i, f);\n                });\n                if (T.source = m, Ei(T)) throw T;\n                return T;\n            }\n            function Wd(n) {\n                return W(n).toLowerCase();\n            }\n            function Fd(n) {\n                return W(n).toUpperCase();\n            }\n            function Md(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return Ss(n);\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = On(t), o = Os(r, s), f = Rs(r, s) + 1;\n                return ut(r, o, f).join(\"\");\n            }\n            function qd(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return n.slice(0, Ts(n) + 1);\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = Rs(r, On(t)) + 1;\n                return ut(r, 0, s).join(\"\");\n            }\n            function Bd(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return n.replace(Er, \"\");\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = Os(r, On(t));\n                return ut(r, s).join(\"\");\n            }\n            function Gd(n, t) {\n                var e = Na, r = Ha;\n                if (K(t)) {\n                    var s = \"separator\" in t ? t.separator : s;\n                    e = \"length\" in t ? R(t.length) : e, r = \"omission\" in t ? ln(t.omission) : r;\n                }\n                n = W(n);\n                var o = n.length;\n                if (Lt(n)) {\n                    var f = On(n);\n                    o = f.length;\n                }\n                if (e >= o) return n;\n                var c = e - Dt(r);\n                if (c < 1) return r;\n                var l = f ? ut(f, 0, c).join(\"\") : n.slice(0, c);\n                if (s === i) return l + r;\n                if (f && (c += l.length - c), yi(s)) {\n                    if (n.slice(c).search(s)) {\n                        var v, _ = l;\n                        for(s.global || (s = Br(s.source, W(Xi.exec(s)) + \"g\")), s.lastIndex = 0; v = s.exec(_);)var m = v.index;\n                        l = l.slice(0, m === i ? c : m);\n                    }\n                } else if (n.indexOf(ln(s), c) != c) {\n                    var P = l.lastIndexOf(s);\n                    P > -1 && (l = l.slice(0, P));\n                }\n                return l + r;\n            }\n            function zd(n) {\n                return n = W(n), n && ja.test(n) ? n.replace(Yi, wf) : n;\n            }\n            var Kd = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + t.toUpperCase();\n            }), Ri = wu(\"toUpperCase\");\n            function _a(n, t, e) {\n                return n = W(n), t = e ? i : t, t === i ? df(n) ? Cf(n) : sf(n) : n.match(t) || [];\n            }\n            var ma = L(function(n, t) {\n                try {\n                    return cn(n, i, t);\n                } catch (e) {\n                    return Ei(e) ? e : new S(e);\n                }\n            }), Yd = Yn(function(n, t) {\n                return mn(t, function(e) {\n                    e = Wn(e), zn(n, e, Ii(n[e], n));\n                }), n;\n            });\n            function Zd(n) {\n                var t = n == null ? 0 : n.length, e = x();\n                return n = t ? G(n, function(r) {\n                    if (typeof r[1] != \"function\") throw new wn(D);\n                    return [\n                        e(r[0]),\n                        r[1]\n                    ];\n                }) : [], L(function(r) {\n                    for(var s = -1; ++s < t;){\n                        var o = n[s];\n                        if (cn(o[0], this, r)) return cn(o[1], this, r);\n                    }\n                });\n            }\n            function Jd(n) {\n                return wc(An(n, Ln));\n            }\n            function bi(n) {\n                return function() {\n                    return n;\n                };\n            }\n            function Xd(n, t) {\n                return n == null || n !== n ? t : n;\n            }\n            var Qd = Au(), Vd = Au(!0);\n            function fn(n) {\n                return n;\n            }\n            function Ti(n) {\n                return Vs(typeof n == \"function\" ? n : An(n, Ln));\n            }\n            function kd(n) {\n                return js(An(n, Ln));\n            }\n            function jd(n, t) {\n                return nu(n, An(t, Ln));\n            }\n            var ng = L(function(n, t) {\n                return function(e) {\n                    return ae(e, n, t);\n                };\n            }), tg = L(function(n, t) {\n                return function(e) {\n                    return ae(n, e, t);\n                };\n            });\n            function Li(n, t, e) {\n                var r = V(t), s = ze(t, r);\n                e == null && !(K(t) && (s.length || !r.length)) && (e = t, t = n, n = this, s = ze(t, V(t)));\n                var o = !(K(e) && \"chain\" in e) || !!e.chain, f = Jn(n);\n                return mn(s, function(c) {\n                    var l = t[c];\n                    n[c] = l, f && (n.prototype[c] = function() {\n                        var v = this.__chain__;\n                        if (o || v) {\n                            var _ = n(this.__wrapped__), m = _.__actions__ = un(this.__actions__);\n                            return m.push({\n                                func: l,\n                                args: arguments,\n                                thisArg: n\n                            }), _.__chain__ = v, _;\n                        }\n                        return l.apply(n, nt([\n                            this.value()\n                        ], arguments));\n                    });\n                }), n;\n            }\n            function eg() {\n                return k._ === this && (k._ = Of), this;\n            }\n            function Di() {}\n            function rg(n) {\n                return n = R(n), L(function(t) {\n                    return tu(t, n);\n                });\n            }\n            var ig = ci(G), sg = ci(Cs), ug = ci(Hr);\n            function wa(n) {\n                return _i(n) ? $r(Wn(n)) : $c(n);\n            }\n            function ag(n) {\n                return function(t) {\n                    return n == null ? i : _t(n, t);\n                };\n            }\n            var og = Iu(), fg = Iu(!0);\n            function Ni() {\n                return [];\n            }\n            function Hi() {\n                return !1;\n            }\n            function cg() {\n                return {};\n            }\n            function hg() {\n                return \"\";\n            }\n            function lg() {\n                return !0;\n            }\n            function pg(n, t) {\n                if (n = R(n), n < 1 || n > kn) return [];\n                var e = Hn, r = nn(n, Hn);\n                t = x(t), n -= Hn;\n                for(var s = Fr(r, t); ++e < n;)t(e);\n                return s;\n            }\n            function dg(n) {\n                return O(n) ? G(n, Wn) : pn(n) ? [\n                    n\n                ] : un(Fu(W(n)));\n            }\n            function gg(n) {\n                var t = ++yf;\n                return W(n) + t;\n            }\n            var vg = Qe(function(n, t) {\n                return n + t;\n            }, 0), _g = hi(\"ceil\"), mg = Qe(function(n, t) {\n                return n / t;\n            }, 1), wg = hi(\"floor\");\n            function Pg(n) {\n                return n && n.length ? Ge(n, fn, Qr) : i;\n            }\n            function Ag(n, t) {\n                return n && n.length ? Ge(n, x(t, 2), Qr) : i;\n            }\n            function Cg(n) {\n                return Es(n, fn);\n            }\n            function Ig(n, t) {\n                return Es(n, x(t, 2));\n            }\n            function xg(n) {\n                return n && n.length ? Ge(n, fn, ni) : i;\n            }\n            function Eg(n, t) {\n                return n && n.length ? Ge(n, x(t, 2), ni) : i;\n            }\n            var yg = Qe(function(n, t) {\n                return n * t;\n            }, 1), Sg = hi(\"round\"), Og = Qe(function(n, t) {\n                return n - t;\n            }, 0);\n            function Rg(n) {\n                return n && n.length ? Wr(n, fn) : 0;\n            }\n            function bg(n, t) {\n                return n && n.length ? Wr(n, x(t, 2)) : 0;\n            }\n            return a.after = kl, a.ary = Qu, a.assign = Fp, a.assignIn = ca, a.assignInWith = fr, a.assignWith = Mp, a.at = qp, a.before = Vu, a.bind = Ii, a.bindAll = Yd, a.bindKey = ku, a.castArray = cp, a.chain = Zu, a.chunk = wh, a.compact = Ph, a.concat = Ah, a.cond = Zd, a.conforms = Jd, a.constant = bi, a.countBy = Rl, a.create = Bp, a.curry = ju, a.curryRight = na, a.debounce = ta, a.defaults = Gp, a.defaultsDeep = zp, a.defer = jl, a.delay = np, a.difference = Ch, a.differenceBy = Ih, a.differenceWith = xh, a.drop = Eh, a.dropRight = yh, a.dropRightWhile = Sh, a.dropWhile = Oh, a.fill = Rh, a.filter = Tl, a.flatMap = Nl, a.flatMapDeep = Hl, a.flatMapDepth = $l, a.flatten = Gu, a.flattenDeep = bh, a.flattenDepth = Th, a.flip = tp, a.flow = Qd, a.flowRight = Vd, a.fromPairs = Lh, a.functions = Vp, a.functionsIn = kp, a.groupBy = Ul, a.initial = Nh, a.intersection = Hh, a.intersectionBy = $h, a.intersectionWith = Uh, a.invert = nd, a.invertBy = td, a.invokeMap = Fl, a.iteratee = Ti, a.keyBy = Ml, a.keys = V, a.keysIn = on, a.map = rr, a.mapKeys = rd, a.mapValues = id, a.matches = kd, a.matchesProperty = jd, a.memoize = sr, a.merge = sd, a.mergeWith = ha, a.method = ng, a.methodOf = tg, a.mixin = Li, a.negate = ur, a.nthArg = rg, a.omit = ud, a.omitBy = ad, a.once = ep, a.orderBy = ql, a.over = ig, a.overArgs = rp, a.overEvery = sg, a.overSome = ug, a.partial = xi, a.partialRight = ea, a.partition = Bl, a.pick = od, a.pickBy = la, a.property = wa, a.propertyOf = ag, a.pull = qh, a.pullAll = Ku, a.pullAllBy = Bh, a.pullAllWith = Gh, a.pullAt = zh, a.range = og, a.rangeRight = fg, a.rearg = ip, a.reject = Kl, a.remove = Kh, a.rest = sp, a.reverse = Ai, a.sampleSize = Zl, a.set = cd, a.setWith = hd, a.shuffle = Jl, a.slice = Yh, a.sortBy = Vl, a.sortedUniq = jh, a.sortedUniqBy = nl, a.split = Nd, a.spread = up, a.tail = tl, a.take = el, a.takeRight = rl, a.takeRightWhile = il, a.takeWhile = sl, a.tap = Pl, a.throttle = ap, a.thru = er, a.toArray = aa, a.toPairs = pa, a.toPairsIn = da, a.toPath = dg, a.toPlainObject = fa, a.transform = ld, a.unary = op, a.union = ul, a.unionBy = al, a.unionWith = ol, a.uniq = fl, a.uniqBy = cl, a.uniqWith = hl, a.unset = pd, a.unzip = Ci, a.unzipWith = Yu, a.update = dd, a.updateWith = gd, a.values = Gt, a.valuesIn = vd, a.without = ll, a.words = _a, a.wrap = fp, a.xor = pl, a.xorBy = dl, a.xorWith = gl, a.zip = vl, a.zipObject = _l, a.zipObjectDeep = ml, a.zipWith = wl, a.entries = pa, a.entriesIn = da, a.extend = ca, a.extendWith = fr, Li(a, a), a.add = vg, a.attempt = ma, a.camelCase = Pd, a.capitalize = ga, a.ceil = _g, a.clamp = _d, a.clone = hp, a.cloneDeep = pp, a.cloneDeepWith = dp, a.cloneWith = lp, a.conformsTo = gp, a.deburr = va, a.defaultTo = Xd, a.divide = mg, a.endsWith = Ad, a.eq = bn, a.escape = Cd, a.escapeRegExp = Id, a.every = bl, a.find = Ll, a.findIndex = qu, a.findKey = Kp, a.findLast = Dl, a.findLastIndex = Bu, a.findLastKey = Yp, a.floor = wg, a.forEach = Ju, a.forEachRight = Xu, a.forIn = Zp, a.forInRight = Jp, a.forOwn = Xp, a.forOwnRight = Qp, a.get = Si, a.gt = vp, a.gte = _p, a.has = jp, a.hasIn = Oi, a.head = zu, a.identity = fn, a.includes = Wl, a.indexOf = Dh, a.inRange = md, a.invoke = ed, a.isArguments = Pt, a.isArray = O, a.isArrayBuffer = mp, a.isArrayLike = an, a.isArrayLikeObject = Z, a.isBoolean = wp, a.isBuffer = at, a.isDate = Pp, a.isElement = Ap, a.isEmpty = Cp, a.isEqual = Ip, a.isEqualWith = xp, a.isError = Ei, a.isFinite = Ep, a.isFunction = Jn, a.isInteger = ra, a.isLength = ar, a.isMap = ia, a.isMatch = yp, a.isMatchWith = Sp, a.isNaN = Op, a.isNative = Rp, a.isNil = Tp, a.isNull = bp, a.isNumber = sa, a.isObject = K, a.isObjectLike = Y, a.isPlainObject = pe, a.isRegExp = yi, a.isSafeInteger = Lp, a.isSet = ua, a.isString = or, a.isSymbol = pn, a.isTypedArray = Bt, a.isUndefined = Dp, a.isWeakMap = Np, a.isWeakSet = Hp, a.join = Wh, a.kebabCase = xd, a.last = In, a.lastIndexOf = Fh, a.lowerCase = Ed, a.lowerFirst = yd, a.lt = $p, a.lte = Up, a.max = Pg, a.maxBy = Ag, a.mean = Cg, a.meanBy = Ig, a.min = xg, a.minBy = Eg, a.stubArray = Ni, a.stubFalse = Hi, a.stubObject = cg, a.stubString = hg, a.stubTrue = lg, a.multiply = yg, a.nth = Mh, a.noConflict = eg, a.noop = Di, a.now = ir, a.pad = Sd, a.padEnd = Od, a.padStart = Rd, a.parseInt = bd, a.random = wd, a.reduce = Gl, a.reduceRight = zl, a.repeat = Td, a.replace = Ld, a.result = fd, a.round = Sg, a.runInContext = h, a.sample = Yl, a.size = Xl, a.snakeCase = Dd, a.some = Ql, a.sortedIndex = Zh, a.sortedIndexBy = Jh, a.sortedIndexOf = Xh, a.sortedLastIndex = Qh, a.sortedLastIndexBy = Vh, a.sortedLastIndexOf = kh, a.startCase = Hd, a.startsWith = $d, a.subtract = Og, a.sum = Rg, a.sumBy = bg, a.template = Ud, a.times = pg, a.toFinite = Xn, a.toInteger = R, a.toLength = oa, a.toLower = Wd, a.toNumber = xn, a.toSafeInteger = Wp, a.toString = W, a.toUpper = Fd, a.trim = Md, a.trimEnd = qd, a.trimStart = Bd, a.truncate = Gd, a.unescape = zd, a.uniqueId = gg, a.upperCase = Kd, a.upperFirst = Ri, a.each = Ju, a.eachRight = Xu, a.first = zu, Li(a, function() {\n                var n = {};\n                return $n(a, function(t, e) {\n                    F.call(a.prototype, e) || (n[e] = t);\n                }), n;\n            }(), {\n                chain: !1\n            }), a.VERSION = p, mn([\n                \"bind\",\n                \"bindKey\",\n                \"curry\",\n                \"curryRight\",\n                \"partial\",\n                \"partialRight\"\n            ], function(n) {\n                a[n].placeholder = a;\n            }), mn([\n                \"drop\",\n                \"take\"\n            ], function(n, t) {\n                H.prototype[n] = function(e) {\n                    e = e === i ? 1 : Q(R(e), 0);\n                    var r = this.__filtered__ && !t ? new H(this) : this.clone();\n                    return r.__filtered__ ? r.__takeCount__ = nn(e, r.__takeCount__) : r.__views__.push({\n                        size: nn(e, Hn),\n                        type: n + (r.__dir__ < 0 ? \"Right\" : \"\")\n                    }), r;\n                }, H.prototype[n + \"Right\"] = function(e) {\n                    return this.reverse()[n](e).reverse();\n                };\n            }), mn([\n                \"filter\",\n                \"map\",\n                \"takeWhile\"\n            ], function(n, t) {\n                var e = t + 1, r = e == Gi || e == Fa;\n                H.prototype[n] = function(s) {\n                    var o = this.clone();\n                    return o.__iteratees__.push({\n                        iteratee: x(s, 3),\n                        type: e\n                    }), o.__filtered__ = o.__filtered__ || r, o;\n                };\n            }), mn([\n                \"head\",\n                \"last\"\n            ], function(n, t) {\n                var e = \"take\" + (t ? \"Right\" : \"\");\n                H.prototype[n] = function() {\n                    return this[e](1).value()[0];\n                };\n            }), mn([\n                \"initial\",\n                \"tail\"\n            ], function(n, t) {\n                var e = \"drop\" + (t ? \"\" : \"Right\");\n                H.prototype[n] = function() {\n                    return this.__filtered__ ? new H(this) : this[e](1);\n                };\n            }), H.prototype.compact = function() {\n                return this.filter(fn);\n            }, H.prototype.find = function(n) {\n                return this.filter(n).head();\n            }, H.prototype.findLast = function(n) {\n                return this.reverse().find(n);\n            }, H.prototype.invokeMap = L(function(n, t) {\n                return typeof n == \"function\" ? new H(this) : this.map(function(e) {\n                    return ae(e, n, t);\n                });\n            }), H.prototype.reject = function(n) {\n                return this.filter(ur(x(n)));\n            }, H.prototype.slice = function(n, t) {\n                n = R(n);\n                var e = this;\n                return e.__filtered__ && (n > 0 || t < 0) ? new H(e) : (n < 0 ? e = e.takeRight(-n) : n && (e = e.drop(n)), t !== i && (t = R(t), e = t < 0 ? e.dropRight(-t) : e.take(t - n)), e);\n            }, H.prototype.takeRightWhile = function(n) {\n                return this.reverse().takeWhile(n).reverse();\n            }, H.prototype.toArray = function() {\n                return this.take(Hn);\n            }, $n(H.prototype, function(n, t) {\n                var e = /^(?:filter|find|map|reject)|While$/.test(t), r = /^(?:head|last)$/.test(t), s = a[r ? \"take\" + (t == \"last\" ? \"Right\" : \"\") : t], o = r || /^find/.test(t);\n                s && (a.prototype[t] = function() {\n                    var f = this.__wrapped__, c = r ? [\n                        1\n                    ] : arguments, l = f instanceof H, v = c[0], _ = l || O(f), m = function(N) {\n                        var $ = s.apply(a, nt([\n                            N\n                        ], c));\n                        return r && P ? $[0] : $;\n                    };\n                    _ && e && typeof v == \"function\" && v.length != 1 && (l = _ = !1);\n                    var P = this.__chain__, I = !!this.__actions__.length, E = o && !P, T = l && !I;\n                    if (!o && _) {\n                        f = T ? f : new H(this);\n                        var y = n.apply(f, c);\n                        return y.__actions__.push({\n                            func: er,\n                            args: [\n                                m\n                            ],\n                            thisArg: i\n                        }), new Pn(y, P);\n                    }\n                    return E && T ? n.apply(this, c) : (y = this.thru(m), E ? r ? y.value()[0] : y.value() : y);\n                });\n            }), mn([\n                \"pop\",\n                \"push\",\n                \"shift\",\n                \"sort\",\n                \"splice\",\n                \"unshift\"\n            ], function(n) {\n                var t = Oe[n], e = /^(?:push|sort|unshift)$/.test(n) ? \"tap\" : \"thru\", r = /^(?:pop|shift)$/.test(n);\n                a.prototype[n] = function() {\n                    var s = arguments;\n                    if (r && !this.__chain__) {\n                        var o = this.value();\n                        return t.apply(O(o) ? o : [], s);\n                    }\n                    return this[e](function(f) {\n                        return t.apply(O(f) ? f : [], s);\n                    });\n                };\n            }), $n(H.prototype, function(n, t) {\n                var e = a[t];\n                if (e) {\n                    var r = e.name + \"\";\n                    F.call(Ut, r) || (Ut[r] = []), Ut[r].push({\n                        name: t,\n                        func: e\n                    });\n                }\n            }), Ut[Xe(i, ct).name] = [\n                {\n                    name: \"wrapper\",\n                    func: i\n                }\n            ], H.prototype.clone = zf, H.prototype.reverse = Kf, H.prototype.value = Yf, a.prototype.at = Al, a.prototype.chain = Cl, a.prototype.commit = Il, a.prototype.next = xl, a.prototype.plant = yl, a.prototype.reverse = Sl, a.prototype.toJSON = a.prototype.valueOf = a.prototype.value = Ol, a.prototype.first = a.prototype.head, ne && (a.prototype[ne] = El), a;\n        }, Nt = If();\n        lt ? ((lt.exports = Nt)._ = Nt, Tr._ = Nt) : k._ = Nt;\n    }).call(ge);\n})(Ui, Ui.exports);\nvar zg = Object.defineProperty, Kg = Object.defineProperties, Yg = Object.getOwnPropertyDescriptors, ya = Object.getOwnPropertySymbols, Zg = Object.prototype.hasOwnProperty, Jg = Object.prototype.propertyIsEnumerable, Sa = (A, u, i)=>u in A ? zg(A, u, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: i\n    }) : A[u] = i, cr = (A, u)=>{\n    for(var i in u || (u = {}))Zg.call(u, i) && Sa(A, i, u[i]);\n    if (ya) for (var i of ya(u))Jg.call(u, i) && Sa(A, i, u[i]);\n    return A;\n}, Xg = (A, u)=>Kg(A, Yg(u));\nfunction ft(A, u, i) {\n    var p;\n    const w = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(A);\n    return ((p = u.rpcMap) == null ? void 0 : p[w.reference]) || `${Gg}?chainId=${w.namespace}:${w.reference}&projectId=${i}`;\n}\nfunction Ct(A) {\n    return A.includes(\":\") ? A.split(\":\")[1] : A;\n}\nfunction Oa(A) {\n    return A.map((u)=>`${u.split(\":\")[0]}:${u.split(\":\")[1]}`);\n}\nfunction Qg(A, u) {\n    const i = Object.keys(u.namespaces).filter((w)=>w.includes(A));\n    if (!i.length) return [];\n    const p = [];\n    return i.forEach((w)=>{\n        const b = u.namespaces[w].accounts;\n        p.push(...b);\n    }), p;\n}\nfunction Wi(A = {}, u = {}) {\n    const i = Ra(A), p = Ra(u);\n    return Ui.exports.merge(i, p);\n}\nfunction Ra(A) {\n    var u, i, p, w;\n    const b = {};\n    if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(A)) return b;\n    for (const [D, En] of Object.entries(A)){\n        const zt = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isCaipNamespace)(D) ? [\n            D\n        ] : En.chains, pr = En.methods || [], It = En.events || [], Ln = En.rpcMap || {}, Fn = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(D);\n        b[Fn] = Xg(cr(cr({}, b[Fn]), En), {\n            chains: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(zt, (u = b[Fn]) == null ? void 0 : u.chains),\n            methods: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(pr, (i = b[Fn]) == null ? void 0 : i.methods),\n            events: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(It, (p = b[Fn]) == null ? void 0 : p.events),\n            rpcMap: cr(cr({}, Ln), (w = b[Fn]) == null ? void 0 : w.rpcMap)\n        });\n    }\n    return b;\n}\nfunction Vg(A) {\n    return A.includes(\":\") ? A.split(\":\")[2] : A;\n}\nfunction ba(A) {\n    const u = {};\n    for (const [i, p] of Object.entries(A)){\n        const w = p.methods || [], b = p.events || [], D = p.accounts || [], En = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isCaipNamespace)(i) ? [\n            i\n        ] : p.chains ? p.chains : Oa(p.accounts);\n        u[i] = {\n            chains: En,\n            methods: w,\n            events: b,\n            accounts: D\n        };\n    }\n    return u;\n}\nfunction Fi(A) {\n    return typeof A == \"number\" ? A : A.includes(\"0x\") ? parseInt(A, 16) : (A = A.includes(\":\") ? A.split(\":\")[1] : A, isNaN(Number(A)) ? A : Number(A));\n}\nconst Ta = {}, z = (A)=>Ta[A], Mi = (A, u)=>{\n    Ta[A] = u;\n};\nclass kg {\n    constructor(u){\n        this.name = \"polkadot\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = Ct(i);\n            u[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const p = this.createHttpProvider(u, i);\n        p && (this.httpProviders[u] = p);\n    }\n    createHttpProvider(u, i) {\n        const p = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, z(\"disableProviderPing\")));\n    }\n}\nclass jg {\n    constructor(u){\n        this.name = \"eip155\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());\n    }\n    async request(u) {\n        switch(u.request.method){\n            case \"eth_requestAccounts\":\n                return this.getAccounts();\n            case \"eth_accounts\":\n                return this.getAccounts();\n            case \"wallet_switchEthereumChain\":\n                return await this.handleSwitchChain(u);\n            case \"eth_chainId\":\n                return parseInt(this.getDefaultChain());\n        }\n        return this.namespace.methods.includes(u.request.method) ? await this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(parseInt(u), i), this.chainId = parseInt(u), this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId.toString();\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    createHttpProvider(u, i) {\n        const p = i || ft(`${this.name}:${u}`, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__.HttpConnection(p, z(\"disableProviderPing\")));\n    }\n    setHttpProvider(u, i) {\n        const p = this.createHttpProvider(u, i);\n        p && (this.httpProviders[u] = p);\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = parseInt(Ct(i));\n            u[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), u;\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    getHttpProvider() {\n        const u = this.chainId, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    async handleSwitchChain(u) {\n        var i, p;\n        let w = u.request.params ? (i = u.request.params[0]) == null ? void 0 : i.chainId : \"0x0\";\n        w = w.startsWith(\"0x\") ? w : `0x${w}`;\n        const b = parseInt(w, 16);\n        if (this.isChainApproved(b)) this.setDefaultChain(`${b}`);\n        else if (this.namespace.methods.includes(\"wallet_switchEthereumChain\")) await this.client.request({\n            topic: u.topic,\n            request: {\n                method: u.request.method,\n                params: [\n                    {\n                        chainId: w\n                    }\n                ]\n            },\n            chainId: (p = this.namespace.chains) == null ? void 0 : p[0]\n        }), this.setDefaultChain(`${b}`);\n        else throw new Error(`Failed to switch to chain 'eip155:${b}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);\n        return null;\n    }\n    isChainApproved(u) {\n        return this.namespace.chains.includes(`${this.name}:${u}`);\n    }\n}\nclass nv {\n    constructor(u){\n        this.name = \"solana\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = Ct(i);\n            u[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const p = this.createHttpProvider(u, i);\n        p && (this.httpProviders[u] = p);\n    }\n    createHttpProvider(u, i) {\n        const p = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, z(\"disableProviderPing\")));\n    }\n}\nclass tv {\n    constructor(u){\n        this.name = \"cosmos\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = Ct(i);\n            u[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const p = this.createHttpProvider(u, i);\n        p && (this.httpProviders[u] = p);\n    }\n    createHttpProvider(u, i) {\n        const p = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, z(\"disableProviderPing\")));\n    }\n}\nclass ev {\n    constructor(u){\n        this.name = \"cip34\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            const p = this.getCardanoRPCUrl(i), w = Ct(i);\n            u[w] = this.createHttpProvider(w, p);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    getCardanoRPCUrl(u) {\n        const i = this.namespace.rpcMap;\n        if (i) return i[u];\n    }\n    setHttpProvider(u, i) {\n        const p = this.createHttpProvider(u, i);\n        p && (this.httpProviders[u] = p);\n    }\n    createHttpProvider(u, i) {\n        const p = i || this.getCardanoRPCUrl(u);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, z(\"disableProviderPing\")));\n    }\n}\nclass rv {\n    constructor(u){\n        this.name = \"elrond\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = Ct(i);\n            u[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const p = this.createHttpProvider(u, i);\n        p && (this.httpProviders[u] = p);\n    }\n    createHttpProvider(u, i) {\n        const p = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, z(\"disableProviderPing\")));\n    }\n}\nclass iv {\n    constructor(u){\n        this.name = \"multiversx\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = Ct(i);\n            u[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const p = this.createHttpProvider(u, i);\n        p && (this.httpProviders[u] = p);\n    }\n    createHttpProvider(u, i) {\n        const p = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, z(\"disableProviderPing\")));\n    }\n}\nclass sv {\n    constructor(u){\n        this.name = \"near\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        if (this.chainId = u, !this.httpProviders[u]) {\n            const p = i || ft(`${this.name}:${u}`, this.namespace);\n            if (!p) throw new Error(`No RPC url provided for chainId: ${u}`);\n            this.setHttpProvider(u, p);\n        }\n        this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            u[i] = this.createHttpProvider(i, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const p = this.createHttpProvider(u, i);\n        p && (this.httpProviders[u] = p);\n    }\n    createHttpProvider(u, i) {\n        const p = i || ft(u, this.namespace);\n        return typeof p > \"u\" ? void 0 : new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, z(\"disableProviderPing\")));\n    }\n}\nvar uv = Object.defineProperty, av = Object.defineProperties, ov = Object.getOwnPropertyDescriptors, La = Object.getOwnPropertySymbols, fv = Object.prototype.hasOwnProperty, cv = Object.prototype.propertyIsEnumerable, Da = (A, u, i)=>u in A ? uv(A, u, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: i\n    }) : A[u] = i, hr = (A, u)=>{\n    for(var i in u || (u = {}))fv.call(u, i) && Da(A, i, u[i]);\n    if (La) for (var i of La(u))cv.call(u, i) && Da(A, i, u[i]);\n    return A;\n}, qi = (A, u)=>av(A, ov(u));\nclass lr {\n    constructor(u){\n        this.events = new (events__WEBPACK_IMPORTED_MODULE_3___default()), this.rpcProviders = {}, this.shouldAbortPairingAttempt = !1, this.maxPairingAttempts = 10, this.disableProviderPing = !1, this.providerOpts = u, this.logger = typeof u?.logger < \"u\" && typeof u?.logger != \"string\" ? u.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: u?.logger || xa\n        })), this.disableProviderPing = u?.disableProviderPing || !1;\n    }\n    static async init(u) {\n        const i = new lr(u);\n        return await i.initialize(), i;\n    }\n    async request(u, i, p) {\n        const [w, b] = this.validateChain(i);\n        if (!this.session) throw new Error(\"Please call connect() before request()\");\n        return await this.getProvider(w).request({\n            request: hr({}, u),\n            chainId: `${w}:${b}`,\n            topic: this.session.topic,\n            expiry: p\n        });\n    }\n    sendAsync(u, i, p, w) {\n        const b = new Date().getTime();\n        this.request(u, p, w).then((D)=>i(null, (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_4__.formatJsonRpcResult)(b, D))).catch((D)=>i(D, void 0));\n    }\n    async enable() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        return this.session || await this.connect({\n            namespaces: this.namespaces,\n            optionalNamespaces: this.optionalNamespaces,\n            sessionProperties: this.sessionProperties\n        }), await this.requestAccounts();\n    }\n    async disconnect() {\n        var u;\n        if (!this.session) throw new Error(\"Please call connect() before enable()\");\n        await this.client.disconnect({\n            topic: (u = this.session) == null ? void 0 : u.topic,\n            reason: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")\n        }), await this.cleanup();\n    }\n    async connect(u) {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (this.setNamespaces(u), await this.cleanupPendingPairings(), !u.skipPairing) return await this.pair(u.pairingTopic);\n    }\n    async authenticate(u) {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        this.setNamespaces(u), await this.cleanupPendingPairings();\n        const { uri: i, response: p } = await this.client.authenticate(u);\n        i && (this.uri = i, this.events.emit(\"display_uri\", i));\n        const w = await p();\n        if (this.session = w.session, this.session) {\n            const b = ba(this.session.namespaces);\n            this.namespaces = Wi(this.namespaces, b), this.persist(\"namespaces\", this.namespaces), this.onConnect();\n        }\n        return w;\n    }\n    on(u, i) {\n        this.events.on(u, i);\n    }\n    once(u, i) {\n        this.events.once(u, i);\n    }\n    removeListener(u, i) {\n        this.events.removeListener(u, i);\n    }\n    off(u, i) {\n        this.events.off(u, i);\n    }\n    get isWalletConnect() {\n        return !0;\n    }\n    async pair(u) {\n        this.shouldAbortPairingAttempt = !1;\n        let i = 0;\n        do {\n            if (this.shouldAbortPairingAttempt) throw new Error(\"Pairing aborted\");\n            if (i >= this.maxPairingAttempts) throw new Error(\"Max auto pairing attempts reached\");\n            const { uri: p, approval: w } = await this.client.connect({\n                pairingTopic: u,\n                requiredNamespaces: this.namespaces,\n                optionalNamespaces: this.optionalNamespaces,\n                sessionProperties: this.sessionProperties\n            });\n            p && (this.uri = p, this.events.emit(\"display_uri\", p)), await w().then((b)=>{\n                this.session = b;\n                const D = ba(b.namespaces);\n                this.namespaces = Wi(this.namespaces, D), this.persist(\"namespaces\", this.namespaces);\n            }).catch((b)=>{\n                if (b.message !== _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__.PROPOSAL_EXPIRY_MESSAGE) throw b;\n                i++;\n            });\n        }while (!this.session);\n        return this.onConnect(), this.session;\n    }\n    setDefaultChain(u, i) {\n        try {\n            if (!this.session) return;\n            const [p, w] = this.validateChain(u);\n            this.getProvider(p).setDefaultChain(w, i);\n        } catch (p) {\n            if (!/Please call connect/.test(p.message)) throw p;\n        }\n    }\n    async cleanupPendingPairings(u = {}) {\n        this.logger.info(\"Cleaning up inactive pairings...\");\n        const i = this.client.pairing.getAll();\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidArray)(i)) {\n            for (const p of i)u.deletePairings ? this.client.core.expirer.set(p.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(p.topic);\n            this.logger.info(`Inactive pairings cleared: ${i.length}`);\n        }\n    }\n    abortPairingAttempt() {\n        this.shouldAbortPairingAttempt = !0;\n    }\n    async checkStorage() {\n        if (this.namespaces = await this.getFromStore(\"namespaces\"), this.optionalNamespaces = await this.getFromStore(\"optionalNamespaces\") || {}, this.client.session.length) {\n            const u = this.client.session.keys.length - 1;\n            this.session = this.client.session.get(this.client.session.keys[u]), this.createProviders();\n        }\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();\n    }\n    async createClient() {\n        this.client = this.providerOpts.client || await _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__[\"default\"].init({\n            logger: this.providerOpts.logger || xa,\n            relayUrl: this.providerOpts.relayUrl || Mg,\n            projectId: this.providerOpts.projectId,\n            metadata: this.providerOpts.metadata,\n            storageOptions: this.providerOpts.storageOptions,\n            storage: this.providerOpts.storage,\n            name: this.providerOpts.name\n        }), this.logger.trace(\"SignClient Initialized\");\n    }\n    createProviders() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (!this.session) throw new Error(\"Session not initialized. Please call connect() before enable()\");\n        const u = [\n            ...new Set(Object.keys(this.session.namespaces).map((i)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(i)))\n        ];\n        Mi(\"client\", this.client), Mi(\"events\", this.events), Mi(\"disableProviderPing\", this.disableProviderPing), u.forEach((i)=>{\n            if (!this.session) return;\n            const p = Qg(i, this.session), w = Oa(p), b = Wi(this.namespaces, this.optionalNamespaces), D = qi(hr({}, b[i]), {\n                accounts: p,\n                chains: w\n            });\n            switch(i){\n                case \"eip155\":\n                    this.rpcProviders[i] = new jg({\n                        namespace: D\n                    });\n                    break;\n                case \"solana\":\n                    this.rpcProviders[i] = new nv({\n                        namespace: D\n                    });\n                    break;\n                case \"cosmos\":\n                    this.rpcProviders[i] = new tv({\n                        namespace: D\n                    });\n                    break;\n                case \"polkadot\":\n                    this.rpcProviders[i] = new kg({\n                        namespace: D\n                    });\n                    break;\n                case \"cip34\":\n                    this.rpcProviders[i] = new ev({\n                        namespace: D\n                    });\n                    break;\n                case \"elrond\":\n                    this.rpcProviders[i] = new rv({\n                        namespace: D\n                    });\n                    break;\n                case \"multiversx\":\n                    this.rpcProviders[i] = new iv({\n                        namespace: D\n                    });\n                    break;\n                case \"near\":\n                    this.rpcProviders[i] = new sv({\n                        namespace: D\n                    });\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client > \"u\") throw new Error(\"Sign Client is not initialized\");\n        this.client.on(\"session_ping\", (u)=>{\n            this.events.emit(\"session_ping\", u);\n        }), this.client.on(\"session_event\", (u)=>{\n            const { params: i } = u, { event: p } = i;\n            if (p.name === \"accountsChanged\") {\n                const w = p.data;\n                w && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidArray)(w) && this.events.emit(\"accountsChanged\", w.map(Vg));\n            } else if (p.name === \"chainChanged\") {\n                const w = i.chainId, b = i.event.data, D = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(w), En = Fi(w) !== Fi(b) ? `${D}:${Fi(b)}` : w;\n                this.onChainChanged(En);\n            } else this.events.emit(p.name, p.data);\n            this.events.emit(\"session_event\", u);\n        }), this.client.on(\"session_update\", ({ topic: u, params: i })=>{\n            var p;\n            const { namespaces: w } = i, b = (p = this.client) == null ? void 0 : p.session.get(u);\n            this.session = qi(hr({}, b), {\n                namespaces: w\n            }), this.onSessionUpdate(), this.events.emit(\"session_update\", {\n                topic: u,\n                params: i\n            });\n        }), this.client.on(\"session_delete\", async (u)=>{\n            await this.cleanup(), this.events.emit(\"session_delete\", u), this.events.emit(\"disconnect\", qi(hr({}, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), {\n                data: u.topic\n            }));\n        }), this.on(Vn.DEFAULT_CHAIN_CHANGED, (u)=>{\n            this.onChainChanged(u, !0);\n        });\n    }\n    getProvider(u) {\n        if (!this.rpcProviders[u]) throw new Error(`Provider not found: ${u}`);\n        return this.rpcProviders[u];\n    }\n    onSessionUpdate() {\n        Object.keys(this.rpcProviders).forEach((u)=>{\n            var i;\n            this.getProvider(u).updateNamespace((i = this.session) == null ? void 0 : i.namespaces[u]);\n        });\n    }\n    setNamespaces(u) {\n        const { namespaces: i, optionalNamespaces: p, sessionProperties: w } = u;\n        i && Object.keys(i).length && (this.namespaces = i), p && Object.keys(p).length && (this.optionalNamespaces = p), this.sessionProperties = w, this.persist(\"namespaces\", i), this.persist(\"optionalNamespaces\", p);\n    }\n    validateChain(u) {\n        const [i, p] = u?.split(\":\") || [\n            \"\",\n            \"\"\n        ];\n        if (!this.namespaces || !Object.keys(this.namespaces).length) return [\n            i,\n            p\n        ];\n        if (i && !Object.keys(this.namespaces || {}).map((D)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(D)).includes(i)) throw new Error(`Namespace '${i}' is not configured. Please call connect() first with namespace config.`);\n        if (i && p) return [\n            i,\n            p\n        ];\n        const w = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(Object.keys(this.namespaces)[0]), b = this.rpcProviders[w].getDefaultChain();\n        return [\n            w,\n            b\n        ];\n    }\n    async requestAccounts() {\n        const [u] = this.validateChain();\n        return await this.getProvider(u).requestAccounts();\n    }\n    onChainChanged(u, i = !1) {\n        if (!this.namespaces) return;\n        const [p, w] = this.validateChain(u);\n        w && (i || this.getProvider(p).setDefaultChain(w), this.namespaces[p] ? this.namespaces[p].defaultChain = w : this.namespaces[`${p}:${w}`] ? this.namespaces[`${p}:${w}`].defaultChain = w : this.namespaces[`${p}:${w}`] = {\n            defaultChain: w\n        }, this.persist(\"namespaces\", this.namespaces), this.events.emit(\"chainChanged\", w));\n    }\n    onConnect() {\n        this.createProviders(), this.events.emit(\"connect\", {\n            session: this.session\n        });\n    }\n    async cleanup() {\n        this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist(\"namespaces\", void 0), this.persist(\"optionalNamespaces\", void 0), this.persist(\"sessionProperties\", void 0), await this.cleanupPendingPairings({\n            deletePairings: !0\n        });\n    }\n    persist(u, i) {\n        this.client.core.storage.setItem(`${Ea}/${u}`, i);\n    }\n    async getFromStore(u) {\n        return await this.client.core.storage.getItem(`${Ea}/${u}`);\n    }\n}\nconst hv = lr;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdW5pdmVyc2FsLXByb3ZpZGVyL2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUEwRTtBQUE4SztBQUE0RTtBQUE2RTtBQUFtRTtBQUF1QjtBQUFvRTtBQUFBLE1BQU02QixLQUFHLFNBQVFDLEtBQUcsaUNBQWdDQyxLQUFHLE1BQUtDLEtBQUcsc0JBQXFCQyxLQUFHLENBQUMsRUFBRUYsR0FBRyxHQUFHLEVBQUVDLEdBQUcsQ0FBQyxDQUFDLEVBQUNFLEtBQUcscUNBQW9DQyxLQUFHO0lBQUNDLHVCQUFzQjtBQUF1QjtBQUFFLElBQUlDLEtBQUcsT0FBT0MsYUFBVyxNQUFJQSxhQUFXLE1BQWlCLEdBQUNDLENBQU1BLEdBQUMsT0FBT0MsU0FBTyxNQUFJQSxTQUFPLE9BQU9DLE9BQUssTUFBSUEsT0FBSyxDQUFDLEdBQUVDLEtBQUc7SUFBQ0MsU0FBUSxDQUFDO0FBQUMsR0FBRTs7Ozs7OztDQU9sM0I7QUFBRyxVQUFTQyxDQUFDLEVBQUNDLENBQUM7SUFBRztRQUFXLElBQUlDLEdBQUVDLElBQUUsV0FBVUMsSUFBRSxLQUFJQyxJQUFFLG1FQUFrRUMsSUFBRSx1QkFBc0JDLEtBQUcsc0RBQXFEQyxLQUFHLDZCQUE0QkMsS0FBRyxLQUFJQyxLQUFHLDBCQUF5QkMsS0FBRyxHQUFFQyxLQUFHLEdBQUVDLEtBQUcsR0FBRUMsS0FBRyxHQUFFQyxLQUFHLEdBQUVDLEtBQUcsR0FBRUMsS0FBRyxHQUFFQyxLQUFHLEdBQUVDLEtBQUcsR0FBRUMsS0FBRyxJQUFHQyxLQUFHLElBQUdDLEtBQUcsSUFBR0MsS0FBRyxLQUFJQyxLQUFHLEtBQUlDLEtBQUcsS0FBSUMsS0FBRyxJQUFHQyxLQUFHLE9BQU1DLEtBQUcsS0FBSUMsS0FBRyxJQUFHQyxLQUFHLEdBQUVDLEtBQUcsR0FBRUMsS0FBRyxHQUFFQyxLQUFHLElBQUUsR0FBRUMsS0FBRyxrQkFBaUJDLEtBQUcsdUJBQXNC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R0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUtDLEdBQU87WUFBS0MsR0FBTztZQUFLQyxHQUFPO1lBQUtDLEdBQU87WUFBS0MsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBSUMsR0FBTztZQUFJQyxHQUFPO1lBQUlDLEdBQU87WUFBS0MsR0FBTztZQUFLQyxHQUFPO1lBQUtDLEdBQU87WUFBS0MsR0FBTztZQUFLQyxHQUFPO1FBQUcsR0FBRUMsS0FBRztZQUFDLEtBQUk7WUFBUSxLQUFJO1lBQU8sS0FBSTtZQUFPLEtBQUk7WUFBUyxLQUFJO1FBQU8sR0FBRUMsS0FBRztZQUFDLFNBQVE7WUFBSSxRQUFPO1lBQUksUUFBTztZQUFJLFVBQVM7WUFBSSxTQUFRO1FBQUcsR0FBRUMsS0FBRztZQUFDLE1BQUs7WUFBSyxLQUFJ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QVc7UUFBQyxJQUFJLENBQUNpQixlQUFlLElBQUcsSUFBSSxDQUFDbkcsTUFBTSxDQUFDc0IsSUFBSSxDQUFDLFdBQVU7WUFBQ3FDLFNBQVEsSUFBSSxDQUFDQSxPQUFPO1FBQUE7SUFBRTtJQUFDLE1BQU1hLFVBQVM7UUFBQyxJQUFJLENBQUNiLE9BQU8sR0FBQyxLQUFLLEdBQUUsSUFBSSxDQUFDakUsVUFBVSxHQUFDLEtBQUssR0FBRSxJQUFJLENBQUMwRSxrQkFBa0IsR0FBQyxLQUFLLEdBQUUsSUFBSSxDQUFDQyxpQkFBaUIsR0FBQyxLQUFLLEdBQUUsSUFBSSxDQUFDWSxPQUFPLENBQUMsY0FBYSxLQUFLLElBQUcsSUFBSSxDQUFDQSxPQUFPLENBQUMsc0JBQXFCLEtBQUssSUFBRyxJQUFJLENBQUNBLE9BQU8sQ0FBQyxxQkFBb0IsS0FBSyxJQUFHLE1BQU0sSUFBSSxDQUFDUCxzQkFBc0IsQ0FBQztZQUFDaUIsZ0JBQWUsQ0FBQztRQUFDO0lBQUU7SUFBQ1YsUUFBUS9oRCxDQUFDLEVBQUNDLENBQUMsRUFBQztRQUFDLElBQUksQ0FBQ3M5QyxNQUFNLENBQUNlLElBQUksQ0FBQ2tGLE9BQU8sQ0FBQ0ssT0FBTyxDQUFDLENBQUMsRUFBRXprRCxHQUFHLENBQUMsRUFBRVksRUFBRSxDQUFDLEVBQUNDO0lBQUU7SUFBQyxNQUFNK2lELGFBQWFoakQsQ0FBQyxFQUFDO1FBQUMsT0FBTyxNQUFNLElBQUksQ0FBQ3U5QyxNQUFNLENBQUNlLElBQUksQ0FBQ2tGLE9BQU8sQ0FBQ00sT0FBTyxDQUFDLENBQUMsRUFBRTFrRCxHQUFHLENBQUMsRUFBRVksRUFBRSxDQUFDO0lBQUM7QUFBQztBQUFDLE1BQU0rakQsS0FBR2pFO0FBQWlELENBQzlubEMsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91bml2ZXJzYWwtcHJvdmlkZXIvZGlzdC9pbmRleC5lcy5qcz8zODBlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUZyx7UFJPUE9TQUxfRVhQSVJZX01FU1NBR0UgYXMgTGd9ZnJvbVwiQHdhbGxldGNvbm5lY3Qvc2lnbi1jbGllbnRcIjtpbXBvcnR7aXNWYWxpZE9iamVjdCBhcyBEZyxpc0NhaXBOYW1lc3BhY2UgYXMgQWEscGFyc2VOYW1lc3BhY2VLZXkgYXMgZGUsbWVyZ2VBcnJheXMgYXMgJGkscGFyc2VDaGFpbklkIGFzIE5nLGdldFNka0Vycm9yIGFzIENhLGlzVmFsaWRBcnJheSBhcyBJYX1mcm9tXCJAd2FsbGV0Y29ubmVjdC91dGlsc1wiO2ltcG9ydHtwaW5vIGFzIEhnLGdldERlZmF1bHRMb2dnZXJPcHRpb25zIGFzICRnfWZyb21cIkB3YWxsZXRjb25uZWN0L2xvZ2dlclwiO2ltcG9ydCBBdCx7SHR0cENvbm5lY3Rpb24gYXMgVWd9ZnJvbVwiQHdhbGxldGNvbm5lY3QvanNvbnJwYy1odHRwLWNvbm5lY3Rpb25cIjtpbXBvcnR7SnNvblJwY1Byb3ZpZGVyIGFzIG90fWZyb21cIkB3YWxsZXRjb25uZWN0L2pzb25ycGMtcHJvdmlkZXJcIjtpbXBvcnQgV2cgZnJvbVwiZXZlbnRzXCI7aW1wb3J0e2Zvcm1hdEpzb25ScGNSZXN1bHQgYXMgRmd9ZnJvbVwiQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlsc1wiO2NvbnN0IHhhPVwiZXJyb3JcIixNZz1cIndzczovL3JlbGF5LndhbGxldGNvbm5lY3QuY29tXCIscWc9XCJ3Y1wiLEJnPVwidW5pdmVyc2FsX3Byb3ZpZGVyXCIsRWE9YCR7cWd9QDI6JHtCZ306YCxHZz1cImh0dHBzOi8vcnBjLndhbGxldGNvbm5lY3QuY29tL3YxL1wiLFZuPXtERUZBVUxUX0NIQUlOX0NIQU5HRUQ6XCJkZWZhdWx0X2NoYWluX2NoYW5nZWRcIn07dmFyIGdlPXR5cGVvZiBnbG9iYWxUaGlzPFwidVwiP2dsb2JhbFRoaXM6dHlwZW9mIHdpbmRvdzxcInVcIj93aW5kb3c6dHlwZW9mIGdsb2JhbDxcInVcIj9nbG9iYWw6dHlwZW9mIHNlbGY8XCJ1XCI/c2VsZjp7fSxVaT17ZXhwb3J0czp7fX07LyoqXG4gKiBAbGljZW5zZVxuICogTG9kYXNoIDxodHRwczovL2xvZGFzaC5jb20vPlxuICogQ29weXJpZ2h0IE9wZW5KUyBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMgPGh0dHBzOi8vb3BlbmpzZi5vcmcvPlxuICogUmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UgPGh0dHBzOi8vbG9kYXNoLmNvbS9saWNlbnNlPlxuICogQmFzZWQgb24gVW5kZXJzY29yZS5qcyAxLjguMyA8aHR0cDovL3VuZGVyc2NvcmVqcy5vcmcvTElDRU5TRT5cbiAqIENvcHlyaWdodCBKZXJlbXkgQXNoa2VuYXMsIERvY3VtZW50Q2xvdWQgYW5kIEludmVzdGlnYXRpdmUgUmVwb3J0ZXJzICYgRWRpdG9yc1xuICovKGZ1bmN0aW9uKEEsdSl7KGZ1bmN0aW9uKCl7dmFyIGkscD1cIjQuMTcuMjFcIix3PTIwMCxiPVwiVW5zdXBwb3J0ZWQgY29yZS1qcyB1c2UuIFRyeSBodHRwczovL25wbXMuaW8vc2VhcmNoP3E9cG9ueWZpbGwuXCIsRD1cIkV4cGVjdGVkIGEgZnVuY3Rpb25cIixFbj1cIkludmFsaWQgYHZhcmlhYmxlYCBvcHRpb24gcGFzc2VkIGludG8gYF8udGVtcGxhdGVgXCIsenQ9XCJfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fXCIscHI9NTAwLEl0PVwiX19sb2Rhc2hfcGxhY2Vob2xkZXJfX1wiLExuPTEsRm49Mix4dD00LEV0PTEsdmU9Mix2bj0xLGN0PTIsQmk9NCxEbj04LHl0PTE2LE5uPTMyLFN0PTY0LE1uPTEyOCxLdD0yNTYsZHI9NTEyLE5hPTMwLEhhPVwiLi4uXCIsJGE9ODAwLFVhPTE2LEdpPTEsV2E9MixGYT0zLGh0PTEvMCxrbj05MDA3MTk5MjU0NzQwOTkxLE1hPTE3OTc2OTMxMzQ4NjIzMTU3ZTI5MixfZT0wLzAsSG49NDI5NDk2NzI5NSxxYT1Ibi0xLEJhPUhuPj4+MSxHYT1bW1wiYXJ5XCIsTW5dLFtcImJpbmRcIix2bl0sW1wiYmluZEtleVwiLGN0XSxbXCJjdXJyeVwiLERuXSxbXCJjdXJyeVJpZ2h0XCIseXRdLFtcImZsaXBcIixkcl0sW1wicGFydGlhbFwiLE5uXSxbXCJwYXJ0aWFsUmlnaHRcIixTdF0sW1wicmVhcmdcIixLdF1dLE90PVwiW29iamVjdCBBcmd1bWVudHNdXCIsbWU9XCJbb2JqZWN0IEFycmF5XVwiLHphPVwiW29iamVjdCBBc3luY0Z1bmN0aW9uXVwiLFl0PVwiW29iamVjdCBCb29sZWFuXVwiLFp0PVwiW29iamVjdCBEYXRlXVwiLEthPVwiW29iamVjdCBET01FeGNlcHRpb25dXCIsd2U9XCJbb2JqZWN0IEVycm9yXVwiLFBlPVwiW29iamVjdCBGdW5jdGlvbl1cIix6aT1cIltvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dXCIseW49XCJbb2JqZWN0IE1hcF1cIixKdD1cIltvYmplY3QgTnVtYmVyXVwiLFlhPVwiW29iamVjdCBOdWxsXVwiLHFuPVwiW29iamVjdCBPYmplY3RdXCIsS2k9XCJbb2JqZWN0IFByb21pc2VdXCIsWmE9XCJbb2JqZWN0IFByb3h5XVwiLFh0PVwiW29iamVjdCBSZWdFeHBdXCIsU249XCJbb2JqZWN0IFNldF1cIixRdD1cIltvYmplY3QgU3RyaW5nXVwiLEFlPVwiW29iamVjdCBTeW1ib2xdXCIsSmE9XCJbb2JqZWN0IFVuZGVmaW5lZF1cIixWdD1cIltvYmplY3QgV2Vha01hcF1cIixYYT1cIltvYmplY3QgV2Vha1NldF1cIixrdD1cIltvYmplY3QgQXJyYXlCdWZmZXJdXCIsUnQ9XCJbb2JqZWN0IERhdGFWaWV3XVwiLGdyPVwiW29iamVjdCBGbG9hdDMyQXJyYXldXCIsdnI9XCJbb2JqZWN0IEZsb2F0NjRBcnJheV1cIixfcj1cIltvYmplY3QgSW50OEFycmF5XVwiLG1yPVwiW29iamVjdCBJbnQxNkFycmF5XVwiLHdyPVwiW29iamVjdCBJbnQzMkFycmF5XVwiLFByPVwiW29iamVjdCBVaW50OEFycmF5XVwiLEFyPVwiW29iamVjdCBVaW50OENsYW1wZWRBcnJheV1cIixDcj1cIltvYmplY3QgVWludDE2QXJyYXldXCIsSXI9XCJbb2JqZWN0IFVpbnQzMkFycmF5XVwiLFFhPS9cXGJfX3AgXFwrPSAnJzsvZyxWYT0vXFxiKF9fcCBcXCs9KSAnJyBcXCsvZyxrYT0vKF9fZVxcKC4qP1xcKXxcXGJfX3RcXCkpIFxcK1xcbicnOy9nLFlpPS8mKD86YW1wfGx0fGd0fHF1b3R8IzM5KTsvZyxaaT0vWyY8PlwiJ10vZyxqYT1SZWdFeHAoWWkuc291cmNlKSxubz1SZWdFeHAoWmkuc291cmNlKSx0bz0vPCUtKFtcXHNcXFNdKz8pJT4vZyxlbz0vPCUoW1xcc1xcU10rPyklPi9nLEppPS88JT0oW1xcc1xcU10rPyklPi9nLHJvPS9cXC58XFxbKD86W15bXFxdXSp8KFtcIiddKSg/Oig/IVxcMSlbXlxcXFxdfFxcXFwuKSo/XFwxKVxcXS8saW89L15cXHcqJC8sc289L1teLltcXF1dK3xcXFsoPzooLT9cXGQrKD86XFwuXFxkKyk/KXwoW1wiJ10pKCg/Oig/IVxcMilbXlxcXFxdfFxcXFwuKSo/KVxcMilcXF18KD89KD86XFwufFxcW1xcXSkoPzpcXC58XFxbXFxdfCQpKS9nLHhyPS9bXFxcXF4kLiorPygpW1xcXXt9fF0vZyx1bz1SZWdFeHAoeHIuc291cmNlKSxFcj0vXlxccysvLGFvPS9cXHMvLG9vPS9cXHsoPzpcXG5cXC9cXCogXFxbd3JhcHBlZCB3aXRoIC4rXFxdIFxcKlxcLyk/XFxuPy8sZm89L1xce1xcblxcL1xcKiBcXFt3cmFwcGVkIHdpdGggKC4rKVxcXSBcXCovLGNvPS8sPyAmIC8saG89L1teXFx4MDAtXFx4MmZcXHgzYS1cXHg0MFxceDViLVxceDYwXFx4N2ItXFx4N2ZdKy9nLGxvPS9bKCk9LHt9XFxbXFxdXFwvXFxzXS8scG89L1xcXFwoXFxcXCk/L2csZ289L1xcJFxceyhbXlxcXFx9XSooPzpcXFxcLlteXFxcXH1dKikqKVxcfS9nLFhpPS9cXHcqJC8sdm89L15bLStdMHhbMC05YS1mXSskL2ksX289L14wYlswMV0rJC9pLG1vPS9eXFxbb2JqZWN0IC4rP0NvbnN0cnVjdG9yXFxdJC8sd289L14wb1swLTddKyQvaSxQbz0vXig/OjB8WzEtOV1cXGQqKSQvLEFvPS9bXFx4YzAtXFx4ZDZcXHhkOC1cXHhmNlxceGY4LVxceGZmXFx1MDEwMC1cXHUwMTdmXS9nLENlPS8oJF4pLyxDbz0vWydcXG5cXHJcXHUyMDI4XFx1MjAyOVxcXFxdL2csSWU9XCJcXFxcdWQ4MDAtXFxcXHVkZmZmXCIsSW89XCJcXFxcdTAzMDAtXFxcXHUwMzZmXCIseG89XCJcXFxcdWZlMjAtXFxcXHVmZTJmXCIsRW89XCJcXFxcdTIwZDAtXFxcXHUyMGZmXCIsUWk9SW8reG8rRW8sVmk9XCJcXFxcdTI3MDAtXFxcXHUyN2JmXCIsa2k9XCJhLXpcXFxceGRmLVxcXFx4ZjZcXFxceGY4LVxcXFx4ZmZcIix5bz1cIlxcXFx4YWNcXFxceGIxXFxcXHhkN1xcXFx4ZjdcIixTbz1cIlxcXFx4MDAtXFxcXHgyZlxcXFx4M2EtXFxcXHg0MFxcXFx4NWItXFxcXHg2MFxcXFx4N2ItXFxcXHhiZlwiLE9vPVwiXFxcXHUyMDAwLVxcXFx1MjA2ZlwiLFJvPVwiIFxcXFx0XFxcXHgwYlxcXFxmXFxcXHhhMFxcXFx1ZmVmZlxcXFxuXFxcXHJcXFxcdTIwMjhcXFxcdTIwMjlcXFxcdTE2ODBcXFxcdTE4MGVcXFxcdTIwMDBcXFxcdTIwMDFcXFxcdTIwMDJcXFxcdTIwMDNcXFxcdTIwMDRcXFxcdTIwMDVcXFxcdTIwMDZcXFxcdTIwMDdcXFxcdTIwMDhcXFxcdTIwMDlcXFxcdTIwMGFcXFxcdTIwMmZcXFxcdTIwNWZcXFxcdTMwMDBcIixqaT1cIkEtWlxcXFx4YzAtXFxcXHhkNlxcXFx4ZDgtXFxcXHhkZVwiLG5zPVwiXFxcXHVmZTBlXFxcXHVmZTBmXCIsdHM9eW8rU28rT28rUm8seXI9XCJbJ1xcdTIwMTldXCIsYm89XCJbXCIrSWUrXCJdXCIsZXM9XCJbXCIrdHMrXCJdXCIseGU9XCJbXCIrUWkrXCJdXCIscnM9XCJcXFxcZCtcIixUbz1cIltcIitWaStcIl1cIixpcz1cIltcIitraStcIl1cIixzcz1cIlteXCIrSWUrdHMrcnMrVmkra2kramkrXCJdXCIsU3I9XCJcXFxcdWQ4M2NbXFxcXHVkZmZiLVxcXFx1ZGZmZl1cIixMbz1cIig/OlwiK3hlK1wifFwiK1NyK1wiKVwiLHVzPVwiW15cIitJZStcIl1cIixPcj1cIig/OlxcXFx1ZDgzY1tcXFxcdWRkZTYtXFxcXHVkZGZmXSl7Mn1cIixScj1cIltcXFxcdWQ4MDAtXFxcXHVkYmZmXVtcXFxcdWRjMDAtXFxcXHVkZmZmXVwiLGJ0PVwiW1wiK2ppK1wiXVwiLGFzPVwiXFxcXHUyMDBkXCIsb3M9XCIoPzpcIitpcytcInxcIitzcytcIilcIixEbz1cIig/OlwiK2J0K1wifFwiK3NzK1wiKVwiLGZzPVwiKD86XCIreXIrXCIoPzpkfGxsfG18cmV8c3x0fHZlKSk/XCIsY3M9XCIoPzpcIit5citcIig/OkR8TEx8TXxSRXxTfFR8VkUpKT9cIixocz1MbytcIj9cIixscz1cIltcIitucytcIl0/XCIsTm89XCIoPzpcIithcytcIig/OlwiK1t1cyxPcixScl0uam9pbihcInxcIikrXCIpXCIrbHMraHMrXCIpKlwiLEhvPVwiXFxcXGQqKD86MXN0fDJuZHwzcmR8KD8hWzEyM10pXFxcXGR0aCkoPz1cXFxcYnxbQS1aX10pXCIsJG89XCJcXFxcZCooPzoxU1R8Mk5EfDNSRHwoPyFbMTIzXSlcXFxcZFRIKSg/PVxcXFxifFthLXpfXSlcIixwcz1scytocytObyxVbz1cIig/OlwiK1tUbyxPcixScl0uam9pbihcInxcIikrXCIpXCIrcHMsV289XCIoPzpcIitbdXMreGUrXCI/XCIseGUsT3IsUnIsYm9dLmpvaW4oXCJ8XCIpK1wiKVwiLEZvPVJlZ0V4cCh5cixcImdcIiksTW89UmVnRXhwKHhlLFwiZ1wiKSxicj1SZWdFeHAoU3IrXCIoPz1cIitTcitcIil8XCIrV28rcHMsXCJnXCIpLHFvPVJlZ0V4cChbYnQrXCI/XCIraXMrXCIrXCIrZnMrXCIoPz1cIitbZXMsYnQsXCIkXCJdLmpvaW4oXCJ8XCIpK1wiKVwiLERvK1wiK1wiK2NzK1wiKD89XCIrW2VzLGJ0K29zLFwiJFwiXS5qb2luKFwifFwiKStcIilcIixidCtcIj9cIitvcytcIitcIitmcyxidCtcIitcIitjcywkbyxIbyxycyxVb10uam9pbihcInxcIiksXCJnXCIpLEJvPVJlZ0V4cChcIltcIithcytJZStRaStucytcIl1cIiksR289L1thLXpdW0EtWl18W0EtWl17Mn1bYS16XXxbMC05XVthLXpBLVpdfFthLXpBLVpdWzAtOV18W15hLXpBLVowLTkgXS8sem89W1wiQXJyYXlcIixcIkJ1ZmZlclwiLFwiRGF0YVZpZXdcIixcIkRhdGVcIixcIkVycm9yXCIsXCJGbG9hdDMyQXJyYXlcIixcIkZsb2F0NjRBcnJheVwiLFwiRnVuY3Rpb25cIixcIkludDhBcnJheVwiLFwiSW50MTZBcnJheVwiLFwiSW50MzJBcnJheVwiLFwiTWFwXCIsXCJNYXRoXCIsXCJPYmplY3RcIixcIlByb21pc2VcIixcIlJlZ0V4cFwiLFwiU2V0XCIsXCJTdHJpbmdcIixcIlN5bWJvbFwiLFwiVHlwZUVycm9yXCIsXCJVaW50OEFycmF5XCIsXCJVaW50OENsYW1wZWRBcnJheVwiLFwiVWludDE2QXJyYXlcIixcIlVpbnQzMkFycmF5XCIsXCJXZWFrTWFwXCIsXCJfXCIsXCJjbGVhclRpbWVvdXRcIixcImlzRmluaXRlXCIsXCJwYXJzZUludFwiLFwic2V0VGltZW91dFwiXSxLbz0tMSxCPXt9O0JbZ3JdPUJbdnJdPUJbX3JdPUJbbXJdPUJbd3JdPUJbUHJdPUJbQXJdPUJbQ3JdPUJbSXJdPSEwLEJbT3RdPUJbbWVdPUJba3RdPUJbWXRdPUJbUnRdPUJbWnRdPUJbd2VdPUJbUGVdPUJbeW5dPUJbSnRdPUJbcW5dPUJbWHRdPUJbU25dPUJbUXRdPUJbVnRdPSExO3ZhciBxPXt9O3FbT3RdPXFbbWVdPXFba3RdPXFbUnRdPXFbWXRdPXFbWnRdPXFbZ3JdPXFbdnJdPXFbX3JdPXFbbXJdPXFbd3JdPXFbeW5dPXFbSnRdPXFbcW5dPXFbWHRdPXFbU25dPXFbUXRdPXFbQWVdPXFbUHJdPXFbQXJdPXFbQ3JdPXFbSXJdPSEwLHFbd2VdPXFbUGVdPXFbVnRdPSExO3ZhciBZbz17XFx1MDBDMDpcIkFcIixcXHUwMEMxOlwiQVwiLFxcdTAwQzI6XCJBXCIsXFx1MDBDMzpcIkFcIixcXHUwMEM0OlwiQVwiLFxcdTAwQzU6XCJBXCIsXFx1MDBFMDpcImFcIixcXHUwMEUxOlwiYVwiLFxcdTAwRTI6XCJhXCIsXFx1MDBFMzpcImFcIixcXHUwMEU0OlwiYVwiLFxcdTAwRTU6XCJhXCIsXFx1MDBDNzpcIkNcIixcXHUwMEU3OlwiY1wiLFxcdTAwRDA6XCJEXCIsXFx1MDBGMDpcImRcIixcXHUwMEM4OlwiRVwiLFxcdTAwQzk6XCJFXCIsXFx1MDBDQTpcIkVcIixcXHUwMENCOlwiRVwiLFxcdTAwRTg6XCJlXCIsXFx1MDBFOTpcImVcIixcXHUwMEVBOlwiZVwiLFxcdTAwRUI6XCJlXCIsXFx1MDBDQzpcIklcIixcXHUwMENEOlwiSVwiLFxcdTAwQ0U6XCJJXCIsXFx1MDBDRjpcIklcIixcXHUwMEVDOlwiaVwiLFxcdTAwRUQ6XCJpXCIsXFx1MDBFRTpcImlcIixcXHUwMEVGOlwiaVwiLFxcdTAwRDE6XCJOXCIsXFx1MDBGMTpcIm5cIixcXHUwMEQyOlwiT1wiLFxcdTAwRDM6XCJPXCIsXFx1MDBENDpcIk9cIixcXHUwMEQ1OlwiT1wiLFxcdTAwRDY6XCJPXCIsXFx1MDBEODpcIk9cIixcXHUwMEYyOlwib1wiLFxcdTAwRjM6XCJvXCIsXFx1MDBGNDpcIm9cIixcXHUwMEY1Olwib1wiLFxcdTAwRjY6XCJvXCIsXFx1MDBGODpcIm9cIixcXHUwMEQ5OlwiVVwiLFxcdTAwREE6XCJVXCIsXFx1MDBEQjpcIlVcIixcXHUwMERDOlwiVVwiLFxcdTAwRjk6XCJ1XCIsXFx1MDBGQTpcInVcIixcXHUwMEZCOlwidVwiLFxcdTAwRkM6XCJ1XCIsXFx1MDBERDpcIllcIixcXHUwMEZEOlwieVwiLFxcdTAwRkY6XCJ5XCIsXFx1MDBDNjpcIkFlXCIsXFx1MDBFNjpcImFlXCIsXFx1MDBERTpcIlRoXCIsXFx1MDBGRTpcInRoXCIsXFx1MDBERjpcInNzXCIsXFx1MDEwMDpcIkFcIixcXHUwMTAyOlwiQVwiLFxcdTAxMDQ6XCJBXCIsXFx1MDEwMTpcImFcIixcXHUwMTAzOlwiYVwiLFxcdTAxMDU6XCJhXCIsXFx1MDEwNjpcIkNcIixcXHUwMTA4OlwiQ1wiLFxcdTAxMEE6XCJDXCIsXFx1MDEwQzpcIkNcIixcXHUwMTA3OlwiY1wiLFxcdTAxMDk6XCJjXCIsXFx1MDEwQjpcImNcIixcXHUwMTBEOlwiY1wiLFxcdTAxMEU6XCJEXCIsXFx1MDExMDpcIkRcIixcXHUwMTBGOlwiZFwiLFxcdTAxMTE6XCJkXCIsXFx1MDExMjpcIkVcIixcXHUwMTE0OlwiRVwiLFxcdTAxMTY6XCJFXCIsXFx1MDExODpcIkVcIixcXHUwMTFBOlwiRVwiLFxcdTAxMTM6XCJlXCIsXFx1MDExNTpcImVcIixcXHUwMTE3OlwiZVwiLFxcdTAxMTk6XCJlXCIsXFx1MDExQjpcImVcIixcXHUwMTFDOlwiR1wiLFxcdTAxMUU6XCJHXCIsXFx1MDEyMDpcIkdcIixcXHUwMTIyOlwiR1wiLFxcdTAxMUQ6XCJnXCIsXFx1MDExRjpcImdcIixcXHUwMTIxOlwiZ1wiLFxcdTAxMjM6XCJnXCIsXFx1MDEyNDpcIkhcIixcXHUwMTI2OlwiSFwiLFxcdTAxMjU6XCJoXCIsXFx1MDEyNzpcImhcIixcXHUwMTI4OlwiSVwiLFxcdTAxMkE6XCJJXCIsXFx1MDEyQzpcIklcIixcXHUwMTJFOlwiSVwiLFxcdTAxMzA6XCJJXCIsXFx1MDEyOTpcImlcIixcXHUwMTJCOlwiaVwiLFxcdTAxMkQ6XCJpXCIsXFx1MDEyRjpcImlcIixcXHUwMTMxOlwiaVwiLFxcdTAxMzQ6XCJKXCIsXFx1MDEzNTpcImpcIixcXHUwMTM2OlwiS1wiLFxcdTAxMzc6XCJrXCIsXFx1MDEzODpcImtcIixcXHUwMTM5OlwiTFwiLFxcdTAxM0I6XCJMXCIsXFx1MDEzRDpcIkxcIixcXHUwMTNGOlwiTFwiLFxcdTAxNDE6XCJMXCIsXFx1MDEzQTpcImxcIixcXHUwMTNDOlwibFwiLFxcdTAxM0U6XCJsXCIsXFx1MDE0MDpcImxcIixcXHUwMTQyOlwibFwiLFxcdTAxNDM6XCJOXCIsXFx1MDE0NTpcIk5cIixcXHUwMTQ3OlwiTlwiLFxcdTAxNEE6XCJOXCIsXFx1MDE0NDpcIm5cIixcXHUwMTQ2OlwiblwiLFxcdTAxNDg6XCJuXCIsXFx1MDE0QjpcIm5cIixcXHUwMTRDOlwiT1wiLFxcdTAxNEU6XCJPXCIsXFx1MDE1MDpcIk9cIixcXHUwMTREOlwib1wiLFxcdTAxNEY6XCJvXCIsXFx1MDE1MTpcIm9cIixcXHUwMTU0OlwiUlwiLFxcdTAxNTY6XCJSXCIsXFx1MDE1ODpcIlJcIixcXHUwMTU1OlwiclwiLFxcdTAxNTc6XCJyXCIsXFx1MDE1OTpcInJcIixcXHUwMTVBOlwiU1wiLFxcdTAxNUM6XCJTXCIsXFx1MDE1RTpcIlNcIixcXHUwMTYwOlwiU1wiLFxcdTAxNUI6XCJzXCIsXFx1MDE1RDpcInNcIixcXHUwMTVGOlwic1wiLFxcdTAxNjE6XCJzXCIsXFx1MDE2MjpcIlRcIixcXHUwMTY0OlwiVFwiLFxcdTAxNjY6XCJUXCIsXFx1MDE2MzpcInRcIixcXHUwMTY1OlwidFwiLFxcdTAxNjc6XCJ0XCIsXFx1MDE2ODpcIlVcIixcXHUwMTZBOlwiVVwiLFxcdTAxNkM6XCJVXCIsXFx1MDE2RTpcIlVcIixcXHUwMTcwOlwiVVwiLFxcdTAxNzI6XCJVXCIsXFx1MDE2OTpcInVcIixcXHUwMTZCOlwidVwiLFxcdTAxNkQ6XCJ1XCIsXFx1MDE2RjpcInVcIixcXHUwMTcxOlwidVwiLFxcdTAxNzM6XCJ1XCIsXFx1MDE3NDpcIldcIixcXHUwMTc1Olwid1wiLFxcdTAxNzY6XCJZXCIsXFx1MDE3NzpcInlcIixcXHUwMTc4OlwiWVwiLFxcdTAxNzk6XCJaXCIsXFx1MDE3QjpcIlpcIixcXHUwMTdEOlwiWlwiLFxcdTAxN0E6XCJ6XCIsXFx1MDE3QzpcInpcIixcXHUwMTdFOlwielwiLFxcdTAxMzI6XCJJSlwiLFxcdTAxMzM6XCJpalwiLFxcdTAxNTI6XCJPZVwiLFxcdTAxNTM6XCJvZVwiLFxcdTAxNDk6XCInblwiLFxcdTAxN0Y6XCJzXCJ9LFpvPXtcIiZcIjpcIiZhbXA7XCIsXCI8XCI6XCImbHQ7XCIsXCI+XCI6XCImZ3Q7XCIsJ1wiJzpcIiZxdW90O1wiLFwiJ1wiOlwiJiMzOTtcIn0sSm89e1wiJmFtcDtcIjpcIiZcIixcIiZsdDtcIjpcIjxcIixcIiZndDtcIjpcIj5cIixcIiZxdW90O1wiOidcIicsXCImIzM5O1wiOlwiJ1wifSxYbz17XCJcXFxcXCI6XCJcXFxcXCIsXCInXCI6XCInXCIsXCJcXG5cIjpcIm5cIixcIlxcclwiOlwiclwiLFwiXFx1MjAyOFwiOlwidTIwMjhcIixcIlxcdTIwMjlcIjpcInUyMDI5XCJ9LFFvPXBhcnNlRmxvYXQsVm89cGFyc2VJbnQsZHM9dHlwZW9mIGdlPT1cIm9iamVjdFwiJiZnZSYmZ2UuT2JqZWN0PT09T2JqZWN0JiZnZSxrbz10eXBlb2Ygc2VsZj09XCJvYmplY3RcIiYmc2VsZiYmc2VsZi5PYmplY3Q9PT1PYmplY3QmJnNlbGYsaz1kc3x8a298fEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSxUcj11JiYhdS5ub2RlVHlwZSYmdSxsdD1UciYmITAmJkEmJiFBLm5vZGVUeXBlJiZBLGdzPWx0JiZsdC5leHBvcnRzPT09VHIsTHI9Z3MmJmRzLnByb2Nlc3MsX249ZnVuY3Rpb24oKXt0cnl7dmFyIGg9bHQmJmx0LnJlcXVpcmUmJmx0LnJlcXVpcmUoXCJ1dGlsXCIpLnR5cGVzO3JldHVybiBofHxMciYmTHIuYmluZGluZyYmTHIuYmluZGluZyhcInV0aWxcIil9Y2F0Y2h7fX0oKSx2cz1fbiYmX24uaXNBcnJheUJ1ZmZlcixfcz1fbiYmX24uaXNEYXRlLG1zPV9uJiZfbi5pc01hcCx3cz1fbiYmX24uaXNSZWdFeHAsUHM9X24mJl9uLmlzU2V0LEFzPV9uJiZfbi5pc1R5cGVkQXJyYXk7ZnVuY3Rpb24gY24oaCxnLGQpe3N3aXRjaChkLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBoLmNhbGwoZyk7Y2FzZSAxOnJldHVybiBoLmNhbGwoZyxkWzBdKTtjYXNlIDI6cmV0dXJuIGguY2FsbChnLGRbMF0sZFsxXSk7Y2FzZSAzOnJldHVybiBoLmNhbGwoZyxkWzBdLGRbMV0sZFsyXSl9cmV0dXJuIGguYXBwbHkoZyxkKX1mdW5jdGlvbiBqbyhoLGcsZCxDKXtmb3IodmFyIFM9LTEsVT1oPT1udWxsPzA6aC5sZW5ndGg7KytTPFU7KXt2YXIgWD1oW1NdO2coQyxYLGQoWCksaCl9cmV0dXJuIEN9ZnVuY3Rpb24gbW4oaCxnKXtmb3IodmFyIGQ9LTEsQz1oPT1udWxsPzA6aC5sZW5ndGg7KytkPEMmJmcoaFtkXSxkLGgpIT09ITE7KTtyZXR1cm4gaH1mdW5jdGlvbiBuZihoLGcpe2Zvcih2YXIgZD1oPT1udWxsPzA6aC5sZW5ndGg7ZC0tJiZnKGhbZF0sZCxoKSE9PSExOyk7cmV0dXJuIGh9ZnVuY3Rpb24gQ3MoaCxnKXtmb3IodmFyIGQ9LTEsQz1oPT1udWxsPzA6aC5sZW5ndGg7KytkPEM7KWlmKCFnKGhbZF0sZCxoKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBqbihoLGcpe2Zvcih2YXIgZD0tMSxDPWg9PW51bGw/MDpoLmxlbmd0aCxTPTAsVT1bXTsrK2Q8Qzspe3ZhciBYPWhbZF07ZyhYLGQsaCkmJihVW1MrK109WCl9cmV0dXJuIFV9ZnVuY3Rpb24gRWUoaCxnKXt2YXIgZD1oPT1udWxsPzA6aC5sZW5ndGg7cmV0dXJuISFkJiZUdChoLGcsMCk+LTF9ZnVuY3Rpb24gRHIoaCxnLGQpe2Zvcih2YXIgQz0tMSxTPWg9PW51bGw/MDpoLmxlbmd0aDsrK0M8UzspaWYoZChnLGhbQ10pKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIEcoaCxnKXtmb3IodmFyIGQ9LTEsQz1oPT1udWxsPzA6aC5sZW5ndGgsUz1BcnJheShDKTsrK2Q8QzspU1tkXT1nKGhbZF0sZCxoKTtyZXR1cm4gU31mdW5jdGlvbiBudChoLGcpe2Zvcih2YXIgZD0tMSxDPWcubGVuZ3RoLFM9aC5sZW5ndGg7KytkPEM7KWhbUytkXT1nW2RdO3JldHVybiBofWZ1bmN0aW9uIE5yKGgsZyxkLEMpe3ZhciBTPS0xLFU9aD09bnVsbD8wOmgubGVuZ3RoO2ZvcihDJiZVJiYoZD1oWysrU10pOysrUzxVOylkPWcoZCxoW1NdLFMsaCk7cmV0dXJuIGR9ZnVuY3Rpb24gdGYoaCxnLGQsQyl7dmFyIFM9aD09bnVsbD8wOmgubGVuZ3RoO2ZvcihDJiZTJiYoZD1oWy0tU10pO1MtLTspZD1nKGQsaFtTXSxTLGgpO3JldHVybiBkfWZ1bmN0aW9uIEhyKGgsZyl7Zm9yKHZhciBkPS0xLEM9aD09bnVsbD8wOmgubGVuZ3RoOysrZDxDOylpZihnKGhbZF0sZCxoKSlyZXR1cm4hMDtyZXR1cm4hMX12YXIgZWY9JHIoXCJsZW5ndGhcIik7ZnVuY3Rpb24gcmYoaCl7cmV0dXJuIGguc3BsaXQoXCJcIil9ZnVuY3Rpb24gc2YoaCl7cmV0dXJuIGgubWF0Y2goaG8pfHxbXX1mdW5jdGlvbiBJcyhoLGcsZCl7dmFyIEM7cmV0dXJuIGQoaCxmdW5jdGlvbihTLFUsWCl7aWYoZyhTLFUsWCkpcmV0dXJuIEM9VSwhMX0pLEN9ZnVuY3Rpb24geWUoaCxnLGQsQyl7Zm9yKHZhciBTPWgubGVuZ3RoLFU9ZCsoQz8xOi0xKTtDP1UtLTorK1U8UzspaWYoZyhoW1VdLFUsaCkpcmV0dXJuIFU7cmV0dXJuLTF9ZnVuY3Rpb24gVHQoaCxnLGQpe3JldHVybiBnPT09Zz9fZihoLGcsZCk6eWUoaCx4cyxkKX1mdW5jdGlvbiB1ZihoLGcsZCxDKXtmb3IodmFyIFM9ZC0xLFU9aC5sZW5ndGg7KytTPFU7KWlmKEMoaFtTXSxnKSlyZXR1cm4gUztyZXR1cm4tMX1mdW5jdGlvbiB4cyhoKXtyZXR1cm4gaCE9PWh9ZnVuY3Rpb24gRXMoaCxnKXt2YXIgZD1oPT1udWxsPzA6aC5sZW5ndGg7cmV0dXJuIGQ/V3IoaCxnKS9kOl9lfWZ1bmN0aW9uICRyKGgpe3JldHVybiBmdW5jdGlvbihnKXtyZXR1cm4gZz09bnVsbD9pOmdbaF19fWZ1bmN0aW9uIFVyKGgpe3JldHVybiBmdW5jdGlvbihnKXtyZXR1cm4gaD09bnVsbD9pOmhbZ119fWZ1bmN0aW9uIHlzKGgsZyxkLEMsUyl7cmV0dXJuIFMoaCxmdW5jdGlvbihVLFgsTSl7ZD1DPyhDPSExLFUpOmcoZCxVLFgsTSl9KSxkfWZ1bmN0aW9uIGFmKGgsZyl7dmFyIGQ9aC5sZW5ndGg7Zm9yKGguc29ydChnKTtkLS07KWhbZF09aFtkXS52YWx1ZTtyZXR1cm4gaH1mdW5jdGlvbiBXcihoLGcpe2Zvcih2YXIgZCxDPS0xLFM9aC5sZW5ndGg7KytDPFM7KXt2YXIgVT1nKGhbQ10pO1UhPT1pJiYoZD1kPT09aT9VOmQrVSl9cmV0dXJuIGR9ZnVuY3Rpb24gRnIoaCxnKXtmb3IodmFyIGQ9LTEsQz1BcnJheShoKTsrK2Q8aDspQ1tkXT1nKGQpO3JldHVybiBDfWZ1bmN0aW9uIG9mKGgsZyl7cmV0dXJuIEcoZyxmdW5jdGlvbihkKXtyZXR1cm5bZCxoW2RdXX0pfWZ1bmN0aW9uIFNzKGgpe3JldHVybiBoJiZoLnNsaWNlKDAsVHMoaCkrMSkucmVwbGFjZShFcixcIlwiKX1mdW5jdGlvbiBobihoKXtyZXR1cm4gZnVuY3Rpb24oZyl7cmV0dXJuIGgoZyl9fWZ1bmN0aW9uIE1yKGgsZyl7cmV0dXJuIEcoZyxmdW5jdGlvbihkKXtyZXR1cm4gaFtkXX0pfWZ1bmN0aW9uIGp0KGgsZyl7cmV0dXJuIGguaGFzKGcpfWZ1bmN0aW9uIE9zKGgsZyl7Zm9yKHZhciBkPS0xLEM9aC5sZW5ndGg7KytkPEMmJlR0KGcsaFtkXSwwKT4tMTspO3JldHVybiBkfWZ1bmN0aW9uIFJzKGgsZyl7Zm9yKHZhciBkPWgubGVuZ3RoO2QtLSYmVHQoZyxoW2RdLDApPi0xOyk7cmV0dXJuIGR9ZnVuY3Rpb24gZmYoaCxnKXtmb3IodmFyIGQ9aC5sZW5ndGgsQz0wO2QtLTspaFtkXT09PWcmJisrQztyZXR1cm4gQ312YXIgY2Y9VXIoWW8pLGhmPVVyKFpvKTtmdW5jdGlvbiBsZihoKXtyZXR1cm5cIlxcXFxcIitYb1toXX1mdW5jdGlvbiBwZihoLGcpe3JldHVybiBoPT1udWxsP2k6aFtnXX1mdW5jdGlvbiBMdChoKXtyZXR1cm4gQm8udGVzdChoKX1mdW5jdGlvbiBkZihoKXtyZXR1cm4gR28udGVzdChoKX1mdW5jdGlvbiBnZihoKXtmb3IodmFyIGcsZD1bXTshKGc9aC5uZXh0KCkpLmRvbmU7KWQucHVzaChnLnZhbHVlKTtyZXR1cm4gZH1mdW5jdGlvbiBxcihoKXt2YXIgZz0tMSxkPUFycmF5KGguc2l6ZSk7cmV0dXJuIGguZm9yRWFjaChmdW5jdGlvbihDLFMpe2RbKytnXT1bUyxDXX0pLGR9ZnVuY3Rpb24gYnMoaCxnKXtyZXR1cm4gZnVuY3Rpb24oZCl7cmV0dXJuIGgoZyhkKSl9fWZ1bmN0aW9uIHR0KGgsZyl7Zm9yKHZhciBkPS0xLEM9aC5sZW5ndGgsUz0wLFU9W107KytkPEM7KXt2YXIgWD1oW2RdOyhYPT09Z3x8WD09PUl0KSYmKGhbZF09SXQsVVtTKytdPWQpfXJldHVybiBVfWZ1bmN0aW9uIFNlKGgpe3ZhciBnPS0xLGQ9QXJyYXkoaC5zaXplKTtyZXR1cm4gaC5mb3JFYWNoKGZ1bmN0aW9uKEMpe2RbKytnXT1DfSksZH1mdW5jdGlvbiB2ZihoKXt2YXIgZz0tMSxkPUFycmF5KGguc2l6ZSk7cmV0dXJuIGguZm9yRWFjaChmdW5jdGlvbihDKXtkWysrZ109W0MsQ119KSxkfWZ1bmN0aW9uIF9mKGgsZyxkKXtmb3IodmFyIEM9ZC0xLFM9aC5sZW5ndGg7KytDPFM7KWlmKGhbQ109PT1nKXJldHVybiBDO3JldHVybi0xfWZ1bmN0aW9uIG1mKGgsZyxkKXtmb3IodmFyIEM9ZCsxO0MtLTspaWYoaFtDXT09PWcpcmV0dXJuIEM7cmV0dXJuIEN9ZnVuY3Rpb24gRHQoaCl7cmV0dXJuIEx0KGgpP1BmKGgpOmVmKGgpfWZ1bmN0aW9uIE9uKGgpe3JldHVybiBMdChoKT9BZihoKTpyZihoKX1mdW5jdGlvbiBUcyhoKXtmb3IodmFyIGc9aC5sZW5ndGg7Zy0tJiZhby50ZXN0KGguY2hhckF0KGcpKTspO3JldHVybiBnfXZhciB3Zj1VcihKbyk7ZnVuY3Rpb24gUGYoaCl7Zm9yKHZhciBnPWJyLmxhc3RJbmRleD0wO2JyLnRlc3QoaCk7KSsrZztyZXR1cm4gZ31mdW5jdGlvbiBBZihoKXtyZXR1cm4gaC5tYXRjaChicil8fFtdfWZ1bmN0aW9uIENmKGgpe3JldHVybiBoLm1hdGNoKHFvKXx8W119dmFyIElmPWZ1bmN0aW9uIGgoZyl7Zz1nPT1udWxsP2s6TnQuZGVmYXVsdHMoay5PYmplY3QoKSxnLE50LnBpY2soayx6bykpO3ZhciBkPWcuQXJyYXksQz1nLkRhdGUsUz1nLkVycm9yLFU9Zy5GdW5jdGlvbixYPWcuTWF0aCxNPWcuT2JqZWN0LEJyPWcuUmVnRXhwLHhmPWcuU3RyaW5nLHduPWcuVHlwZUVycm9yLE9lPWQucHJvdG90eXBlLEVmPVUucHJvdG90eXBlLEh0PU0ucHJvdG90eXBlLFJlPWdbXCJfX2NvcmUtanNfc2hhcmVkX19cIl0sYmU9RWYudG9TdHJpbmcsRj1IdC5oYXNPd25Qcm9wZXJ0eSx5Zj0wLExzPWZ1bmN0aW9uKCl7dmFyIG49L1teLl0rJC8uZXhlYyhSZSYmUmUua2V5cyYmUmUua2V5cy5JRV9QUk9UT3x8XCJcIik7cmV0dXJuIG4/XCJTeW1ib2woc3JjKV8xLlwiK246XCJcIn0oKSxUZT1IdC50b1N0cmluZyxTZj1iZS5jYWxsKE0pLE9mPWsuXyxSZj1CcihcIl5cIitiZS5jYWxsKEYpLnJlcGxhY2UoeHIsXCJcXFxcJCZcIikucmVwbGFjZSgvaGFzT3duUHJvcGVydHl8KGZ1bmN0aW9uKS4qPyg/PVxcXFxcXCgpfCBmb3IgLis/KD89XFxcXFxcXSkvZyxcIiQxLio/XCIpK1wiJFwiKSxMZT1ncz9nLkJ1ZmZlcjppLGV0PWcuU3ltYm9sLERlPWcuVWludDhBcnJheSxEcz1MZT9MZS5hbGxvY1Vuc2FmZTppLE5lPWJzKE0uZ2V0UHJvdG90eXBlT2YsTSksTnM9TS5jcmVhdGUsSHM9SHQucHJvcGVydHlJc0VudW1lcmFibGUsSGU9T2Uuc3BsaWNlLCRzPWV0P2V0LmlzQ29uY2F0U3ByZWFkYWJsZTppLG5lPWV0P2V0Lml0ZXJhdG9yOmkscHQ9ZXQ/ZXQudG9TdHJpbmdUYWc6aSwkZT1mdW5jdGlvbigpe3RyeXt2YXIgbj1tdChNLFwiZGVmaW5lUHJvcGVydHlcIik7cmV0dXJuIG4oe30sXCJcIix7fSksbn1jYXRjaHt9fSgpLGJmPWcuY2xlYXJUaW1lb3V0IT09ay5jbGVhclRpbWVvdXQmJmcuY2xlYXJUaW1lb3V0LFRmPUMmJkMubm93IT09ay5EYXRlLm5vdyYmQy5ub3csTGY9Zy5zZXRUaW1lb3V0IT09ay5zZXRUaW1lb3V0JiZnLnNldFRpbWVvdXQsVWU9WC5jZWlsLFdlPVguZmxvb3IsR3I9TS5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsRGY9TGU/TGUuaXNCdWZmZXI6aSxVcz1nLmlzRmluaXRlLE5mPU9lLmpvaW4sSGY9YnMoTS5rZXlzLE0pLFE9WC5tYXgsbm49WC5taW4sJGY9Qy5ub3csVWY9Zy5wYXJzZUludCxXcz1YLnJhbmRvbSxXZj1PZS5yZXZlcnNlLHpyPW10KGcsXCJEYXRhVmlld1wiKSx0ZT1tdChnLFwiTWFwXCIpLEtyPW10KGcsXCJQcm9taXNlXCIpLCR0PW10KGcsXCJTZXRcIiksZWU9bXQoZyxcIldlYWtNYXBcIikscmU9bXQoTSxcImNyZWF0ZVwiKSxGZT1lZSYmbmV3IGVlLFV0PXt9LEZmPXd0KHpyKSxNZj13dCh0ZSkscWY9d3QoS3IpLEJmPXd0KCR0KSxHZj13dChlZSksTWU9ZXQ/ZXQucHJvdG90eXBlOmksaWU9TWU/TWUudmFsdWVPZjppLEZzPU1lP01lLnRvU3RyaW5nOmk7ZnVuY3Rpb24gYShuKXtpZihZKG4pJiYhTyhuKSYmIShuIGluc3RhbmNlb2YgSCkpe2lmKG4gaW5zdGFuY2VvZiBQbilyZXR1cm4gbjtpZihGLmNhbGwobixcIl9fd3JhcHBlZF9fXCIpKXJldHVybiBNdShuKX1yZXR1cm4gbmV3IFBuKG4pfXZhciBXdD1mdW5jdGlvbigpe2Z1bmN0aW9uIG4oKXt9cmV0dXJuIGZ1bmN0aW9uKHQpe2lmKCFLKHQpKXJldHVybnt9O2lmKE5zKXJldHVybiBOcyh0KTtuLnByb3RvdHlwZT10O3ZhciBlPW5ldyBuO3JldHVybiBuLnByb3RvdHlwZT1pLGV9fSgpO2Z1bmN0aW9uIHFlKCl7fWZ1bmN0aW9uIFBuKG4sdCl7dGhpcy5fX3dyYXBwZWRfXz1uLHRoaXMuX19hY3Rpb25zX189W10sdGhpcy5fX2NoYWluX189ISF0LHRoaXMuX19pbmRleF9fPTAsdGhpcy5fX3ZhbHVlc19fPWl9YS50ZW1wbGF0ZVNldHRpbmdzPXtlc2NhcGU6dG8sZXZhbHVhdGU6ZW8saW50ZXJwb2xhdGU6SmksdmFyaWFibGU6XCJcIixpbXBvcnRzOntfOmF9fSxhLnByb3RvdHlwZT1xZS5wcm90b3R5cGUsYS5wcm90b3R5cGUuY29uc3RydWN0b3I9YSxQbi5wcm90b3R5cGU9V3QocWUucHJvdG90eXBlKSxQbi5wcm90b3R5cGUuY29uc3RydWN0b3I9UG47ZnVuY3Rpb24gSChuKXt0aGlzLl9fd3JhcHBlZF9fPW4sdGhpcy5fX2FjdGlvbnNfXz1bXSx0aGlzLl9fZGlyX189MSx0aGlzLl9fZmlsdGVyZWRfXz0hMSx0aGlzLl9faXRlcmF0ZWVzX189W10sdGhpcy5fX3Rha2VDb3VudF9fPUhuLHRoaXMuX192aWV3c19fPVtdfWZ1bmN0aW9uIHpmKCl7dmFyIG49bmV3IEgodGhpcy5fX3dyYXBwZWRfXyk7cmV0dXJuIG4uX19hY3Rpb25zX189dW4odGhpcy5fX2FjdGlvbnNfXyksbi5fX2Rpcl9fPXRoaXMuX19kaXJfXyxuLl9fZmlsdGVyZWRfXz10aGlzLl9fZmlsdGVyZWRfXyxuLl9faXRlcmF0ZWVzX189dW4odGhpcy5fX2l0ZXJhdGVlc19fKSxuLl9fdGFrZUNvdW50X189dGhpcy5fX3Rha2VDb3VudF9fLG4uX192aWV3c19fPXVuKHRoaXMuX192aWV3c19fKSxufWZ1bmN0aW9uIEtmKCl7aWYodGhpcy5fX2ZpbHRlcmVkX18pe3ZhciBuPW5ldyBIKHRoaXMpO24uX19kaXJfXz0tMSxuLl9fZmlsdGVyZWRfXz0hMH1lbHNlIG49dGhpcy5jbG9uZSgpLG4uX19kaXJfXyo9LTE7cmV0dXJuIG59ZnVuY3Rpb24gWWYoKXt2YXIgbj10aGlzLl9fd3JhcHBlZF9fLnZhbHVlKCksdD10aGlzLl9fZGlyX18sZT1PKG4pLHI9dDwwLHM9ZT9uLmxlbmd0aDowLG89aWgoMCxzLHRoaXMuX192aWV3c19fKSxmPW8uc3RhcnQsYz1vLmVuZCxsPWMtZix2PXI/YzpmLTEsXz10aGlzLl9faXRlcmF0ZWVzX18sbT1fLmxlbmd0aCxQPTAsST1ubihsLHRoaXMuX190YWtlQ291bnRfXyk7aWYoIWV8fCFyJiZzPT1sJiZJPT1sKXJldHVybiBmdShuLHRoaXMuX19hY3Rpb25zX18pO3ZhciBFPVtdO246Zm9yKDtsLS0mJlA8STspe3YrPXQ7Zm9yKHZhciBUPS0xLHk9blt2XTsrK1Q8bTspe3ZhciBOPV9bVF0sJD1OLml0ZXJhdGVlLGRuPU4udHlwZSxzbj0kKHkpO2lmKGRuPT1XYSl5PXNuO2Vsc2UgaWYoIXNuKXtpZihkbj09R2kpY29udGludWUgbjticmVhayBufX1FW1ArK109eX1yZXR1cm4gRX1ILnByb3RvdHlwZT1XdChxZS5wcm90b3R5cGUpLEgucHJvdG90eXBlLmNvbnN0cnVjdG9yPUg7ZnVuY3Rpb24gZHQobil7dmFyIHQ9LTEsZT1uPT1udWxsPzA6bi5sZW5ndGg7Zm9yKHRoaXMuY2xlYXIoKTsrK3Q8ZTspe3ZhciByPW5bdF07dGhpcy5zZXQoclswXSxyWzFdKX19ZnVuY3Rpb24gWmYoKXt0aGlzLl9fZGF0YV9fPXJlP3JlKG51bGwpOnt9LHRoaXMuc2l6ZT0wfWZ1bmN0aW9uIEpmKG4pe3ZhciB0PXRoaXMuaGFzKG4pJiZkZWxldGUgdGhpcy5fX2RhdGFfX1tuXTtyZXR1cm4gdGhpcy5zaXplLT10PzE6MCx0fWZ1bmN0aW9uIFhmKG4pe3ZhciB0PXRoaXMuX19kYXRhX187aWYocmUpe3ZhciBlPXRbbl07cmV0dXJuIGU9PT16dD9pOmV9cmV0dXJuIEYuY2FsbCh0LG4pP3Rbbl06aX1mdW5jdGlvbiBRZihuKXt2YXIgdD10aGlzLl9fZGF0YV9fO3JldHVybiByZT90W25dIT09aTpGLmNhbGwodCxuKX1mdW5jdGlvbiBWZihuLHQpe3ZhciBlPXRoaXMuX19kYXRhX187cmV0dXJuIHRoaXMuc2l6ZSs9dGhpcy5oYXMobik/MDoxLGVbbl09cmUmJnQ9PT1pP3p0OnQsdGhpc31kdC5wcm90b3R5cGUuY2xlYXI9WmYsZHQucHJvdG90eXBlLmRlbGV0ZT1KZixkdC5wcm90b3R5cGUuZ2V0PVhmLGR0LnByb3RvdHlwZS5oYXM9UWYsZHQucHJvdG90eXBlLnNldD1WZjtmdW5jdGlvbiBCbihuKXt2YXIgdD0tMSxlPW49PW51bGw/MDpuLmxlbmd0aDtmb3IodGhpcy5jbGVhcigpOysrdDxlOyl7dmFyIHI9blt0XTt0aGlzLnNldChyWzBdLHJbMV0pfX1mdW5jdGlvbiBrZigpe3RoaXMuX19kYXRhX189W10sdGhpcy5zaXplPTB9ZnVuY3Rpb24gamYobil7dmFyIHQ9dGhpcy5fX2RhdGFfXyxlPUJlKHQsbik7aWYoZTwwKXJldHVybiExO3ZhciByPXQubGVuZ3RoLTE7cmV0dXJuIGU9PXI/dC5wb3AoKTpIZS5jYWxsKHQsZSwxKSwtLXRoaXMuc2l6ZSwhMH1mdW5jdGlvbiBuYyhuKXt2YXIgdD10aGlzLl9fZGF0YV9fLGU9QmUodCxuKTtyZXR1cm4gZTwwP2k6dFtlXVsxXX1mdW5jdGlvbiB0YyhuKXtyZXR1cm4gQmUodGhpcy5fX2RhdGFfXyxuKT4tMX1mdW5jdGlvbiBlYyhuLHQpe3ZhciBlPXRoaXMuX19kYXRhX18scj1CZShlLG4pO3JldHVybiByPDA/KCsrdGhpcy5zaXplLGUucHVzaChbbix0XSkpOmVbcl1bMV09dCx0aGlzfUJuLnByb3RvdHlwZS5jbGVhcj1rZixCbi5wcm90b3R5cGUuZGVsZXRlPWpmLEJuLnByb3RvdHlwZS5nZXQ9bmMsQm4ucHJvdG90eXBlLmhhcz10YyxCbi5wcm90b3R5cGUuc2V0PWVjO2Z1bmN0aW9uIEduKG4pe3ZhciB0PS0xLGU9bj09bnVsbD8wOm4ubGVuZ3RoO2Zvcih0aGlzLmNsZWFyKCk7Kyt0PGU7KXt2YXIgcj1uW3RdO3RoaXMuc2V0KHJbMF0sclsxXSl9fWZ1bmN0aW9uIHJjKCl7dGhpcy5zaXplPTAsdGhpcy5fX2RhdGFfXz17aGFzaDpuZXcgZHQsbWFwOm5ldyh0ZXx8Qm4pLHN0cmluZzpuZXcgZHR9fWZ1bmN0aW9uIGljKG4pe3ZhciB0PW5yKHRoaXMsbikuZGVsZXRlKG4pO3JldHVybiB0aGlzLnNpemUtPXQ/MTowLHR9ZnVuY3Rpb24gc2Mobil7cmV0dXJuIG5yKHRoaXMsbikuZ2V0KG4pfWZ1bmN0aW9uIHVjKG4pe3JldHVybiBucih0aGlzLG4pLmhhcyhuKX1mdW5jdGlvbiBhYyhuLHQpe3ZhciBlPW5yKHRoaXMsbikscj1lLnNpemU7cmV0dXJuIGUuc2V0KG4sdCksdGhpcy5zaXplKz1lLnNpemU9PXI/MDoxLHRoaXN9R24ucHJvdG90eXBlLmNsZWFyPXJjLEduLnByb3RvdHlwZS5kZWxldGU9aWMsR24ucHJvdG90eXBlLmdldD1zYyxHbi5wcm90b3R5cGUuaGFzPXVjLEduLnByb3RvdHlwZS5zZXQ9YWM7ZnVuY3Rpb24gZ3Qobil7dmFyIHQ9LTEsZT1uPT1udWxsPzA6bi5sZW5ndGg7Zm9yKHRoaXMuX19kYXRhX189bmV3IEduOysrdDxlOyl0aGlzLmFkZChuW3RdKX1mdW5jdGlvbiBvYyhuKXtyZXR1cm4gdGhpcy5fX2RhdGFfXy5zZXQobix6dCksdGhpc31mdW5jdGlvbiBmYyhuKXtyZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXMobil9Z3QucHJvdG90eXBlLmFkZD1ndC5wcm90b3R5cGUucHVzaD1vYyxndC5wcm90b3R5cGUuaGFzPWZjO2Z1bmN0aW9uIFJuKG4pe3ZhciB0PXRoaXMuX19kYXRhX189bmV3IEJuKG4pO3RoaXMuc2l6ZT10LnNpemV9ZnVuY3Rpb24gY2MoKXt0aGlzLl9fZGF0YV9fPW5ldyBCbix0aGlzLnNpemU9MH1mdW5jdGlvbiBoYyhuKXt2YXIgdD10aGlzLl9fZGF0YV9fLGU9dC5kZWxldGUobik7cmV0dXJuIHRoaXMuc2l6ZT10LnNpemUsZX1mdW5jdGlvbiBsYyhuKXtyZXR1cm4gdGhpcy5fX2RhdGFfXy5nZXQobil9ZnVuY3Rpb24gcGMobil7cmV0dXJuIHRoaXMuX19kYXRhX18uaGFzKG4pfWZ1bmN0aW9uIGRjKG4sdCl7dmFyIGU9dGhpcy5fX2RhdGFfXztpZihlIGluc3RhbmNlb2YgQm4pe3ZhciByPWUuX19kYXRhX187aWYoIXRlfHxyLmxlbmd0aDx3LTEpcmV0dXJuIHIucHVzaChbbix0XSksdGhpcy5zaXplPSsrZS5zaXplLHRoaXM7ZT10aGlzLl9fZGF0YV9fPW5ldyBHbihyKX1yZXR1cm4gZS5zZXQobix0KSx0aGlzLnNpemU9ZS5zaXplLHRoaXN9Um4ucHJvdG90eXBlLmNsZWFyPWNjLFJuLnByb3RvdHlwZS5kZWxldGU9aGMsUm4ucHJvdG90eXBlLmdldD1sYyxSbi5wcm90b3R5cGUuaGFzPXBjLFJuLnByb3RvdHlwZS5zZXQ9ZGM7ZnVuY3Rpb24gTXMobix0KXt2YXIgZT1PKG4pLHI9IWUmJlB0KG4pLHM9IWUmJiFyJiZhdChuKSxvPSFlJiYhciYmIXMmJkJ0KG4pLGY9ZXx8cnx8c3x8byxjPWY/RnIobi5sZW5ndGgseGYpOltdLGw9Yy5sZW5ndGg7Zm9yKHZhciB2IGluIG4pKHR8fEYuY2FsbChuLHYpKSYmIShmJiYodj09XCJsZW5ndGhcInx8cyYmKHY9PVwib2Zmc2V0XCJ8fHY9PVwicGFyZW50XCIpfHxvJiYodj09XCJidWZmZXJcInx8dj09XCJieXRlTGVuZ3RoXCJ8fHY9PVwiYnl0ZU9mZnNldFwiKXx8Wm4odixsKSkpJiZjLnB1c2godik7cmV0dXJuIGN9ZnVuY3Rpb24gcXMobil7dmFyIHQ9bi5sZW5ndGg7cmV0dXJuIHQ/bltlaSgwLHQtMSldOml9ZnVuY3Rpb24gZ2Mobix0KXtyZXR1cm4gdHIodW4obiksdnQodCwwLG4ubGVuZ3RoKSl9ZnVuY3Rpb24gdmMobil7cmV0dXJuIHRyKHVuKG4pKX1mdW5jdGlvbiBZcihuLHQsZSl7KGUhPT1pJiYhYm4oblt0XSxlKXx8ZT09PWkmJiEodCBpbiBuKSkmJnpuKG4sdCxlKX1mdW5jdGlvbiBzZShuLHQsZSl7dmFyIHI9blt0XTsoIShGLmNhbGwobix0KSYmYm4ocixlKSl8fGU9PT1pJiYhKHQgaW4gbikpJiZ6bihuLHQsZSl9ZnVuY3Rpb24gQmUobix0KXtmb3IodmFyIGU9bi5sZW5ndGg7ZS0tOylpZihibihuW2VdWzBdLHQpKXJldHVybiBlO3JldHVybi0xfWZ1bmN0aW9uIF9jKG4sdCxlLHIpe3JldHVybiBydChuLGZ1bmN0aW9uKHMsbyxmKXt0KHIscyxlKHMpLGYpfSkscn1mdW5jdGlvbiBCcyhuLHQpe3JldHVybiBuJiZVbih0LFYodCksbil9ZnVuY3Rpb24gbWMobix0KXtyZXR1cm4gbiYmVW4odCxvbih0KSxuKX1mdW5jdGlvbiB6bihuLHQsZSl7dD09XCJfX3Byb3RvX19cIiYmJGU/JGUobix0LHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCx2YWx1ZTplLHdyaXRhYmxlOiEwfSk6blt0XT1lfWZ1bmN0aW9uIFpyKG4sdCl7Zm9yKHZhciBlPS0xLHI9dC5sZW5ndGgscz1kKHIpLG89bj09bnVsbDsrK2U8cjspc1tlXT1vP2k6U2kobix0W2VdKTtyZXR1cm4gc31mdW5jdGlvbiB2dChuLHQsZSl7cmV0dXJuIG49PT1uJiYoZSE9PWkmJihuPW48PWU/bjplKSx0IT09aSYmKG49bj49dD9uOnQpKSxufWZ1bmN0aW9uIEFuKG4sdCxlLHIscyxvKXt2YXIgZixjPXQmTG4sbD10JkZuLHY9dCZ4dDtpZihlJiYoZj1zP2UobixyLHMsbyk6ZShuKSksZiE9PWkpcmV0dXJuIGY7aWYoIUsobikpcmV0dXJuIG47dmFyIF89TyhuKTtpZihfKXtpZihmPXVoKG4pLCFjKXJldHVybiB1bihuLGYpfWVsc2V7dmFyIG09dG4obiksUD1tPT1QZXx8bT09emk7aWYoYXQobikpcmV0dXJuIGx1KG4sYyk7aWYobT09cW58fG09PU90fHxQJiYhcyl7aWYoZj1sfHxQP3t9OlR1KG4pLCFjKXJldHVybiBsP1hjKG4sbWMoZixuKSk6SmMobixCcyhmLG4pKX1lbHNle2lmKCFxW21dKXJldHVybiBzP246e307Zj1haChuLG0sYyl9fW98fChvPW5ldyBSbik7dmFyIEk9by5nZXQobik7aWYoSSlyZXR1cm4gSTtvLnNldChuLGYpLHVhKG4pP24uZm9yRWFjaChmdW5jdGlvbih5KXtmLmFkZChBbih5LHQsZSx5LG4sbykpfSk6aWEobikmJm4uZm9yRWFjaChmdW5jdGlvbih5LE4pe2Yuc2V0KE4sQW4oeSx0LGUsTixuLG8pKX0pO3ZhciBFPXY/bD9waTpsaTpsP29uOlYsVD1fP2k6RShuKTtyZXR1cm4gbW4oVHx8bixmdW5jdGlvbih5LE4pe1QmJihOPXkseT1uW05dKSxzZShmLE4sQW4oeSx0LGUsTixuLG8pKX0pLGZ9ZnVuY3Rpb24gd2Mobil7dmFyIHQ9VihuKTtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIEdzKGUsbix0KX19ZnVuY3Rpb24gR3Mobix0LGUpe3ZhciByPWUubGVuZ3RoO2lmKG49PW51bGwpcmV0dXJuIXI7Zm9yKG49TShuKTtyLS07KXt2YXIgcz1lW3JdLG89dFtzXSxmPW5bc107aWYoZj09PWkmJiEocyBpbiBuKXx8IW8oZikpcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24genMobix0LGUpe2lmKHR5cGVvZiBuIT1cImZ1bmN0aW9uXCIpdGhyb3cgbmV3IHduKEQpO3JldHVybiBsZShmdW5jdGlvbigpe24uYXBwbHkoaSxlKX0sdCl9ZnVuY3Rpb24gdWUobix0LGUscil7dmFyIHM9LTEsbz1FZSxmPSEwLGM9bi5sZW5ndGgsbD1bXSx2PXQubGVuZ3RoO2lmKCFjKXJldHVybiBsO2UmJih0PUcodCxobihlKSkpLHI/KG89RHIsZj0hMSk6dC5sZW5ndGg+PXcmJihvPWp0LGY9ITEsdD1uZXcgZ3QodCkpO246Zm9yKDsrK3M8Yzspe3ZhciBfPW5bc10sbT1lPT1udWxsP186ZShfKTtpZihfPXJ8fF8hPT0wP186MCxmJiZtPT09bSl7Zm9yKHZhciBQPXY7UC0tOylpZih0W1BdPT09bSljb250aW51ZSBuO2wucHVzaChfKX1lbHNlIG8odCxtLHIpfHxsLnB1c2goXyl9cmV0dXJuIGx9dmFyIHJ0PV91KCRuKSxLcz1fdShYciwhMCk7ZnVuY3Rpb24gUGMobix0KXt2YXIgZT0hMDtyZXR1cm4gcnQobixmdW5jdGlvbihyLHMsbyl7cmV0dXJuIGU9ISF0KHIscyxvKSxlfSksZX1mdW5jdGlvbiBHZShuLHQsZSl7Zm9yKHZhciByPS0xLHM9bi5sZW5ndGg7KytyPHM7KXt2YXIgbz1uW3JdLGY9dChvKTtpZihmIT1udWxsJiYoYz09PWk/Zj09PWYmJiFwbihmKTplKGYsYykpKXZhciBjPWYsbD1vfXJldHVybiBsfWZ1bmN0aW9uIEFjKG4sdCxlLHIpe3ZhciBzPW4ubGVuZ3RoO2ZvcihlPVIoZSksZTwwJiYoZT0tZT5zPzA6cytlKSxyPXI9PT1pfHxyPnM/czpSKHIpLHI8MCYmKHIrPXMpLHI9ZT5yPzA6b2Eocik7ZTxyOyluW2UrK109dDtyZXR1cm4gbn1mdW5jdGlvbiBZcyhuLHQpe3ZhciBlPVtdO3JldHVybiBydChuLGZ1bmN0aW9uKHIscyxvKXt0KHIscyxvKSYmZS5wdXNoKHIpfSksZX1mdW5jdGlvbiBqKG4sdCxlLHIscyl7dmFyIG89LTEsZj1uLmxlbmd0aDtmb3IoZXx8KGU9ZmgpLHN8fChzPVtdKTsrK288Zjspe3ZhciBjPW5bb107dD4wJiZlKGMpP3Q+MT9qKGMsdC0xLGUscixzKTpudChzLGMpOnJ8fChzW3MubGVuZ3RoXT1jKX1yZXR1cm4gc312YXIgSnI9bXUoKSxacz1tdSghMCk7ZnVuY3Rpb24gJG4obix0KXtyZXR1cm4gbiYmSnIobix0LFYpfWZ1bmN0aW9uIFhyKG4sdCl7cmV0dXJuIG4mJlpzKG4sdCxWKX1mdW5jdGlvbiB6ZShuLHQpe3JldHVybiBqbih0LGZ1bmN0aW9uKGUpe3JldHVybiBKbihuW2VdKX0pfWZ1bmN0aW9uIF90KG4sdCl7dD1zdCh0LG4pO2Zvcih2YXIgZT0wLHI9dC5sZW5ndGg7biE9bnVsbCYmZTxyOyluPW5bV24odFtlKytdKV07cmV0dXJuIGUmJmU9PXI/bjppfWZ1bmN0aW9uIEpzKG4sdCxlKXt2YXIgcj10KG4pO3JldHVybiBPKG4pP3I6bnQocixlKG4pKX1mdW5jdGlvbiBlbihuKXtyZXR1cm4gbj09bnVsbD9uPT09aT9KYTpZYTpwdCYmcHQgaW4gTShuKT9yaChuKTp2aChuKX1mdW5jdGlvbiBRcihuLHQpe3JldHVybiBuPnR9ZnVuY3Rpb24gQ2Mobix0KXtyZXR1cm4gbiE9bnVsbCYmRi5jYWxsKG4sdCl9ZnVuY3Rpb24gSWMobix0KXtyZXR1cm4gbiE9bnVsbCYmdCBpbiBNKG4pfWZ1bmN0aW9uIHhjKG4sdCxlKXtyZXR1cm4gbj49bm4odCxlKSYmbjxRKHQsZSl9ZnVuY3Rpb24gVnIobix0LGUpe2Zvcih2YXIgcj1lP0RyOkVlLHM9blswXS5sZW5ndGgsbz1uLmxlbmd0aCxmPW8sYz1kKG8pLGw9MS8wLHY9W107Zi0tOyl7dmFyIF89bltmXTtmJiZ0JiYoXz1HKF8saG4odCkpKSxsPW5uKF8ubGVuZ3RoLGwpLGNbZl09IWUmJih0fHxzPj0xMjAmJl8ubGVuZ3RoPj0xMjApP25ldyBndChmJiZfKTppfV89blswXTt2YXIgbT0tMSxQPWNbMF07bjpmb3IoOysrbTxzJiZ2Lmxlbmd0aDxsOyl7dmFyIEk9X1ttXSxFPXQ/dChJKTpJO2lmKEk9ZXx8SSE9PTA/STowLCEoUD9qdChQLEUpOnIodixFLGUpKSl7Zm9yKGY9bzstLWY7KXt2YXIgVD1jW2ZdO2lmKCEoVD9qdChULEUpOnIobltmXSxFLGUpKSljb250aW51ZSBufVAmJlAucHVzaChFKSx2LnB1c2goSSl9fXJldHVybiB2fWZ1bmN0aW9uIEVjKG4sdCxlLHIpe3JldHVybiAkbihuLGZ1bmN0aW9uKHMsbyxmKXt0KHIsZShzKSxvLGYpfSkscn1mdW5jdGlvbiBhZShuLHQsZSl7dD1zdCh0LG4pLG49SHUobix0KTt2YXIgcj1uPT1udWxsP246bltXbihJbih0KSldO3JldHVybiByPT1udWxsP2k6Y24ocixuLGUpfWZ1bmN0aW9uIFhzKG4pe3JldHVybiBZKG4pJiZlbihuKT09T3R9ZnVuY3Rpb24geWMobil7cmV0dXJuIFkobikmJmVuKG4pPT1rdH1mdW5jdGlvbiBTYyhuKXtyZXR1cm4gWShuKSYmZW4obik9PVp0fWZ1bmN0aW9uIG9lKG4sdCxlLHIscyl7cmV0dXJuIG49PT10PyEwOm49PW51bGx8fHQ9PW51bGx8fCFZKG4pJiYhWSh0KT9uIT09biYmdCE9PXQ6T2Mobix0LGUscixvZSxzKX1mdW5jdGlvbiBPYyhuLHQsZSxyLHMsbyl7dmFyIGY9TyhuKSxjPU8odCksbD1mP21lOnRuKG4pLHY9Yz9tZTp0bih0KTtsPWw9PU90P3FuOmwsdj12PT1PdD9xbjp2O3ZhciBfPWw9PXFuLG09dj09cW4sUD1sPT12O2lmKFAmJmF0KG4pKXtpZighYXQodCkpcmV0dXJuITE7Zj0hMCxfPSExfWlmKFAmJiFfKXJldHVybiBvfHwobz1uZXcgUm4pLGZ8fEJ0KG4pP091KG4sdCxlLHIscyxvKTp0aChuLHQsbCxlLHIscyxvKTtpZighKGUmRXQpKXt2YXIgST1fJiZGLmNhbGwobixcIl9fd3JhcHBlZF9fXCIpLEU9bSYmRi5jYWxsKHQsXCJfX3dyYXBwZWRfX1wiKTtpZihJfHxFKXt2YXIgVD1JP24udmFsdWUoKTpuLHk9RT90LnZhbHVlKCk6dDtyZXR1cm4gb3x8KG89bmV3IFJuKSxzKFQseSxlLHIsbyl9fXJldHVybiBQPyhvfHwobz1uZXcgUm4pLGVoKG4sdCxlLHIscyxvKSk6ITF9ZnVuY3Rpb24gUmMobil7cmV0dXJuIFkobikmJnRuKG4pPT15bn1mdW5jdGlvbiBrcihuLHQsZSxyKXt2YXIgcz1lLmxlbmd0aCxvPXMsZj0hcjtpZihuPT1udWxsKXJldHVybiFvO2ZvcihuPU0obik7cy0tOyl7dmFyIGM9ZVtzXTtpZihmJiZjWzJdP2NbMV0hPT1uW2NbMF1dOiEoY1swXWluIG4pKXJldHVybiExfWZvcig7KytzPG87KXtjPWVbc107dmFyIGw9Y1swXSx2PW5bbF0sXz1jWzFdO2lmKGYmJmNbMl0pe2lmKHY9PT1pJiYhKGwgaW4gbikpcmV0dXJuITF9ZWxzZXt2YXIgbT1uZXcgUm47aWYocil2YXIgUD1yKHYsXyxsLG4sdCxtKTtpZighKFA9PT1pP29lKF8sdixFdHx2ZSxyLG0pOlApKXJldHVybiExfX1yZXR1cm4hMH1mdW5jdGlvbiBRcyhuKXtpZighSyhuKXx8aGgobikpcmV0dXJuITE7dmFyIHQ9Sm4obik/UmY6bW87cmV0dXJuIHQudGVzdCh3dChuKSl9ZnVuY3Rpb24gYmMobil7cmV0dXJuIFkobikmJmVuKG4pPT1YdH1mdW5jdGlvbiBUYyhuKXtyZXR1cm4gWShuKSYmdG4obik9PVNufWZ1bmN0aW9uIExjKG4pe3JldHVybiBZKG4pJiZhcihuLmxlbmd0aCkmJiEhQltlbihuKV19ZnVuY3Rpb24gVnMobil7cmV0dXJuIHR5cGVvZiBuPT1cImZ1bmN0aW9uXCI/bjpuPT1udWxsP2ZuOnR5cGVvZiBuPT1cIm9iamVjdFwiP08obik/bnUoblswXSxuWzFdKTpqcyhuKTp3YShuKX1mdW5jdGlvbiBqcihuKXtpZighaGUobikpcmV0dXJuIEhmKG4pO3ZhciB0PVtdO2Zvcih2YXIgZSBpbiBNKG4pKUYuY2FsbChuLGUpJiZlIT1cImNvbnN0cnVjdG9yXCImJnQucHVzaChlKTtyZXR1cm4gdH1mdW5jdGlvbiBEYyhuKXtpZighSyhuKSlyZXR1cm4gZ2gobik7dmFyIHQ9aGUobiksZT1bXTtmb3IodmFyIHIgaW4gbilyPT1cImNvbnN0cnVjdG9yXCImJih0fHwhRi5jYWxsKG4scikpfHxlLnB1c2gocik7cmV0dXJuIGV9ZnVuY3Rpb24gbmkobix0KXtyZXR1cm4gbjx0fWZ1bmN0aW9uIGtzKG4sdCl7dmFyIGU9LTEscj1hbihuKT9kKG4ubGVuZ3RoKTpbXTtyZXR1cm4gcnQobixmdW5jdGlvbihzLG8sZil7clsrK2VdPXQocyxvLGYpfSkscn1mdW5jdGlvbiBqcyhuKXt2YXIgdD1naShuKTtyZXR1cm4gdC5sZW5ndGg9PTEmJnRbMF1bMl0/RHUodFswXVswXSx0WzBdWzFdKTpmdW5jdGlvbihlKXtyZXR1cm4gZT09PW58fGtyKGUsbix0KX19ZnVuY3Rpb24gbnUobix0KXtyZXR1cm4gX2kobikmJkx1KHQpP0R1KFduKG4pLHQpOmZ1bmN0aW9uKGUpe3ZhciByPVNpKGUsbik7cmV0dXJuIHI9PT1pJiZyPT09dD9PaShlLG4pOm9lKHQscixFdHx2ZSl9fWZ1bmN0aW9uIEtlKG4sdCxlLHIscyl7biE9PXQmJkpyKHQsZnVuY3Rpb24obyxmKXtpZihzfHwocz1uZXcgUm4pLEsobykpTmMobix0LGYsZSxLZSxyLHMpO2Vsc2V7dmFyIGM9cj9yKHdpKG4sZiksbyxmK1wiXCIsbix0LHMpOmk7Yz09PWkmJihjPW8pLFlyKG4sZixjKX19LG9uKX1mdW5jdGlvbiBOYyhuLHQsZSxyLHMsbyxmKXt2YXIgYz13aShuLGUpLGw9d2kodCxlKSx2PWYuZ2V0KGwpO2lmKHYpe1lyKG4sZSx2KTtyZXR1cm59dmFyIF89bz9vKGMsbCxlK1wiXCIsbix0LGYpOmksbT1fPT09aTtpZihtKXt2YXIgUD1PKGwpLEk9IVAmJmF0KGwpLEU9IVAmJiFJJiZCdChsKTtfPWwsUHx8SXx8RT9PKGMpP189YzpaKGMpP189dW4oYyk6ST8obT0hMSxfPWx1KGwsITApKTpFPyhtPSExLF89cHUobCwhMCkpOl89W106cGUobCl8fFB0KGwpPyhfPWMsUHQoYyk/Xz1mYShjKTooIUsoYyl8fEpuKGMpKSYmKF89VHUobCkpKTptPSExfW0mJihmLnNldChsLF8pLHMoXyxsLHIsbyxmKSxmLmRlbGV0ZShsKSksWXIobixlLF8pfWZ1bmN0aW9uIHR1KG4sdCl7dmFyIGU9bi5sZW5ndGg7aWYoZSlyZXR1cm4gdCs9dDwwP2U6MCxabih0LGUpP25bdF06aX1mdW5jdGlvbiBldShuLHQsZSl7dC5sZW5ndGg/dD1HKHQsZnVuY3Rpb24obyl7cmV0dXJuIE8obyk/ZnVuY3Rpb24oZil7cmV0dXJuIF90KGYsby5sZW5ndGg9PT0xP29bMF06byl9Om99KTp0PVtmbl07dmFyIHI9LTE7dD1HKHQsaG4oeCgpKSk7dmFyIHM9a3MobixmdW5jdGlvbihvLGYsYyl7dmFyIGw9Ryh0LGZ1bmN0aW9uKHYpe3JldHVybiB2KG8pfSk7cmV0dXJue2NyaXRlcmlhOmwsaW5kZXg6KytyLHZhbHVlOm99fSk7cmV0dXJuIGFmKHMsZnVuY3Rpb24obyxmKXtyZXR1cm4gWmMobyxmLGUpfSl9ZnVuY3Rpb24gSGMobix0KXtyZXR1cm4gcnUobix0LGZ1bmN0aW9uKGUscil7cmV0dXJuIE9pKG4scil9KX1mdW5jdGlvbiBydShuLHQsZSl7Zm9yKHZhciByPS0xLHM9dC5sZW5ndGgsbz17fTsrK3I8czspe3ZhciBmPXRbcl0sYz1fdChuLGYpO2UoYyxmKSYmZmUobyxzdChmLG4pLGMpfXJldHVybiBvfWZ1bmN0aW9uICRjKG4pe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gX3QodCxuKX19ZnVuY3Rpb24gdGkobix0LGUscil7dmFyIHM9cj91ZjpUdCxvPS0xLGY9dC5sZW5ndGgsYz1uO2ZvcihuPT09dCYmKHQ9dW4odCkpLGUmJihjPUcobixobihlKSkpOysrbzxmOylmb3IodmFyIGw9MCx2PXRbb10sXz1lP2Uodik6djsobD1zKGMsXyxsLHIpKT4tMTspYyE9PW4mJkhlLmNhbGwoYyxsLDEpLEhlLmNhbGwobixsLDEpO3JldHVybiBufWZ1bmN0aW9uIGl1KG4sdCl7Zm9yKHZhciBlPW4/dC5sZW5ndGg6MCxyPWUtMTtlLS07KXt2YXIgcz10W2VdO2lmKGU9PXJ8fHMhPT1vKXt2YXIgbz1zO1puKHMpP0hlLmNhbGwobixzLDEpOnNpKG4scyl9fXJldHVybiBufWZ1bmN0aW9uIGVpKG4sdCl7cmV0dXJuIG4rV2UoV3MoKSoodC1uKzEpKX1mdW5jdGlvbiBVYyhuLHQsZSxyKXtmb3IodmFyIHM9LTEsbz1RKFVlKCh0LW4pLyhlfHwxKSksMCksZj1kKG8pO28tLTspZltyP286KytzXT1uLG4rPWU7cmV0dXJuIGZ9ZnVuY3Rpb24gcmkobix0KXt2YXIgZT1cIlwiO2lmKCFufHx0PDF8fHQ+a24pcmV0dXJuIGU7ZG8gdCUyJiYoZSs9biksdD1XZSh0LzIpLHQmJihuKz1uKTt3aGlsZSh0KTtyZXR1cm4gZX1mdW5jdGlvbiBMKG4sdCl7cmV0dXJuIFBpKE51KG4sdCxmbiksbitcIlwiKX1mdW5jdGlvbiBXYyhuKXtyZXR1cm4gcXMoR3QobikpfWZ1bmN0aW9uIEZjKG4sdCl7dmFyIGU9R3Qobik7cmV0dXJuIHRyKGUsdnQodCwwLGUubGVuZ3RoKSl9ZnVuY3Rpb24gZmUobix0LGUscil7aWYoIUsobikpcmV0dXJuIG47dD1zdCh0LG4pO2Zvcih2YXIgcz0tMSxvPXQubGVuZ3RoLGY9by0xLGM9bjtjIT1udWxsJiYrK3M8bzspe3ZhciBsPVduKHRbc10pLHY9ZTtpZihsPT09XCJfX3Byb3RvX19cInx8bD09PVwiY29uc3RydWN0b3JcInx8bD09PVwicHJvdG90eXBlXCIpcmV0dXJuIG47aWYocyE9Zil7dmFyIF89Y1tsXTt2PXI/cihfLGwsYyk6aSx2PT09aSYmKHY9SyhfKT9fOlpuKHRbcysxXSk/W106e30pfXNlKGMsbCx2KSxjPWNbbF19cmV0dXJuIG59dmFyIHN1PUZlP2Z1bmN0aW9uKG4sdCl7cmV0dXJuIEZlLnNldChuLHQpLG59OmZuLE1jPSRlP2Z1bmN0aW9uKG4sdCl7cmV0dXJuICRlKG4sXCJ0b1N0cmluZ1wiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx2YWx1ZTpiaSh0KSx3cml0YWJsZTohMH0pfTpmbjtmdW5jdGlvbiBxYyhuKXtyZXR1cm4gdHIoR3QobikpfWZ1bmN0aW9uIENuKG4sdCxlKXt2YXIgcj0tMSxzPW4ubGVuZ3RoO3Q8MCYmKHQ9LXQ+cz8wOnMrdCksZT1lPnM/czplLGU8MCYmKGUrPXMpLHM9dD5lPzA6ZS10Pj4+MCx0Pj4+PTA7Zm9yKHZhciBvPWQocyk7KytyPHM7KW9bcl09bltyK3RdO3JldHVybiBvfWZ1bmN0aW9uIEJjKG4sdCl7dmFyIGU7cmV0dXJuIHJ0KG4sZnVuY3Rpb24ocixzLG8pe3JldHVybiBlPXQocixzLG8pLCFlfSksISFlfWZ1bmN0aW9uIFllKG4sdCxlKXt2YXIgcj0wLHM9bj09bnVsbD9yOm4ubGVuZ3RoO2lmKHR5cGVvZiB0PT1cIm51bWJlclwiJiZ0PT09dCYmczw9QmEpe2Zvcig7cjxzOyl7dmFyIG89citzPj4+MSxmPW5bb107ZiE9PW51bGwmJiFwbihmKSYmKGU/Zjw9dDpmPHQpP3I9bysxOnM9b31yZXR1cm4gc31yZXR1cm4gaWkobix0LGZuLGUpfWZ1bmN0aW9uIGlpKG4sdCxlLHIpe3ZhciBzPTAsbz1uPT1udWxsPzA6bi5sZW5ndGg7aWYobz09PTApcmV0dXJuIDA7dD1lKHQpO2Zvcih2YXIgZj10IT09dCxjPXQ9PT1udWxsLGw9cG4odCksdj10PT09aTtzPG87KXt2YXIgXz1XZSgocytvKS8yKSxtPWUobltfXSksUD1tIT09aSxJPW09PT1udWxsLEU9bT09PW0sVD1wbihtKTtpZihmKXZhciB5PXJ8fEU7ZWxzZSB2P3k9RSYmKHJ8fFApOmM/eT1FJiZQJiYocnx8IUkpOmw/eT1FJiZQJiYhSSYmKHJ8fCFUKTpJfHxUP3k9ITE6eT1yP208PXQ6bTx0O3k/cz1fKzE6bz1ffXJldHVybiBubihvLHFhKX1mdW5jdGlvbiB1dShuLHQpe2Zvcih2YXIgZT0tMSxyPW4ubGVuZ3RoLHM9MCxvPVtdOysrZTxyOyl7dmFyIGY9bltlXSxjPXQ/dChmKTpmO2lmKCFlfHwhYm4oYyxsKSl7dmFyIGw9YztvW3MrK109Zj09PTA/MDpmfX1yZXR1cm4gb31mdW5jdGlvbiBhdShuKXtyZXR1cm4gdHlwZW9mIG49PVwibnVtYmVyXCI/bjpwbihuKT9fZTorbn1mdW5jdGlvbiBsbihuKXtpZih0eXBlb2Ygbj09XCJzdHJpbmdcIilyZXR1cm4gbjtpZihPKG4pKXJldHVybiBHKG4sbG4pK1wiXCI7aWYocG4obikpcmV0dXJuIEZzP0ZzLmNhbGwobik6XCJcIjt2YXIgdD1uK1wiXCI7cmV0dXJuIHQ9PVwiMFwiJiYxL249PS1odD9cIi0wXCI6dH1mdW5jdGlvbiBpdChuLHQsZSl7dmFyIHI9LTEscz1FZSxvPW4ubGVuZ3RoLGY9ITAsYz1bXSxsPWM7aWYoZSlmPSExLHM9RHI7ZWxzZSBpZihvPj13KXt2YXIgdj10P251bGw6amMobik7aWYodilyZXR1cm4gU2Uodik7Zj0hMSxzPWp0LGw9bmV3IGd0fWVsc2UgbD10P1tdOmM7bjpmb3IoOysrcjxvOyl7dmFyIF89bltyXSxtPXQ/dChfKTpfO2lmKF89ZXx8XyE9PTA/XzowLGYmJm09PT1tKXtmb3IodmFyIFA9bC5sZW5ndGg7UC0tOylpZihsW1BdPT09bSljb250aW51ZSBuO3QmJmwucHVzaChtKSxjLnB1c2goXyl9ZWxzZSBzKGwsbSxlKXx8KGwhPT1jJiZsLnB1c2gobSksYy5wdXNoKF8pKX1yZXR1cm4gY31mdW5jdGlvbiBzaShuLHQpe3JldHVybiB0PXN0KHQsbiksbj1IdShuLHQpLG49PW51bGx8fGRlbGV0ZSBuW1duKEluKHQpKV19ZnVuY3Rpb24gb3Uobix0LGUscil7cmV0dXJuIGZlKG4sdCxlKF90KG4sdCkpLHIpfWZ1bmN0aW9uIFplKG4sdCxlLHIpe2Zvcih2YXIgcz1uLmxlbmd0aCxvPXI/czotMTsocj9vLS06KytvPHMpJiZ0KG5bb10sbyxuKTspO3JldHVybiBlP0NuKG4scj8wOm8scj9vKzE6cyk6Q24obixyP28rMTowLHI/czpvKX1mdW5jdGlvbiBmdShuLHQpe3ZhciBlPW47cmV0dXJuIGUgaW5zdGFuY2VvZiBIJiYoZT1lLnZhbHVlKCkpLE5yKHQsZnVuY3Rpb24ocixzKXtyZXR1cm4gcy5mdW5jLmFwcGx5KHMudGhpc0FyZyxudChbcl0scy5hcmdzKSl9LGUpfWZ1bmN0aW9uIHVpKG4sdCxlKXt2YXIgcj1uLmxlbmd0aDtpZihyPDIpcmV0dXJuIHI/aXQoblswXSk6W107Zm9yKHZhciBzPS0xLG89ZChyKTsrK3M8cjspZm9yKHZhciBmPW5bc10sYz0tMTsrK2M8cjspYyE9cyYmKG9bc109dWUob1tzXXx8ZixuW2NdLHQsZSkpO3JldHVybiBpdChqKG8sMSksdCxlKX1mdW5jdGlvbiBjdShuLHQsZSl7Zm9yKHZhciByPS0xLHM9bi5sZW5ndGgsbz10Lmxlbmd0aCxmPXt9OysrcjxzOyl7dmFyIGM9cjxvP3Rbcl06aTtlKGYsbltyXSxjKX1yZXR1cm4gZn1mdW5jdGlvbiBhaShuKXtyZXR1cm4gWihuKT9uOltdfWZ1bmN0aW9uIG9pKG4pe3JldHVybiB0eXBlb2Ygbj09XCJmdW5jdGlvblwiP246Zm59ZnVuY3Rpb24gc3Qobix0KXtyZXR1cm4gTyhuKT9uOl9pKG4sdCk/W25dOkZ1KFcobikpfXZhciBHYz1MO2Z1bmN0aW9uIHV0KG4sdCxlKXt2YXIgcj1uLmxlbmd0aDtyZXR1cm4gZT1lPT09aT9yOmUsIXQmJmU+PXI/bjpDbihuLHQsZSl9dmFyIGh1PWJmfHxmdW5jdGlvbihuKXtyZXR1cm4gay5jbGVhclRpbWVvdXQobil9O2Z1bmN0aW9uIGx1KG4sdCl7aWYodClyZXR1cm4gbi5zbGljZSgpO3ZhciBlPW4ubGVuZ3RoLHI9RHM/RHMoZSk6bmV3IG4uY29uc3RydWN0b3IoZSk7cmV0dXJuIG4uY29weShyKSxyfWZ1bmN0aW9uIGZpKG4pe3ZhciB0PW5ldyBuLmNvbnN0cnVjdG9yKG4uYnl0ZUxlbmd0aCk7cmV0dXJuIG5ldyBEZSh0KS5zZXQobmV3IERlKG4pKSx0fWZ1bmN0aW9uIHpjKG4sdCl7dmFyIGU9dD9maShuLmJ1ZmZlcik6bi5idWZmZXI7cmV0dXJuIG5ldyBuLmNvbnN0cnVjdG9yKGUsbi5ieXRlT2Zmc2V0LG4uYnl0ZUxlbmd0aCl9ZnVuY3Rpb24gS2Mobil7dmFyIHQ9bmV3IG4uY29uc3RydWN0b3Iobi5zb3VyY2UsWGkuZXhlYyhuKSk7cmV0dXJuIHQubGFzdEluZGV4PW4ubGFzdEluZGV4LHR9ZnVuY3Rpb24gWWMobil7cmV0dXJuIGllP00oaWUuY2FsbChuKSk6e319ZnVuY3Rpb24gcHUobix0KXt2YXIgZT10P2ZpKG4uYnVmZmVyKTpuLmJ1ZmZlcjtyZXR1cm4gbmV3IG4uY29uc3RydWN0b3IoZSxuLmJ5dGVPZmZzZXQsbi5sZW5ndGgpfWZ1bmN0aW9uIGR1KG4sdCl7aWYobiE9PXQpe3ZhciBlPW4hPT1pLHI9bj09PW51bGwscz1uPT09bixvPXBuKG4pLGY9dCE9PWksYz10PT09bnVsbCxsPXQ9PT10LHY9cG4odCk7aWYoIWMmJiF2JiYhbyYmbj50fHxvJiZmJiZsJiYhYyYmIXZ8fHImJmYmJmx8fCFlJiZsfHwhcylyZXR1cm4gMTtpZighciYmIW8mJiF2JiZuPHR8fHYmJmUmJnMmJiFyJiYhb3x8YyYmZSYmc3x8IWYmJnN8fCFsKXJldHVybi0xfXJldHVybiAwfWZ1bmN0aW9uIFpjKG4sdCxlKXtmb3IodmFyIHI9LTEscz1uLmNyaXRlcmlhLG89dC5jcml0ZXJpYSxmPXMubGVuZ3RoLGM9ZS5sZW5ndGg7KytyPGY7KXt2YXIgbD1kdShzW3JdLG9bcl0pO2lmKGwpe2lmKHI+PWMpcmV0dXJuIGw7dmFyIHY9ZVtyXTtyZXR1cm4gbCoodj09XCJkZXNjXCI/LTE6MSl9fXJldHVybiBuLmluZGV4LXQuaW5kZXh9ZnVuY3Rpb24gZ3Uobix0LGUscil7Zm9yKHZhciBzPS0xLG89bi5sZW5ndGgsZj1lLmxlbmd0aCxjPS0xLGw9dC5sZW5ndGgsdj1RKG8tZiwwKSxfPWQobCt2KSxtPSFyOysrYzxsOylfW2NdPXRbY107Zm9yKDsrK3M8ZjspKG18fHM8bykmJihfW2Vbc11dPW5bc10pO2Zvcig7di0tOylfW2MrK109bltzKytdO3JldHVybiBffWZ1bmN0aW9uIHZ1KG4sdCxlLHIpe2Zvcih2YXIgcz0tMSxvPW4ubGVuZ3RoLGY9LTEsYz1lLmxlbmd0aCxsPS0xLHY9dC5sZW5ndGgsXz1RKG8tYywwKSxtPWQoXyt2KSxQPSFyOysrczxfOyltW3NdPW5bc107Zm9yKHZhciBJPXM7KytsPHY7KW1bSStsXT10W2xdO2Zvcig7KytmPGM7KShQfHxzPG8pJiYobVtJK2VbZl1dPW5bcysrXSk7cmV0dXJuIG19ZnVuY3Rpb24gdW4obix0KXt2YXIgZT0tMSxyPW4ubGVuZ3RoO2Zvcih0fHwodD1kKHIpKTsrK2U8cjspdFtlXT1uW2VdO3JldHVybiB0fWZ1bmN0aW9uIFVuKG4sdCxlLHIpe3ZhciBzPSFlO2V8fChlPXt9KTtmb3IodmFyIG89LTEsZj10Lmxlbmd0aDsrK288Zjspe3ZhciBjPXRbb10sbD1yP3IoZVtjXSxuW2NdLGMsZSxuKTppO2w9PT1pJiYobD1uW2NdKSxzP3puKGUsYyxsKTpzZShlLGMsbCl9cmV0dXJuIGV9ZnVuY3Rpb24gSmMobix0KXtyZXR1cm4gVW4obix2aShuKSx0KX1mdW5jdGlvbiBYYyhuLHQpe3JldHVybiBVbihuLFJ1KG4pLHQpfWZ1bmN0aW9uIEplKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKGUscil7dmFyIHM9TyhlKT9qbzpfYyxvPXQ/dCgpOnt9O3JldHVybiBzKGUsbix4KHIsMiksbyl9fWZ1bmN0aW9uIEZ0KG4pe3JldHVybiBMKGZ1bmN0aW9uKHQsZSl7dmFyIHI9LTEscz1lLmxlbmd0aCxvPXM+MT9lW3MtMV06aSxmPXM+Mj9lWzJdOmk7Zm9yKG89bi5sZW5ndGg+MyYmdHlwZW9mIG89PVwiZnVuY3Rpb25cIj8ocy0tLG8pOmksZiYmcm4oZVswXSxlWzFdLGYpJiYobz1zPDM/aTpvLHM9MSksdD1NKHQpOysrcjxzOyl7dmFyIGM9ZVtyXTtjJiZuKHQsYyxyLG8pfXJldHVybiB0fSl9ZnVuY3Rpb24gX3Uobix0KXtyZXR1cm4gZnVuY3Rpb24oZSxyKXtpZihlPT1udWxsKXJldHVybiBlO2lmKCFhbihlKSlyZXR1cm4gbihlLHIpO2Zvcih2YXIgcz1lLmxlbmd0aCxvPXQ/czotMSxmPU0oZSk7KHQ/by0tOisrbzxzKSYmcihmW29dLG8sZikhPT0hMTspO3JldHVybiBlfX1mdW5jdGlvbiBtdShuKXtyZXR1cm4gZnVuY3Rpb24odCxlLHIpe2Zvcih2YXIgcz0tMSxvPU0odCksZj1yKHQpLGM9Zi5sZW5ndGg7Yy0tOyl7dmFyIGw9ZltuP2M6KytzXTtpZihlKG9bbF0sbCxvKT09PSExKWJyZWFrfXJldHVybiB0fX1mdW5jdGlvbiBRYyhuLHQsZSl7dmFyIHI9dCZ2bixzPWNlKG4pO2Z1bmN0aW9uIG8oKXt2YXIgZj10aGlzJiZ0aGlzIT09ayYmdGhpcyBpbnN0YW5jZW9mIG8/czpuO3JldHVybiBmLmFwcGx5KHI/ZTp0aGlzLGFyZ3VtZW50cyl9cmV0dXJuIG99ZnVuY3Rpb24gd3Uobil7cmV0dXJuIGZ1bmN0aW9uKHQpe3Q9Vyh0KTt2YXIgZT1MdCh0KT9Pbih0KTppLHI9ZT9lWzBdOnQuY2hhckF0KDApLHM9ZT91dChlLDEpLmpvaW4oXCJcIik6dC5zbGljZSgxKTtyZXR1cm4gcltuXSgpK3N9fWZ1bmN0aW9uIE10KG4pe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gTnIoX2EodmEodCkucmVwbGFjZShGbyxcIlwiKSksbixcIlwiKX19ZnVuY3Rpb24gY2Uobil7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzO3N3aXRjaCh0Lmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgbjtjYXNlIDE6cmV0dXJuIG5ldyBuKHRbMF0pO2Nhc2UgMjpyZXR1cm4gbmV3IG4odFswXSx0WzFdKTtjYXNlIDM6cmV0dXJuIG5ldyBuKHRbMF0sdFsxXSx0WzJdKTtjYXNlIDQ6cmV0dXJuIG5ldyBuKHRbMF0sdFsxXSx0WzJdLHRbM10pO2Nhc2UgNTpyZXR1cm4gbmV3IG4odFswXSx0WzFdLHRbMl0sdFszXSx0WzRdKTtjYXNlIDY6cmV0dXJuIG5ldyBuKHRbMF0sdFsxXSx0WzJdLHRbM10sdFs0XSx0WzVdKTtjYXNlIDc6cmV0dXJuIG5ldyBuKHRbMF0sdFsxXSx0WzJdLHRbM10sdFs0XSx0WzVdLHRbNl0pfXZhciBlPVd0KG4ucHJvdG90eXBlKSxyPW4uYXBwbHkoZSx0KTtyZXR1cm4gSyhyKT9yOmV9fWZ1bmN0aW9uIFZjKG4sdCxlKXt2YXIgcj1jZShuKTtmdW5jdGlvbiBzKCl7Zm9yKHZhciBvPWFyZ3VtZW50cy5sZW5ndGgsZj1kKG8pLGM9byxsPXF0KHMpO2MtLTspZltjXT1hcmd1bWVudHNbY107dmFyIHY9bzwzJiZmWzBdIT09bCYmZltvLTFdIT09bD9bXTp0dChmLGwpO2lmKG8tPXYubGVuZ3RoLG88ZSlyZXR1cm4geHUobix0LFhlLHMucGxhY2Vob2xkZXIsaSxmLHYsaSxpLGUtbyk7dmFyIF89dGhpcyYmdGhpcyE9PWsmJnRoaXMgaW5zdGFuY2VvZiBzP3I6bjtyZXR1cm4gY24oXyx0aGlzLGYpfXJldHVybiBzfWZ1bmN0aW9uIFB1KG4pe3JldHVybiBmdW5jdGlvbih0LGUscil7dmFyIHM9TSh0KTtpZighYW4odCkpe3ZhciBvPXgoZSwzKTt0PVYodCksZT1mdW5jdGlvbihjKXtyZXR1cm4gbyhzW2NdLGMscyl9fXZhciBmPW4odCxlLHIpO3JldHVybiBmPi0xP3Nbbz90W2ZdOmZdOml9fWZ1bmN0aW9uIEF1KG4pe3JldHVybiBZbihmdW5jdGlvbih0KXt2YXIgZT10Lmxlbmd0aCxyPWUscz1Qbi5wcm90b3R5cGUudGhydTtmb3IobiYmdC5yZXZlcnNlKCk7ci0tOyl7dmFyIG89dFtyXTtpZih0eXBlb2YgbyE9XCJmdW5jdGlvblwiKXRocm93IG5ldyB3bihEKTtpZihzJiYhZiYmamUobyk9PVwid3JhcHBlclwiKXZhciBmPW5ldyBQbihbXSwhMCl9Zm9yKHI9Zj9yOmU7KytyPGU7KXtvPXRbcl07dmFyIGM9amUobyksbD1jPT1cIndyYXBwZXJcIj9kaShvKTppO2wmJm1pKGxbMF0pJiZsWzFdPT0oTW58RG58Tm58S3QpJiYhbFs0XS5sZW5ndGgmJmxbOV09PTE/Zj1mW2plKGxbMF0pXS5hcHBseShmLGxbM10pOmY9by5sZW5ndGg9PTEmJm1pKG8pP2ZbY10oKTpmLnRocnUobyl9cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHY9YXJndW1lbnRzLF89dlswXTtpZihmJiZ2Lmxlbmd0aD09MSYmTyhfKSlyZXR1cm4gZi5wbGFudChfKS52YWx1ZSgpO2Zvcih2YXIgbT0wLFA9ZT90W21dLmFwcGx5KHRoaXMsdik6XzsrK208ZTspUD10W21dLmNhbGwodGhpcyxQKTtyZXR1cm4gUH19KX1mdW5jdGlvbiBYZShuLHQsZSxyLHMsbyxmLGMsbCx2KXt2YXIgXz10Jk1uLG09dCZ2bixQPXQmY3QsST10JihEbnx5dCksRT10JmRyLFQ9UD9pOmNlKG4pO2Z1bmN0aW9uIHkoKXtmb3IodmFyIE49YXJndW1lbnRzLmxlbmd0aCwkPWQoTiksZG49Tjtkbi0tOykkW2RuXT1hcmd1bWVudHNbZG5dO2lmKEkpdmFyIHNuPXF0KHkpLGduPWZmKCQsc24pO2lmKHImJigkPWd1KCQscixzLEkpKSxvJiYoJD12dSgkLG8sZixJKSksTi09Z24sSSYmTjx2KXt2YXIgSj10dCgkLHNuKTtyZXR1cm4geHUobix0LFhlLHkucGxhY2Vob2xkZXIsZSwkLEosYyxsLHYtTil9dmFyIFRuPW0/ZTp0aGlzLFFuPVA/VG5bbl06bjtyZXR1cm4gTj0kLmxlbmd0aCxjPyQ9X2goJCxjKTpFJiZOPjEmJiQucmV2ZXJzZSgpLF8mJmw8TiYmKCQubGVuZ3RoPWwpLHRoaXMmJnRoaXMhPT1rJiZ0aGlzIGluc3RhbmNlb2YgeSYmKFFuPVR8fGNlKFFuKSksUW4uYXBwbHkoVG4sJCl9cmV0dXJuIHl9ZnVuY3Rpb24gQ3Uobix0KXtyZXR1cm4gZnVuY3Rpb24oZSxyKXtyZXR1cm4gRWMoZSxuLHQocikse30pfX1mdW5jdGlvbiBRZShuLHQpe3JldHVybiBmdW5jdGlvbihlLHIpe3ZhciBzO2lmKGU9PT1pJiZyPT09aSlyZXR1cm4gdDtpZihlIT09aSYmKHM9ZSksciE9PWkpe2lmKHM9PT1pKXJldHVybiByO3R5cGVvZiBlPT1cInN0cmluZ1wifHx0eXBlb2Ygcj09XCJzdHJpbmdcIj8oZT1sbihlKSxyPWxuKHIpKTooZT1hdShlKSxyPWF1KHIpKSxzPW4oZSxyKX1yZXR1cm4gc319ZnVuY3Rpb24gY2kobil7cmV0dXJuIFluKGZ1bmN0aW9uKHQpe3JldHVybiB0PUcodCxobih4KCkpKSxMKGZ1bmN0aW9uKGUpe3ZhciByPXRoaXM7cmV0dXJuIG4odCxmdW5jdGlvbihzKXtyZXR1cm4gY24ocyxyLGUpfSl9KX0pfWZ1bmN0aW9uIFZlKG4sdCl7dD10PT09aT9cIiBcIjpsbih0KTt2YXIgZT10Lmxlbmd0aDtpZihlPDIpcmV0dXJuIGU/cmkodCxuKTp0O3ZhciByPXJpKHQsVWUobi9EdCh0KSkpO3JldHVybiBMdCh0KT91dChPbihyKSwwLG4pLmpvaW4oXCJcIik6ci5zbGljZSgwLG4pfWZ1bmN0aW9uIGtjKG4sdCxlLHIpe3ZhciBzPXQmdm4sbz1jZShuKTtmdW5jdGlvbiBmKCl7Zm9yKHZhciBjPS0xLGw9YXJndW1lbnRzLmxlbmd0aCx2PS0xLF89ci5sZW5ndGgsbT1kKF8rbCksUD10aGlzJiZ0aGlzIT09ayYmdGhpcyBpbnN0YW5jZW9mIGY/bzpuOysrdjxfOyltW3ZdPXJbdl07Zm9yKDtsLS07KW1bdisrXT1hcmd1bWVudHNbKytjXTtyZXR1cm4gY24oUCxzP2U6dGhpcyxtKX1yZXR1cm4gZn1mdW5jdGlvbiBJdShuKXtyZXR1cm4gZnVuY3Rpb24odCxlLHIpe3JldHVybiByJiZ0eXBlb2YgciE9XCJudW1iZXJcIiYmcm4odCxlLHIpJiYoZT1yPWkpLHQ9WG4odCksZT09PWk/KGU9dCx0PTApOmU9WG4oZSkscj1yPT09aT90PGU/MTotMTpYbihyKSxVYyh0LGUscixuKX19ZnVuY3Rpb24ga2Uobil7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHR5cGVvZiB0PT1cInN0cmluZ1wiJiZ0eXBlb2YgZT09XCJzdHJpbmdcInx8KHQ9eG4odCksZT14bihlKSksbih0LGUpfX1mdW5jdGlvbiB4dShuLHQsZSxyLHMsbyxmLGMsbCx2KXt2YXIgXz10JkRuLG09Xz9mOmksUD1fP2k6ZixJPV8/bzppLEU9Xz9pOm87dHw9Xz9ObjpTdCx0Jj1+KF8/U3Q6Tm4pLHQmQml8fCh0Jj1+KHZufGN0KSk7dmFyIFQ9W24sdCxzLEksbSxFLFAsYyxsLHZdLHk9ZS5hcHBseShpLFQpO3JldHVybiBtaShuKSYmJHUoeSxUKSx5LnBsYWNlaG9sZGVyPXIsVXUoeSxuLHQpfWZ1bmN0aW9uIGhpKG4pe3ZhciB0PVhbbl07cmV0dXJuIGZ1bmN0aW9uKGUscil7aWYoZT14bihlKSxyPXI9PW51bGw/MDpubihSKHIpLDI5MiksciYmVXMoZSkpe3ZhciBzPShXKGUpK1wiZVwiKS5zcGxpdChcImVcIiksbz10KHNbMF0rXCJlXCIrKCtzWzFdK3IpKTtyZXR1cm4gcz0oVyhvKStcImVcIikuc3BsaXQoXCJlXCIpLCsoc1swXStcImVcIisoK3NbMV0tcikpfXJldHVybiB0KGUpfX12YXIgamM9JHQmJjEvU2UobmV3ICR0KFssLTBdKSlbMV09PWh0P2Z1bmN0aW9uKG4pe3JldHVybiBuZXcgJHQobil9OkRpO2Z1bmN0aW9uIEV1KG4pe3JldHVybiBmdW5jdGlvbih0KXt2YXIgZT10bih0KTtyZXR1cm4gZT09eW4/cXIodCk6ZT09U24/dmYodCk6b2YodCxuKHQpKX19ZnVuY3Rpb24gS24obix0LGUscixzLG8sZixjKXt2YXIgbD10JmN0O2lmKCFsJiZ0eXBlb2YgbiE9XCJmdW5jdGlvblwiKXRocm93IG5ldyB3bihEKTt2YXIgdj1yP3IubGVuZ3RoOjA7aWYodnx8KHQmPX4oTm58U3QpLHI9cz1pKSxmPWY9PT1pP2Y6UShSKGYpLDApLGM9Yz09PWk/YzpSKGMpLHYtPXM/cy5sZW5ndGg6MCx0JlN0KXt2YXIgXz1yLG09cztyPXM9aX12YXIgUD1sP2k6ZGkobiksST1bbix0LGUscixzLF8sbSxvLGYsY107aWYoUCYmZGgoSSxQKSxuPUlbMF0sdD1JWzFdLGU9SVsyXSxyPUlbM10scz1JWzRdLGM9SVs5XT1JWzldPT09aT9sPzA6bi5sZW5ndGg6UShJWzldLXYsMCksIWMmJnQmKERufHl0KSYmKHQmPX4oRG58eXQpKSwhdHx8dD09dm4pdmFyIEU9UWMobix0LGUpO2Vsc2UgdD09RG58fHQ9PXl0P0U9VmMobix0LGMpOih0PT1Obnx8dD09KHZufE5uKSkmJiFzLmxlbmd0aD9FPWtjKG4sdCxlLHIpOkU9WGUuYXBwbHkoaSxJKTt2YXIgVD1QP3N1OiR1O3JldHVybiBVdShUKEUsSSksbix0KX1mdW5jdGlvbiB5dShuLHQsZSxyKXtyZXR1cm4gbj09PWl8fGJuKG4sSHRbZV0pJiYhRi5jYWxsKHIsZSk/dDpufWZ1bmN0aW9uIFN1KG4sdCxlLHIscyxvKXtyZXR1cm4gSyhuKSYmSyh0KSYmKG8uc2V0KHQsbiksS2Uobix0LGksU3Usbyksby5kZWxldGUodCkpLG59ZnVuY3Rpb24gbmgobil7cmV0dXJuIHBlKG4pP2k6bn1mdW5jdGlvbiBPdShuLHQsZSxyLHMsbyl7dmFyIGY9ZSZFdCxjPW4ubGVuZ3RoLGw9dC5sZW5ndGg7aWYoYyE9bCYmIShmJiZsPmMpKXJldHVybiExO3ZhciB2PW8uZ2V0KG4pLF89by5nZXQodCk7aWYodiYmXylyZXR1cm4gdj09dCYmXz09bjt2YXIgbT0tMSxQPSEwLEk9ZSZ2ZT9uZXcgZ3Q6aTtmb3Ioby5zZXQobix0KSxvLnNldCh0LG4pOysrbTxjOyl7dmFyIEU9blttXSxUPXRbbV07aWYocil2YXIgeT1mP3IoVCxFLG0sdCxuLG8pOnIoRSxULG0sbix0LG8pO2lmKHkhPT1pKXtpZih5KWNvbnRpbnVlO1A9ITE7YnJlYWt9aWYoSSl7aWYoIUhyKHQsZnVuY3Rpb24oTiwkKXtpZighanQoSSwkKSYmKEU9PT1OfHxzKEUsTixlLHIsbykpKXJldHVybiBJLnB1c2goJCl9KSl7UD0hMTticmVha319ZWxzZSBpZighKEU9PT1UfHxzKEUsVCxlLHIsbykpKXtQPSExO2JyZWFrfX1yZXR1cm4gby5kZWxldGUobiksby5kZWxldGUodCksUH1mdW5jdGlvbiB0aChuLHQsZSxyLHMsbyxmKXtzd2l0Y2goZSl7Y2FzZSBSdDppZihuLmJ5dGVMZW5ndGghPXQuYnl0ZUxlbmd0aHx8bi5ieXRlT2Zmc2V0IT10LmJ5dGVPZmZzZXQpcmV0dXJuITE7bj1uLmJ1ZmZlcix0PXQuYnVmZmVyO2Nhc2Uga3Q6cmV0dXJuIShuLmJ5dGVMZW5ndGghPXQuYnl0ZUxlbmd0aHx8IW8obmV3IERlKG4pLG5ldyBEZSh0KSkpO2Nhc2UgWXQ6Y2FzZSBadDpjYXNlIEp0OnJldHVybiBibigrbiwrdCk7Y2FzZSB3ZTpyZXR1cm4gbi5uYW1lPT10Lm5hbWUmJm4ubWVzc2FnZT09dC5tZXNzYWdlO2Nhc2UgWHQ6Y2FzZSBRdDpyZXR1cm4gbj09dCtcIlwiO2Nhc2UgeW46dmFyIGM9cXI7Y2FzZSBTbjp2YXIgbD1yJkV0O2lmKGN8fChjPVNlKSxuLnNpemUhPXQuc2l6ZSYmIWwpcmV0dXJuITE7dmFyIHY9Zi5nZXQobik7aWYodilyZXR1cm4gdj09dDtyfD12ZSxmLnNldChuLHQpO3ZhciBfPU91KGMobiksYyh0KSxyLHMsbyxmKTtyZXR1cm4gZi5kZWxldGUobiksXztjYXNlIEFlOmlmKGllKXJldHVybiBpZS5jYWxsKG4pPT1pZS5jYWxsKHQpfXJldHVybiExfWZ1bmN0aW9uIGVoKG4sdCxlLHIscyxvKXt2YXIgZj1lJkV0LGM9bGkobiksbD1jLmxlbmd0aCx2PWxpKHQpLF89di5sZW5ndGg7aWYobCE9XyYmIWYpcmV0dXJuITE7Zm9yKHZhciBtPWw7bS0tOyl7dmFyIFA9Y1ttXTtpZighKGY/UCBpbiB0OkYuY2FsbCh0LFApKSlyZXR1cm4hMX12YXIgST1vLmdldChuKSxFPW8uZ2V0KHQpO2lmKEkmJkUpcmV0dXJuIEk9PXQmJkU9PW47dmFyIFQ9ITA7by5zZXQobix0KSxvLnNldCh0LG4pO2Zvcih2YXIgeT1mOysrbTxsOyl7UD1jW21dO3ZhciBOPW5bUF0sJD10W1BdO2lmKHIpdmFyIGRuPWY/cigkLE4sUCx0LG4sbyk6cihOLCQsUCxuLHQsbyk7aWYoIShkbj09PWk/Tj09PSR8fHMoTiwkLGUscixvKTpkbikpe1Q9ITE7YnJlYWt9eXx8KHk9UD09XCJjb25zdHJ1Y3RvclwiKX1pZihUJiYheSl7dmFyIHNuPW4uY29uc3RydWN0b3IsZ249dC5jb25zdHJ1Y3RvcjtzbiE9Z24mJlwiY29uc3RydWN0b3JcImluIG4mJlwiY29uc3RydWN0b3JcImluIHQmJiEodHlwZW9mIHNuPT1cImZ1bmN0aW9uXCImJnNuIGluc3RhbmNlb2Ygc24mJnR5cGVvZiBnbj09XCJmdW5jdGlvblwiJiZnbiBpbnN0YW5jZW9mIGduKSYmKFQ9ITEpfXJldHVybiBvLmRlbGV0ZShuKSxvLmRlbGV0ZSh0KSxUfWZ1bmN0aW9uIFluKG4pe3JldHVybiBQaShOdShuLGksR3UpLG4rXCJcIil9ZnVuY3Rpb24gbGkobil7cmV0dXJuIEpzKG4sVix2aSl9ZnVuY3Rpb24gcGkobil7cmV0dXJuIEpzKG4sb24sUnUpfXZhciBkaT1GZT9mdW5jdGlvbihuKXtyZXR1cm4gRmUuZ2V0KG4pfTpEaTtmdW5jdGlvbiBqZShuKXtmb3IodmFyIHQ9bi5uYW1lK1wiXCIsZT1VdFt0XSxyPUYuY2FsbChVdCx0KT9lLmxlbmd0aDowO3ItLTspe3ZhciBzPWVbcl0sbz1zLmZ1bmM7aWYobz09bnVsbHx8bz09bilyZXR1cm4gcy5uYW1lfXJldHVybiB0fWZ1bmN0aW9uIHF0KG4pe3ZhciB0PUYuY2FsbChhLFwicGxhY2Vob2xkZXJcIik/YTpuO3JldHVybiB0LnBsYWNlaG9sZGVyfWZ1bmN0aW9uIHgoKXt2YXIgbj1hLml0ZXJhdGVlfHxUaTtyZXR1cm4gbj1uPT09VGk/VnM6bixhcmd1bWVudHMubGVuZ3RoP24oYXJndW1lbnRzWzBdLGFyZ3VtZW50c1sxXSk6bn1mdW5jdGlvbiBucihuLHQpe3ZhciBlPW4uX19kYXRhX187cmV0dXJuIGNoKHQpP2VbdHlwZW9mIHQ9PVwic3RyaW5nXCI/XCJzdHJpbmdcIjpcImhhc2hcIl06ZS5tYXB9ZnVuY3Rpb24gZ2kobil7Zm9yKHZhciB0PVYobiksZT10Lmxlbmd0aDtlLS07KXt2YXIgcj10W2VdLHM9bltyXTt0W2VdPVtyLHMsTHUocyldfXJldHVybiB0fWZ1bmN0aW9uIG10KG4sdCl7dmFyIGU9cGYobix0KTtyZXR1cm4gUXMoZSk/ZTppfWZ1bmN0aW9uIHJoKG4pe3ZhciB0PUYuY2FsbChuLHB0KSxlPW5bcHRdO3RyeXtuW3B0XT1pO3ZhciByPSEwfWNhdGNoe312YXIgcz1UZS5jYWxsKG4pO3JldHVybiByJiYodD9uW3B0XT1lOmRlbGV0ZSBuW3B0XSksc312YXIgdmk9R3I/ZnVuY3Rpb24obil7cmV0dXJuIG49PW51bGw/W106KG49TShuKSxqbihHcihuKSxmdW5jdGlvbih0KXtyZXR1cm4gSHMuY2FsbChuLHQpfSkpfTpOaSxSdT1Hcj9mdW5jdGlvbihuKXtmb3IodmFyIHQ9W107bjspbnQodCx2aShuKSksbj1OZShuKTtyZXR1cm4gdH06TmksdG49ZW47KHpyJiZ0bihuZXcgenIobmV3IEFycmF5QnVmZmVyKDEpKSkhPVJ0fHx0ZSYmdG4obmV3IHRlKSE9eW58fEtyJiZ0bihLci5yZXNvbHZlKCkpIT1LaXx8JHQmJnRuKG5ldyAkdCkhPVNufHxlZSYmdG4obmV3IGVlKSE9VnQpJiYodG49ZnVuY3Rpb24obil7dmFyIHQ9ZW4obiksZT10PT1xbj9uLmNvbnN0cnVjdG9yOmkscj1lP3d0KGUpOlwiXCI7aWYocilzd2l0Y2gocil7Y2FzZSBGZjpyZXR1cm4gUnQ7Y2FzZSBNZjpyZXR1cm4geW47Y2FzZSBxZjpyZXR1cm4gS2k7Y2FzZSBCZjpyZXR1cm4gU247Y2FzZSBHZjpyZXR1cm4gVnR9cmV0dXJuIHR9KTtmdW5jdGlvbiBpaChuLHQsZSl7Zm9yKHZhciByPS0xLHM9ZS5sZW5ndGg7KytyPHM7KXt2YXIgbz1lW3JdLGY9by5zaXplO3N3aXRjaChvLnR5cGUpe2Nhc2VcImRyb3BcIjpuKz1mO2JyZWFrO2Nhc2VcImRyb3BSaWdodFwiOnQtPWY7YnJlYWs7Y2FzZVwidGFrZVwiOnQ9bm4odCxuK2YpO2JyZWFrO2Nhc2VcInRha2VSaWdodFwiOm49UShuLHQtZik7YnJlYWt9fXJldHVybntzdGFydDpuLGVuZDp0fX1mdW5jdGlvbiBzaChuKXt2YXIgdD1uLm1hdGNoKGZvKTtyZXR1cm4gdD90WzFdLnNwbGl0KGNvKTpbXX1mdW5jdGlvbiBidShuLHQsZSl7dD1zdCh0LG4pO2Zvcih2YXIgcj0tMSxzPXQubGVuZ3RoLG89ITE7KytyPHM7KXt2YXIgZj1Xbih0W3JdKTtpZighKG89biE9bnVsbCYmZShuLGYpKSlicmVhaztuPW5bZl19cmV0dXJuIG98fCsrciE9cz9vOihzPW49PW51bGw/MDpuLmxlbmd0aCwhIXMmJmFyKHMpJiZabihmLHMpJiYoTyhuKXx8UHQobikpKX1mdW5jdGlvbiB1aChuKXt2YXIgdD1uLmxlbmd0aCxlPW5ldyBuLmNvbnN0cnVjdG9yKHQpO3JldHVybiB0JiZ0eXBlb2YgblswXT09XCJzdHJpbmdcIiYmRi5jYWxsKG4sXCJpbmRleFwiKSYmKGUuaW5kZXg9bi5pbmRleCxlLmlucHV0PW4uaW5wdXQpLGV9ZnVuY3Rpb24gVHUobil7cmV0dXJuIHR5cGVvZiBuLmNvbnN0cnVjdG9yPT1cImZ1bmN0aW9uXCImJiFoZShuKT9XdChOZShuKSk6e319ZnVuY3Rpb24gYWgobix0LGUpe3ZhciByPW4uY29uc3RydWN0b3I7c3dpdGNoKHQpe2Nhc2Uga3Q6cmV0dXJuIGZpKG4pO2Nhc2UgWXQ6Y2FzZSBadDpyZXR1cm4gbmV3IHIoK24pO2Nhc2UgUnQ6cmV0dXJuIHpjKG4sZSk7Y2FzZSBncjpjYXNlIHZyOmNhc2UgX3I6Y2FzZSBtcjpjYXNlIHdyOmNhc2UgUHI6Y2FzZSBBcjpjYXNlIENyOmNhc2UgSXI6cmV0dXJuIHB1KG4sZSk7Y2FzZSB5bjpyZXR1cm4gbmV3IHI7Y2FzZSBKdDpjYXNlIFF0OnJldHVybiBuZXcgcihuKTtjYXNlIFh0OnJldHVybiBLYyhuKTtjYXNlIFNuOnJldHVybiBuZXcgcjtjYXNlIEFlOnJldHVybiBZYyhuKX19ZnVuY3Rpb24gb2gobix0KXt2YXIgZT10Lmxlbmd0aDtpZighZSlyZXR1cm4gbjt2YXIgcj1lLTE7cmV0dXJuIHRbcl09KGU+MT9cIiYgXCI6XCJcIikrdFtyXSx0PXQuam9pbihlPjI/XCIsIFwiOlwiIFwiKSxuLnJlcGxhY2Uob28sYHtcbi8qIFt3cmFwcGVkIHdpdGggYCt0K2BdICovXG5gKX1mdW5jdGlvbiBmaChuKXtyZXR1cm4gTyhuKXx8UHQobil8fCEhKCRzJiZuJiZuWyRzXSl9ZnVuY3Rpb24gWm4obix0KXt2YXIgZT10eXBlb2YgbjtyZXR1cm4gdD10Pz9rbiwhIXQmJihlPT1cIm51bWJlclwifHxlIT1cInN5bWJvbFwiJiZQby50ZXN0KG4pKSYmbj4tMSYmbiUxPT0wJiZuPHR9ZnVuY3Rpb24gcm4obix0LGUpe2lmKCFLKGUpKXJldHVybiExO3ZhciByPXR5cGVvZiB0O3JldHVybihyPT1cIm51bWJlclwiP2FuKGUpJiZabih0LGUubGVuZ3RoKTpyPT1cInN0cmluZ1wiJiZ0IGluIGUpP2JuKGVbdF0sbik6ITF9ZnVuY3Rpb24gX2kobix0KXtpZihPKG4pKXJldHVybiExO3ZhciBlPXR5cGVvZiBuO3JldHVybiBlPT1cIm51bWJlclwifHxlPT1cInN5bWJvbFwifHxlPT1cImJvb2xlYW5cInx8bj09bnVsbHx8cG4obik/ITA6aW8udGVzdChuKXx8IXJvLnRlc3Qobil8fHQhPW51bGwmJm4gaW4gTSh0KX1mdW5jdGlvbiBjaChuKXt2YXIgdD10eXBlb2YgbjtyZXR1cm4gdD09XCJzdHJpbmdcInx8dD09XCJudW1iZXJcInx8dD09XCJzeW1ib2xcInx8dD09XCJib29sZWFuXCI/biE9PVwiX19wcm90b19fXCI6bj09PW51bGx9ZnVuY3Rpb24gbWkobil7dmFyIHQ9amUobiksZT1hW3RdO2lmKHR5cGVvZiBlIT1cImZ1bmN0aW9uXCJ8fCEodCBpbiBILnByb3RvdHlwZSkpcmV0dXJuITE7aWYobj09PWUpcmV0dXJuITA7dmFyIHI9ZGkoZSk7cmV0dXJuISFyJiZuPT09clswXX1mdW5jdGlvbiBoaChuKXtyZXR1cm4hIUxzJiZMcyBpbiBufXZhciBsaD1SZT9KbjpIaTtmdW5jdGlvbiBoZShuKXt2YXIgdD1uJiZuLmNvbnN0cnVjdG9yLGU9dHlwZW9mIHQ9PVwiZnVuY3Rpb25cIiYmdC5wcm90b3R5cGV8fEh0O3JldHVybiBuPT09ZX1mdW5jdGlvbiBMdShuKXtyZXR1cm4gbj09PW4mJiFLKG4pfWZ1bmN0aW9uIER1KG4sdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBlPT1udWxsPyExOmVbbl09PT10JiYodCE9PWl8fG4gaW4gTShlKSl9fWZ1bmN0aW9uIHBoKG4pe3ZhciB0PXNyKG4sZnVuY3Rpb24ocil7cmV0dXJuIGUuc2l6ZT09PXByJiZlLmNsZWFyKCkscn0pLGU9dC5jYWNoZTtyZXR1cm4gdH1mdW5jdGlvbiBkaChuLHQpe3ZhciBlPW5bMV0scj10WzFdLHM9ZXxyLG89czwodm58Y3R8TW4pLGY9cj09TW4mJmU9PURufHxyPT1NbiYmZT09S3QmJm5bN10ubGVuZ3RoPD10WzhdfHxyPT0oTW58S3QpJiZ0WzddLmxlbmd0aDw9dFs4XSYmZT09RG47aWYoIShvfHxmKSlyZXR1cm4gbjtyJnZuJiYoblsyXT10WzJdLHN8PWUmdm4/MDpCaSk7dmFyIGM9dFszXTtpZihjKXt2YXIgbD1uWzNdO25bM109bD9ndShsLGMsdFs0XSk6YyxuWzRdPWw/dHQoblszXSxJdCk6dFs0XX1yZXR1cm4gYz10WzVdLGMmJihsPW5bNV0sbls1XT1sP3Z1KGwsYyx0WzZdKTpjLG5bNl09bD90dChuWzVdLEl0KTp0WzZdKSxjPXRbN10sYyYmKG5bN109YyksciZNbiYmKG5bOF09bls4XT09bnVsbD90WzhdOm5uKG5bOF0sdFs4XSkpLG5bOV09PW51bGwmJihuWzldPXRbOV0pLG5bMF09dFswXSxuWzFdPXMsbn1mdW5jdGlvbiBnaChuKXt2YXIgdD1bXTtpZihuIT1udWxsKWZvcih2YXIgZSBpbiBNKG4pKXQucHVzaChlKTtyZXR1cm4gdH1mdW5jdGlvbiB2aChuKXtyZXR1cm4gVGUuY2FsbChuKX1mdW5jdGlvbiBOdShuLHQsZSl7cmV0dXJuIHQ9USh0PT09aT9uLmxlbmd0aC0xOnQsMCksZnVuY3Rpb24oKXtmb3IodmFyIHI9YXJndW1lbnRzLHM9LTEsbz1RKHIubGVuZ3RoLXQsMCksZj1kKG8pOysrczxvOylmW3NdPXJbdCtzXTtzPS0xO2Zvcih2YXIgYz1kKHQrMSk7KytzPHQ7KWNbc109cltzXTtyZXR1cm4gY1t0XT1lKGYpLGNuKG4sdGhpcyxjKX19ZnVuY3Rpb24gSHUobix0KXtyZXR1cm4gdC5sZW5ndGg8Mj9uOl90KG4sQ24odCwwLC0xKSl9ZnVuY3Rpb24gX2gobix0KXtmb3IodmFyIGU9bi5sZW5ndGgscj1ubih0Lmxlbmd0aCxlKSxzPXVuKG4pO3ItLTspe3ZhciBvPXRbcl07bltyXT1abihvLGUpP3Nbb106aX1yZXR1cm4gbn1mdW5jdGlvbiB3aShuLHQpe2lmKCEodD09PVwiY29uc3RydWN0b3JcIiYmdHlwZW9mIG5bdF09PVwiZnVuY3Rpb25cIikmJnQhPVwiX19wcm90b19fXCIpcmV0dXJuIG5bdF19dmFyICR1PVd1KHN1KSxsZT1MZnx8ZnVuY3Rpb24obix0KXtyZXR1cm4gay5zZXRUaW1lb3V0KG4sdCl9LFBpPVd1KE1jKTtmdW5jdGlvbiBVdShuLHQsZSl7dmFyIHI9dCtcIlwiO3JldHVybiBQaShuLG9oKHIsbWgoc2gociksZSkpKX1mdW5jdGlvbiBXdShuKXt2YXIgdD0wLGU9MDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgcj0kZigpLHM9VWEtKHItZSk7aWYoZT1yLHM+MCl7aWYoKyt0Pj0kYSlyZXR1cm4gYXJndW1lbnRzWzBdfWVsc2UgdD0wO3JldHVybiBuLmFwcGx5KGksYXJndW1lbnRzKX19ZnVuY3Rpb24gdHIobix0KXt2YXIgZT0tMSxyPW4ubGVuZ3RoLHM9ci0xO2Zvcih0PXQ9PT1pP3I6dDsrK2U8dDspe3ZhciBvPWVpKGUscyksZj1uW29dO25bb109bltlXSxuW2VdPWZ9cmV0dXJuIG4ubGVuZ3RoPXQsbn12YXIgRnU9cGgoZnVuY3Rpb24obil7dmFyIHQ9W107cmV0dXJuIG4uY2hhckNvZGVBdCgwKT09PTQ2JiZ0LnB1c2goXCJcIiksbi5yZXBsYWNlKHNvLGZ1bmN0aW9uKGUscixzLG8pe3QucHVzaChzP28ucmVwbGFjZShwbyxcIiQxXCIpOnJ8fGUpfSksdH0pO2Z1bmN0aW9uIFduKG4pe2lmKHR5cGVvZiBuPT1cInN0cmluZ1wifHxwbihuKSlyZXR1cm4gbjt2YXIgdD1uK1wiXCI7cmV0dXJuIHQ9PVwiMFwiJiYxL249PS1odD9cIi0wXCI6dH1mdW5jdGlvbiB3dChuKXtpZihuIT1udWxsKXt0cnl7cmV0dXJuIGJlLmNhbGwobil9Y2F0Y2h7fXRyeXtyZXR1cm4gbitcIlwifWNhdGNoe319cmV0dXJuXCJcIn1mdW5jdGlvbiBtaChuLHQpe3JldHVybiBtbihHYSxmdW5jdGlvbihlKXt2YXIgcj1cIl8uXCIrZVswXTt0JmVbMV0mJiFFZShuLHIpJiZuLnB1c2gocil9KSxuLnNvcnQoKX1mdW5jdGlvbiBNdShuKXtpZihuIGluc3RhbmNlb2YgSClyZXR1cm4gbi5jbG9uZSgpO3ZhciB0PW5ldyBQbihuLl9fd3JhcHBlZF9fLG4uX19jaGFpbl9fKTtyZXR1cm4gdC5fX2FjdGlvbnNfXz11bihuLl9fYWN0aW9uc19fKSx0Ll9faW5kZXhfXz1uLl9faW5kZXhfXyx0Ll9fdmFsdWVzX189bi5fX3ZhbHVlc19fLHR9ZnVuY3Rpb24gd2gobix0LGUpeyhlP3JuKG4sdCxlKTp0PT09aSk/dD0xOnQ9UShSKHQpLDApO3ZhciByPW49PW51bGw/MDpuLmxlbmd0aDtpZighcnx8dDwxKXJldHVybltdO2Zvcih2YXIgcz0wLG89MCxmPWQoVWUoci90KSk7czxyOylmW28rK109Q24obixzLHMrPXQpO3JldHVybiBmfWZ1bmN0aW9uIFBoKG4pe2Zvcih2YXIgdD0tMSxlPW49PW51bGw/MDpuLmxlbmd0aCxyPTAscz1bXTsrK3Q8ZTspe3ZhciBvPW5bdF07byYmKHNbcisrXT1vKX1yZXR1cm4gc31mdW5jdGlvbiBBaCgpe3ZhciBuPWFyZ3VtZW50cy5sZW5ndGg7aWYoIW4pcmV0dXJuW107Zm9yKHZhciB0PWQobi0xKSxlPWFyZ3VtZW50c1swXSxyPW47ci0tOyl0W3ItMV09YXJndW1lbnRzW3JdO3JldHVybiBudChPKGUpP3VuKGUpOltlXSxqKHQsMSkpfXZhciBDaD1MKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIFoobik/dWUobixqKHQsMSxaLCEwKSk6W119KSxJaD1MKGZ1bmN0aW9uKG4sdCl7dmFyIGU9SW4odCk7cmV0dXJuIFooZSkmJihlPWkpLFoobik/dWUobixqKHQsMSxaLCEwKSx4KGUsMikpOltdfSkseGg9TChmdW5jdGlvbihuLHQpe3ZhciBlPUluKHQpO3JldHVybiBaKGUpJiYoZT1pKSxaKG4pP3VlKG4saih0LDEsWiwhMCksaSxlKTpbXX0pO2Z1bmN0aW9uIEVoKG4sdCxlKXt2YXIgcj1uPT1udWxsPzA6bi5sZW5ndGg7cmV0dXJuIHI/KHQ9ZXx8dD09PWk/MTpSKHQpLENuKG4sdDwwPzA6dCxyKSk6W119ZnVuY3Rpb24geWgobix0LGUpe3ZhciByPW49PW51bGw/MDpuLmxlbmd0aDtyZXR1cm4gcj8odD1lfHx0PT09aT8xOlIodCksdD1yLXQsQ24obiwwLHQ8MD8wOnQpKTpbXX1mdW5jdGlvbiBTaChuLHQpe3JldHVybiBuJiZuLmxlbmd0aD9aZShuLHgodCwzKSwhMCwhMCk6W119ZnVuY3Rpb24gT2gobix0KXtyZXR1cm4gbiYmbi5sZW5ndGg/WmUobix4KHQsMyksITApOltdfWZ1bmN0aW9uIFJoKG4sdCxlLHIpe3ZhciBzPW49PW51bGw/MDpuLmxlbmd0aDtyZXR1cm4gcz8oZSYmdHlwZW9mIGUhPVwibnVtYmVyXCImJnJuKG4sdCxlKSYmKGU9MCxyPXMpLEFjKG4sdCxlLHIpKTpbXX1mdW5jdGlvbiBxdShuLHQsZSl7dmFyIHI9bj09bnVsbD8wOm4ubGVuZ3RoO2lmKCFyKXJldHVybi0xO3ZhciBzPWU9PW51bGw/MDpSKGUpO3JldHVybiBzPDAmJihzPVEocitzLDApKSx5ZShuLHgodCwzKSxzKX1mdW5jdGlvbiBCdShuLHQsZSl7dmFyIHI9bj09bnVsbD8wOm4ubGVuZ3RoO2lmKCFyKXJldHVybi0xO3ZhciBzPXItMTtyZXR1cm4gZSE9PWkmJihzPVIoZSkscz1lPDA/UShyK3MsMCk6bm4ocyxyLTEpKSx5ZShuLHgodCwzKSxzLCEwKX1mdW5jdGlvbiBHdShuKXt2YXIgdD1uPT1udWxsPzA6bi5sZW5ndGg7cmV0dXJuIHQ/aihuLDEpOltdfWZ1bmN0aW9uIGJoKG4pe3ZhciB0PW49PW51bGw/MDpuLmxlbmd0aDtyZXR1cm4gdD9qKG4saHQpOltdfWZ1bmN0aW9uIFRoKG4sdCl7dmFyIGU9bj09bnVsbD8wOm4ubGVuZ3RoO3JldHVybiBlPyh0PXQ9PT1pPzE6Uih0KSxqKG4sdCkpOltdfWZ1bmN0aW9uIExoKG4pe2Zvcih2YXIgdD0tMSxlPW49PW51bGw/MDpuLmxlbmd0aCxyPXt9OysrdDxlOyl7dmFyIHM9blt0XTtyW3NbMF1dPXNbMV19cmV0dXJuIHJ9ZnVuY3Rpb24genUobil7cmV0dXJuIG4mJm4ubGVuZ3RoP25bMF06aX1mdW5jdGlvbiBEaChuLHQsZSl7dmFyIHI9bj09bnVsbD8wOm4ubGVuZ3RoO2lmKCFyKXJldHVybi0xO3ZhciBzPWU9PW51bGw/MDpSKGUpO3JldHVybiBzPDAmJihzPVEocitzLDApKSxUdChuLHQscyl9ZnVuY3Rpb24gTmgobil7dmFyIHQ9bj09bnVsbD8wOm4ubGVuZ3RoO3JldHVybiB0P0NuKG4sMCwtMSk6W119dmFyIEhoPUwoZnVuY3Rpb24obil7dmFyIHQ9RyhuLGFpKTtyZXR1cm4gdC5sZW5ndGgmJnRbMF09PT1uWzBdP1ZyKHQpOltdfSksJGg9TChmdW5jdGlvbihuKXt2YXIgdD1JbihuKSxlPUcobixhaSk7cmV0dXJuIHQ9PT1JbihlKT90PWk6ZS5wb3AoKSxlLmxlbmd0aCYmZVswXT09PW5bMF0/VnIoZSx4KHQsMikpOltdfSksVWg9TChmdW5jdGlvbihuKXt2YXIgdD1JbihuKSxlPUcobixhaSk7cmV0dXJuIHQ9dHlwZW9mIHQ9PVwiZnVuY3Rpb25cIj90OmksdCYmZS5wb3AoKSxlLmxlbmd0aCYmZVswXT09PW5bMF0/VnIoZSxpLHQpOltdfSk7ZnVuY3Rpb24gV2gobix0KXtyZXR1cm4gbj09bnVsbD9cIlwiOk5mLmNhbGwobix0KX1mdW5jdGlvbiBJbihuKXt2YXIgdD1uPT1udWxsPzA6bi5sZW5ndGg7cmV0dXJuIHQ/blt0LTFdOml9ZnVuY3Rpb24gRmgobix0LGUpe3ZhciByPW49PW51bGw/MDpuLmxlbmd0aDtpZighcilyZXR1cm4tMTt2YXIgcz1yO3JldHVybiBlIT09aSYmKHM9UihlKSxzPXM8MD9RKHIrcywwKTpubihzLHItMSkpLHQ9PT10P21mKG4sdCxzKTp5ZShuLHhzLHMsITApfWZ1bmN0aW9uIE1oKG4sdCl7cmV0dXJuIG4mJm4ubGVuZ3RoP3R1KG4sUih0KSk6aX12YXIgcWg9TChLdSk7ZnVuY3Rpb24gS3Uobix0KXtyZXR1cm4gbiYmbi5sZW5ndGgmJnQmJnQubGVuZ3RoP3RpKG4sdCk6bn1mdW5jdGlvbiBCaChuLHQsZSl7cmV0dXJuIG4mJm4ubGVuZ3RoJiZ0JiZ0Lmxlbmd0aD90aShuLHQseChlLDIpKTpufWZ1bmN0aW9uIEdoKG4sdCxlKXtyZXR1cm4gbiYmbi5sZW5ndGgmJnQmJnQubGVuZ3RoP3RpKG4sdCxpLGUpOm59dmFyIHpoPVluKGZ1bmN0aW9uKG4sdCl7dmFyIGU9bj09bnVsbD8wOm4ubGVuZ3RoLHI9WnIobix0KTtyZXR1cm4gaXUobixHKHQsZnVuY3Rpb24ocyl7cmV0dXJuIFpuKHMsZSk/K3M6c30pLnNvcnQoZHUpKSxyfSk7ZnVuY3Rpb24gS2gobix0KXt2YXIgZT1bXTtpZighKG4mJm4ubGVuZ3RoKSlyZXR1cm4gZTt2YXIgcj0tMSxzPVtdLG89bi5sZW5ndGg7Zm9yKHQ9eCh0LDMpOysrcjxvOyl7dmFyIGY9bltyXTt0KGYscixuKSYmKGUucHVzaChmKSxzLnB1c2gocikpfXJldHVybiBpdShuLHMpLGV9ZnVuY3Rpb24gQWkobil7cmV0dXJuIG49PW51bGw/bjpXZi5jYWxsKG4pfWZ1bmN0aW9uIFloKG4sdCxlKXt2YXIgcj1uPT1udWxsPzA6bi5sZW5ndGg7cmV0dXJuIHI/KGUmJnR5cGVvZiBlIT1cIm51bWJlclwiJiZybihuLHQsZSk/KHQ9MCxlPXIpOih0PXQ9PW51bGw/MDpSKHQpLGU9ZT09PWk/cjpSKGUpKSxDbihuLHQsZSkpOltdfWZ1bmN0aW9uIFpoKG4sdCl7cmV0dXJuIFllKG4sdCl9ZnVuY3Rpb24gSmgobix0LGUpe3JldHVybiBpaShuLHQseChlLDIpKX1mdW5jdGlvbiBYaChuLHQpe3ZhciBlPW49PW51bGw/MDpuLmxlbmd0aDtpZihlKXt2YXIgcj1ZZShuLHQpO2lmKHI8ZSYmYm4obltyXSx0KSlyZXR1cm4gcn1yZXR1cm4tMX1mdW5jdGlvbiBRaChuLHQpe3JldHVybiBZZShuLHQsITApfWZ1bmN0aW9uIFZoKG4sdCxlKXtyZXR1cm4gaWkobix0LHgoZSwyKSwhMCl9ZnVuY3Rpb24ga2gobix0KXt2YXIgZT1uPT1udWxsPzA6bi5sZW5ndGg7aWYoZSl7dmFyIHI9WWUobix0LCEwKS0xO2lmKGJuKG5bcl0sdCkpcmV0dXJuIHJ9cmV0dXJuLTF9ZnVuY3Rpb24gamgobil7cmV0dXJuIG4mJm4ubGVuZ3RoP3V1KG4pOltdfWZ1bmN0aW9uIG5sKG4sdCl7cmV0dXJuIG4mJm4ubGVuZ3RoP3V1KG4seCh0LDIpKTpbXX1mdW5jdGlvbiB0bChuKXt2YXIgdD1uPT1udWxsPzA6bi5sZW5ndGg7cmV0dXJuIHQ/Q24obiwxLHQpOltdfWZ1bmN0aW9uIGVsKG4sdCxlKXtyZXR1cm4gbiYmbi5sZW5ndGg/KHQ9ZXx8dD09PWk/MTpSKHQpLENuKG4sMCx0PDA/MDp0KSk6W119ZnVuY3Rpb24gcmwobix0LGUpe3ZhciByPW49PW51bGw/MDpuLmxlbmd0aDtyZXR1cm4gcj8odD1lfHx0PT09aT8xOlIodCksdD1yLXQsQ24obix0PDA/MDp0LHIpKTpbXX1mdW5jdGlvbiBpbChuLHQpe3JldHVybiBuJiZuLmxlbmd0aD9aZShuLHgodCwzKSwhMSwhMCk6W119ZnVuY3Rpb24gc2wobix0KXtyZXR1cm4gbiYmbi5sZW5ndGg/WmUobix4KHQsMykpOltdfXZhciB1bD1MKGZ1bmN0aW9uKG4pe3JldHVybiBpdChqKG4sMSxaLCEwKSl9KSxhbD1MKGZ1bmN0aW9uKG4pe3ZhciB0PUluKG4pO3JldHVybiBaKHQpJiYodD1pKSxpdChqKG4sMSxaLCEwKSx4KHQsMikpfSksb2w9TChmdW5jdGlvbihuKXt2YXIgdD1JbihuKTtyZXR1cm4gdD10eXBlb2YgdD09XCJmdW5jdGlvblwiP3Q6aSxpdChqKG4sMSxaLCEwKSxpLHQpfSk7ZnVuY3Rpb24gZmwobil7cmV0dXJuIG4mJm4ubGVuZ3RoP2l0KG4pOltdfWZ1bmN0aW9uIGNsKG4sdCl7cmV0dXJuIG4mJm4ubGVuZ3RoP2l0KG4seCh0LDIpKTpbXX1mdW5jdGlvbiBobChuLHQpe3JldHVybiB0PXR5cGVvZiB0PT1cImZ1bmN0aW9uXCI/dDppLG4mJm4ubGVuZ3RoP2l0KG4saSx0KTpbXX1mdW5jdGlvbiBDaShuKXtpZighKG4mJm4ubGVuZ3RoKSlyZXR1cm5bXTt2YXIgdD0wO3JldHVybiBuPWpuKG4sZnVuY3Rpb24oZSl7aWYoWihlKSlyZXR1cm4gdD1RKGUubGVuZ3RoLHQpLCEwfSksRnIodCxmdW5jdGlvbihlKXtyZXR1cm4gRyhuLCRyKGUpKX0pfWZ1bmN0aW9uIFl1KG4sdCl7aWYoIShuJiZuLmxlbmd0aCkpcmV0dXJuW107dmFyIGU9Q2kobik7cmV0dXJuIHQ9PW51bGw/ZTpHKGUsZnVuY3Rpb24ocil7cmV0dXJuIGNuKHQsaSxyKX0pfXZhciBsbD1MKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIFoobik/dWUobix0KTpbXX0pLHBsPUwoZnVuY3Rpb24obil7cmV0dXJuIHVpKGpuKG4sWikpfSksZGw9TChmdW5jdGlvbihuKXt2YXIgdD1JbihuKTtyZXR1cm4gWih0KSYmKHQ9aSksdWkoam4obixaKSx4KHQsMikpfSksZ2w9TChmdW5jdGlvbihuKXt2YXIgdD1JbihuKTtyZXR1cm4gdD10eXBlb2YgdD09XCJmdW5jdGlvblwiP3Q6aSx1aShqbihuLFopLGksdCl9KSx2bD1MKENpKTtmdW5jdGlvbiBfbChuLHQpe3JldHVybiBjdShufHxbXSx0fHxbXSxzZSl9ZnVuY3Rpb24gbWwobix0KXtyZXR1cm4gY3Uobnx8W10sdHx8W10sZmUpfXZhciB3bD1MKGZ1bmN0aW9uKG4pe3ZhciB0PW4ubGVuZ3RoLGU9dD4xP25bdC0xXTppO3JldHVybiBlPXR5cGVvZiBlPT1cImZ1bmN0aW9uXCI/KG4ucG9wKCksZSk6aSxZdShuLGUpfSk7ZnVuY3Rpb24gWnUobil7dmFyIHQ9YShuKTtyZXR1cm4gdC5fX2NoYWluX189ITAsdH1mdW5jdGlvbiBQbChuLHQpe3JldHVybiB0KG4pLG59ZnVuY3Rpb24gZXIobix0KXtyZXR1cm4gdChuKX12YXIgQWw9WW4oZnVuY3Rpb24obil7dmFyIHQ9bi5sZW5ndGgsZT10P25bMF06MCxyPXRoaXMuX193cmFwcGVkX18scz1mdW5jdGlvbihvKXtyZXR1cm4gWnIobyxuKX07cmV0dXJuIHQ+MXx8dGhpcy5fX2FjdGlvbnNfXy5sZW5ndGh8fCEociBpbnN0YW5jZW9mIEgpfHwhWm4oZSk/dGhpcy50aHJ1KHMpOihyPXIuc2xpY2UoZSwrZSsodD8xOjApKSxyLl9fYWN0aW9uc19fLnB1c2goe2Z1bmM6ZXIsYXJnczpbc10sdGhpc0FyZzppfSksbmV3IFBuKHIsdGhpcy5fX2NoYWluX18pLnRocnUoZnVuY3Rpb24obyl7cmV0dXJuIHQmJiFvLmxlbmd0aCYmby5wdXNoKGkpLG99KSl9KTtmdW5jdGlvbiBDbCgpe3JldHVybiBadSh0aGlzKX1mdW5jdGlvbiBJbCgpe3JldHVybiBuZXcgUG4odGhpcy52YWx1ZSgpLHRoaXMuX19jaGFpbl9fKX1mdW5jdGlvbiB4bCgpe3RoaXMuX192YWx1ZXNfXz09PWkmJih0aGlzLl9fdmFsdWVzX189YWEodGhpcy52YWx1ZSgpKSk7dmFyIG49dGhpcy5fX2luZGV4X18+PXRoaXMuX192YWx1ZXNfXy5sZW5ndGgsdD1uP2k6dGhpcy5fX3ZhbHVlc19fW3RoaXMuX19pbmRleF9fKytdO3JldHVybntkb25lOm4sdmFsdWU6dH19ZnVuY3Rpb24gRWwoKXtyZXR1cm4gdGhpc31mdW5jdGlvbiB5bChuKXtmb3IodmFyIHQsZT10aGlzO2UgaW5zdGFuY2VvZiBxZTspe3ZhciByPU11KGUpO3IuX19pbmRleF9fPTAsci5fX3ZhbHVlc19fPWksdD9zLl9fd3JhcHBlZF9fPXI6dD1yO3ZhciBzPXI7ZT1lLl9fd3JhcHBlZF9ffXJldHVybiBzLl9fd3JhcHBlZF9fPW4sdH1mdW5jdGlvbiBTbCgpe3ZhciBuPXRoaXMuX193cmFwcGVkX187aWYobiBpbnN0YW5jZW9mIEgpe3ZhciB0PW47cmV0dXJuIHRoaXMuX19hY3Rpb25zX18ubGVuZ3RoJiYodD1uZXcgSCh0aGlzKSksdD10LnJldmVyc2UoKSx0Ll9fYWN0aW9uc19fLnB1c2goe2Z1bmM6ZXIsYXJnczpbQWldLHRoaXNBcmc6aX0pLG5ldyBQbih0LHRoaXMuX19jaGFpbl9fKX1yZXR1cm4gdGhpcy50aHJ1KEFpKX1mdW5jdGlvbiBPbCgpe3JldHVybiBmdSh0aGlzLl9fd3JhcHBlZF9fLHRoaXMuX19hY3Rpb25zX18pfXZhciBSbD1KZShmdW5jdGlvbihuLHQsZSl7Ri5jYWxsKG4sZSk/KytuW2VdOnpuKG4sZSwxKX0pO2Z1bmN0aW9uIGJsKG4sdCxlKXt2YXIgcj1PKG4pP0NzOlBjO3JldHVybiBlJiZybihuLHQsZSkmJih0PWkpLHIobix4KHQsMykpfWZ1bmN0aW9uIFRsKG4sdCl7dmFyIGU9TyhuKT9qbjpZcztyZXR1cm4gZShuLHgodCwzKSl9dmFyIExsPVB1KHF1KSxEbD1QdShCdSk7ZnVuY3Rpb24gTmwobix0KXtyZXR1cm4gaihycihuLHQpLDEpfWZ1bmN0aW9uIEhsKG4sdCl7cmV0dXJuIGoocnIobix0KSxodCl9ZnVuY3Rpb24gJGwobix0LGUpe3JldHVybiBlPWU9PT1pPzE6UihlKSxqKHJyKG4sdCksZSl9ZnVuY3Rpb24gSnUobix0KXt2YXIgZT1PKG4pP21uOnJ0O3JldHVybiBlKG4seCh0LDMpKX1mdW5jdGlvbiBYdShuLHQpe3ZhciBlPU8obik/bmY6S3M7cmV0dXJuIGUobix4KHQsMykpfXZhciBVbD1KZShmdW5jdGlvbihuLHQsZSl7Ri5jYWxsKG4sZSk/bltlXS5wdXNoKHQpOnpuKG4sZSxbdF0pfSk7ZnVuY3Rpb24gV2wobix0LGUscil7bj1hbihuKT9uOkd0KG4pLGU9ZSYmIXI/UihlKTowO3ZhciBzPW4ubGVuZ3RoO3JldHVybiBlPDAmJihlPVEocytlLDApKSxvcihuKT9lPD1zJiZuLmluZGV4T2YodCxlKT4tMTohIXMmJlR0KG4sdCxlKT4tMX12YXIgRmw9TChmdW5jdGlvbihuLHQsZSl7dmFyIHI9LTEscz10eXBlb2YgdD09XCJmdW5jdGlvblwiLG89YW4obik/ZChuLmxlbmd0aCk6W107cmV0dXJuIHJ0KG4sZnVuY3Rpb24oZil7b1srK3JdPXM/Y24odCxmLGUpOmFlKGYsdCxlKX0pLG99KSxNbD1KZShmdW5jdGlvbihuLHQsZSl7em4obixlLHQpfSk7ZnVuY3Rpb24gcnIobix0KXt2YXIgZT1PKG4pP0c6a3M7cmV0dXJuIGUobix4KHQsMykpfWZ1bmN0aW9uIHFsKG4sdCxlLHIpe3JldHVybiBuPT1udWxsP1tdOihPKHQpfHwodD10PT1udWxsP1tdOlt0XSksZT1yP2k6ZSxPKGUpfHwoZT1lPT1udWxsP1tdOltlXSksZXUobix0LGUpKX12YXIgQmw9SmUoZnVuY3Rpb24obix0LGUpe25bZT8wOjFdLnB1c2godCl9LGZ1bmN0aW9uKCl7cmV0dXJuW1tdLFtdXX0pO2Z1bmN0aW9uIEdsKG4sdCxlKXt2YXIgcj1PKG4pP05yOnlzLHM9YXJndW1lbnRzLmxlbmd0aDwzO3JldHVybiByKG4seCh0LDQpLGUscyxydCl9ZnVuY3Rpb24gemwobix0LGUpe3ZhciByPU8obik/dGY6eXMscz1hcmd1bWVudHMubGVuZ3RoPDM7cmV0dXJuIHIobix4KHQsNCksZSxzLEtzKX1mdW5jdGlvbiBLbChuLHQpe3ZhciBlPU8obik/am46WXM7cmV0dXJuIGUobix1cih4KHQsMykpKX1mdW5jdGlvbiBZbChuKXt2YXIgdD1PKG4pP3FzOldjO3JldHVybiB0KG4pfWZ1bmN0aW9uIFpsKG4sdCxlKXsoZT9ybihuLHQsZSk6dD09PWkpP3Q9MTp0PVIodCk7dmFyIHI9TyhuKT9nYzpGYztyZXR1cm4gcihuLHQpfWZ1bmN0aW9uIEpsKG4pe3ZhciB0PU8obik/dmM6cWM7cmV0dXJuIHQobil9ZnVuY3Rpb24gWGwobil7aWYobj09bnVsbClyZXR1cm4gMDtpZihhbihuKSlyZXR1cm4gb3Iobik/RHQobik6bi5sZW5ndGg7dmFyIHQ9dG4obik7cmV0dXJuIHQ9PXlufHx0PT1Tbj9uLnNpemU6anIobikubGVuZ3RofWZ1bmN0aW9uIFFsKG4sdCxlKXt2YXIgcj1PKG4pP0hyOkJjO3JldHVybiBlJiZybihuLHQsZSkmJih0PWkpLHIobix4KHQsMykpfXZhciBWbD1MKGZ1bmN0aW9uKG4sdCl7aWYobj09bnVsbClyZXR1cm5bXTt2YXIgZT10Lmxlbmd0aDtyZXR1cm4gZT4xJiZybihuLHRbMF0sdFsxXSk/dD1bXTplPjImJnJuKHRbMF0sdFsxXSx0WzJdKSYmKHQ9W3RbMF1dKSxldShuLGoodCwxKSxbXSl9KSxpcj1UZnx8ZnVuY3Rpb24oKXtyZXR1cm4gay5EYXRlLm5vdygpfTtmdW5jdGlvbiBrbChuLHQpe2lmKHR5cGVvZiB0IT1cImZ1bmN0aW9uXCIpdGhyb3cgbmV3IHduKEQpO3JldHVybiBuPVIobiksZnVuY3Rpb24oKXtpZigtLW48MSlyZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fWZ1bmN0aW9uIFF1KG4sdCxlKXtyZXR1cm4gdD1lP2k6dCx0PW4mJnQ9PW51bGw/bi5sZW5ndGg6dCxLbihuLE1uLGksaSxpLGksdCl9ZnVuY3Rpb24gVnUobix0KXt2YXIgZTtpZih0eXBlb2YgdCE9XCJmdW5jdGlvblwiKXRocm93IG5ldyB3bihEKTtyZXR1cm4gbj1SKG4pLGZ1bmN0aW9uKCl7cmV0dXJuLS1uPjAmJihlPXQuYXBwbHkodGhpcyxhcmd1bWVudHMpKSxuPD0xJiYodD1pKSxlfX12YXIgSWk9TChmdW5jdGlvbihuLHQsZSl7dmFyIHI9dm47aWYoZS5sZW5ndGgpe3ZhciBzPXR0KGUscXQoSWkpKTtyfD1Obn1yZXR1cm4gS24obixyLHQsZSxzKX0pLGt1PUwoZnVuY3Rpb24obix0LGUpe3ZhciByPXZufGN0O2lmKGUubGVuZ3RoKXt2YXIgcz10dChlLHF0KGt1KSk7cnw9Tm59cmV0dXJuIEtuKHQscixuLGUscyl9KTtmdW5jdGlvbiBqdShuLHQsZSl7dD1lP2k6dDt2YXIgcj1LbihuLERuLGksaSxpLGksaSx0KTtyZXR1cm4gci5wbGFjZWhvbGRlcj1qdS5wbGFjZWhvbGRlcixyfWZ1bmN0aW9uIG5hKG4sdCxlKXt0PWU/aTp0O3ZhciByPUtuKG4seXQsaSxpLGksaSxpLHQpO3JldHVybiByLnBsYWNlaG9sZGVyPW5hLnBsYWNlaG9sZGVyLHJ9ZnVuY3Rpb24gdGEobix0LGUpe3ZhciByLHMsbyxmLGMsbCx2PTAsXz0hMSxtPSExLFA9ITA7aWYodHlwZW9mIG4hPVwiZnVuY3Rpb25cIil0aHJvdyBuZXcgd24oRCk7dD14bih0KXx8MCxLKGUpJiYoXz0hIWUubGVhZGluZyxtPVwibWF4V2FpdFwiaW4gZSxvPW0/USh4bihlLm1heFdhaXQpfHwwLHQpOm8sUD1cInRyYWlsaW5nXCJpbiBlPyEhZS50cmFpbGluZzpQKTtmdW5jdGlvbiBJKEope3ZhciBUbj1yLFFuPXM7cmV0dXJuIHI9cz1pLHY9SixmPW4uYXBwbHkoUW4sVG4pLGZ9ZnVuY3Rpb24gRShKKXtyZXR1cm4gdj1KLGM9bGUoTix0KSxfP0koSik6Zn1mdW5jdGlvbiBUKEope3ZhciBUbj1KLWwsUW49Si12LFBhPXQtVG47cmV0dXJuIG0/bm4oUGEsby1Rbik6UGF9ZnVuY3Rpb24geShKKXt2YXIgVG49Si1sLFFuPUotdjtyZXR1cm4gbD09PWl8fFRuPj10fHxUbjwwfHxtJiZRbj49b31mdW5jdGlvbiBOKCl7dmFyIEo9aXIoKTtpZih5KEopKXJldHVybiAkKEopO2M9bGUoTixUKEopKX1mdW5jdGlvbiAkKEope3JldHVybiBjPWksUCYmcj9JKEopOihyPXM9aSxmKX1mdW5jdGlvbiBkbigpe2MhPT1pJiZodShjKSx2PTAscj1sPXM9Yz1pfWZ1bmN0aW9uIHNuKCl7cmV0dXJuIGM9PT1pP2Y6JChpcigpKX1mdW5jdGlvbiBnbigpe3ZhciBKPWlyKCksVG49eShKKTtpZihyPWFyZ3VtZW50cyxzPXRoaXMsbD1KLFRuKXtpZihjPT09aSlyZXR1cm4gRShsKTtpZihtKXJldHVybiBodShjKSxjPWxlKE4sdCksSShsKX1yZXR1cm4gYz09PWkmJihjPWxlKE4sdCkpLGZ9cmV0dXJuIGduLmNhbmNlbD1kbixnbi5mbHVzaD1zbixnbn12YXIgamw9TChmdW5jdGlvbihuLHQpe3JldHVybiB6cyhuLDEsdCl9KSxucD1MKGZ1bmN0aW9uKG4sdCxlKXtyZXR1cm4genMobix4bih0KXx8MCxlKX0pO2Z1bmN0aW9uIHRwKG4pe3JldHVybiBLbihuLGRyKX1mdW5jdGlvbiBzcihuLHQpe2lmKHR5cGVvZiBuIT1cImZ1bmN0aW9uXCJ8fHQhPW51bGwmJnR5cGVvZiB0IT1cImZ1bmN0aW9uXCIpdGhyb3cgbmV3IHduKEQpO3ZhciBlPWZ1bmN0aW9uKCl7dmFyIHI9YXJndW1lbnRzLHM9dD90LmFwcGx5KHRoaXMscik6clswXSxvPWUuY2FjaGU7aWYoby5oYXMocykpcmV0dXJuIG8uZ2V0KHMpO3ZhciBmPW4uYXBwbHkodGhpcyxyKTtyZXR1cm4gZS5jYWNoZT1vLnNldChzLGYpfHxvLGZ9O3JldHVybiBlLmNhY2hlPW5ldyhzci5DYWNoZXx8R24pLGV9c3IuQ2FjaGU9R247ZnVuY3Rpb24gdXIobil7aWYodHlwZW9mIG4hPVwiZnVuY3Rpb25cIil0aHJvdyBuZXcgd24oRCk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzO3N3aXRjaCh0Lmxlbmd0aCl7Y2FzZSAwOnJldHVybiFuLmNhbGwodGhpcyk7Y2FzZSAxOnJldHVybiFuLmNhbGwodGhpcyx0WzBdKTtjYXNlIDI6cmV0dXJuIW4uY2FsbCh0aGlzLHRbMF0sdFsxXSk7Y2FzZSAzOnJldHVybiFuLmNhbGwodGhpcyx0WzBdLHRbMV0sdFsyXSl9cmV0dXJuIW4uYXBwbHkodGhpcyx0KX19ZnVuY3Rpb24gZXAobil7cmV0dXJuIFZ1KDIsbil9dmFyIHJwPUdjKGZ1bmN0aW9uKG4sdCl7dD10Lmxlbmd0aD09MSYmTyh0WzBdKT9HKHRbMF0saG4oeCgpKSk6RyhqKHQsMSksaG4oeCgpKSk7dmFyIGU9dC5sZW5ndGg7cmV0dXJuIEwoZnVuY3Rpb24ocil7Zm9yKHZhciBzPS0xLG89bm4oci5sZW5ndGgsZSk7KytzPG87KXJbc109dFtzXS5jYWxsKHRoaXMscltzXSk7cmV0dXJuIGNuKG4sdGhpcyxyKX0pfSkseGk9TChmdW5jdGlvbihuLHQpe3ZhciBlPXR0KHQscXQoeGkpKTtyZXR1cm4gS24obixObixpLHQsZSl9KSxlYT1MKGZ1bmN0aW9uKG4sdCl7dmFyIGU9dHQodCxxdChlYSkpO3JldHVybiBLbihuLFN0LGksdCxlKX0pLGlwPVluKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIEtuKG4sS3QsaSxpLGksdCl9KTtmdW5jdGlvbiBzcChuLHQpe2lmKHR5cGVvZiBuIT1cImZ1bmN0aW9uXCIpdGhyb3cgbmV3IHduKEQpO3JldHVybiB0PXQ9PT1pP3Q6Uih0KSxMKG4sdCl9ZnVuY3Rpb24gdXAobix0KXtpZih0eXBlb2YgbiE9XCJmdW5jdGlvblwiKXRocm93IG5ldyB3bihEKTtyZXR1cm4gdD10PT1udWxsPzA6UShSKHQpLDApLEwoZnVuY3Rpb24oZSl7dmFyIHI9ZVt0XSxzPXV0KGUsMCx0KTtyZXR1cm4gciYmbnQocyxyKSxjbihuLHRoaXMscyl9KX1mdW5jdGlvbiBhcChuLHQsZSl7dmFyIHI9ITAscz0hMDtpZih0eXBlb2YgbiE9XCJmdW5jdGlvblwiKXRocm93IG5ldyB3bihEKTtyZXR1cm4gSyhlKSYmKHI9XCJsZWFkaW5nXCJpbiBlPyEhZS5sZWFkaW5nOnIscz1cInRyYWlsaW5nXCJpbiBlPyEhZS50cmFpbGluZzpzKSx0YShuLHQse2xlYWRpbmc6cixtYXhXYWl0OnQsdHJhaWxpbmc6c30pfWZ1bmN0aW9uIG9wKG4pe3JldHVybiBRdShuLDEpfWZ1bmN0aW9uIGZwKG4sdCl7cmV0dXJuIHhpKG9pKHQpLG4pfWZ1bmN0aW9uIGNwKCl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuW107dmFyIG49YXJndW1lbnRzWzBdO3JldHVybiBPKG4pP246W25dfWZ1bmN0aW9uIGhwKG4pe3JldHVybiBBbihuLHh0KX1mdW5jdGlvbiBscChuLHQpe3JldHVybiB0PXR5cGVvZiB0PT1cImZ1bmN0aW9uXCI/dDppLEFuKG4seHQsdCl9ZnVuY3Rpb24gcHAobil7cmV0dXJuIEFuKG4sTG58eHQpfWZ1bmN0aW9uIGRwKG4sdCl7cmV0dXJuIHQ9dHlwZW9mIHQ9PVwiZnVuY3Rpb25cIj90OmksQW4obixMbnx4dCx0KX1mdW5jdGlvbiBncChuLHQpe3JldHVybiB0PT1udWxsfHxHcyhuLHQsVih0KSl9ZnVuY3Rpb24gYm4obix0KXtyZXR1cm4gbj09PXR8fG4hPT1uJiZ0IT09dH12YXIgdnA9a2UoUXIpLF9wPWtlKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIG4+PXR9KSxQdD1YcyhmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpP1hzOmZ1bmN0aW9uKG4pe3JldHVybiBZKG4pJiZGLmNhbGwobixcImNhbGxlZVwiKSYmIUhzLmNhbGwobixcImNhbGxlZVwiKX0sTz1kLmlzQXJyYXksbXA9dnM/aG4odnMpOnljO2Z1bmN0aW9uIGFuKG4pe3JldHVybiBuIT1udWxsJiZhcihuLmxlbmd0aCkmJiFKbihuKX1mdW5jdGlvbiBaKG4pe3JldHVybiBZKG4pJiZhbihuKX1mdW5jdGlvbiB3cChuKXtyZXR1cm4gbj09PSEwfHxuPT09ITF8fFkobikmJmVuKG4pPT1ZdH12YXIgYXQ9RGZ8fEhpLFBwPV9zP2huKF9zKTpTYztmdW5jdGlvbiBBcChuKXtyZXR1cm4gWShuKSYmbi5ub2RlVHlwZT09PTEmJiFwZShuKX1mdW5jdGlvbiBDcChuKXtpZihuPT1udWxsKXJldHVybiEwO2lmKGFuKG4pJiYoTyhuKXx8dHlwZW9mIG49PVwic3RyaW5nXCJ8fHR5cGVvZiBuLnNwbGljZT09XCJmdW5jdGlvblwifHxhdChuKXx8QnQobil8fFB0KG4pKSlyZXR1cm4hbi5sZW5ndGg7dmFyIHQ9dG4obik7aWYodD09eW58fHQ9PVNuKXJldHVybiFuLnNpemU7aWYoaGUobikpcmV0dXJuIWpyKG4pLmxlbmd0aDtmb3IodmFyIGUgaW4gbilpZihGLmNhbGwobixlKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBJcChuLHQpe3JldHVybiBvZShuLHQpfWZ1bmN0aW9uIHhwKG4sdCxlKXtlPXR5cGVvZiBlPT1cImZ1bmN0aW9uXCI/ZTppO3ZhciByPWU/ZShuLHQpOmk7cmV0dXJuIHI9PT1pP29lKG4sdCxpLGUpOiEhcn1mdW5jdGlvbiBFaShuKXtpZighWShuKSlyZXR1cm4hMTt2YXIgdD1lbihuKTtyZXR1cm4gdD09d2V8fHQ9PUthfHx0eXBlb2Ygbi5tZXNzYWdlPT1cInN0cmluZ1wiJiZ0eXBlb2Ygbi5uYW1lPT1cInN0cmluZ1wiJiYhcGUobil9ZnVuY3Rpb24gRXAobil7cmV0dXJuIHR5cGVvZiBuPT1cIm51bWJlclwiJiZVcyhuKX1mdW5jdGlvbiBKbihuKXtpZighSyhuKSlyZXR1cm4hMTt2YXIgdD1lbihuKTtyZXR1cm4gdD09UGV8fHQ9PXppfHx0PT16YXx8dD09WmF9ZnVuY3Rpb24gcmEobil7cmV0dXJuIHR5cGVvZiBuPT1cIm51bWJlclwiJiZuPT1SKG4pfWZ1bmN0aW9uIGFyKG4pe3JldHVybiB0eXBlb2Ygbj09XCJudW1iZXJcIiYmbj4tMSYmbiUxPT0wJiZuPD1rbn1mdW5jdGlvbiBLKG4pe3ZhciB0PXR5cGVvZiBuO3JldHVybiBuIT1udWxsJiYodD09XCJvYmplY3RcInx8dD09XCJmdW5jdGlvblwiKX1mdW5jdGlvbiBZKG4pe3JldHVybiBuIT1udWxsJiZ0eXBlb2Ygbj09XCJvYmplY3RcIn12YXIgaWE9bXM/aG4obXMpOlJjO2Z1bmN0aW9uIHlwKG4sdCl7cmV0dXJuIG49PT10fHxrcihuLHQsZ2kodCkpfWZ1bmN0aW9uIFNwKG4sdCxlKXtyZXR1cm4gZT10eXBlb2YgZT09XCJmdW5jdGlvblwiP2U6aSxrcihuLHQsZ2kodCksZSl9ZnVuY3Rpb24gT3Aobil7cmV0dXJuIHNhKG4pJiZuIT0rbn1mdW5jdGlvbiBScChuKXtpZihsaChuKSl0aHJvdyBuZXcgUyhiKTtyZXR1cm4gUXMobil9ZnVuY3Rpb24gYnAobil7cmV0dXJuIG49PT1udWxsfWZ1bmN0aW9uIFRwKG4pe3JldHVybiBuPT1udWxsfWZ1bmN0aW9uIHNhKG4pe3JldHVybiB0eXBlb2Ygbj09XCJudW1iZXJcInx8WShuKSYmZW4obik9PUp0fWZ1bmN0aW9uIHBlKG4pe2lmKCFZKG4pfHxlbihuKSE9cW4pcmV0dXJuITE7dmFyIHQ9TmUobik7aWYodD09PW51bGwpcmV0dXJuITA7dmFyIGU9Ri5jYWxsKHQsXCJjb25zdHJ1Y3RvclwiKSYmdC5jb25zdHJ1Y3RvcjtyZXR1cm4gdHlwZW9mIGU9PVwiZnVuY3Rpb25cIiYmZSBpbnN0YW5jZW9mIGUmJmJlLmNhbGwoZSk9PVNmfXZhciB5aT13cz9obih3cyk6YmM7ZnVuY3Rpb24gTHAobil7cmV0dXJuIHJhKG4pJiZuPj0ta24mJm48PWtufXZhciB1YT1Qcz9obihQcyk6VGM7ZnVuY3Rpb24gb3Iobil7cmV0dXJuIHR5cGVvZiBuPT1cInN0cmluZ1wifHwhTyhuKSYmWShuKSYmZW4obik9PVF0fWZ1bmN0aW9uIHBuKG4pe3JldHVybiB0eXBlb2Ygbj09XCJzeW1ib2xcInx8WShuKSYmZW4obik9PUFlfXZhciBCdD1Bcz9obihBcyk6TGM7ZnVuY3Rpb24gRHAobil7cmV0dXJuIG49PT1pfWZ1bmN0aW9uIE5wKG4pe3JldHVybiBZKG4pJiZ0bihuKT09VnR9ZnVuY3Rpb24gSHAobil7cmV0dXJuIFkobikmJmVuKG4pPT1YYX12YXIgJHA9a2UobmkpLFVwPWtlKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIG48PXR9KTtmdW5jdGlvbiBhYShuKXtpZighbilyZXR1cm5bXTtpZihhbihuKSlyZXR1cm4gb3Iobik/T24obik6dW4obik7aWYobmUmJm5bbmVdKXJldHVybiBnZihuW25lXSgpKTt2YXIgdD10bihuKSxlPXQ9PXluP3FyOnQ9PVNuP1NlOkd0O3JldHVybiBlKG4pfWZ1bmN0aW9uIFhuKG4pe2lmKCFuKXJldHVybiBuPT09MD9uOjA7aWYobj14bihuKSxuPT09aHR8fG49PT0taHQpe3ZhciB0PW48MD8tMToxO3JldHVybiB0Kk1hfXJldHVybiBuPT09bj9uOjB9ZnVuY3Rpb24gUihuKXt2YXIgdD1YbihuKSxlPXQlMTtyZXR1cm4gdD09PXQ/ZT90LWU6dDowfWZ1bmN0aW9uIG9hKG4pe3JldHVybiBuP3Z0KFIobiksMCxIbik6MH1mdW5jdGlvbiB4bihuKXtpZih0eXBlb2Ygbj09XCJudW1iZXJcIilyZXR1cm4gbjtpZihwbihuKSlyZXR1cm4gX2U7aWYoSyhuKSl7dmFyIHQ9dHlwZW9mIG4udmFsdWVPZj09XCJmdW5jdGlvblwiP24udmFsdWVPZigpOm47bj1LKHQpP3QrXCJcIjp0fWlmKHR5cGVvZiBuIT1cInN0cmluZ1wiKXJldHVybiBuPT09MD9uOituO249U3Mobik7dmFyIGU9X28udGVzdChuKTtyZXR1cm4gZXx8d28udGVzdChuKT9WbyhuLnNsaWNlKDIpLGU/Mjo4KTp2by50ZXN0KG4pP19lOitufWZ1bmN0aW9uIGZhKG4pe3JldHVybiBVbihuLG9uKG4pKX1mdW5jdGlvbiBXcChuKXtyZXR1cm4gbj92dChSKG4pLC1rbixrbik6bj09PTA/bjowfWZ1bmN0aW9uIFcobil7cmV0dXJuIG49PW51bGw/XCJcIjpsbihuKX12YXIgRnA9RnQoZnVuY3Rpb24obix0KXtpZihoZSh0KXx8YW4odCkpe1VuKHQsVih0KSxuKTtyZXR1cm59Zm9yKHZhciBlIGluIHQpRi5jYWxsKHQsZSkmJnNlKG4sZSx0W2VdKX0pLGNhPUZ0KGZ1bmN0aW9uKG4sdCl7VW4odCxvbih0KSxuKX0pLGZyPUZ0KGZ1bmN0aW9uKG4sdCxlLHIpe1VuKHQsb24odCksbixyKX0pLE1wPUZ0KGZ1bmN0aW9uKG4sdCxlLHIpe1VuKHQsVih0KSxuLHIpfSkscXA9WW4oWnIpO2Z1bmN0aW9uIEJwKG4sdCl7dmFyIGU9V3Qobik7cmV0dXJuIHQ9PW51bGw/ZTpCcyhlLHQpfXZhciBHcD1MKGZ1bmN0aW9uKG4sdCl7bj1NKG4pO3ZhciBlPS0xLHI9dC5sZW5ndGgscz1yPjI/dFsyXTppO2ZvcihzJiZybih0WzBdLHRbMV0scykmJihyPTEpOysrZTxyOylmb3IodmFyIG89dFtlXSxmPW9uKG8pLGM9LTEsbD1mLmxlbmd0aDsrK2M8bDspe3ZhciB2PWZbY10sXz1uW3ZdOyhfPT09aXx8Ym4oXyxIdFt2XSkmJiFGLmNhbGwobix2KSkmJihuW3ZdPW9bdl0pfXJldHVybiBufSksenA9TChmdW5jdGlvbihuKXtyZXR1cm4gbi5wdXNoKGksU3UpLGNuKGhhLGksbil9KTtmdW5jdGlvbiBLcChuLHQpe3JldHVybiBJcyhuLHgodCwzKSwkbil9ZnVuY3Rpb24gWXAobix0KXtyZXR1cm4gSXMobix4KHQsMyksWHIpfWZ1bmN0aW9uIFpwKG4sdCl7cmV0dXJuIG49PW51bGw/bjpKcihuLHgodCwzKSxvbil9ZnVuY3Rpb24gSnAobix0KXtyZXR1cm4gbj09bnVsbD9uOlpzKG4seCh0LDMpLG9uKX1mdW5jdGlvbiBYcChuLHQpe3JldHVybiBuJiYkbihuLHgodCwzKSl9ZnVuY3Rpb24gUXAobix0KXtyZXR1cm4gbiYmWHIobix4KHQsMykpfWZ1bmN0aW9uIFZwKG4pe3JldHVybiBuPT1udWxsP1tdOnplKG4sVihuKSl9ZnVuY3Rpb24ga3Aobil7cmV0dXJuIG49PW51bGw/W106emUobixvbihuKSl9ZnVuY3Rpb24gU2kobix0LGUpe3ZhciByPW49PW51bGw/aTpfdChuLHQpO3JldHVybiByPT09aT9lOnJ9ZnVuY3Rpb24ganAobix0KXtyZXR1cm4gbiE9bnVsbCYmYnUobix0LENjKX1mdW5jdGlvbiBPaShuLHQpe3JldHVybiBuIT1udWxsJiZidShuLHQsSWMpfXZhciBuZD1DdShmdW5jdGlvbihuLHQsZSl7dCE9bnVsbCYmdHlwZW9mIHQudG9TdHJpbmchPVwiZnVuY3Rpb25cIiYmKHQ9VGUuY2FsbCh0KSksblt0XT1lfSxiaShmbikpLHRkPUN1KGZ1bmN0aW9uKG4sdCxlKXt0IT1udWxsJiZ0eXBlb2YgdC50b1N0cmluZyE9XCJmdW5jdGlvblwiJiYodD1UZS5jYWxsKHQpKSxGLmNhbGwobix0KT9uW3RdLnB1c2goZSk6blt0XT1bZV19LHgpLGVkPUwoYWUpO2Z1bmN0aW9uIFYobil7cmV0dXJuIGFuKG4pP01zKG4pOmpyKG4pfWZ1bmN0aW9uIG9uKG4pe3JldHVybiBhbihuKT9NcyhuLCEwKTpEYyhuKX1mdW5jdGlvbiByZChuLHQpe3ZhciBlPXt9O3JldHVybiB0PXgodCwzKSwkbihuLGZ1bmN0aW9uKHIscyxvKXt6bihlLHQocixzLG8pLHIpfSksZX1mdW5jdGlvbiBpZChuLHQpe3ZhciBlPXt9O3JldHVybiB0PXgodCwzKSwkbihuLGZ1bmN0aW9uKHIscyxvKXt6bihlLHMsdChyLHMsbykpfSksZX12YXIgc2Q9RnQoZnVuY3Rpb24obix0LGUpe0tlKG4sdCxlKX0pLGhhPUZ0KGZ1bmN0aW9uKG4sdCxlLHIpe0tlKG4sdCxlLHIpfSksdWQ9WW4oZnVuY3Rpb24obix0KXt2YXIgZT17fTtpZihuPT1udWxsKXJldHVybiBlO3ZhciByPSExO3Q9Ryh0LGZ1bmN0aW9uKG8pe3JldHVybiBvPXN0KG8sbikscnx8KHI9by5sZW5ndGg+MSksb30pLFVuKG4scGkobiksZSksciYmKGU9QW4oZSxMbnxGbnx4dCxuaCkpO2Zvcih2YXIgcz10Lmxlbmd0aDtzLS07KXNpKGUsdFtzXSk7cmV0dXJuIGV9KTtmdW5jdGlvbiBhZChuLHQpe3JldHVybiBsYShuLHVyKHgodCkpKX12YXIgb2Q9WW4oZnVuY3Rpb24obix0KXtyZXR1cm4gbj09bnVsbD97fTpIYyhuLHQpfSk7ZnVuY3Rpb24gbGEobix0KXtpZihuPT1udWxsKXJldHVybnt9O3ZhciBlPUcocGkobiksZnVuY3Rpb24ocil7cmV0dXJuW3JdfSk7cmV0dXJuIHQ9eCh0KSxydShuLGUsZnVuY3Rpb24ocixzKXtyZXR1cm4gdChyLHNbMF0pfSl9ZnVuY3Rpb24gZmQobix0LGUpe3Q9c3QodCxuKTt2YXIgcj0tMSxzPXQubGVuZ3RoO2ZvcihzfHwocz0xLG49aSk7KytyPHM7KXt2YXIgbz1uPT1udWxsP2k6bltXbih0W3JdKV07bz09PWkmJihyPXMsbz1lKSxuPUpuKG8pP28uY2FsbChuKTpvfXJldHVybiBufWZ1bmN0aW9uIGNkKG4sdCxlKXtyZXR1cm4gbj09bnVsbD9uOmZlKG4sdCxlKX1mdW5jdGlvbiBoZChuLHQsZSxyKXtyZXR1cm4gcj10eXBlb2Ygcj09XCJmdW5jdGlvblwiP3I6aSxuPT1udWxsP246ZmUobix0LGUscil9dmFyIHBhPUV1KFYpLGRhPUV1KG9uKTtmdW5jdGlvbiBsZChuLHQsZSl7dmFyIHI9TyhuKSxzPXJ8fGF0KG4pfHxCdChuKTtpZih0PXgodCw0KSxlPT1udWxsKXt2YXIgbz1uJiZuLmNvbnN0cnVjdG9yO3M/ZT1yP25ldyBvOltdOksobik/ZT1KbihvKT9XdChOZShuKSk6e306ZT17fX1yZXR1cm4ocz9tbjokbikobixmdW5jdGlvbihmLGMsbCl7cmV0dXJuIHQoZSxmLGMsbCl9KSxlfWZ1bmN0aW9uIHBkKG4sdCl7cmV0dXJuIG49PW51bGw/ITA6c2kobix0KX1mdW5jdGlvbiBkZChuLHQsZSl7cmV0dXJuIG49PW51bGw/bjpvdShuLHQsb2koZSkpfWZ1bmN0aW9uIGdkKG4sdCxlLHIpe3JldHVybiByPXR5cGVvZiByPT1cImZ1bmN0aW9uXCI/cjppLG49PW51bGw/bjpvdShuLHQsb2koZSkscil9ZnVuY3Rpb24gR3Qobil7cmV0dXJuIG49PW51bGw/W106TXIobixWKG4pKX1mdW5jdGlvbiB2ZChuKXtyZXR1cm4gbj09bnVsbD9bXTpNcihuLG9uKG4pKX1mdW5jdGlvbiBfZChuLHQsZSl7cmV0dXJuIGU9PT1pJiYoZT10LHQ9aSksZSE9PWkmJihlPXhuKGUpLGU9ZT09PWU/ZTowKSx0IT09aSYmKHQ9eG4odCksdD10PT09dD90OjApLHZ0KHhuKG4pLHQsZSl9ZnVuY3Rpb24gbWQobix0LGUpe3JldHVybiB0PVhuKHQpLGU9PT1pPyhlPXQsdD0wKTplPVhuKGUpLG49eG4obikseGMobix0LGUpfWZ1bmN0aW9uIHdkKG4sdCxlKXtpZihlJiZ0eXBlb2YgZSE9XCJib29sZWFuXCImJnJuKG4sdCxlKSYmKHQ9ZT1pKSxlPT09aSYmKHR5cGVvZiB0PT1cImJvb2xlYW5cIj8oZT10LHQ9aSk6dHlwZW9mIG49PVwiYm9vbGVhblwiJiYoZT1uLG49aSkpLG49PT1pJiZ0PT09aT8obj0wLHQ9MSk6KG49WG4obiksdD09PWk/KHQ9bixuPTApOnQ9WG4odCkpLG4+dCl7dmFyIHI9bjtuPXQsdD1yfWlmKGV8fG4lMXx8dCUxKXt2YXIgcz1XcygpO3JldHVybiBubihuK3MqKHQtbitRbyhcIjFlLVwiKygocytcIlwiKS5sZW5ndGgtMSkpKSx0KX1yZXR1cm4gZWkobix0KX12YXIgUGQ9TXQoZnVuY3Rpb24obix0LGUpe3JldHVybiB0PXQudG9Mb3dlckNhc2UoKSxuKyhlP2dhKHQpOnQpfSk7ZnVuY3Rpb24gZ2Eobil7cmV0dXJuIFJpKFcobikudG9Mb3dlckNhc2UoKSl9ZnVuY3Rpb24gdmEobil7cmV0dXJuIG49VyhuKSxuJiZuLnJlcGxhY2UoQW8sY2YpLnJlcGxhY2UoTW8sXCJcIil9ZnVuY3Rpb24gQWQobix0LGUpe249VyhuKSx0PWxuKHQpO3ZhciByPW4ubGVuZ3RoO2U9ZT09PWk/cjp2dChSKGUpLDAscik7dmFyIHM9ZTtyZXR1cm4gZS09dC5sZW5ndGgsZT49MCYmbi5zbGljZShlLHMpPT10fWZ1bmN0aW9uIENkKG4pe3JldHVybiBuPVcobiksbiYmbm8udGVzdChuKT9uLnJlcGxhY2UoWmksaGYpOm59ZnVuY3Rpb24gSWQobil7cmV0dXJuIG49VyhuKSxuJiZ1by50ZXN0KG4pP24ucmVwbGFjZSh4cixcIlxcXFwkJlwiKTpufXZhciB4ZD1NdChmdW5jdGlvbihuLHQsZSl7cmV0dXJuIG4rKGU/XCItXCI6XCJcIikrdC50b0xvd2VyQ2FzZSgpfSksRWQ9TXQoZnVuY3Rpb24obix0LGUpe3JldHVybiBuKyhlP1wiIFwiOlwiXCIpK3QudG9Mb3dlckNhc2UoKX0pLHlkPXd1KFwidG9Mb3dlckNhc2VcIik7ZnVuY3Rpb24gU2Qobix0LGUpe249VyhuKSx0PVIodCk7dmFyIHI9dD9EdChuKTowO2lmKCF0fHxyPj10KXJldHVybiBuO3ZhciBzPSh0LXIpLzI7cmV0dXJuIFZlKFdlKHMpLGUpK24rVmUoVWUocyksZSl9ZnVuY3Rpb24gT2Qobix0LGUpe249VyhuKSx0PVIodCk7dmFyIHI9dD9EdChuKTowO3JldHVybiB0JiZyPHQ/bitWZSh0LXIsZSk6bn1mdW5jdGlvbiBSZChuLHQsZSl7bj1XKG4pLHQ9Uih0KTt2YXIgcj10P0R0KG4pOjA7cmV0dXJuIHQmJnI8dD9WZSh0LXIsZSkrbjpufWZ1bmN0aW9uIGJkKG4sdCxlKXtyZXR1cm4gZXx8dD09bnVsbD90PTA6dCYmKHQ9K3QpLFVmKFcobikucmVwbGFjZShFcixcIlwiKSx0fHwwKX1mdW5jdGlvbiBUZChuLHQsZSl7cmV0dXJuKGU/cm4obix0LGUpOnQ9PT1pKT90PTE6dD1SKHQpLHJpKFcobiksdCl9ZnVuY3Rpb24gTGQoKXt2YXIgbj1hcmd1bWVudHMsdD1XKG5bMF0pO3JldHVybiBuLmxlbmd0aDwzP3Q6dC5yZXBsYWNlKG5bMV0sblsyXSl9dmFyIERkPU10KGZ1bmN0aW9uKG4sdCxlKXtyZXR1cm4gbisoZT9cIl9cIjpcIlwiKSt0LnRvTG93ZXJDYXNlKCl9KTtmdW5jdGlvbiBOZChuLHQsZSl7cmV0dXJuIGUmJnR5cGVvZiBlIT1cIm51bWJlclwiJiZybihuLHQsZSkmJih0PWU9aSksZT1lPT09aT9IbjplPj4+MCxlPyhuPVcobiksbiYmKHR5cGVvZiB0PT1cInN0cmluZ1wifHx0IT1udWxsJiYheWkodCkpJiYodD1sbih0KSwhdCYmTHQobikpP3V0KE9uKG4pLDAsZSk6bi5zcGxpdCh0LGUpKTpbXX12YXIgSGQ9TXQoZnVuY3Rpb24obix0LGUpe3JldHVybiBuKyhlP1wiIFwiOlwiXCIpK1JpKHQpfSk7ZnVuY3Rpb24gJGQobix0LGUpe3JldHVybiBuPVcobiksZT1lPT1udWxsPzA6dnQoUihlKSwwLG4ubGVuZ3RoKSx0PWxuKHQpLG4uc2xpY2UoZSxlK3QubGVuZ3RoKT09dH1mdW5jdGlvbiBVZChuLHQsZSl7dmFyIHI9YS50ZW1wbGF0ZVNldHRpbmdzO2UmJnJuKG4sdCxlKSYmKHQ9aSksbj1XKG4pLHQ9ZnIoe30sdCxyLHl1KTt2YXIgcz1mcih7fSx0LmltcG9ydHMsci5pbXBvcnRzLHl1KSxvPVYocyksZj1NcihzLG8pLGMsbCx2PTAsXz10LmludGVycG9sYXRlfHxDZSxtPVwiX19wICs9ICdcIixQPUJyKCh0LmVzY2FwZXx8Q2UpLnNvdXJjZStcInxcIitfLnNvdXJjZStcInxcIisoXz09PUppP2dvOkNlKS5zb3VyY2UrXCJ8XCIrKHQuZXZhbHVhdGV8fENlKS5zb3VyY2UrXCJ8JFwiLFwiZ1wiKSxJPVwiLy8jIHNvdXJjZVVSTD1cIisoRi5jYWxsKHQsXCJzb3VyY2VVUkxcIik/KHQuc291cmNlVVJMK1wiXCIpLnJlcGxhY2UoL1xccy9nLFwiIFwiKTpcImxvZGFzaC50ZW1wbGF0ZVNvdXJjZXNbXCIrICsrS28rXCJdXCIpK2BcbmA7bi5yZXBsYWNlKFAsZnVuY3Rpb24oeSxOLCQsZG4sc24sZ24pe3JldHVybiAkfHwoJD1kbiksbSs9bi5zbGljZSh2LGduKS5yZXBsYWNlKENvLGxmKSxOJiYoYz0hMCxtKz1gJyArXG5fX2UoYCtOK2ApICtcbidgKSxzbiYmKGw9ITAsbSs9YCc7XG5gK3NuK2A7XG5fX3AgKz0gJ2ApLCQmJihtKz1gJyArXG4oKF9fdCA9IChgKyQrYCkpID09IG51bGwgPyAnJyA6IF9fdCkgK1xuJ2ApLHY9Z24reS5sZW5ndGgseX0pLG0rPWAnO1xuYDt2YXIgRT1GLmNhbGwodCxcInZhcmlhYmxlXCIpJiZ0LnZhcmlhYmxlO2lmKCFFKW09YHdpdGggKG9iaikge1xuYCttK2Bcbn1cbmA7ZWxzZSBpZihsby50ZXN0KEUpKXRocm93IG5ldyBTKEVuKTttPShsP20ucmVwbGFjZShRYSxcIlwiKTptKS5yZXBsYWNlKFZhLFwiJDFcIikucmVwbGFjZShrYSxcIiQxO1wiKSxtPVwiZnVuY3Rpb24oXCIrKEV8fFwib2JqXCIpK2ApIHtcbmArKEU/XCJcIjpgb2JqIHx8IChvYmogPSB7fSk7XG5gKStcInZhciBfX3QsIF9fcCA9ICcnXCIrKGM/XCIsIF9fZSA9IF8uZXNjYXBlXCI6XCJcIikrKGw/YCwgX19qID0gQXJyYXkucHJvdG90eXBlLmpvaW47XG5mdW5jdGlvbiBwcmludCgpIHsgX19wICs9IF9fai5jYWxsKGFyZ3VtZW50cywgJycpIH1cbmA6YDtcbmApK20rYHJldHVybiBfX3Bcbn1gO3ZhciBUPW1hKGZ1bmN0aW9uKCl7cmV0dXJuIFUobyxJK1wicmV0dXJuIFwiK20pLmFwcGx5KGksZil9KTtpZihULnNvdXJjZT1tLEVpKFQpKXRocm93IFQ7cmV0dXJuIFR9ZnVuY3Rpb24gV2Qobil7cmV0dXJuIFcobikudG9Mb3dlckNhc2UoKX1mdW5jdGlvbiBGZChuKXtyZXR1cm4gVyhuKS50b1VwcGVyQ2FzZSgpfWZ1bmN0aW9uIE1kKG4sdCxlKXtpZihuPVcobiksbiYmKGV8fHQ9PT1pKSlyZXR1cm4gU3Mobik7aWYoIW58fCEodD1sbih0KSkpcmV0dXJuIG47dmFyIHI9T24obikscz1Pbih0KSxvPU9zKHIscyksZj1ScyhyLHMpKzE7cmV0dXJuIHV0KHIsbyxmKS5qb2luKFwiXCIpfWZ1bmN0aW9uIHFkKG4sdCxlKXtpZihuPVcobiksbiYmKGV8fHQ9PT1pKSlyZXR1cm4gbi5zbGljZSgwLFRzKG4pKzEpO2lmKCFufHwhKHQ9bG4odCkpKXJldHVybiBuO3ZhciByPU9uKG4pLHM9UnMocixPbih0KSkrMTtyZXR1cm4gdXQociwwLHMpLmpvaW4oXCJcIil9ZnVuY3Rpb24gQmQobix0LGUpe2lmKG49VyhuKSxuJiYoZXx8dD09PWkpKXJldHVybiBuLnJlcGxhY2UoRXIsXCJcIik7aWYoIW58fCEodD1sbih0KSkpcmV0dXJuIG47dmFyIHI9T24obikscz1PcyhyLE9uKHQpKTtyZXR1cm4gdXQocixzKS5qb2luKFwiXCIpfWZ1bmN0aW9uIEdkKG4sdCl7dmFyIGU9TmEscj1IYTtpZihLKHQpKXt2YXIgcz1cInNlcGFyYXRvclwiaW4gdD90LnNlcGFyYXRvcjpzO2U9XCJsZW5ndGhcImluIHQ/Uih0Lmxlbmd0aCk6ZSxyPVwib21pc3Npb25cImluIHQ/bG4odC5vbWlzc2lvbik6cn1uPVcobik7dmFyIG89bi5sZW5ndGg7aWYoTHQobikpe3ZhciBmPU9uKG4pO289Zi5sZW5ndGh9aWYoZT49bylyZXR1cm4gbjt2YXIgYz1lLUR0KHIpO2lmKGM8MSlyZXR1cm4gcjt2YXIgbD1mP3V0KGYsMCxjKS5qb2luKFwiXCIpOm4uc2xpY2UoMCxjKTtpZihzPT09aSlyZXR1cm4gbCtyO2lmKGYmJihjKz1sLmxlbmd0aC1jKSx5aShzKSl7aWYobi5zbGljZShjKS5zZWFyY2gocykpe3ZhciB2LF89bDtmb3Iocy5nbG9iYWx8fChzPUJyKHMuc291cmNlLFcoWGkuZXhlYyhzKSkrXCJnXCIpKSxzLmxhc3RJbmRleD0wO3Y9cy5leGVjKF8pOyl2YXIgbT12LmluZGV4O2w9bC5zbGljZSgwLG09PT1pP2M6bSl9fWVsc2UgaWYobi5pbmRleE9mKGxuKHMpLGMpIT1jKXt2YXIgUD1sLmxhc3RJbmRleE9mKHMpO1A+LTEmJihsPWwuc2xpY2UoMCxQKSl9cmV0dXJuIGwrcn1mdW5jdGlvbiB6ZChuKXtyZXR1cm4gbj1XKG4pLG4mJmphLnRlc3Qobik/bi5yZXBsYWNlKFlpLHdmKTpufXZhciBLZD1NdChmdW5jdGlvbihuLHQsZSl7cmV0dXJuIG4rKGU/XCIgXCI6XCJcIikrdC50b1VwcGVyQ2FzZSgpfSksUmk9d3UoXCJ0b1VwcGVyQ2FzZVwiKTtmdW5jdGlvbiBfYShuLHQsZSl7cmV0dXJuIG49VyhuKSx0PWU/aTp0LHQ9PT1pP2RmKG4pP0NmKG4pOnNmKG4pOm4ubWF0Y2godCl8fFtdfXZhciBtYT1MKGZ1bmN0aW9uKG4sdCl7dHJ5e3JldHVybiBjbihuLGksdCl9Y2F0Y2goZSl7cmV0dXJuIEVpKGUpP2U6bmV3IFMoZSl9fSksWWQ9WW4oZnVuY3Rpb24obix0KXtyZXR1cm4gbW4odCxmdW5jdGlvbihlKXtlPVduKGUpLHpuKG4sZSxJaShuW2VdLG4pKX0pLG59KTtmdW5jdGlvbiBaZChuKXt2YXIgdD1uPT1udWxsPzA6bi5sZW5ndGgsZT14KCk7cmV0dXJuIG49dD9HKG4sZnVuY3Rpb24ocil7aWYodHlwZW9mIHJbMV0hPVwiZnVuY3Rpb25cIil0aHJvdyBuZXcgd24oRCk7cmV0dXJuW2UoclswXSksclsxXV19KTpbXSxMKGZ1bmN0aW9uKHIpe2Zvcih2YXIgcz0tMTsrK3M8dDspe3ZhciBvPW5bc107aWYoY24ob1swXSx0aGlzLHIpKXJldHVybiBjbihvWzFdLHRoaXMscil9fSl9ZnVuY3Rpb24gSmQobil7cmV0dXJuIHdjKEFuKG4sTG4pKX1mdW5jdGlvbiBiaShuKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbn19ZnVuY3Rpb24gWGQobix0KXtyZXR1cm4gbj09bnVsbHx8biE9PW4/dDpufXZhciBRZD1BdSgpLFZkPUF1KCEwKTtmdW5jdGlvbiBmbihuKXtyZXR1cm4gbn1mdW5jdGlvbiBUaShuKXtyZXR1cm4gVnModHlwZW9mIG49PVwiZnVuY3Rpb25cIj9uOkFuKG4sTG4pKX1mdW5jdGlvbiBrZChuKXtyZXR1cm4ganMoQW4obixMbikpfWZ1bmN0aW9uIGpkKG4sdCl7cmV0dXJuIG51KG4sQW4odCxMbikpfXZhciBuZz1MKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBhZShlLG4sdCl9fSksdGc9TChmdW5jdGlvbihuLHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gYWUobixlLHQpfX0pO2Z1bmN0aW9uIExpKG4sdCxlKXt2YXIgcj1WKHQpLHM9emUodCxyKTtlPT1udWxsJiYhKEsodCkmJihzLmxlbmd0aHx8IXIubGVuZ3RoKSkmJihlPXQsdD1uLG49dGhpcyxzPXplKHQsVih0KSkpO3ZhciBvPSEoSyhlKSYmXCJjaGFpblwiaW4gZSl8fCEhZS5jaGFpbixmPUpuKG4pO3JldHVybiBtbihzLGZ1bmN0aW9uKGMpe3ZhciBsPXRbY107bltjXT1sLGYmJihuLnByb3RvdHlwZVtjXT1mdW5jdGlvbigpe3ZhciB2PXRoaXMuX19jaGFpbl9fO2lmKG98fHYpe3ZhciBfPW4odGhpcy5fX3dyYXBwZWRfXyksbT1fLl9fYWN0aW9uc19fPXVuKHRoaXMuX19hY3Rpb25zX18pO3JldHVybiBtLnB1c2goe2Z1bmM6bCxhcmdzOmFyZ3VtZW50cyx0aGlzQXJnOm59KSxfLl9fY2hhaW5fXz12LF99cmV0dXJuIGwuYXBwbHkobixudChbdGhpcy52YWx1ZSgpXSxhcmd1bWVudHMpKX0pfSksbn1mdW5jdGlvbiBlZygpe3JldHVybiBrLl89PT10aGlzJiYoay5fPU9mKSx0aGlzfWZ1bmN0aW9uIERpKCl7fWZ1bmN0aW9uIHJnKG4pe3JldHVybiBuPVIobiksTChmdW5jdGlvbih0KXtyZXR1cm4gdHUodCxuKX0pfXZhciBpZz1jaShHKSxzZz1jaShDcyksdWc9Y2koSHIpO2Z1bmN0aW9uIHdhKG4pe3JldHVybiBfaShuKT8kcihXbihuKSk6JGMobil9ZnVuY3Rpb24gYWcobil7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBuPT1udWxsP2k6X3Qobix0KX19dmFyIG9nPUl1KCksZmc9SXUoITApO2Z1bmN0aW9uIE5pKCl7cmV0dXJuW119ZnVuY3Rpb24gSGkoKXtyZXR1cm4hMX1mdW5jdGlvbiBjZygpe3JldHVybnt9fWZ1bmN0aW9uIGhnKCl7cmV0dXJuXCJcIn1mdW5jdGlvbiBsZygpe3JldHVybiEwfWZ1bmN0aW9uIHBnKG4sdCl7aWYobj1SKG4pLG48MXx8bj5rbilyZXR1cm5bXTt2YXIgZT1IbixyPW5uKG4sSG4pO3Q9eCh0KSxuLT1Ibjtmb3IodmFyIHM9RnIocix0KTsrK2U8bjspdChlKTtyZXR1cm4gc31mdW5jdGlvbiBkZyhuKXtyZXR1cm4gTyhuKT9HKG4sV24pOnBuKG4pP1tuXTp1bihGdShXKG4pKSl9ZnVuY3Rpb24gZ2cobil7dmFyIHQ9Kyt5ZjtyZXR1cm4gVyhuKSt0fXZhciB2Zz1RZShmdW5jdGlvbihuLHQpe3JldHVybiBuK3R9LDApLF9nPWhpKFwiY2VpbFwiKSxtZz1RZShmdW5jdGlvbihuLHQpe3JldHVybiBuL3R9LDEpLHdnPWhpKFwiZmxvb3JcIik7ZnVuY3Rpb24gUGcobil7cmV0dXJuIG4mJm4ubGVuZ3RoP0dlKG4sZm4sUXIpOml9ZnVuY3Rpb24gQWcobix0KXtyZXR1cm4gbiYmbi5sZW5ndGg/R2Uobix4KHQsMiksUXIpOml9ZnVuY3Rpb24gQ2cobil7cmV0dXJuIEVzKG4sZm4pfWZ1bmN0aW9uIElnKG4sdCl7cmV0dXJuIEVzKG4seCh0LDIpKX1mdW5jdGlvbiB4ZyhuKXtyZXR1cm4gbiYmbi5sZW5ndGg/R2UobixmbixuaSk6aX1mdW5jdGlvbiBFZyhuLHQpe3JldHVybiBuJiZuLmxlbmd0aD9HZShuLHgodCwyKSxuaSk6aX12YXIgeWc9UWUoZnVuY3Rpb24obix0KXtyZXR1cm4gbip0fSwxKSxTZz1oaShcInJvdW5kXCIpLE9nPVFlKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIG4tdH0sMCk7ZnVuY3Rpb24gUmcobil7cmV0dXJuIG4mJm4ubGVuZ3RoP1dyKG4sZm4pOjB9ZnVuY3Rpb24gYmcobix0KXtyZXR1cm4gbiYmbi5sZW5ndGg/V3Iobix4KHQsMikpOjB9cmV0dXJuIGEuYWZ0ZXI9a2wsYS5hcnk9UXUsYS5hc3NpZ249RnAsYS5hc3NpZ25Jbj1jYSxhLmFzc2lnbkluV2l0aD1mcixhLmFzc2lnbldpdGg9TXAsYS5hdD1xcCxhLmJlZm9yZT1WdSxhLmJpbmQ9SWksYS5iaW5kQWxsPVlkLGEuYmluZEtleT1rdSxhLmNhc3RBcnJheT1jcCxhLmNoYWluPVp1LGEuY2h1bms9d2gsYS5jb21wYWN0PVBoLGEuY29uY2F0PUFoLGEuY29uZD1aZCxhLmNvbmZvcm1zPUpkLGEuY29uc3RhbnQ9YmksYS5jb3VudEJ5PVJsLGEuY3JlYXRlPUJwLGEuY3Vycnk9anUsYS5jdXJyeVJpZ2h0PW5hLGEuZGVib3VuY2U9dGEsYS5kZWZhdWx0cz1HcCxhLmRlZmF1bHRzRGVlcD16cCxhLmRlZmVyPWpsLGEuZGVsYXk9bnAsYS5kaWZmZXJlbmNlPUNoLGEuZGlmZmVyZW5jZUJ5PUloLGEuZGlmZmVyZW5jZVdpdGg9eGgsYS5kcm9wPUVoLGEuZHJvcFJpZ2h0PXloLGEuZHJvcFJpZ2h0V2hpbGU9U2gsYS5kcm9wV2hpbGU9T2gsYS5maWxsPVJoLGEuZmlsdGVyPVRsLGEuZmxhdE1hcD1ObCxhLmZsYXRNYXBEZWVwPUhsLGEuZmxhdE1hcERlcHRoPSRsLGEuZmxhdHRlbj1HdSxhLmZsYXR0ZW5EZWVwPWJoLGEuZmxhdHRlbkRlcHRoPVRoLGEuZmxpcD10cCxhLmZsb3c9UWQsYS5mbG93UmlnaHQ9VmQsYS5mcm9tUGFpcnM9TGgsYS5mdW5jdGlvbnM9VnAsYS5mdW5jdGlvbnNJbj1rcCxhLmdyb3VwQnk9VWwsYS5pbml0aWFsPU5oLGEuaW50ZXJzZWN0aW9uPUhoLGEuaW50ZXJzZWN0aW9uQnk9JGgsYS5pbnRlcnNlY3Rpb25XaXRoPVVoLGEuaW52ZXJ0PW5kLGEuaW52ZXJ0Qnk9dGQsYS5pbnZva2VNYXA9RmwsYS5pdGVyYXRlZT1UaSxhLmtleUJ5PU1sLGEua2V5cz1WLGEua2V5c0luPW9uLGEubWFwPXJyLGEubWFwS2V5cz1yZCxhLm1hcFZhbHVlcz1pZCxhLm1hdGNoZXM9a2QsYS5tYXRjaGVzUHJvcGVydHk9amQsYS5tZW1vaXplPXNyLGEubWVyZ2U9c2QsYS5tZXJnZVdpdGg9aGEsYS5tZXRob2Q9bmcsYS5tZXRob2RPZj10ZyxhLm1peGluPUxpLGEubmVnYXRlPXVyLGEubnRoQXJnPXJnLGEub21pdD11ZCxhLm9taXRCeT1hZCxhLm9uY2U9ZXAsYS5vcmRlckJ5PXFsLGEub3Zlcj1pZyxhLm92ZXJBcmdzPXJwLGEub3ZlckV2ZXJ5PXNnLGEub3ZlclNvbWU9dWcsYS5wYXJ0aWFsPXhpLGEucGFydGlhbFJpZ2h0PWVhLGEucGFydGl0aW9uPUJsLGEucGljaz1vZCxhLnBpY2tCeT1sYSxhLnByb3BlcnR5PXdhLGEucHJvcGVydHlPZj1hZyxhLnB1bGw9cWgsYS5wdWxsQWxsPUt1LGEucHVsbEFsbEJ5PUJoLGEucHVsbEFsbFdpdGg9R2gsYS5wdWxsQXQ9emgsYS5yYW5nZT1vZyxhLnJhbmdlUmlnaHQ9ZmcsYS5yZWFyZz1pcCxhLnJlamVjdD1LbCxhLnJlbW92ZT1LaCxhLnJlc3Q9c3AsYS5yZXZlcnNlPUFpLGEuc2FtcGxlU2l6ZT1abCxhLnNldD1jZCxhLnNldFdpdGg9aGQsYS5zaHVmZmxlPUpsLGEuc2xpY2U9WWgsYS5zb3J0Qnk9VmwsYS5zb3J0ZWRVbmlxPWpoLGEuc29ydGVkVW5pcUJ5PW5sLGEuc3BsaXQ9TmQsYS5zcHJlYWQ9dXAsYS50YWlsPXRsLGEudGFrZT1lbCxhLnRha2VSaWdodD1ybCxhLnRha2VSaWdodFdoaWxlPWlsLGEudGFrZVdoaWxlPXNsLGEudGFwPVBsLGEudGhyb3R0bGU9YXAsYS50aHJ1PWVyLGEudG9BcnJheT1hYSxhLnRvUGFpcnM9cGEsYS50b1BhaXJzSW49ZGEsYS50b1BhdGg9ZGcsYS50b1BsYWluT2JqZWN0PWZhLGEudHJhbnNmb3JtPWxkLGEudW5hcnk9b3AsYS51bmlvbj11bCxhLnVuaW9uQnk9YWwsYS51bmlvbldpdGg9b2wsYS51bmlxPWZsLGEudW5pcUJ5PWNsLGEudW5pcVdpdGg9aGwsYS51bnNldD1wZCxhLnVuemlwPUNpLGEudW56aXBXaXRoPVl1LGEudXBkYXRlPWRkLGEudXBkYXRlV2l0aD1nZCxhLnZhbHVlcz1HdCxhLnZhbHVlc0luPXZkLGEud2l0aG91dD1sbCxhLndvcmRzPV9hLGEud3JhcD1mcCxhLnhvcj1wbCxhLnhvckJ5PWRsLGEueG9yV2l0aD1nbCxhLnppcD12bCxhLnppcE9iamVjdD1fbCxhLnppcE9iamVjdERlZXA9bWwsYS56aXBXaXRoPXdsLGEuZW50cmllcz1wYSxhLmVudHJpZXNJbj1kYSxhLmV4dGVuZD1jYSxhLmV4dGVuZFdpdGg9ZnIsTGkoYSxhKSxhLmFkZD12ZyxhLmF0dGVtcHQ9bWEsYS5jYW1lbENhc2U9UGQsYS5jYXBpdGFsaXplPWdhLGEuY2VpbD1fZyxhLmNsYW1wPV9kLGEuY2xvbmU9aHAsYS5jbG9uZURlZXA9cHAsYS5jbG9uZURlZXBXaXRoPWRwLGEuY2xvbmVXaXRoPWxwLGEuY29uZm9ybXNUbz1ncCxhLmRlYnVycj12YSxhLmRlZmF1bHRUbz1YZCxhLmRpdmlkZT1tZyxhLmVuZHNXaXRoPUFkLGEuZXE9Ym4sYS5lc2NhcGU9Q2QsYS5lc2NhcGVSZWdFeHA9SWQsYS5ldmVyeT1ibCxhLmZpbmQ9TGwsYS5maW5kSW5kZXg9cXUsYS5maW5kS2V5PUtwLGEuZmluZExhc3Q9RGwsYS5maW5kTGFzdEluZGV4PUJ1LGEuZmluZExhc3RLZXk9WXAsYS5mbG9vcj13ZyxhLmZvckVhY2g9SnUsYS5mb3JFYWNoUmlnaHQ9WHUsYS5mb3JJbj1acCxhLmZvckluUmlnaHQ9SnAsYS5mb3JPd249WHAsYS5mb3JPd25SaWdodD1RcCxhLmdldD1TaSxhLmd0PXZwLGEuZ3RlPV9wLGEuaGFzPWpwLGEuaGFzSW49T2ksYS5oZWFkPXp1LGEuaWRlbnRpdHk9Zm4sYS5pbmNsdWRlcz1XbCxhLmluZGV4T2Y9RGgsYS5pblJhbmdlPW1kLGEuaW52b2tlPWVkLGEuaXNBcmd1bWVudHM9UHQsYS5pc0FycmF5PU8sYS5pc0FycmF5QnVmZmVyPW1wLGEuaXNBcnJheUxpa2U9YW4sYS5pc0FycmF5TGlrZU9iamVjdD1aLGEuaXNCb29sZWFuPXdwLGEuaXNCdWZmZXI9YXQsYS5pc0RhdGU9UHAsYS5pc0VsZW1lbnQ9QXAsYS5pc0VtcHR5PUNwLGEuaXNFcXVhbD1JcCxhLmlzRXF1YWxXaXRoPXhwLGEuaXNFcnJvcj1FaSxhLmlzRmluaXRlPUVwLGEuaXNGdW5jdGlvbj1KbixhLmlzSW50ZWdlcj1yYSxhLmlzTGVuZ3RoPWFyLGEuaXNNYXA9aWEsYS5pc01hdGNoPXlwLGEuaXNNYXRjaFdpdGg9U3AsYS5pc05hTj1PcCxhLmlzTmF0aXZlPVJwLGEuaXNOaWw9VHAsYS5pc051bGw9YnAsYS5pc051bWJlcj1zYSxhLmlzT2JqZWN0PUssYS5pc09iamVjdExpa2U9WSxhLmlzUGxhaW5PYmplY3Q9cGUsYS5pc1JlZ0V4cD15aSxhLmlzU2FmZUludGVnZXI9THAsYS5pc1NldD11YSxhLmlzU3RyaW5nPW9yLGEuaXNTeW1ib2w9cG4sYS5pc1R5cGVkQXJyYXk9QnQsYS5pc1VuZGVmaW5lZD1EcCxhLmlzV2Vha01hcD1OcCxhLmlzV2Vha1NldD1IcCxhLmpvaW49V2gsYS5rZWJhYkNhc2U9eGQsYS5sYXN0PUluLGEubGFzdEluZGV4T2Y9RmgsYS5sb3dlckNhc2U9RWQsYS5sb3dlckZpcnN0PXlkLGEubHQ9JHAsYS5sdGU9VXAsYS5tYXg9UGcsYS5tYXhCeT1BZyxhLm1lYW49Q2csYS5tZWFuQnk9SWcsYS5taW49eGcsYS5taW5CeT1FZyxhLnN0dWJBcnJheT1OaSxhLnN0dWJGYWxzZT1IaSxhLnN0dWJPYmplY3Q9Y2csYS5zdHViU3RyaW5nPWhnLGEuc3R1YlRydWU9bGcsYS5tdWx0aXBseT15ZyxhLm50aD1NaCxhLm5vQ29uZmxpY3Q9ZWcsYS5ub29wPURpLGEubm93PWlyLGEucGFkPVNkLGEucGFkRW5kPU9kLGEucGFkU3RhcnQ9UmQsYS5wYXJzZUludD1iZCxhLnJhbmRvbT13ZCxhLnJlZHVjZT1HbCxhLnJlZHVjZVJpZ2h0PXpsLGEucmVwZWF0PVRkLGEucmVwbGFjZT1MZCxhLnJlc3VsdD1mZCxhLnJvdW5kPVNnLGEucnVuSW5Db250ZXh0PWgsYS5zYW1wbGU9WWwsYS5zaXplPVhsLGEuc25ha2VDYXNlPURkLGEuc29tZT1RbCxhLnNvcnRlZEluZGV4PVpoLGEuc29ydGVkSW5kZXhCeT1KaCxhLnNvcnRlZEluZGV4T2Y9WGgsYS5zb3J0ZWRMYXN0SW5kZXg9UWgsYS5zb3J0ZWRMYXN0SW5kZXhCeT1WaCxhLnNvcnRlZExhc3RJbmRleE9mPWtoLGEuc3RhcnRDYXNlPUhkLGEuc3RhcnRzV2l0aD0kZCxhLnN1YnRyYWN0PU9nLGEuc3VtPVJnLGEuc3VtQnk9YmcsYS50ZW1wbGF0ZT1VZCxhLnRpbWVzPXBnLGEudG9GaW5pdGU9WG4sYS50b0ludGVnZXI9UixhLnRvTGVuZ3RoPW9hLGEudG9Mb3dlcj1XZCxhLnRvTnVtYmVyPXhuLGEudG9TYWZlSW50ZWdlcj1XcCxhLnRvU3RyaW5nPVcsYS50b1VwcGVyPUZkLGEudHJpbT1NZCxhLnRyaW1FbmQ9cWQsYS50cmltU3RhcnQ9QmQsYS50cnVuY2F0ZT1HZCxhLnVuZXNjYXBlPXpkLGEudW5pcXVlSWQ9Z2csYS51cHBlckNhc2U9S2QsYS51cHBlckZpcnN0PVJpLGEuZWFjaD1KdSxhLmVhY2hSaWdodD1YdSxhLmZpcnN0PXp1LExpKGEsZnVuY3Rpb24oKXt2YXIgbj17fTtyZXR1cm4gJG4oYSxmdW5jdGlvbih0LGUpe0YuY2FsbChhLnByb3RvdHlwZSxlKXx8KG5bZV09dCl9KSxufSgpLHtjaGFpbjohMX0pLGEuVkVSU0lPTj1wLG1uKFtcImJpbmRcIixcImJpbmRLZXlcIixcImN1cnJ5XCIsXCJjdXJyeVJpZ2h0XCIsXCJwYXJ0aWFsXCIsXCJwYXJ0aWFsUmlnaHRcIl0sZnVuY3Rpb24obil7YVtuXS5wbGFjZWhvbGRlcj1hfSksbW4oW1wiZHJvcFwiLFwidGFrZVwiXSxmdW5jdGlvbihuLHQpe0gucHJvdG90eXBlW25dPWZ1bmN0aW9uKGUpe2U9ZT09PWk/MTpRKFIoZSksMCk7dmFyIHI9dGhpcy5fX2ZpbHRlcmVkX18mJiF0P25ldyBIKHRoaXMpOnRoaXMuY2xvbmUoKTtyZXR1cm4gci5fX2ZpbHRlcmVkX18/ci5fX3Rha2VDb3VudF9fPW5uKGUsci5fX3Rha2VDb3VudF9fKTpyLl9fdmlld3NfXy5wdXNoKHtzaXplOm5uKGUsSG4pLHR5cGU6bisoci5fX2Rpcl9fPDA/XCJSaWdodFwiOlwiXCIpfSkscn0sSC5wcm90b3R5cGVbbitcIlJpZ2h0XCJdPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnJldmVyc2UoKVtuXShlKS5yZXZlcnNlKCl9fSksbW4oW1wiZmlsdGVyXCIsXCJtYXBcIixcInRha2VXaGlsZVwiXSxmdW5jdGlvbihuLHQpe3ZhciBlPXQrMSxyPWU9PUdpfHxlPT1GYTtILnByb3RvdHlwZVtuXT1mdW5jdGlvbihzKXt2YXIgbz10aGlzLmNsb25lKCk7cmV0dXJuIG8uX19pdGVyYXRlZXNfXy5wdXNoKHtpdGVyYXRlZTp4KHMsMyksdHlwZTplfSksby5fX2ZpbHRlcmVkX189by5fX2ZpbHRlcmVkX198fHIsb319KSxtbihbXCJoZWFkXCIsXCJsYXN0XCJdLGZ1bmN0aW9uKG4sdCl7dmFyIGU9XCJ0YWtlXCIrKHQ/XCJSaWdodFwiOlwiXCIpO0gucHJvdG90eXBlW25dPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbZV0oMSkudmFsdWUoKVswXX19KSxtbihbXCJpbml0aWFsXCIsXCJ0YWlsXCJdLGZ1bmN0aW9uKG4sdCl7dmFyIGU9XCJkcm9wXCIrKHQ/XCJcIjpcIlJpZ2h0XCIpO0gucHJvdG90eXBlW25dPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX19maWx0ZXJlZF9fP25ldyBIKHRoaXMpOnRoaXNbZV0oMSl9fSksSC5wcm90b3R5cGUuY29tcGFjdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmZpbHRlcihmbil9LEgucHJvdG90eXBlLmZpbmQ9ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMuZmlsdGVyKG4pLmhlYWQoKX0sSC5wcm90b3R5cGUuZmluZExhc3Q9ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMucmV2ZXJzZSgpLmZpbmQobil9LEgucHJvdG90eXBlLmludm9rZU1hcD1MKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIHR5cGVvZiBuPT1cImZ1bmN0aW9uXCI/bmV3IEgodGhpcyk6dGhpcy5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGFlKGUsbix0KX0pfSksSC5wcm90b3R5cGUucmVqZWN0PWZ1bmN0aW9uKG4pe3JldHVybiB0aGlzLmZpbHRlcih1cih4KG4pKSl9LEgucHJvdG90eXBlLnNsaWNlPWZ1bmN0aW9uKG4sdCl7bj1SKG4pO3ZhciBlPXRoaXM7cmV0dXJuIGUuX19maWx0ZXJlZF9fJiYobj4wfHx0PDApP25ldyBIKGUpOihuPDA/ZT1lLnRha2VSaWdodCgtbik6biYmKGU9ZS5kcm9wKG4pKSx0IT09aSYmKHQ9Uih0KSxlPXQ8MD9lLmRyb3BSaWdodCgtdCk6ZS50YWtlKHQtbikpLGUpfSxILnByb3RvdHlwZS50YWtlUmlnaHRXaGlsZT1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5yZXZlcnNlKCkudGFrZVdoaWxlKG4pLnJldmVyc2UoKX0sSC5wcm90b3R5cGUudG9BcnJheT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRha2UoSG4pfSwkbihILnByb3RvdHlwZSxmdW5jdGlvbihuLHQpe3ZhciBlPS9eKD86ZmlsdGVyfGZpbmR8bWFwfHJlamVjdCl8V2hpbGUkLy50ZXN0KHQpLHI9L14oPzpoZWFkfGxhc3QpJC8udGVzdCh0KSxzPWFbcj9cInRha2VcIisodD09XCJsYXN0XCI/XCJSaWdodFwiOlwiXCIpOnRdLG89cnx8L15maW5kLy50ZXN0KHQpO3MmJihhLnByb3RvdHlwZVt0XT1mdW5jdGlvbigpe3ZhciBmPXRoaXMuX193cmFwcGVkX18sYz1yP1sxXTphcmd1bWVudHMsbD1mIGluc3RhbmNlb2YgSCx2PWNbMF0sXz1sfHxPKGYpLG09ZnVuY3Rpb24oTil7dmFyICQ9cy5hcHBseShhLG50KFtOXSxjKSk7cmV0dXJuIHImJlA/JFswXTokfTtfJiZlJiZ0eXBlb2Ygdj09XCJmdW5jdGlvblwiJiZ2Lmxlbmd0aCE9MSYmKGw9Xz0hMSk7dmFyIFA9dGhpcy5fX2NoYWluX18sST0hIXRoaXMuX19hY3Rpb25zX18ubGVuZ3RoLEU9byYmIVAsVD1sJiYhSTtpZighbyYmXyl7Zj1UP2Y6bmV3IEgodGhpcyk7dmFyIHk9bi5hcHBseShmLGMpO3JldHVybiB5Ll9fYWN0aW9uc19fLnB1c2goe2Z1bmM6ZXIsYXJnczpbbV0sdGhpc0FyZzppfSksbmV3IFBuKHksUCl9cmV0dXJuIEUmJlQ/bi5hcHBseSh0aGlzLGMpOih5PXRoaXMudGhydShtKSxFP3I/eS52YWx1ZSgpWzBdOnkudmFsdWUoKTp5KX0pfSksbW4oW1wicG9wXCIsXCJwdXNoXCIsXCJzaGlmdFwiLFwic29ydFwiLFwic3BsaWNlXCIsXCJ1bnNoaWZ0XCJdLGZ1bmN0aW9uKG4pe3ZhciB0PU9lW25dLGU9L14oPzpwdXNofHNvcnR8dW5zaGlmdCkkLy50ZXN0KG4pP1widGFwXCI6XCJ0aHJ1XCIscj0vXig/OnBvcHxzaGlmdCkkLy50ZXN0KG4pO2EucHJvdG90eXBlW25dPWZ1bmN0aW9uKCl7dmFyIHM9YXJndW1lbnRzO2lmKHImJiF0aGlzLl9fY2hhaW5fXyl7dmFyIG89dGhpcy52YWx1ZSgpO3JldHVybiB0LmFwcGx5KE8obyk/bzpbXSxzKX1yZXR1cm4gdGhpc1tlXShmdW5jdGlvbihmKXtyZXR1cm4gdC5hcHBseShPKGYpP2Y6W10scyl9KX19KSwkbihILnByb3RvdHlwZSxmdW5jdGlvbihuLHQpe3ZhciBlPWFbdF07aWYoZSl7dmFyIHI9ZS5uYW1lK1wiXCI7Ri5jYWxsKFV0LHIpfHwoVXRbcl09W10pLFV0W3JdLnB1c2goe25hbWU6dCxmdW5jOmV9KX19KSxVdFtYZShpLGN0KS5uYW1lXT1be25hbWU6XCJ3cmFwcGVyXCIsZnVuYzppfV0sSC5wcm90b3R5cGUuY2xvbmU9emYsSC5wcm90b3R5cGUucmV2ZXJzZT1LZixILnByb3RvdHlwZS52YWx1ZT1ZZixhLnByb3RvdHlwZS5hdD1BbCxhLnByb3RvdHlwZS5jaGFpbj1DbCxhLnByb3RvdHlwZS5jb21taXQ9SWwsYS5wcm90b3R5cGUubmV4dD14bCxhLnByb3RvdHlwZS5wbGFudD15bCxhLnByb3RvdHlwZS5yZXZlcnNlPVNsLGEucHJvdG90eXBlLnRvSlNPTj1hLnByb3RvdHlwZS52YWx1ZU9mPWEucHJvdG90eXBlLnZhbHVlPU9sLGEucHJvdG90eXBlLmZpcnN0PWEucHJvdG90eXBlLmhlYWQsbmUmJihhLnByb3RvdHlwZVtuZV09RWwpLGF9LE50PUlmKCk7bHQ/KChsdC5leHBvcnRzPU50KS5fPU50LFRyLl89TnQpOmsuXz1OdH0pLmNhbGwoZ2UpfSkoVWksVWkuZXhwb3J0cyk7dmFyIHpnPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxLZz1PYmplY3QuZGVmaW5lUHJvcGVydGllcyxZZz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyx5YT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLFpnPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksSmc9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxTYT0oQSx1LGkpPT51IGluIEE/emcoQSx1LHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTppfSk6QVt1XT1pLGNyPShBLHUpPT57Zm9yKHZhciBpIGluIHV8fCh1PXt9KSlaZy5jYWxsKHUsaSkmJlNhKEEsaSx1W2ldKTtpZih5YSlmb3IodmFyIGkgb2YgeWEodSkpSmcuY2FsbCh1LGkpJiZTYShBLGksdVtpXSk7cmV0dXJuIEF9LFhnPShBLHUpPT5LZyhBLFlnKHUpKTtmdW5jdGlvbiBmdChBLHUsaSl7dmFyIHA7Y29uc3Qgdz1OZyhBKTtyZXR1cm4oKHA9dS5ycGNNYXApPT1udWxsP3ZvaWQgMDpwW3cucmVmZXJlbmNlXSl8fGAke0dnfT9jaGFpbklkPSR7dy5uYW1lc3BhY2V9OiR7dy5yZWZlcmVuY2V9JnByb2plY3RJZD0ke2l9YH1mdW5jdGlvbiBDdChBKXtyZXR1cm4gQS5pbmNsdWRlcyhcIjpcIik/QS5zcGxpdChcIjpcIilbMV06QX1mdW5jdGlvbiBPYShBKXtyZXR1cm4gQS5tYXAodT0+YCR7dS5zcGxpdChcIjpcIilbMF19OiR7dS5zcGxpdChcIjpcIilbMV19YCl9ZnVuY3Rpb24gUWcoQSx1KXtjb25zdCBpPU9iamVjdC5rZXlzKHUubmFtZXNwYWNlcykuZmlsdGVyKHc9PncuaW5jbHVkZXMoQSkpO2lmKCFpLmxlbmd0aClyZXR1cm5bXTtjb25zdCBwPVtdO3JldHVybiBpLmZvckVhY2godz0+e2NvbnN0IGI9dS5uYW1lc3BhY2VzW3ddLmFjY291bnRzO3AucHVzaCguLi5iKX0pLHB9ZnVuY3Rpb24gV2koQT17fSx1PXt9KXtjb25zdCBpPVJhKEEpLHA9UmEodSk7cmV0dXJuIFVpLmV4cG9ydHMubWVyZ2UoaSxwKX1mdW5jdGlvbiBSYShBKXt2YXIgdSxpLHAsdztjb25zdCBiPXt9O2lmKCFEZyhBKSlyZXR1cm4gYjtmb3IoY29uc3RbRCxFbl1vZiBPYmplY3QuZW50cmllcyhBKSl7Y29uc3QgenQ9QWEoRCk/W0RdOkVuLmNoYWlucyxwcj1Fbi5tZXRob2RzfHxbXSxJdD1Fbi5ldmVudHN8fFtdLExuPUVuLnJwY01hcHx8e30sRm49ZGUoRCk7YltGbl09WGcoY3IoY3Ioe30sYltGbl0pLEVuKSx7Y2hhaW5zOiRpKHp0LCh1PWJbRm5dKT09bnVsbD92b2lkIDA6dS5jaGFpbnMpLG1ldGhvZHM6JGkocHIsKGk9YltGbl0pPT1udWxsP3ZvaWQgMDppLm1ldGhvZHMpLGV2ZW50czokaShJdCwocD1iW0ZuXSk9PW51bGw/dm9pZCAwOnAuZXZlbnRzKSxycGNNYXA6Y3IoY3Ioe30sTG4pLCh3PWJbRm5dKT09bnVsbD92b2lkIDA6dy5ycGNNYXApfSl9cmV0dXJuIGJ9ZnVuY3Rpb24gVmcoQSl7cmV0dXJuIEEuaW5jbHVkZXMoXCI6XCIpP0Euc3BsaXQoXCI6XCIpWzJdOkF9ZnVuY3Rpb24gYmEoQSl7Y29uc3QgdT17fTtmb3IoY29uc3RbaSxwXW9mIE9iamVjdC5lbnRyaWVzKEEpKXtjb25zdCB3PXAubWV0aG9kc3x8W10sYj1wLmV2ZW50c3x8W10sRD1wLmFjY291bnRzfHxbXSxFbj1BYShpKT9baV06cC5jaGFpbnM/cC5jaGFpbnM6T2EocC5hY2NvdW50cyk7dVtpXT17Y2hhaW5zOkVuLG1ldGhvZHM6dyxldmVudHM6YixhY2NvdW50czpEfX1yZXR1cm4gdX1mdW5jdGlvbiBGaShBKXtyZXR1cm4gdHlwZW9mIEE9PVwibnVtYmVyXCI/QTpBLmluY2x1ZGVzKFwiMHhcIik/cGFyc2VJbnQoQSwxNik6KEE9QS5pbmNsdWRlcyhcIjpcIik/QS5zcGxpdChcIjpcIilbMV06QSxpc05hTihOdW1iZXIoQSkpP0E6TnVtYmVyKEEpKX1jb25zdCBUYT17fSx6PUE9PlRhW0FdLE1pPShBLHUpPT57VGFbQV09dX07Y2xhc3Mga2d7Y29uc3RydWN0b3IodSl7dGhpcy5uYW1lPVwicG9sa2Fkb3RcIix0aGlzLm5hbWVzcGFjZT11Lm5hbWVzcGFjZSx0aGlzLmV2ZW50cz16KFwiZXZlbnRzXCIpLHRoaXMuY2xpZW50PXooXCJjbGllbnRcIiksdGhpcy5jaGFpbklkPXRoaXMuZ2V0RGVmYXVsdENoYWluKCksdGhpcy5odHRwUHJvdmlkZXJzPXRoaXMuY3JlYXRlSHR0cFByb3ZpZGVycygpfXVwZGF0ZU5hbWVzcGFjZSh1KXt0aGlzLm5hbWVzcGFjZT1PYmplY3QuYXNzaWduKHRoaXMubmFtZXNwYWNlLHUpfXJlcXVlc3RBY2NvdW50cygpe3JldHVybiB0aGlzLmdldEFjY291bnRzKCl9Z2V0RGVmYXVsdENoYWluKCl7aWYodGhpcy5jaGFpbklkKXJldHVybiB0aGlzLmNoYWluSWQ7aWYodGhpcy5uYW1lc3BhY2UuZGVmYXVsdENoYWluKXJldHVybiB0aGlzLm5hbWVzcGFjZS5kZWZhdWx0Q2hhaW47Y29uc3QgdT10aGlzLm5hbWVzcGFjZS5jaGFpbnNbMF07aWYoIXUpdGhyb3cgbmV3IEVycm9yKFwiQ2hhaW5JZCBub3QgZm91bmRcIik7cmV0dXJuIHUuc3BsaXQoXCI6XCIpWzFdfXJlcXVlc3QodSl7cmV0dXJuIHRoaXMubmFtZXNwYWNlLm1ldGhvZHMuaW5jbHVkZXModS5yZXF1ZXN0Lm1ldGhvZCk/dGhpcy5jbGllbnQucmVxdWVzdCh1KTp0aGlzLmdldEh0dHBQcm92aWRlcigpLnJlcXVlc3QodS5yZXF1ZXN0KX1zZXREZWZhdWx0Q2hhaW4odSxpKXt0aGlzLmh0dHBQcm92aWRlcnNbdV18fHRoaXMuc2V0SHR0cFByb3ZpZGVyKHUsaSksdGhpcy5jaGFpbklkPXUsdGhpcy5ldmVudHMuZW1pdChWbi5ERUZBVUxUX0NIQUlOX0NIQU5HRUQsYCR7dGhpcy5uYW1lfToke3V9YCl9Z2V0QWNjb3VudHMoKXtjb25zdCB1PXRoaXMubmFtZXNwYWNlLmFjY291bnRzO3JldHVybiB1P3UuZmlsdGVyKGk9Pmkuc3BsaXQoXCI6XCIpWzFdPT09dGhpcy5jaGFpbklkLnRvU3RyaW5nKCkpLm1hcChpPT5pLnNwbGl0KFwiOlwiKVsyXSl8fFtdOltdfWNyZWF0ZUh0dHBQcm92aWRlcnMoKXtjb25zdCB1PXt9O3JldHVybiB0aGlzLm5hbWVzcGFjZS5jaGFpbnMuZm9yRWFjaChpPT57dmFyIHA7Y29uc3Qgdz1DdChpKTt1W3ddPXRoaXMuY3JlYXRlSHR0cFByb3ZpZGVyKHcsKHA9dGhpcy5uYW1lc3BhY2UucnBjTWFwKT09bnVsbD92b2lkIDA6cFtpXSl9KSx1fWdldEh0dHBQcm92aWRlcigpe2NvbnN0IHU9YCR7dGhpcy5uYW1lfToke3RoaXMuY2hhaW5JZH1gLGk9dGhpcy5odHRwUHJvdmlkZXJzW3VdO2lmKHR5cGVvZiBpPlwidVwiKXRocm93IG5ldyBFcnJvcihgSlNPTi1SUEMgcHJvdmlkZXIgZm9yICR7dX0gbm90IGZvdW5kYCk7cmV0dXJuIGl9c2V0SHR0cFByb3ZpZGVyKHUsaSl7Y29uc3QgcD10aGlzLmNyZWF0ZUh0dHBQcm92aWRlcih1LGkpO3AmJih0aGlzLmh0dHBQcm92aWRlcnNbdV09cCl9Y3JlYXRlSHR0cFByb3ZpZGVyKHUsaSl7Y29uc3QgcD1pfHxmdCh1LHRoaXMubmFtZXNwYWNlLHRoaXMuY2xpZW50LmNvcmUucHJvamVjdElkKTtpZighcCl0aHJvdyBuZXcgRXJyb3IoYE5vIFJQQyB1cmwgcHJvdmlkZWQgZm9yIGNoYWluSWQ6ICR7dX1gKTtyZXR1cm4gbmV3IG90KG5ldyBBdChwLHooXCJkaXNhYmxlUHJvdmlkZXJQaW5nXCIpKSl9fWNsYXNzIGpne2NvbnN0cnVjdG9yKHUpe3RoaXMubmFtZT1cImVpcDE1NVwiLHRoaXMubmFtZXNwYWNlPXUubmFtZXNwYWNlLHRoaXMuZXZlbnRzPXooXCJldmVudHNcIiksdGhpcy5jbGllbnQ9eihcImNsaWVudFwiKSx0aGlzLmh0dHBQcm92aWRlcnM9dGhpcy5jcmVhdGVIdHRwUHJvdmlkZXJzKCksdGhpcy5jaGFpbklkPXBhcnNlSW50KHRoaXMuZ2V0RGVmYXVsdENoYWluKCkpfWFzeW5jIHJlcXVlc3QodSl7c3dpdGNoKHUucmVxdWVzdC5tZXRob2Qpe2Nhc2VcImV0aF9yZXF1ZXN0QWNjb3VudHNcIjpyZXR1cm4gdGhpcy5nZXRBY2NvdW50cygpO2Nhc2VcImV0aF9hY2NvdW50c1wiOnJldHVybiB0aGlzLmdldEFjY291bnRzKCk7Y2FzZVwid2FsbGV0X3N3aXRjaEV0aGVyZXVtQ2hhaW5cIjpyZXR1cm4gYXdhaXQgdGhpcy5oYW5kbGVTd2l0Y2hDaGFpbih1KTtjYXNlXCJldGhfY2hhaW5JZFwiOnJldHVybiBwYXJzZUludCh0aGlzLmdldERlZmF1bHRDaGFpbigpKX1yZXR1cm4gdGhpcy5uYW1lc3BhY2UubWV0aG9kcy5pbmNsdWRlcyh1LnJlcXVlc3QubWV0aG9kKT9hd2FpdCB0aGlzLmNsaWVudC5yZXF1ZXN0KHUpOnRoaXMuZ2V0SHR0cFByb3ZpZGVyKCkucmVxdWVzdCh1LnJlcXVlc3QpfXVwZGF0ZU5hbWVzcGFjZSh1KXt0aGlzLm5hbWVzcGFjZT1PYmplY3QuYXNzaWduKHRoaXMubmFtZXNwYWNlLHUpfXNldERlZmF1bHRDaGFpbih1LGkpe3RoaXMuaHR0cFByb3ZpZGVyc1t1XXx8dGhpcy5zZXRIdHRwUHJvdmlkZXIocGFyc2VJbnQodSksaSksdGhpcy5jaGFpbklkPXBhcnNlSW50KHUpLHRoaXMuZXZlbnRzLmVtaXQoVm4uREVGQVVMVF9DSEFJTl9DSEFOR0VELGAke3RoaXMubmFtZX06JHt1fWApfXJlcXVlc3RBY2NvdW50cygpe3JldHVybiB0aGlzLmdldEFjY291bnRzKCl9Z2V0RGVmYXVsdENoYWluKCl7aWYodGhpcy5jaGFpbklkKXJldHVybiB0aGlzLmNoYWluSWQudG9TdHJpbmcoKTtpZih0aGlzLm5hbWVzcGFjZS5kZWZhdWx0Q2hhaW4pcmV0dXJuIHRoaXMubmFtZXNwYWNlLmRlZmF1bHRDaGFpbjtjb25zdCB1PXRoaXMubmFtZXNwYWNlLmNoYWluc1swXTtpZighdSl0aHJvdyBuZXcgRXJyb3IoXCJDaGFpbklkIG5vdCBmb3VuZFwiKTtyZXR1cm4gdS5zcGxpdChcIjpcIilbMV19Y3JlYXRlSHR0cFByb3ZpZGVyKHUsaSl7Y29uc3QgcD1pfHxmdChgJHt0aGlzLm5hbWV9OiR7dX1gLHRoaXMubmFtZXNwYWNlLHRoaXMuY2xpZW50LmNvcmUucHJvamVjdElkKTtpZighcCl0aHJvdyBuZXcgRXJyb3IoYE5vIFJQQyB1cmwgcHJvdmlkZWQgZm9yIGNoYWluSWQ6ICR7dX1gKTtyZXR1cm4gbmV3IG90KG5ldyBVZyhwLHooXCJkaXNhYmxlUHJvdmlkZXJQaW5nXCIpKSl9c2V0SHR0cFByb3ZpZGVyKHUsaSl7Y29uc3QgcD10aGlzLmNyZWF0ZUh0dHBQcm92aWRlcih1LGkpO3AmJih0aGlzLmh0dHBQcm92aWRlcnNbdV09cCl9Y3JlYXRlSHR0cFByb3ZpZGVycygpe2NvbnN0IHU9e307cmV0dXJuIHRoaXMubmFtZXNwYWNlLmNoYWlucy5mb3JFYWNoKGk9Pnt2YXIgcDtjb25zdCB3PXBhcnNlSW50KEN0KGkpKTt1W3ddPXRoaXMuY3JlYXRlSHR0cFByb3ZpZGVyKHcsKHA9dGhpcy5uYW1lc3BhY2UucnBjTWFwKT09bnVsbD92b2lkIDA6cFtpXSl9KSx1fWdldEFjY291bnRzKCl7Y29uc3QgdT10aGlzLm5hbWVzcGFjZS5hY2NvdW50cztyZXR1cm4gdT9bLi4ubmV3IFNldCh1LmZpbHRlcihpPT5pLnNwbGl0KFwiOlwiKVsxXT09PXRoaXMuY2hhaW5JZC50b1N0cmluZygpKS5tYXAoaT0+aS5zcGxpdChcIjpcIilbMl0pKV06W119Z2V0SHR0cFByb3ZpZGVyKCl7Y29uc3QgdT10aGlzLmNoYWluSWQsaT10aGlzLmh0dHBQcm92aWRlcnNbdV07aWYodHlwZW9mIGk+XCJ1XCIpdGhyb3cgbmV3IEVycm9yKGBKU09OLVJQQyBwcm92aWRlciBmb3IgJHt1fSBub3QgZm91bmRgKTtyZXR1cm4gaX1hc3luYyBoYW5kbGVTd2l0Y2hDaGFpbih1KXt2YXIgaSxwO2xldCB3PXUucmVxdWVzdC5wYXJhbXM/KGk9dS5yZXF1ZXN0LnBhcmFtc1swXSk9PW51bGw/dm9pZCAwOmkuY2hhaW5JZDpcIjB4MFwiO3c9dy5zdGFydHNXaXRoKFwiMHhcIik/dzpgMHgke3d9YDtjb25zdCBiPXBhcnNlSW50KHcsMTYpO2lmKHRoaXMuaXNDaGFpbkFwcHJvdmVkKGIpKXRoaXMuc2V0RGVmYXVsdENoYWluKGAke2J9YCk7ZWxzZSBpZih0aGlzLm5hbWVzcGFjZS5tZXRob2RzLmluY2x1ZGVzKFwid2FsbGV0X3N3aXRjaEV0aGVyZXVtQ2hhaW5cIikpYXdhaXQgdGhpcy5jbGllbnQucmVxdWVzdCh7dG9waWM6dS50b3BpYyxyZXF1ZXN0OnttZXRob2Q6dS5yZXF1ZXN0Lm1ldGhvZCxwYXJhbXM6W3tjaGFpbklkOnd9XX0sY2hhaW5JZDoocD10aGlzLm5hbWVzcGFjZS5jaGFpbnMpPT1udWxsP3ZvaWQgMDpwWzBdfSksdGhpcy5zZXREZWZhdWx0Q2hhaW4oYCR7Yn1gKTtlbHNlIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHN3aXRjaCB0byBjaGFpbiAnZWlwMTU1OiR7Yn0nLiBUaGUgY2hhaW4gaXMgbm90IGFwcHJvdmVkIG9yIHRoZSB3YWxsZXQgZG9lcyBub3Qgc3VwcG9ydCAnd2FsbGV0X3N3aXRjaEV0aGVyZXVtQ2hhaW4nIG1ldGhvZC5gKTtyZXR1cm4gbnVsbH1pc0NoYWluQXBwcm92ZWQodSl7cmV0dXJuIHRoaXMubmFtZXNwYWNlLmNoYWlucy5pbmNsdWRlcyhgJHt0aGlzLm5hbWV9OiR7dX1gKX19Y2xhc3MgbnZ7Y29uc3RydWN0b3IodSl7dGhpcy5uYW1lPVwic29sYW5hXCIsdGhpcy5uYW1lc3BhY2U9dS5uYW1lc3BhY2UsdGhpcy5ldmVudHM9eihcImV2ZW50c1wiKSx0aGlzLmNsaWVudD16KFwiY2xpZW50XCIpLHRoaXMuY2hhaW5JZD10aGlzLmdldERlZmF1bHRDaGFpbigpLHRoaXMuaHR0cFByb3ZpZGVycz10aGlzLmNyZWF0ZUh0dHBQcm92aWRlcnMoKX11cGRhdGVOYW1lc3BhY2UodSl7dGhpcy5uYW1lc3BhY2U9T2JqZWN0LmFzc2lnbih0aGlzLm5hbWVzcGFjZSx1KX1yZXF1ZXN0QWNjb3VudHMoKXtyZXR1cm4gdGhpcy5nZXRBY2NvdW50cygpfXJlcXVlc3QodSl7cmV0dXJuIHRoaXMubmFtZXNwYWNlLm1ldGhvZHMuaW5jbHVkZXModS5yZXF1ZXN0Lm1ldGhvZCk/dGhpcy5jbGllbnQucmVxdWVzdCh1KTp0aGlzLmdldEh0dHBQcm92aWRlcigpLnJlcXVlc3QodS5yZXF1ZXN0KX1zZXREZWZhdWx0Q2hhaW4odSxpKXt0aGlzLmh0dHBQcm92aWRlcnNbdV18fHRoaXMuc2V0SHR0cFByb3ZpZGVyKHUsaSksdGhpcy5jaGFpbklkPXUsdGhpcy5ldmVudHMuZW1pdChWbi5ERUZBVUxUX0NIQUlOX0NIQU5HRUQsYCR7dGhpcy5uYW1lfToke3V9YCl9Z2V0RGVmYXVsdENoYWluKCl7aWYodGhpcy5jaGFpbklkKXJldHVybiB0aGlzLmNoYWluSWQ7aWYodGhpcy5uYW1lc3BhY2UuZGVmYXVsdENoYWluKXJldHVybiB0aGlzLm5hbWVzcGFjZS5kZWZhdWx0Q2hhaW47Y29uc3QgdT10aGlzLm5hbWVzcGFjZS5jaGFpbnNbMF07aWYoIXUpdGhyb3cgbmV3IEVycm9yKFwiQ2hhaW5JZCBub3QgZm91bmRcIik7cmV0dXJuIHUuc3BsaXQoXCI6XCIpWzFdfWdldEFjY291bnRzKCl7Y29uc3QgdT10aGlzLm5hbWVzcGFjZS5hY2NvdW50cztyZXR1cm4gdT9bLi4ubmV3IFNldCh1LmZpbHRlcihpPT5pLnNwbGl0KFwiOlwiKVsxXT09PXRoaXMuY2hhaW5JZC50b1N0cmluZygpKS5tYXAoaT0+aS5zcGxpdChcIjpcIilbMl0pKV06W119Y3JlYXRlSHR0cFByb3ZpZGVycygpe2NvbnN0IHU9e307cmV0dXJuIHRoaXMubmFtZXNwYWNlLmNoYWlucy5mb3JFYWNoKGk9Pnt2YXIgcDtjb25zdCB3PUN0KGkpO3Vbd109dGhpcy5jcmVhdGVIdHRwUHJvdmlkZXIodywocD10aGlzLm5hbWVzcGFjZS5ycGNNYXApPT1udWxsP3ZvaWQgMDpwW2ldKX0pLHV9Z2V0SHR0cFByb3ZpZGVyKCl7Y29uc3QgdT1gJHt0aGlzLm5hbWV9OiR7dGhpcy5jaGFpbklkfWAsaT10aGlzLmh0dHBQcm92aWRlcnNbdV07aWYodHlwZW9mIGk+XCJ1XCIpdGhyb3cgbmV3IEVycm9yKGBKU09OLVJQQyBwcm92aWRlciBmb3IgJHt1fSBub3QgZm91bmRgKTtyZXR1cm4gaX1zZXRIdHRwUHJvdmlkZXIodSxpKXtjb25zdCBwPXRoaXMuY3JlYXRlSHR0cFByb3ZpZGVyKHUsaSk7cCYmKHRoaXMuaHR0cFByb3ZpZGVyc1t1XT1wKX1jcmVhdGVIdHRwUHJvdmlkZXIodSxpKXtjb25zdCBwPWl8fGZ0KHUsdGhpcy5uYW1lc3BhY2UsdGhpcy5jbGllbnQuY29yZS5wcm9qZWN0SWQpO2lmKCFwKXRocm93IG5ldyBFcnJvcihgTm8gUlBDIHVybCBwcm92aWRlZCBmb3IgY2hhaW5JZDogJHt1fWApO3JldHVybiBuZXcgb3QobmV3IEF0KHAseihcImRpc2FibGVQcm92aWRlclBpbmdcIikpKX19Y2xhc3MgdHZ7Y29uc3RydWN0b3IodSl7dGhpcy5uYW1lPVwiY29zbW9zXCIsdGhpcy5uYW1lc3BhY2U9dS5uYW1lc3BhY2UsdGhpcy5ldmVudHM9eihcImV2ZW50c1wiKSx0aGlzLmNsaWVudD16KFwiY2xpZW50XCIpLHRoaXMuY2hhaW5JZD10aGlzLmdldERlZmF1bHRDaGFpbigpLHRoaXMuaHR0cFByb3ZpZGVycz10aGlzLmNyZWF0ZUh0dHBQcm92aWRlcnMoKX11cGRhdGVOYW1lc3BhY2UodSl7dGhpcy5uYW1lc3BhY2U9T2JqZWN0LmFzc2lnbih0aGlzLm5hbWVzcGFjZSx1KX1yZXF1ZXN0QWNjb3VudHMoKXtyZXR1cm4gdGhpcy5nZXRBY2NvdW50cygpfWdldERlZmF1bHRDaGFpbigpe2lmKHRoaXMuY2hhaW5JZClyZXR1cm4gdGhpcy5jaGFpbklkO2lmKHRoaXMubmFtZXNwYWNlLmRlZmF1bHRDaGFpbilyZXR1cm4gdGhpcy5uYW1lc3BhY2UuZGVmYXVsdENoYWluO2NvbnN0IHU9dGhpcy5uYW1lc3BhY2UuY2hhaW5zWzBdO2lmKCF1KXRocm93IG5ldyBFcnJvcihcIkNoYWluSWQgbm90IGZvdW5kXCIpO3JldHVybiB1LnNwbGl0KFwiOlwiKVsxXX1yZXF1ZXN0KHUpe3JldHVybiB0aGlzLm5hbWVzcGFjZS5tZXRob2RzLmluY2x1ZGVzKHUucmVxdWVzdC5tZXRob2QpP3RoaXMuY2xpZW50LnJlcXVlc3QodSk6dGhpcy5nZXRIdHRwUHJvdmlkZXIoKS5yZXF1ZXN0KHUucmVxdWVzdCl9c2V0RGVmYXVsdENoYWluKHUsaSl7dGhpcy5odHRwUHJvdmlkZXJzW3VdfHx0aGlzLnNldEh0dHBQcm92aWRlcih1LGkpLHRoaXMuY2hhaW5JZD11LHRoaXMuZXZlbnRzLmVtaXQoVm4uREVGQVVMVF9DSEFJTl9DSEFOR0VELGAke3RoaXMubmFtZX06JHt0aGlzLmNoYWluSWR9YCl9Z2V0QWNjb3VudHMoKXtjb25zdCB1PXRoaXMubmFtZXNwYWNlLmFjY291bnRzO3JldHVybiB1P1suLi5uZXcgU2V0KHUuZmlsdGVyKGk9Pmkuc3BsaXQoXCI6XCIpWzFdPT09dGhpcy5jaGFpbklkLnRvU3RyaW5nKCkpLm1hcChpPT5pLnNwbGl0KFwiOlwiKVsyXSkpXTpbXX1jcmVhdGVIdHRwUHJvdmlkZXJzKCl7Y29uc3QgdT17fTtyZXR1cm4gdGhpcy5uYW1lc3BhY2UuY2hhaW5zLmZvckVhY2goaT0+e3ZhciBwO2NvbnN0IHc9Q3QoaSk7dVt3XT10aGlzLmNyZWF0ZUh0dHBQcm92aWRlcih3LChwPXRoaXMubmFtZXNwYWNlLnJwY01hcCk9PW51bGw/dm9pZCAwOnBbaV0pfSksdX1nZXRIdHRwUHJvdmlkZXIoKXtjb25zdCB1PWAke3RoaXMubmFtZX06JHt0aGlzLmNoYWluSWR9YCxpPXRoaXMuaHR0cFByb3ZpZGVyc1t1XTtpZih0eXBlb2YgaT5cInVcIil0aHJvdyBuZXcgRXJyb3IoYEpTT04tUlBDIHByb3ZpZGVyIGZvciAke3V9IG5vdCBmb3VuZGApO3JldHVybiBpfXNldEh0dHBQcm92aWRlcih1LGkpe2NvbnN0IHA9dGhpcy5jcmVhdGVIdHRwUHJvdmlkZXIodSxpKTtwJiYodGhpcy5odHRwUHJvdmlkZXJzW3VdPXApfWNyZWF0ZUh0dHBQcm92aWRlcih1LGkpe2NvbnN0IHA9aXx8ZnQodSx0aGlzLm5hbWVzcGFjZSx0aGlzLmNsaWVudC5jb3JlLnByb2plY3RJZCk7aWYoIXApdGhyb3cgbmV3IEVycm9yKGBObyBSUEMgdXJsIHByb3ZpZGVkIGZvciBjaGFpbklkOiAke3V9YCk7cmV0dXJuIG5ldyBvdChuZXcgQXQocCx6KFwiZGlzYWJsZVByb3ZpZGVyUGluZ1wiKSkpfX1jbGFzcyBldntjb25zdHJ1Y3Rvcih1KXt0aGlzLm5hbWU9XCJjaXAzNFwiLHRoaXMubmFtZXNwYWNlPXUubmFtZXNwYWNlLHRoaXMuZXZlbnRzPXooXCJldmVudHNcIiksdGhpcy5jbGllbnQ9eihcImNsaWVudFwiKSx0aGlzLmNoYWluSWQ9dGhpcy5nZXREZWZhdWx0Q2hhaW4oKSx0aGlzLmh0dHBQcm92aWRlcnM9dGhpcy5jcmVhdGVIdHRwUHJvdmlkZXJzKCl9dXBkYXRlTmFtZXNwYWNlKHUpe3RoaXMubmFtZXNwYWNlPU9iamVjdC5hc3NpZ24odGhpcy5uYW1lc3BhY2UsdSl9cmVxdWVzdEFjY291bnRzKCl7cmV0dXJuIHRoaXMuZ2V0QWNjb3VudHMoKX1nZXREZWZhdWx0Q2hhaW4oKXtpZih0aGlzLmNoYWluSWQpcmV0dXJuIHRoaXMuY2hhaW5JZDtpZih0aGlzLm5hbWVzcGFjZS5kZWZhdWx0Q2hhaW4pcmV0dXJuIHRoaXMubmFtZXNwYWNlLmRlZmF1bHRDaGFpbjtjb25zdCB1PXRoaXMubmFtZXNwYWNlLmNoYWluc1swXTtpZighdSl0aHJvdyBuZXcgRXJyb3IoXCJDaGFpbklkIG5vdCBmb3VuZFwiKTtyZXR1cm4gdS5zcGxpdChcIjpcIilbMV19cmVxdWVzdCh1KXtyZXR1cm4gdGhpcy5uYW1lc3BhY2UubWV0aG9kcy5pbmNsdWRlcyh1LnJlcXVlc3QubWV0aG9kKT90aGlzLmNsaWVudC5yZXF1ZXN0KHUpOnRoaXMuZ2V0SHR0cFByb3ZpZGVyKCkucmVxdWVzdCh1LnJlcXVlc3QpfXNldERlZmF1bHRDaGFpbih1LGkpe3RoaXMuaHR0cFByb3ZpZGVyc1t1XXx8dGhpcy5zZXRIdHRwUHJvdmlkZXIodSxpKSx0aGlzLmNoYWluSWQ9dSx0aGlzLmV2ZW50cy5lbWl0KFZuLkRFRkFVTFRfQ0hBSU5fQ0hBTkdFRCxgJHt0aGlzLm5hbWV9OiR7dGhpcy5jaGFpbklkfWApfWdldEFjY291bnRzKCl7Y29uc3QgdT10aGlzLm5hbWVzcGFjZS5hY2NvdW50cztyZXR1cm4gdT9bLi4ubmV3IFNldCh1LmZpbHRlcihpPT5pLnNwbGl0KFwiOlwiKVsxXT09PXRoaXMuY2hhaW5JZC50b1N0cmluZygpKS5tYXAoaT0+aS5zcGxpdChcIjpcIilbMl0pKV06W119Y3JlYXRlSHR0cFByb3ZpZGVycygpe2NvbnN0IHU9e307cmV0dXJuIHRoaXMubmFtZXNwYWNlLmNoYWlucy5mb3JFYWNoKGk9Pntjb25zdCBwPXRoaXMuZ2V0Q2FyZGFub1JQQ1VybChpKSx3PUN0KGkpO3Vbd109dGhpcy5jcmVhdGVIdHRwUHJvdmlkZXIodyxwKX0pLHV9Z2V0SHR0cFByb3ZpZGVyKCl7Y29uc3QgdT1gJHt0aGlzLm5hbWV9OiR7dGhpcy5jaGFpbklkfWAsaT10aGlzLmh0dHBQcm92aWRlcnNbdV07aWYodHlwZW9mIGk+XCJ1XCIpdGhyb3cgbmV3IEVycm9yKGBKU09OLVJQQyBwcm92aWRlciBmb3IgJHt1fSBub3QgZm91bmRgKTtyZXR1cm4gaX1nZXRDYXJkYW5vUlBDVXJsKHUpe2NvbnN0IGk9dGhpcy5uYW1lc3BhY2UucnBjTWFwO2lmKGkpcmV0dXJuIGlbdV19c2V0SHR0cFByb3ZpZGVyKHUsaSl7Y29uc3QgcD10aGlzLmNyZWF0ZUh0dHBQcm92aWRlcih1LGkpO3AmJih0aGlzLmh0dHBQcm92aWRlcnNbdV09cCl9Y3JlYXRlSHR0cFByb3ZpZGVyKHUsaSl7Y29uc3QgcD1pfHx0aGlzLmdldENhcmRhbm9SUENVcmwodSk7aWYoIXApdGhyb3cgbmV3IEVycm9yKGBObyBSUEMgdXJsIHByb3ZpZGVkIGZvciBjaGFpbklkOiAke3V9YCk7cmV0dXJuIG5ldyBvdChuZXcgQXQocCx6KFwiZGlzYWJsZVByb3ZpZGVyUGluZ1wiKSkpfX1jbGFzcyBydntjb25zdHJ1Y3Rvcih1KXt0aGlzLm5hbWU9XCJlbHJvbmRcIix0aGlzLm5hbWVzcGFjZT11Lm5hbWVzcGFjZSx0aGlzLmV2ZW50cz16KFwiZXZlbnRzXCIpLHRoaXMuY2xpZW50PXooXCJjbGllbnRcIiksdGhpcy5jaGFpbklkPXRoaXMuZ2V0RGVmYXVsdENoYWluKCksdGhpcy5odHRwUHJvdmlkZXJzPXRoaXMuY3JlYXRlSHR0cFByb3ZpZGVycygpfXVwZGF0ZU5hbWVzcGFjZSh1KXt0aGlzLm5hbWVzcGFjZT1PYmplY3QuYXNzaWduKHRoaXMubmFtZXNwYWNlLHUpfXJlcXVlc3RBY2NvdW50cygpe3JldHVybiB0aGlzLmdldEFjY291bnRzKCl9cmVxdWVzdCh1KXtyZXR1cm4gdGhpcy5uYW1lc3BhY2UubWV0aG9kcy5pbmNsdWRlcyh1LnJlcXVlc3QubWV0aG9kKT90aGlzLmNsaWVudC5yZXF1ZXN0KHUpOnRoaXMuZ2V0SHR0cFByb3ZpZGVyKCkucmVxdWVzdCh1LnJlcXVlc3QpfXNldERlZmF1bHRDaGFpbih1LGkpe3RoaXMuaHR0cFByb3ZpZGVyc1t1XXx8dGhpcy5zZXRIdHRwUHJvdmlkZXIodSxpKSx0aGlzLmNoYWluSWQ9dSx0aGlzLmV2ZW50cy5lbWl0KFZuLkRFRkFVTFRfQ0hBSU5fQ0hBTkdFRCxgJHt0aGlzLm5hbWV9OiR7dX1gKX1nZXREZWZhdWx0Q2hhaW4oKXtpZih0aGlzLmNoYWluSWQpcmV0dXJuIHRoaXMuY2hhaW5JZDtpZih0aGlzLm5hbWVzcGFjZS5kZWZhdWx0Q2hhaW4pcmV0dXJuIHRoaXMubmFtZXNwYWNlLmRlZmF1bHRDaGFpbjtjb25zdCB1PXRoaXMubmFtZXNwYWNlLmNoYWluc1swXTtpZighdSl0aHJvdyBuZXcgRXJyb3IoXCJDaGFpbklkIG5vdCBmb3VuZFwiKTtyZXR1cm4gdS5zcGxpdChcIjpcIilbMV19Z2V0QWNjb3VudHMoKXtjb25zdCB1PXRoaXMubmFtZXNwYWNlLmFjY291bnRzO3JldHVybiB1P1suLi5uZXcgU2V0KHUuZmlsdGVyKGk9Pmkuc3BsaXQoXCI6XCIpWzFdPT09dGhpcy5jaGFpbklkLnRvU3RyaW5nKCkpLm1hcChpPT5pLnNwbGl0KFwiOlwiKVsyXSkpXTpbXX1jcmVhdGVIdHRwUHJvdmlkZXJzKCl7Y29uc3QgdT17fTtyZXR1cm4gdGhpcy5uYW1lc3BhY2UuY2hhaW5zLmZvckVhY2goaT0+e3ZhciBwO2NvbnN0IHc9Q3QoaSk7dVt3XT10aGlzLmNyZWF0ZUh0dHBQcm92aWRlcih3LChwPXRoaXMubmFtZXNwYWNlLnJwY01hcCk9PW51bGw/dm9pZCAwOnBbaV0pfSksdX1nZXRIdHRwUHJvdmlkZXIoKXtjb25zdCB1PWAke3RoaXMubmFtZX06JHt0aGlzLmNoYWluSWR9YCxpPXRoaXMuaHR0cFByb3ZpZGVyc1t1XTtpZih0eXBlb2YgaT5cInVcIil0aHJvdyBuZXcgRXJyb3IoYEpTT04tUlBDIHByb3ZpZGVyIGZvciAke3V9IG5vdCBmb3VuZGApO3JldHVybiBpfXNldEh0dHBQcm92aWRlcih1LGkpe2NvbnN0IHA9dGhpcy5jcmVhdGVIdHRwUHJvdmlkZXIodSxpKTtwJiYodGhpcy5odHRwUHJvdmlkZXJzW3VdPXApfWNyZWF0ZUh0dHBQcm92aWRlcih1LGkpe2NvbnN0IHA9aXx8ZnQodSx0aGlzLm5hbWVzcGFjZSx0aGlzLmNsaWVudC5jb3JlLnByb2plY3RJZCk7aWYoIXApdGhyb3cgbmV3IEVycm9yKGBObyBSUEMgdXJsIHByb3ZpZGVkIGZvciBjaGFpbklkOiAke3V9YCk7cmV0dXJuIG5ldyBvdChuZXcgQXQocCx6KFwiZGlzYWJsZVByb3ZpZGVyUGluZ1wiKSkpfX1jbGFzcyBpdntjb25zdHJ1Y3Rvcih1KXt0aGlzLm5hbWU9XCJtdWx0aXZlcnN4XCIsdGhpcy5uYW1lc3BhY2U9dS5uYW1lc3BhY2UsdGhpcy5ldmVudHM9eihcImV2ZW50c1wiKSx0aGlzLmNsaWVudD16KFwiY2xpZW50XCIpLHRoaXMuY2hhaW5JZD10aGlzLmdldERlZmF1bHRDaGFpbigpLHRoaXMuaHR0cFByb3ZpZGVycz10aGlzLmNyZWF0ZUh0dHBQcm92aWRlcnMoKX11cGRhdGVOYW1lc3BhY2UodSl7dGhpcy5uYW1lc3BhY2U9T2JqZWN0LmFzc2lnbih0aGlzLm5hbWVzcGFjZSx1KX1yZXF1ZXN0QWNjb3VudHMoKXtyZXR1cm4gdGhpcy5nZXRBY2NvdW50cygpfXJlcXVlc3QodSl7cmV0dXJuIHRoaXMubmFtZXNwYWNlLm1ldGhvZHMuaW5jbHVkZXModS5yZXF1ZXN0Lm1ldGhvZCk/dGhpcy5jbGllbnQucmVxdWVzdCh1KTp0aGlzLmdldEh0dHBQcm92aWRlcigpLnJlcXVlc3QodS5yZXF1ZXN0KX1zZXREZWZhdWx0Q2hhaW4odSxpKXt0aGlzLmh0dHBQcm92aWRlcnNbdV18fHRoaXMuc2V0SHR0cFByb3ZpZGVyKHUsaSksdGhpcy5jaGFpbklkPXUsdGhpcy5ldmVudHMuZW1pdChWbi5ERUZBVUxUX0NIQUlOX0NIQU5HRUQsYCR7dGhpcy5uYW1lfToke3V9YCl9Z2V0RGVmYXVsdENoYWluKCl7aWYodGhpcy5jaGFpbklkKXJldHVybiB0aGlzLmNoYWluSWQ7aWYodGhpcy5uYW1lc3BhY2UuZGVmYXVsdENoYWluKXJldHVybiB0aGlzLm5hbWVzcGFjZS5kZWZhdWx0Q2hhaW47Y29uc3QgdT10aGlzLm5hbWVzcGFjZS5jaGFpbnNbMF07aWYoIXUpdGhyb3cgbmV3IEVycm9yKFwiQ2hhaW5JZCBub3QgZm91bmRcIik7cmV0dXJuIHUuc3BsaXQoXCI6XCIpWzFdfWdldEFjY291bnRzKCl7Y29uc3QgdT10aGlzLm5hbWVzcGFjZS5hY2NvdW50cztyZXR1cm4gdT9bLi4ubmV3IFNldCh1LmZpbHRlcihpPT5pLnNwbGl0KFwiOlwiKVsxXT09PXRoaXMuY2hhaW5JZC50b1N0cmluZygpKS5tYXAoaT0+aS5zcGxpdChcIjpcIilbMl0pKV06W119Y3JlYXRlSHR0cFByb3ZpZGVycygpe2NvbnN0IHU9e307cmV0dXJuIHRoaXMubmFtZXNwYWNlLmNoYWlucy5mb3JFYWNoKGk9Pnt2YXIgcDtjb25zdCB3PUN0KGkpO3Vbd109dGhpcy5jcmVhdGVIdHRwUHJvdmlkZXIodywocD10aGlzLm5hbWVzcGFjZS5ycGNNYXApPT1udWxsP3ZvaWQgMDpwW2ldKX0pLHV9Z2V0SHR0cFByb3ZpZGVyKCl7Y29uc3QgdT1gJHt0aGlzLm5hbWV9OiR7dGhpcy5jaGFpbklkfWAsaT10aGlzLmh0dHBQcm92aWRlcnNbdV07aWYodHlwZW9mIGk+XCJ1XCIpdGhyb3cgbmV3IEVycm9yKGBKU09OLVJQQyBwcm92aWRlciBmb3IgJHt1fSBub3QgZm91bmRgKTtyZXR1cm4gaX1zZXRIdHRwUHJvdmlkZXIodSxpKXtjb25zdCBwPXRoaXMuY3JlYXRlSHR0cFByb3ZpZGVyKHUsaSk7cCYmKHRoaXMuaHR0cFByb3ZpZGVyc1t1XT1wKX1jcmVhdGVIdHRwUHJvdmlkZXIodSxpKXtjb25zdCBwPWl8fGZ0KHUsdGhpcy5uYW1lc3BhY2UsdGhpcy5jbGllbnQuY29yZS5wcm9qZWN0SWQpO2lmKCFwKXRocm93IG5ldyBFcnJvcihgTm8gUlBDIHVybCBwcm92aWRlZCBmb3IgY2hhaW5JZDogJHt1fWApO3JldHVybiBuZXcgb3QobmV3IEF0KHAseihcImRpc2FibGVQcm92aWRlclBpbmdcIikpKX19Y2xhc3Mgc3Z7Y29uc3RydWN0b3IodSl7dGhpcy5uYW1lPVwibmVhclwiLHRoaXMubmFtZXNwYWNlPXUubmFtZXNwYWNlLHRoaXMuZXZlbnRzPXooXCJldmVudHNcIiksdGhpcy5jbGllbnQ9eihcImNsaWVudFwiKSx0aGlzLmNoYWluSWQ9dGhpcy5nZXREZWZhdWx0Q2hhaW4oKSx0aGlzLmh0dHBQcm92aWRlcnM9dGhpcy5jcmVhdGVIdHRwUHJvdmlkZXJzKCl9dXBkYXRlTmFtZXNwYWNlKHUpe3RoaXMubmFtZXNwYWNlPU9iamVjdC5hc3NpZ24odGhpcy5uYW1lc3BhY2UsdSl9cmVxdWVzdEFjY291bnRzKCl7cmV0dXJuIHRoaXMuZ2V0QWNjb3VudHMoKX1nZXREZWZhdWx0Q2hhaW4oKXtpZih0aGlzLmNoYWluSWQpcmV0dXJuIHRoaXMuY2hhaW5JZDtpZih0aGlzLm5hbWVzcGFjZS5kZWZhdWx0Q2hhaW4pcmV0dXJuIHRoaXMubmFtZXNwYWNlLmRlZmF1bHRDaGFpbjtjb25zdCB1PXRoaXMubmFtZXNwYWNlLmNoYWluc1swXTtpZighdSl0aHJvdyBuZXcgRXJyb3IoXCJDaGFpbklkIG5vdCBmb3VuZFwiKTtyZXR1cm4gdS5zcGxpdChcIjpcIilbMV19cmVxdWVzdCh1KXtyZXR1cm4gdGhpcy5uYW1lc3BhY2UubWV0aG9kcy5pbmNsdWRlcyh1LnJlcXVlc3QubWV0aG9kKT90aGlzLmNsaWVudC5yZXF1ZXN0KHUpOnRoaXMuZ2V0SHR0cFByb3ZpZGVyKCkucmVxdWVzdCh1LnJlcXVlc3QpfXNldERlZmF1bHRDaGFpbih1LGkpe2lmKHRoaXMuY2hhaW5JZD11LCF0aGlzLmh0dHBQcm92aWRlcnNbdV0pe2NvbnN0IHA9aXx8ZnQoYCR7dGhpcy5uYW1lfToke3V9YCx0aGlzLm5hbWVzcGFjZSk7aWYoIXApdGhyb3cgbmV3IEVycm9yKGBObyBSUEMgdXJsIHByb3ZpZGVkIGZvciBjaGFpbklkOiAke3V9YCk7dGhpcy5zZXRIdHRwUHJvdmlkZXIodSxwKX10aGlzLmV2ZW50cy5lbWl0KFZuLkRFRkFVTFRfQ0hBSU5fQ0hBTkdFRCxgJHt0aGlzLm5hbWV9OiR7dGhpcy5jaGFpbklkfWApfWdldEFjY291bnRzKCl7Y29uc3QgdT10aGlzLm5hbWVzcGFjZS5hY2NvdW50cztyZXR1cm4gdT91LmZpbHRlcihpPT5pLnNwbGl0KFwiOlwiKVsxXT09PXRoaXMuY2hhaW5JZC50b1N0cmluZygpKS5tYXAoaT0+aS5zcGxpdChcIjpcIilbMl0pfHxbXTpbXX1jcmVhdGVIdHRwUHJvdmlkZXJzKCl7Y29uc3QgdT17fTtyZXR1cm4gdGhpcy5uYW1lc3BhY2UuY2hhaW5zLmZvckVhY2goaT0+e3ZhciBwO3VbaV09dGhpcy5jcmVhdGVIdHRwUHJvdmlkZXIoaSwocD10aGlzLm5hbWVzcGFjZS5ycGNNYXApPT1udWxsP3ZvaWQgMDpwW2ldKX0pLHV9Z2V0SHR0cFByb3ZpZGVyKCl7Y29uc3QgdT1gJHt0aGlzLm5hbWV9OiR7dGhpcy5jaGFpbklkfWAsaT10aGlzLmh0dHBQcm92aWRlcnNbdV07aWYodHlwZW9mIGk+XCJ1XCIpdGhyb3cgbmV3IEVycm9yKGBKU09OLVJQQyBwcm92aWRlciBmb3IgJHt1fSBub3QgZm91bmRgKTtyZXR1cm4gaX1zZXRIdHRwUHJvdmlkZXIodSxpKXtjb25zdCBwPXRoaXMuY3JlYXRlSHR0cFByb3ZpZGVyKHUsaSk7cCYmKHRoaXMuaHR0cFByb3ZpZGVyc1t1XT1wKX1jcmVhdGVIdHRwUHJvdmlkZXIodSxpKXtjb25zdCBwPWl8fGZ0KHUsdGhpcy5uYW1lc3BhY2UpO3JldHVybiB0eXBlb2YgcD5cInVcIj92b2lkIDA6bmV3IG90KG5ldyBBdChwLHooXCJkaXNhYmxlUHJvdmlkZXJQaW5nXCIpKSl9fXZhciB1dj1PYmplY3QuZGVmaW5lUHJvcGVydHksYXY9T2JqZWN0LmRlZmluZVByb3BlcnRpZXMsb3Y9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMsTGE9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyxmdj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGN2PU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUsRGE9KEEsdSxpKT0+dSBpbiBBP3V2KEEsdSx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6aX0pOkFbdV09aSxocj0oQSx1KT0+e2Zvcih2YXIgaSBpbiB1fHwodT17fSkpZnYuY2FsbCh1LGkpJiZEYShBLGksdVtpXSk7aWYoTGEpZm9yKHZhciBpIG9mIExhKHUpKWN2LmNhbGwodSxpKSYmRGEoQSxpLHVbaV0pO3JldHVybiBBfSxxaT0oQSx1KT0+YXYoQSxvdih1KSk7Y2xhc3MgbHJ7Y29uc3RydWN0b3IodSl7dGhpcy5ldmVudHM9bmV3IFdnLHRoaXMucnBjUHJvdmlkZXJzPXt9LHRoaXMuc2hvdWxkQWJvcnRQYWlyaW5nQXR0ZW1wdD0hMSx0aGlzLm1heFBhaXJpbmdBdHRlbXB0cz0xMCx0aGlzLmRpc2FibGVQcm92aWRlclBpbmc9ITEsdGhpcy5wcm92aWRlck9wdHM9dSx0aGlzLmxvZ2dlcj10eXBlb2YgdT8ubG9nZ2VyPFwidVwiJiZ0eXBlb2YgdT8ubG9nZ2VyIT1cInN0cmluZ1wiP3UubG9nZ2VyOkhnKCRnKHtsZXZlbDp1Py5sb2dnZXJ8fHhhfSkpLHRoaXMuZGlzYWJsZVByb3ZpZGVyUGluZz11Py5kaXNhYmxlUHJvdmlkZXJQaW5nfHwhMX1zdGF0aWMgYXN5bmMgaW5pdCh1KXtjb25zdCBpPW5ldyBscih1KTtyZXR1cm4gYXdhaXQgaS5pbml0aWFsaXplKCksaX1hc3luYyByZXF1ZXN0KHUsaSxwKXtjb25zdFt3LGJdPXRoaXMudmFsaWRhdGVDaGFpbihpKTtpZighdGhpcy5zZXNzaW9uKXRocm93IG5ldyBFcnJvcihcIlBsZWFzZSBjYWxsIGNvbm5lY3QoKSBiZWZvcmUgcmVxdWVzdCgpXCIpO3JldHVybiBhd2FpdCB0aGlzLmdldFByb3ZpZGVyKHcpLnJlcXVlc3Qoe3JlcXVlc3Q6aHIoe30sdSksY2hhaW5JZDpgJHt3fToke2J9YCx0b3BpYzp0aGlzLnNlc3Npb24udG9waWMsZXhwaXJ5OnB9KX1zZW5kQXN5bmModSxpLHAsdyl7Y29uc3QgYj1uZXcgRGF0ZSgpLmdldFRpbWUoKTt0aGlzLnJlcXVlc3QodSxwLHcpLnRoZW4oRD0+aShudWxsLEZnKGIsRCkpKS5jYXRjaChEPT5pKEQsdm9pZCAwKSl9YXN5bmMgZW5hYmxlKCl7aWYoIXRoaXMuY2xpZW50KXRocm93IG5ldyBFcnJvcihcIlNpZ24gQ2xpZW50IG5vdCBpbml0aWFsaXplZFwiKTtyZXR1cm4gdGhpcy5zZXNzaW9ufHxhd2FpdCB0aGlzLmNvbm5lY3Qoe25hbWVzcGFjZXM6dGhpcy5uYW1lc3BhY2VzLG9wdGlvbmFsTmFtZXNwYWNlczp0aGlzLm9wdGlvbmFsTmFtZXNwYWNlcyxzZXNzaW9uUHJvcGVydGllczp0aGlzLnNlc3Npb25Qcm9wZXJ0aWVzfSksYXdhaXQgdGhpcy5yZXF1ZXN0QWNjb3VudHMoKX1hc3luYyBkaXNjb25uZWN0KCl7dmFyIHU7aWYoIXRoaXMuc2Vzc2lvbil0aHJvdyBuZXcgRXJyb3IoXCJQbGVhc2UgY2FsbCBjb25uZWN0KCkgYmVmb3JlIGVuYWJsZSgpXCIpO2F3YWl0IHRoaXMuY2xpZW50LmRpc2Nvbm5lY3Qoe3RvcGljOih1PXRoaXMuc2Vzc2lvbik9PW51bGw/dm9pZCAwOnUudG9waWMscmVhc29uOkNhKFwiVVNFUl9ESVNDT05ORUNURURcIil9KSxhd2FpdCB0aGlzLmNsZWFudXAoKX1hc3luYyBjb25uZWN0KHUpe2lmKCF0aGlzLmNsaWVudCl0aHJvdyBuZXcgRXJyb3IoXCJTaWduIENsaWVudCBub3QgaW5pdGlhbGl6ZWRcIik7aWYodGhpcy5zZXROYW1lc3BhY2VzKHUpLGF3YWl0IHRoaXMuY2xlYW51cFBlbmRpbmdQYWlyaW5ncygpLCF1LnNraXBQYWlyaW5nKXJldHVybiBhd2FpdCB0aGlzLnBhaXIodS5wYWlyaW5nVG9waWMpfWFzeW5jIGF1dGhlbnRpY2F0ZSh1KXtpZighdGhpcy5jbGllbnQpdGhyb3cgbmV3IEVycm9yKFwiU2lnbiBDbGllbnQgbm90IGluaXRpYWxpemVkXCIpO3RoaXMuc2V0TmFtZXNwYWNlcyh1KSxhd2FpdCB0aGlzLmNsZWFudXBQZW5kaW5nUGFpcmluZ3MoKTtjb25zdHt1cmk6aSxyZXNwb25zZTpwfT1hd2FpdCB0aGlzLmNsaWVudC5hdXRoZW50aWNhdGUodSk7aSYmKHRoaXMudXJpPWksdGhpcy5ldmVudHMuZW1pdChcImRpc3BsYXlfdXJpXCIsaSkpO2NvbnN0IHc9YXdhaXQgcCgpO2lmKHRoaXMuc2Vzc2lvbj13LnNlc3Npb24sdGhpcy5zZXNzaW9uKXtjb25zdCBiPWJhKHRoaXMuc2Vzc2lvbi5uYW1lc3BhY2VzKTt0aGlzLm5hbWVzcGFjZXM9V2kodGhpcy5uYW1lc3BhY2VzLGIpLHRoaXMucGVyc2lzdChcIm5hbWVzcGFjZXNcIix0aGlzLm5hbWVzcGFjZXMpLHRoaXMub25Db25uZWN0KCl9cmV0dXJuIHd9b24odSxpKXt0aGlzLmV2ZW50cy5vbih1LGkpfW9uY2UodSxpKXt0aGlzLmV2ZW50cy5vbmNlKHUsaSl9cmVtb3ZlTGlzdGVuZXIodSxpKXt0aGlzLmV2ZW50cy5yZW1vdmVMaXN0ZW5lcih1LGkpfW9mZih1LGkpe3RoaXMuZXZlbnRzLm9mZih1LGkpfWdldCBpc1dhbGxldENvbm5lY3QoKXtyZXR1cm4hMH1hc3luYyBwYWlyKHUpe3RoaXMuc2hvdWxkQWJvcnRQYWlyaW5nQXR0ZW1wdD0hMTtsZXQgaT0wO2Rve2lmKHRoaXMuc2hvdWxkQWJvcnRQYWlyaW5nQXR0ZW1wdCl0aHJvdyBuZXcgRXJyb3IoXCJQYWlyaW5nIGFib3J0ZWRcIik7aWYoaT49dGhpcy5tYXhQYWlyaW5nQXR0ZW1wdHMpdGhyb3cgbmV3IEVycm9yKFwiTWF4IGF1dG8gcGFpcmluZyBhdHRlbXB0cyByZWFjaGVkXCIpO2NvbnN0e3VyaTpwLGFwcHJvdmFsOnd9PWF3YWl0IHRoaXMuY2xpZW50LmNvbm5lY3Qoe3BhaXJpbmdUb3BpYzp1LHJlcXVpcmVkTmFtZXNwYWNlczp0aGlzLm5hbWVzcGFjZXMsb3B0aW9uYWxOYW1lc3BhY2VzOnRoaXMub3B0aW9uYWxOYW1lc3BhY2VzLHNlc3Npb25Qcm9wZXJ0aWVzOnRoaXMuc2Vzc2lvblByb3BlcnRpZXN9KTtwJiYodGhpcy51cmk9cCx0aGlzLmV2ZW50cy5lbWl0KFwiZGlzcGxheV91cmlcIixwKSksYXdhaXQgdygpLnRoZW4oYj0+e3RoaXMuc2Vzc2lvbj1iO2NvbnN0IEQ9YmEoYi5uYW1lc3BhY2VzKTt0aGlzLm5hbWVzcGFjZXM9V2kodGhpcy5uYW1lc3BhY2VzLEQpLHRoaXMucGVyc2lzdChcIm5hbWVzcGFjZXNcIix0aGlzLm5hbWVzcGFjZXMpfSkuY2F0Y2goYj0+e2lmKGIubWVzc2FnZSE9PUxnKXRocm93IGI7aSsrfSl9d2hpbGUoIXRoaXMuc2Vzc2lvbik7cmV0dXJuIHRoaXMub25Db25uZWN0KCksdGhpcy5zZXNzaW9ufXNldERlZmF1bHRDaGFpbih1LGkpe3RyeXtpZighdGhpcy5zZXNzaW9uKXJldHVybjtjb25zdFtwLHddPXRoaXMudmFsaWRhdGVDaGFpbih1KTt0aGlzLmdldFByb3ZpZGVyKHApLnNldERlZmF1bHRDaGFpbih3LGkpfWNhdGNoKHApe2lmKCEvUGxlYXNlIGNhbGwgY29ubmVjdC8udGVzdChwLm1lc3NhZ2UpKXRocm93IHB9fWFzeW5jIGNsZWFudXBQZW5kaW5nUGFpcmluZ3ModT17fSl7dGhpcy5sb2dnZXIuaW5mbyhcIkNsZWFuaW5nIHVwIGluYWN0aXZlIHBhaXJpbmdzLi4uXCIpO2NvbnN0IGk9dGhpcy5jbGllbnQucGFpcmluZy5nZXRBbGwoKTtpZihJYShpKSl7Zm9yKGNvbnN0IHAgb2YgaSl1LmRlbGV0ZVBhaXJpbmdzP3RoaXMuY2xpZW50LmNvcmUuZXhwaXJlci5zZXQocC50b3BpYywwKTphd2FpdCB0aGlzLmNsaWVudC5jb3JlLnJlbGF5ZXIuc3Vic2NyaWJlci51bnN1YnNjcmliZShwLnRvcGljKTt0aGlzLmxvZ2dlci5pbmZvKGBJbmFjdGl2ZSBwYWlyaW5ncyBjbGVhcmVkOiAke2kubGVuZ3RofWApfX1hYm9ydFBhaXJpbmdBdHRlbXB0KCl7dGhpcy5zaG91bGRBYm9ydFBhaXJpbmdBdHRlbXB0PSEwfWFzeW5jIGNoZWNrU3RvcmFnZSgpe2lmKHRoaXMubmFtZXNwYWNlcz1hd2FpdCB0aGlzLmdldEZyb21TdG9yZShcIm5hbWVzcGFjZXNcIiksdGhpcy5vcHRpb25hbE5hbWVzcGFjZXM9YXdhaXQgdGhpcy5nZXRGcm9tU3RvcmUoXCJvcHRpb25hbE5hbWVzcGFjZXNcIil8fHt9LHRoaXMuY2xpZW50LnNlc3Npb24ubGVuZ3RoKXtjb25zdCB1PXRoaXMuY2xpZW50LnNlc3Npb24ua2V5cy5sZW5ndGgtMTt0aGlzLnNlc3Npb249dGhpcy5jbGllbnQuc2Vzc2lvbi5nZXQodGhpcy5jbGllbnQuc2Vzc2lvbi5rZXlzW3VdKSx0aGlzLmNyZWF0ZVByb3ZpZGVycygpfX1hc3luYyBpbml0aWFsaXplKCl7dGhpcy5sb2dnZXIudHJhY2UoXCJJbml0aWFsaXplZFwiKSxhd2FpdCB0aGlzLmNyZWF0ZUNsaWVudCgpLGF3YWl0IHRoaXMuY2hlY2tTdG9yYWdlKCksdGhpcy5yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCl9YXN5bmMgY3JlYXRlQ2xpZW50KCl7dGhpcy5jbGllbnQ9dGhpcy5wcm92aWRlck9wdHMuY2xpZW50fHxhd2FpdCBUZy5pbml0KHtsb2dnZXI6dGhpcy5wcm92aWRlck9wdHMubG9nZ2VyfHx4YSxyZWxheVVybDp0aGlzLnByb3ZpZGVyT3B0cy5yZWxheVVybHx8TWcscHJvamVjdElkOnRoaXMucHJvdmlkZXJPcHRzLnByb2plY3RJZCxtZXRhZGF0YTp0aGlzLnByb3ZpZGVyT3B0cy5tZXRhZGF0YSxzdG9yYWdlT3B0aW9uczp0aGlzLnByb3ZpZGVyT3B0cy5zdG9yYWdlT3B0aW9ucyxzdG9yYWdlOnRoaXMucHJvdmlkZXJPcHRzLnN0b3JhZ2UsbmFtZTp0aGlzLnByb3ZpZGVyT3B0cy5uYW1lfSksdGhpcy5sb2dnZXIudHJhY2UoXCJTaWduQ2xpZW50IEluaXRpYWxpemVkXCIpfWNyZWF0ZVByb3ZpZGVycygpe2lmKCF0aGlzLmNsaWVudCl0aHJvdyBuZXcgRXJyb3IoXCJTaWduIENsaWVudCBub3QgaW5pdGlhbGl6ZWRcIik7aWYoIXRoaXMuc2Vzc2lvbil0aHJvdyBuZXcgRXJyb3IoXCJTZXNzaW9uIG5vdCBpbml0aWFsaXplZC4gUGxlYXNlIGNhbGwgY29ubmVjdCgpIGJlZm9yZSBlbmFibGUoKVwiKTtjb25zdCB1PVsuLi5uZXcgU2V0KE9iamVjdC5rZXlzKHRoaXMuc2Vzc2lvbi5uYW1lc3BhY2VzKS5tYXAoaT0+ZGUoaSkpKV07TWkoXCJjbGllbnRcIix0aGlzLmNsaWVudCksTWkoXCJldmVudHNcIix0aGlzLmV2ZW50cyksTWkoXCJkaXNhYmxlUHJvdmlkZXJQaW5nXCIsdGhpcy5kaXNhYmxlUHJvdmlkZXJQaW5nKSx1LmZvckVhY2goaT0+e2lmKCF0aGlzLnNlc3Npb24pcmV0dXJuO2NvbnN0IHA9UWcoaSx0aGlzLnNlc3Npb24pLHc9T2EocCksYj1XaSh0aGlzLm5hbWVzcGFjZXMsdGhpcy5vcHRpb25hbE5hbWVzcGFjZXMpLEQ9cWkoaHIoe30sYltpXSkse2FjY291bnRzOnAsY2hhaW5zOnd9KTtzd2l0Y2goaSl7Y2FzZVwiZWlwMTU1XCI6dGhpcy5ycGNQcm92aWRlcnNbaV09bmV3IGpnKHtuYW1lc3BhY2U6RH0pO2JyZWFrO2Nhc2VcInNvbGFuYVwiOnRoaXMucnBjUHJvdmlkZXJzW2ldPW5ldyBudih7bmFtZXNwYWNlOkR9KTticmVhaztjYXNlXCJjb3Ntb3NcIjp0aGlzLnJwY1Byb3ZpZGVyc1tpXT1uZXcgdHYoe25hbWVzcGFjZTpEfSk7YnJlYWs7Y2FzZVwicG9sa2Fkb3RcIjp0aGlzLnJwY1Byb3ZpZGVyc1tpXT1uZXcga2coe25hbWVzcGFjZTpEfSk7YnJlYWs7Y2FzZVwiY2lwMzRcIjp0aGlzLnJwY1Byb3ZpZGVyc1tpXT1uZXcgZXYoe25hbWVzcGFjZTpEfSk7YnJlYWs7Y2FzZVwiZWxyb25kXCI6dGhpcy5ycGNQcm92aWRlcnNbaV09bmV3IHJ2KHtuYW1lc3BhY2U6RH0pO2JyZWFrO2Nhc2VcIm11bHRpdmVyc3hcIjp0aGlzLnJwY1Byb3ZpZGVyc1tpXT1uZXcgaXYoe25hbWVzcGFjZTpEfSk7YnJlYWs7Y2FzZVwibmVhclwiOnRoaXMucnBjUHJvdmlkZXJzW2ldPW5ldyBzdih7bmFtZXNwYWNlOkR9KTticmVha319KX1yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCl7aWYodHlwZW9mIHRoaXMuY2xpZW50PlwidVwiKXRocm93IG5ldyBFcnJvcihcIlNpZ24gQ2xpZW50IGlzIG5vdCBpbml0aWFsaXplZFwiKTt0aGlzLmNsaWVudC5vbihcInNlc3Npb25fcGluZ1wiLHU9Pnt0aGlzLmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9waW5nXCIsdSl9KSx0aGlzLmNsaWVudC5vbihcInNlc3Npb25fZXZlbnRcIix1PT57Y29uc3R7cGFyYW1zOml9PXUse2V2ZW50OnB9PWk7aWYocC5uYW1lPT09XCJhY2NvdW50c0NoYW5nZWRcIil7Y29uc3Qgdz1wLmRhdGE7dyYmSWEodykmJnRoaXMuZXZlbnRzLmVtaXQoXCJhY2NvdW50c0NoYW5nZWRcIix3Lm1hcChWZykpfWVsc2UgaWYocC5uYW1lPT09XCJjaGFpbkNoYW5nZWRcIil7Y29uc3Qgdz1pLmNoYWluSWQsYj1pLmV2ZW50LmRhdGEsRD1kZSh3KSxFbj1GaSh3KSE9PUZpKGIpP2Ake0R9OiR7RmkoYil9YDp3O3RoaXMub25DaGFpbkNoYW5nZWQoRW4pfWVsc2UgdGhpcy5ldmVudHMuZW1pdChwLm5hbWUscC5kYXRhKTt0aGlzLmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9ldmVudFwiLHUpfSksdGhpcy5jbGllbnQub24oXCJzZXNzaW9uX3VwZGF0ZVwiLCh7dG9waWM6dSxwYXJhbXM6aX0pPT57dmFyIHA7Y29uc3R7bmFtZXNwYWNlczp3fT1pLGI9KHA9dGhpcy5jbGllbnQpPT1udWxsP3ZvaWQgMDpwLnNlc3Npb24uZ2V0KHUpO3RoaXMuc2Vzc2lvbj1xaShocih7fSxiKSx7bmFtZXNwYWNlczp3fSksdGhpcy5vblNlc3Npb25VcGRhdGUoKSx0aGlzLmV2ZW50cy5lbWl0KFwic2Vzc2lvbl91cGRhdGVcIix7dG9waWM6dSxwYXJhbXM6aX0pfSksdGhpcy5jbGllbnQub24oXCJzZXNzaW9uX2RlbGV0ZVwiLGFzeW5jIHU9Pnthd2FpdCB0aGlzLmNsZWFudXAoKSx0aGlzLmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9kZWxldGVcIix1KSx0aGlzLmV2ZW50cy5lbWl0KFwiZGlzY29ubmVjdFwiLHFpKGhyKHt9LENhKFwiVVNFUl9ESVNDT05ORUNURURcIikpLHtkYXRhOnUudG9waWN9KSl9KSx0aGlzLm9uKFZuLkRFRkFVTFRfQ0hBSU5fQ0hBTkdFRCx1PT57dGhpcy5vbkNoYWluQ2hhbmdlZCh1LCEwKX0pfWdldFByb3ZpZGVyKHUpe2lmKCF0aGlzLnJwY1Byb3ZpZGVyc1t1XSl0aHJvdyBuZXcgRXJyb3IoYFByb3ZpZGVyIG5vdCBmb3VuZDogJHt1fWApO3JldHVybiB0aGlzLnJwY1Byb3ZpZGVyc1t1XX1vblNlc3Npb25VcGRhdGUoKXtPYmplY3Qua2V5cyh0aGlzLnJwY1Byb3ZpZGVycykuZm9yRWFjaCh1PT57dmFyIGk7dGhpcy5nZXRQcm92aWRlcih1KS51cGRhdGVOYW1lc3BhY2UoKGk9dGhpcy5zZXNzaW9uKT09bnVsbD92b2lkIDA6aS5uYW1lc3BhY2VzW3VdKX0pfXNldE5hbWVzcGFjZXModSl7Y29uc3R7bmFtZXNwYWNlczppLG9wdGlvbmFsTmFtZXNwYWNlczpwLHNlc3Npb25Qcm9wZXJ0aWVzOnd9PXU7aSYmT2JqZWN0LmtleXMoaSkubGVuZ3RoJiYodGhpcy5uYW1lc3BhY2VzPWkpLHAmJk9iamVjdC5rZXlzKHApLmxlbmd0aCYmKHRoaXMub3B0aW9uYWxOYW1lc3BhY2VzPXApLHRoaXMuc2Vzc2lvblByb3BlcnRpZXM9dyx0aGlzLnBlcnNpc3QoXCJuYW1lc3BhY2VzXCIsaSksdGhpcy5wZXJzaXN0KFwib3B0aW9uYWxOYW1lc3BhY2VzXCIscCl9dmFsaWRhdGVDaGFpbih1KXtjb25zdFtpLHBdPXU/LnNwbGl0KFwiOlwiKXx8W1wiXCIsXCJcIl07aWYoIXRoaXMubmFtZXNwYWNlc3x8IU9iamVjdC5rZXlzKHRoaXMubmFtZXNwYWNlcykubGVuZ3RoKXJldHVybltpLHBdO2lmKGkmJiFPYmplY3Qua2V5cyh0aGlzLm5hbWVzcGFjZXN8fHt9KS5tYXAoRD0+ZGUoRCkpLmluY2x1ZGVzKGkpKXRocm93IG5ldyBFcnJvcihgTmFtZXNwYWNlICcke2l9JyBpcyBub3QgY29uZmlndXJlZC4gUGxlYXNlIGNhbGwgY29ubmVjdCgpIGZpcnN0IHdpdGggbmFtZXNwYWNlIGNvbmZpZy5gKTtpZihpJiZwKXJldHVybltpLHBdO2NvbnN0IHc9ZGUoT2JqZWN0LmtleXModGhpcy5uYW1lc3BhY2VzKVswXSksYj10aGlzLnJwY1Byb3ZpZGVyc1t3XS5nZXREZWZhdWx0Q2hhaW4oKTtyZXR1cm5bdyxiXX1hc3luYyByZXF1ZXN0QWNjb3VudHMoKXtjb25zdFt1XT10aGlzLnZhbGlkYXRlQ2hhaW4oKTtyZXR1cm4gYXdhaXQgdGhpcy5nZXRQcm92aWRlcih1KS5yZXF1ZXN0QWNjb3VudHMoKX1vbkNoYWluQ2hhbmdlZCh1LGk9ITEpe2lmKCF0aGlzLm5hbWVzcGFjZXMpcmV0dXJuO2NvbnN0W3Asd109dGhpcy52YWxpZGF0ZUNoYWluKHUpO3cmJihpfHx0aGlzLmdldFByb3ZpZGVyKHApLnNldERlZmF1bHRDaGFpbih3KSx0aGlzLm5hbWVzcGFjZXNbcF0/dGhpcy5uYW1lc3BhY2VzW3BdLmRlZmF1bHRDaGFpbj13OnRoaXMubmFtZXNwYWNlc1tgJHtwfToke3d9YF0/dGhpcy5uYW1lc3BhY2VzW2Ake3B9OiR7d31gXS5kZWZhdWx0Q2hhaW49dzp0aGlzLm5hbWVzcGFjZXNbYCR7cH06JHt3fWBdPXtkZWZhdWx0Q2hhaW46d30sdGhpcy5wZXJzaXN0KFwibmFtZXNwYWNlc1wiLHRoaXMubmFtZXNwYWNlcyksdGhpcy5ldmVudHMuZW1pdChcImNoYWluQ2hhbmdlZFwiLHcpKX1vbkNvbm5lY3QoKXt0aGlzLmNyZWF0ZVByb3ZpZGVycygpLHRoaXMuZXZlbnRzLmVtaXQoXCJjb25uZWN0XCIse3Nlc3Npb246dGhpcy5zZXNzaW9ufSl9YXN5bmMgY2xlYW51cCgpe3RoaXMuc2Vzc2lvbj12b2lkIDAsdGhpcy5uYW1lc3BhY2VzPXZvaWQgMCx0aGlzLm9wdGlvbmFsTmFtZXNwYWNlcz12b2lkIDAsdGhpcy5zZXNzaW9uUHJvcGVydGllcz12b2lkIDAsdGhpcy5wZXJzaXN0KFwibmFtZXNwYWNlc1wiLHZvaWQgMCksdGhpcy5wZXJzaXN0KFwib3B0aW9uYWxOYW1lc3BhY2VzXCIsdm9pZCAwKSx0aGlzLnBlcnNpc3QoXCJzZXNzaW9uUHJvcGVydGllc1wiLHZvaWQgMCksYXdhaXQgdGhpcy5jbGVhbnVwUGVuZGluZ1BhaXJpbmdzKHtkZWxldGVQYWlyaW5nczohMH0pfXBlcnNpc3QodSxpKXt0aGlzLmNsaWVudC5jb3JlLnN0b3JhZ2Uuc2V0SXRlbShgJHtFYX0vJHt1fWAsaSl9YXN5bmMgZ2V0RnJvbVN0b3JlKHUpe3JldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jb3JlLnN0b3JhZ2UuZ2V0SXRlbShgJHtFYX0vJHt1fWApfX1jb25zdCBodj1scjtleHBvcnR7aHYgYXMgVW5pdmVyc2FsUHJvdmlkZXIsbHIgYXMgZGVmYXVsdH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJUZyIsIlBST1BPU0FMX0VYUElSWV9NRVNTQUdFIiwiTGciLCJpc1ZhbGlkT2JqZWN0IiwiRGciLCJpc0NhaXBOYW1lc3BhY2UiLCJBYSIsInBhcnNlTmFtZXNwYWNlS2V5IiwiZGUiLCJtZXJnZUFycmF5cyIsIiRpIiwicGFyc2VDaGFpbklkIiwiTmciLCJnZXRTZGtFcnJvciIsIkNhIiwiaXNWYWxpZEFycmF5IiwiSWEiLCJwaW5vIiwiSGciLCJnZXREZWZhdWx0TG9nZ2VyT3B0aW9ucyIsIiRnIiwiQXQiLCJIdHRwQ29ubmVjdGlvbiIsIlVnIiwiSnNvblJwY1Byb3ZpZGVyIiwib3QiLCJXZyIsImZvcm1hdEpzb25ScGNSZXN1bHQiLCJGZyIsInhhIiwiTWciLCJxZyIsIkJnIiwiRWEiLCJHZyIsIlZuIiwiREVGQVVMVF9DSEFJTl9DSEFOR0VEIiwiZ2UiLCJnbG9iYWxUaGlzIiwid2luZG93IiwiZ2xvYmFsIiwic2VsZiIsIlVpIiwiZXhwb3J0cyIsIkEiLCJ1IiwiaSIsInAiLCJ3IiwiYiIsIkQiLCJFbiIsInp0IiwicHIiLCJJdCIsIkxuIiwiRm4iLCJ4dCIsIkV0IiwidmUiLCJ2biIsImN0IiwiQmkiLCJEbiIsInl0IiwiTm4iLCJTdCIsIk1uIiwiS3QiLCJkciIsIk5hIiwiSGEiLCIkYSIsIlVhIiwiR2kiLCJXYSIsIkZhIiwiaHQiLCJrbiIsIk1hIiwiX2UiLCJIbiIsInFhIiwiQmEiLCJHYSIsIk90IiwibWUiLCJ6YSIsIll0IiwiWnQiLCJLYSIsIndlIiwiUGUiLCJ6aSIsInluIiwiSnQiLCJZYSIsInFuIiwiS2kiLCJaYSIsIlh0IiwiU24iLCJRdCIsIkFlIiwiSmEiLCJWdCIsIlhhIiwia3QiLCJSdCIsImdyIiwidnIiLCJfciIsIm1yIiwid3IiLCJQciIsIkFyIiwiQ3IiLCJJciIsIlFhIiwiVmEiLCJrYSIsIllpIiwiWmkiLCJqYSIsIlJlZ0V4cCIsInNvdXJjZSIsIm5vIiwidG8iLCJlbyIsIkppIiwicm8iLCJpbyIsInNvIiwieHIiLCJ1byIsIkVyIiwiYW8iLCJvbyIsImZvIiwiY28iLCJobyIsImxvIiwicG8iLCJnbyIsIlhpIiwidm8iLCJfbyIsIm1vIiwid28iLCJQbyIsIkFvIiwiQ2UiLCJDbyIsIkllIiwiSW8iLCJ4byIsIkVvIiwiUWkiLCJWaSIsImtpIiwieW8iLCJTbyIsIk9vIiwiUm8iLCJqaSIsIm5zIiwidHMiLCJ5ciIsImJvIiwiZXMiLCJ4ZSIsInJzIiwiVG8iLCJpcyIsInNzIiwiU3IiLCJMbyIsInVzIiwiT3IiLCJSciIsImJ0IiwiYXMiLCJvcyIsIkRvIiwiZnMiLCJjcyIsImhzIiwibHMiLCJObyIsImpvaW4iLCJIbyIsIiRvIiwicHMiLCJVbyIsIldvIiwiRm8iLCJNbyIsImJyIiwicW8iLCJCbyIsIkdvIiwiem8iLCJLbyIsIkIiLCJxIiwiWW8iLCLDgCIsIsOBIiwiw4IiLCLDgyIsIsOEIiwiw4UiLCLDoCIsIsOhIiwiw6IiLCLDoyIsIsOkIiwiw6UiLCLDhyIsIsOnIiwiw5AiLCLDsCIsIsOIIiwiw4kiLCLDiiIsIsOLIiwiw6giLCLDqSIsIsOqIiwiw6siLCLDjCIsIsONIiwiw44iLCLDjyIsIsOsIiwiw60iLCLDriIsIsOvIiwiw5EiLCLDsSIsIsOSIiwiw5MiLCLDlCIsIsOVIiwiw5YiLCLDmCIsIsOyIiwiw7MiLCLDtCIsIsO1Iiwiw7YiLCLDuCIsIsOZIiwiw5oiLCLDmyIsIsOcIiwiw7kiLCLDuiIsIsO7Iiwiw7wiLCLDnSIsIsO9Iiwiw78iLCLDhiIsIsOmIiwiw54iLCLDviIsIsOfIiwixIAiLCLEgiIsIsSEIiwixIEiLCLEgyIsIsSFIiwixIYiLCLEiCIsIsSKIiwixIwiLCLEhyIsIsSJIiwixIsiLCLEjSIsIsSOIiwixJAiLCLEjyIsIsSRIiwixJIiLCLElCIsIsSWIiwixJgiLCLEmiIsIsSTIiwixJUiLCLElyIsIsSZIiwixJsiLCLEnCIsIsSeIiwixKAiLCLEoiIsIsSdIiwixJ8iLCLEoSIsIsSjIiwixKQiLCLEpiIsIsSlIiwixKciLCLEqCIsIsSqIiwixKwiLCLEriIsIsSwIiwixKkiLCLEqyIsIsStIiwixK8iLCLEsSIsIsS0IiwixLUiLCLEtiIsIsS3IiwixLgiLCLEuSIsIsS7IiwixL0iLCLEvyIsIsWBIiwixLoiLCLEvCIsIsS+IiwixYAiLCLFgiIsIsWDIiwixYUiLCLFhyIsIsWKIiwixYQiLCLFhiIsIsWIIiwixYsiLCLFjCIsIsWOIiwixZAiLCLFjSIsIsWPIiwixZEiLCLFlCIsIsWWIiwixZgiLCLFlSIsIsWXIiwixZkiLCLFmiIsIsWcIiwixZ4iLCLFoCIsIsWbIiwixZ0iLCLFnyIsIsWhIiwixaIiLCLFpCIsIsWmIiwixaMiLCLFpSIsIsWnIiwixagiLCLFqiIsIsWsIiwixa4iLCLFsCIsIsWyIiwixakiLCLFqyIsIsWtIiwixa8iLCLFsSIsIsWzIiwixbQiLCLFtSIsIsW2IiwixbciLCLFuCIsIsW5IiwixbsiLCLFvSIsIsW6IiwixbwiLCLFviIsIsSyIiwixLMiLCLFkiIsIsWTIiwixYkiLCLFvyIsIlpvIiwiSm8iLCJYbyIsIlFvIiwicGFyc2VGbG9hdCIsIlZvIiwicGFyc2VJbnQiLCJkcyIsIk9iamVjdCIsImtvIiwiayIsIkZ1bmN0aW9uIiwiVHIiLCJub2RlVHlwZSIsImx0IiwiZ3MiLCJMciIsInByb2Nlc3MiLCJfbiIsImgiLCJyZXF1aXJlIiwidHlwZXMiLCJiaW5kaW5nIiwidnMiLCJpc0FycmF5QnVmZmVyIiwiX3MiLCJpc0RhdGUiLCJtcyIsImlzTWFwIiwid3MiLCJpc1JlZ0V4cCIsIlBzIiwiaXNTZXQiLCJBcyIsImlzVHlwZWRBcnJheSIsImNuIiwiZyIsImQiLCJsZW5ndGgiLCJjYWxsIiwiYXBwbHkiLCJqbyIsIkMiLCJTIiwiVSIsIlgiLCJtbiIsIm5mIiwiQ3MiLCJqbiIsIkVlIiwiVHQiLCJEciIsIkciLCJBcnJheSIsIm50IiwiTnIiLCJ0ZiIsIkhyIiwiZWYiLCIkciIsInJmIiwic3BsaXQiLCJzZiIsIm1hdGNoIiwiSXMiLCJ5ZSIsIl9mIiwieHMiLCJ1ZiIsIkVzIiwiV3IiLCJVciIsInlzIiwiTSIsImFmIiwic29ydCIsInZhbHVlIiwiRnIiLCJvZiIsIlNzIiwic2xpY2UiLCJUcyIsInJlcGxhY2UiLCJobiIsIk1yIiwianQiLCJoYXMiLCJPcyIsIlJzIiwiZmYiLCJjZiIsImhmIiwibGYiLCJwZiIsIkx0IiwidGVzdCIsImRmIiwiZ2YiLCJuZXh0IiwiZG9uZSIsInB1c2giLCJxciIsInNpemUiLCJmb3JFYWNoIiwiYnMiLCJ0dCIsIlNlIiwidmYiLCJtZiIsIkR0IiwiUGYiLCJPbiIsIkFmIiwiY2hhckF0Iiwid2YiLCJsYXN0SW5kZXgiLCJDZiIsIklmIiwiTnQiLCJkZWZhdWx0cyIsInBpY2siLCJEYXRlIiwiRXJyb3IiLCJNYXRoIiwiQnIiLCJ4ZiIsIlN0cmluZyIsInduIiwiVHlwZUVycm9yIiwiT2UiLCJwcm90b3R5cGUiLCJFZiIsIkh0IiwiUmUiLCJiZSIsInRvU3RyaW5nIiwiRiIsImhhc093blByb3BlcnR5IiwieWYiLCJMcyIsIm4iLCJleGVjIiwia2V5cyIsIklFX1BST1RPIiwiVGUiLCJTZiIsIk9mIiwiXyIsIlJmIiwiTGUiLCJCdWZmZXIiLCJldCIsIlN5bWJvbCIsIkRlIiwiVWludDhBcnJheSIsIkRzIiwiYWxsb2NVbnNhZmUiLCJOZSIsImdldFByb3RvdHlwZU9mIiwiTnMiLCJjcmVhdGUiLCJIcyIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiSGUiLCJzcGxpY2UiLCIkcyIsImlzQ29uY2F0U3ByZWFkYWJsZSIsIm5lIiwiaXRlcmF0b3IiLCJwdCIsInRvU3RyaW5nVGFnIiwiJGUiLCJtdCIsImJmIiwiY2xlYXJUaW1lb3V0IiwiVGYiLCJub3ciLCJMZiIsInNldFRpbWVvdXQiLCJVZSIsImNlaWwiLCJXZSIsImZsb29yIiwiR3IiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJEZiIsImlzQnVmZmVyIiwiVXMiLCJpc0Zpbml0ZSIsIk5mIiwiSGYiLCJRIiwibWF4Iiwibm4iLCJtaW4iLCIkZiIsIlVmIiwiV3MiLCJyYW5kb20iLCJXZiIsInJldmVyc2UiLCJ6ciIsInRlIiwiS3IiLCIkdCIsImVlIiwicmUiLCJGZSIsIlV0IiwiRmYiLCJ3dCIsIk1mIiwicWYiLCJCZiIsIkdmIiwiTWUiLCJpZSIsInZhbHVlT2YiLCJGcyIsImEiLCJZIiwiTyIsIkgiLCJQbiIsIk11IiwiV3QiLCJ0IiwiSyIsImUiLCJxZSIsIl9fd3JhcHBlZF9fIiwiX19hY3Rpb25zX18iLCJfX2NoYWluX18iLCJfX2luZGV4X18iLCJfX3ZhbHVlc19fIiwidGVtcGxhdGVTZXR0aW5ncyIsImVzY2FwZSIsImV2YWx1YXRlIiwiaW50ZXJwb2xhdGUiLCJ2YXJpYWJsZSIsImltcG9ydHMiLCJjb25zdHJ1Y3RvciIsIl9fZGlyX18iLCJfX2ZpbHRlcmVkX18iLCJfX2l0ZXJhdGVlc19fIiwiX190YWtlQ291bnRfXyIsIl9fdmlld3NfXyIsInpmIiwidW4iLCJLZiIsImNsb25lIiwiWWYiLCJyIiwicyIsIm8iLCJpaCIsImYiLCJzdGFydCIsImMiLCJlbmQiLCJsIiwidiIsIm0iLCJQIiwiSSIsImZ1IiwiRSIsIlQiLCJ5IiwiTiIsIiQiLCJpdGVyYXRlZSIsImRuIiwidHlwZSIsInNuIiwiZHQiLCJjbGVhciIsInNldCIsIlpmIiwiX19kYXRhX18iLCJKZiIsIlhmIiwiUWYiLCJWZiIsImRlbGV0ZSIsImdldCIsIkJuIiwia2YiLCJqZiIsIkJlIiwicG9wIiwibmMiLCJ0YyIsImVjIiwiR24iLCJyYyIsImhhc2giLCJtYXAiLCJzdHJpbmciLCJpYyIsIm5yIiwic2MiLCJ1YyIsImFjIiwiZ3QiLCJhZGQiLCJvYyIsImZjIiwiUm4iLCJjYyIsImhjIiwibGMiLCJwYyIsImRjIiwiTXMiLCJQdCIsImF0IiwiQnQiLCJabiIsInFzIiwiZWkiLCJnYyIsInRyIiwidnQiLCJ2YyIsIllyIiwiYm4iLCJ6biIsInNlIiwiX2MiLCJydCIsIkJzIiwiVW4iLCJWIiwibWMiLCJvbiIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJ3cml0YWJsZSIsIlpyIiwiU2kiLCJBbiIsInVoIiwidG4iLCJsdSIsIlR1IiwiWGMiLCJKYyIsImFoIiwidWEiLCJpYSIsInBpIiwibGkiLCJ3YyIsIkdzIiwienMiLCJsZSIsInVlIiwiX3UiLCIkbiIsIktzIiwiWHIiLCJQYyIsIkdlIiwicG4iLCJBYyIsIlIiLCJvYSIsIllzIiwiaiIsImZoIiwiSnIiLCJtdSIsIlpzIiwiemUiLCJKbiIsIl90Iiwic3QiLCJXbiIsIkpzIiwiZW4iLCJyaCIsInZoIiwiUXIiLCJDYyIsIkljIiwieGMiLCJWciIsIkVjIiwiYWUiLCJIdSIsIkluIiwiWHMiLCJ5YyIsIlNjIiwib2UiLCJPYyIsIk91IiwidGgiLCJlaCIsIlJjIiwia3IiLCJRcyIsImhoIiwiYmMiLCJUYyIsIkxjIiwiYXIiLCJWcyIsImZuIiwibnUiLCJqcyIsIndhIiwianIiLCJoZSIsIkRjIiwiZ2giLCJuaSIsImtzIiwiYW4iLCJnaSIsIkR1IiwiX2kiLCJMdSIsIk9pIiwiS2UiLCJOYyIsIndpIiwiWiIsInB1IiwicGUiLCJmYSIsInR1IiwiZXUiLCJ4IiwiY3JpdGVyaWEiLCJpbmRleCIsIlpjIiwiSGMiLCJydSIsImZlIiwiJGMiLCJ0aSIsIml1Iiwic2kiLCJVYyIsInJpIiwiTCIsIlBpIiwiTnUiLCJXYyIsIkd0IiwiRmMiLCJzdSIsIk1jIiwiYmkiLCJxYyIsIkNuIiwiQmMiLCJZZSIsImlpIiwidXUiLCJhdSIsImxuIiwiaXQiLCJqYyIsIm91IiwiWmUiLCJmdW5jIiwidGhpc0FyZyIsImFyZ3MiLCJ1aSIsImN1IiwiYWkiLCJvaSIsIkZ1IiwiVyIsIkdjIiwidXQiLCJodSIsImNvcHkiLCJmaSIsImJ5dGVMZW5ndGgiLCJ6YyIsImJ1ZmZlciIsImJ5dGVPZmZzZXQiLCJLYyIsIlljIiwiZHUiLCJndSIsInZ1IiwidmkiLCJSdSIsIkplIiwiRnQiLCJybiIsIlFjIiwiY2UiLCJhcmd1bWVudHMiLCJ3dSIsIk10IiwiX2EiLCJ2YSIsIlZjIiwicXQiLCJ4dSIsIlhlIiwicGxhY2Vob2xkZXIiLCJQdSIsIkF1IiwiWW4iLCJ0aHJ1IiwiamUiLCJkaSIsIm1pIiwicGxhbnQiLCJnbiIsIkoiLCJUbiIsIlFuIiwiX2giLCJDdSIsIlFlIiwiY2kiLCJWZSIsImtjIiwiSXUiLCJYbiIsImtlIiwieG4iLCIkdSIsIlV1IiwiaGkiLCJEaSIsIkV1IiwiS24iLCJkaCIsInl1IiwiU3UiLCJuaCIsIm5hbWUiLCJtZXNzYWdlIiwiR3UiLCJUaSIsImNoIiwiTmkiLCJBcnJheUJ1ZmZlciIsInJlc29sdmUiLCJzaCIsImJ1IiwiaW5wdXQiLCJvaCIsImxoIiwiSGkiLCJwaCIsInNyIiwiY2FjaGUiLCJXdSIsIm1oIiwiY2hhckNvZGVBdCIsIndoIiwiUGgiLCJBaCIsIkNoIiwiSWgiLCJ4aCIsIkVoIiwieWgiLCJTaCIsIk9oIiwiUmgiLCJxdSIsIkJ1IiwiYmgiLCJUaCIsIkxoIiwienUiLCJEaCIsIk5oIiwiSGgiLCIkaCIsIlVoIiwiV2giLCJGaCIsIk1oIiwicWgiLCJLdSIsIkJoIiwiR2giLCJ6aCIsIktoIiwiQWkiLCJZaCIsIlpoIiwiSmgiLCJYaCIsIlFoIiwiVmgiLCJraCIsImpoIiwibmwiLCJ0bCIsImVsIiwicmwiLCJpbCIsInNsIiwidWwiLCJhbCIsIm9sIiwiZmwiLCJjbCIsImhsIiwiQ2kiLCJZdSIsImxsIiwicGwiLCJkbCIsImdsIiwidmwiLCJfbCIsIm1sIiwid2wiLCJadSIsIlBsIiwiZXIiLCJBbCIsIkNsIiwiSWwiLCJ4bCIsImFhIiwiRWwiLCJ5bCIsIlNsIiwiT2wiLCJSbCIsImJsIiwiVGwiLCJMbCIsIkRsIiwiTmwiLCJyciIsIkhsIiwiJGwiLCJKdSIsIlh1IiwiVWwiLCJXbCIsIm9yIiwiaW5kZXhPZiIsIkZsIiwiTWwiLCJxbCIsIkJsIiwiR2wiLCJ6bCIsIktsIiwidXIiLCJZbCIsIlpsIiwiSmwiLCJYbCIsIlFsIiwiVmwiLCJpciIsImtsIiwiUXUiLCJWdSIsIklpIiwia3UiLCJqdSIsIm5hIiwidGEiLCJsZWFkaW5nIiwibWF4V2FpdCIsInRyYWlsaW5nIiwiUGEiLCJjYW5jZWwiLCJmbHVzaCIsImpsIiwibnAiLCJ0cCIsIkNhY2hlIiwiZXAiLCJycCIsInhpIiwiZWEiLCJpcCIsInNwIiwidXAiLCJhcCIsIm9wIiwiZnAiLCJjcCIsImhwIiwibHAiLCJwcCIsImRwIiwiZ3AiLCJ2cCIsIl9wIiwiaXNBcnJheSIsIm1wIiwid3AiLCJQcCIsIkFwIiwiQ3AiLCJJcCIsInhwIiwiRWkiLCJFcCIsInJhIiwieXAiLCJTcCIsIk9wIiwic2EiLCJScCIsImJwIiwiVHAiLCJ5aSIsIkxwIiwiRHAiLCJOcCIsIkhwIiwiJHAiLCJVcCIsIldwIiwiRnAiLCJjYSIsImZyIiwiTXAiLCJxcCIsIkJwIiwiR3AiLCJ6cCIsImhhIiwiS3AiLCJZcCIsIlpwIiwiSnAiLCJYcCIsIlFwIiwiVnAiLCJrcCIsImpwIiwibmQiLCJ0ZCIsImVkIiwicmQiLCJpZCIsInNkIiwidWQiLCJhZCIsImxhIiwib2QiLCJmZCIsImNkIiwiaGQiLCJwYSIsImRhIiwibGQiLCJwZCIsImRkIiwiZ2QiLCJ2ZCIsIl9kIiwibWQiLCJ3ZCIsIlBkIiwidG9Mb3dlckNhc2UiLCJnYSIsIlJpIiwiQWQiLCJDZCIsIklkIiwieGQiLCJFZCIsInlkIiwiU2QiLCJPZCIsIlJkIiwiYmQiLCJUZCIsIkxkIiwiRGQiLCJOZCIsIkhkIiwiJGQiLCJVZCIsInNvdXJjZVVSTCIsIm1hIiwiV2QiLCJGZCIsInRvVXBwZXJDYXNlIiwiTWQiLCJxZCIsIkJkIiwiR2QiLCJzZXBhcmF0b3IiLCJvbWlzc2lvbiIsInNlYXJjaCIsImxhc3RJbmRleE9mIiwiemQiLCJLZCIsIllkIiwiWmQiLCJKZCIsIlhkIiwiUWQiLCJWZCIsImtkIiwiamQiLCJuZyIsInRnIiwiTGkiLCJjaGFpbiIsImVnIiwicmciLCJpZyIsInNnIiwidWciLCJhZyIsIm9nIiwiZmciLCJjZyIsImhnIiwibGciLCJwZyIsImRnIiwiZ2ciLCJ2ZyIsIl9nIiwibWciLCJ3ZyIsIlBnIiwiQWciLCJDZyIsIklnIiwieGciLCJFZyIsInlnIiwiU2ciLCJPZyIsIlJnIiwiYmciLCJhZnRlciIsImFyeSIsImFzc2lnbiIsImFzc2lnbkluIiwiYXNzaWduSW5XaXRoIiwiYXNzaWduV2l0aCIsImJlZm9yZSIsImJpbmQiLCJiaW5kQWxsIiwiYmluZEtleSIsImNhc3RBcnJheSIsImNodW5rIiwiY29tcGFjdCIsImNvbmNhdCIsImNvbmQiLCJjb25mb3JtcyIsImNvbnN0YW50IiwiY291bnRCeSIsImN1cnJ5IiwiY3VycnlSaWdodCIsImRlYm91bmNlIiwiZGVmYXVsdHNEZWVwIiwiZGVmZXIiLCJkZWxheSIsImRpZmZlcmVuY2UiLCJkaWZmZXJlbmNlQnkiLCJkaWZmZXJlbmNlV2l0aCIsImRyb3AiLCJkcm9wUmlnaHQiLCJkcm9wUmlnaHRXaGlsZSIsImRyb3BXaGlsZSIsImZpbGwiLCJmaWx0ZXIiLCJmbGF0TWFwIiwiZmxhdE1hcERlZXAiLCJmbGF0TWFwRGVwdGgiLCJmbGF0dGVuIiwiZmxhdHRlbkRlZXAiLCJmbGF0dGVuRGVwdGgiLCJmbGlwIiwiZmxvdyIsImZsb3dSaWdodCIsImZyb21QYWlycyIsImZ1bmN0aW9ucyIsImZ1bmN0aW9uc0luIiwiZ3JvdXBCeSIsImluaXRpYWwiLCJpbnRlcnNlY3Rpb24iLCJpbnRlcnNlY3Rpb25CeSIsImludGVyc2VjdGlvbldpdGgiLCJpbnZlcnQiLCJpbnZlcnRCeSIsImludm9rZU1hcCIsImtleUJ5Iiwia2V5c0luIiwibWFwS2V5cyIsIm1hcFZhbHVlcyIsIm1hdGNoZXMiLCJtYXRjaGVzUHJvcGVydHkiLCJtZW1vaXplIiwibWVyZ2UiLCJtZXJnZVdpdGgiLCJtZXRob2QiLCJtZXRob2RPZiIsIm1peGluIiwibmVnYXRlIiwibnRoQXJnIiwib21pdCIsIm9taXRCeSIsIm9uY2UiLCJvcmRlckJ5Iiwib3ZlciIsIm92ZXJBcmdzIiwib3ZlckV2ZXJ5Iiwib3ZlclNvbWUiLCJwYXJ0aWFsIiwicGFydGlhbFJpZ2h0IiwicGFydGl0aW9uIiwicGlja0J5IiwicHJvcGVydHkiLCJwcm9wZXJ0eU9mIiwicHVsbCIsInB1bGxBbGwiLCJwdWxsQWxsQnkiLCJwdWxsQWxsV2l0aCIsInB1bGxBdCIsInJhbmdlIiwicmFuZ2VSaWdodCIsInJlYXJnIiwicmVqZWN0IiwicmVtb3ZlIiwicmVzdCIsInNhbXBsZVNpemUiLCJzZXRXaXRoIiwic2h1ZmZsZSIsInNvcnRCeSIsInNvcnRlZFVuaXEiLCJzb3J0ZWRVbmlxQnkiLCJzcHJlYWQiLCJ0YWlsIiwidGFrZSIsInRha2VSaWdodCIsInRha2VSaWdodFdoaWxlIiwidGFrZVdoaWxlIiwidGFwIiwidGhyb3R0bGUiLCJ0b0FycmF5IiwidG9QYWlycyIsInRvUGFpcnNJbiIsInRvUGF0aCIsInRvUGxhaW5PYmplY3QiLCJ0cmFuc2Zvcm0iLCJ1bmFyeSIsInVuaW9uIiwidW5pb25CeSIsInVuaW9uV2l0aCIsInVuaXEiLCJ1bmlxQnkiLCJ1bmlxV2l0aCIsInVuc2V0IiwidW56aXAiLCJ1bnppcFdpdGgiLCJ1cGRhdGUiLCJ1cGRhdGVXaXRoIiwidmFsdWVzIiwidmFsdWVzSW4iLCJ3aXRob3V0Iiwid29yZHMiLCJ3cmFwIiwieG9yIiwieG9yQnkiLCJ4b3JXaXRoIiwiemlwIiwiemlwT2JqZWN0IiwiemlwT2JqZWN0RGVlcCIsInppcFdpdGgiLCJlbnRyaWVzIiwiZW50cmllc0luIiwiZXh0ZW5kIiwiZXh0ZW5kV2l0aCIsImF0dGVtcHQiLCJjYW1lbENhc2UiLCJjYXBpdGFsaXplIiwiY2xhbXAiLCJjbG9uZURlZXAiLCJjbG9uZURlZXBXaXRoIiwiY2xvbmVXaXRoIiwiY29uZm9ybXNUbyIsImRlYnVyciIsImRlZmF1bHRUbyIsImRpdmlkZSIsImVuZHNXaXRoIiwiZXEiLCJlc2NhcGVSZWdFeHAiLCJldmVyeSIsImZpbmQiLCJmaW5kSW5kZXgiLCJmaW5kS2V5IiwiZmluZExhc3QiLCJmaW5kTGFzdEluZGV4IiwiZmluZExhc3RLZXkiLCJmb3JFYWNoUmlnaHQiLCJmb3JJbiIsImZvckluUmlnaHQiLCJmb3JPd24iLCJmb3JPd25SaWdodCIsImd0ZSIsImhhc0luIiwiaGVhZCIsImlkZW50aXR5IiwiaW5jbHVkZXMiLCJpblJhbmdlIiwiaW52b2tlIiwiaXNBcmd1bWVudHMiLCJpc0FycmF5TGlrZSIsImlzQXJyYXlMaWtlT2JqZWN0IiwiaXNCb29sZWFuIiwiaXNFbGVtZW50IiwiaXNFbXB0eSIsImlzRXF1YWwiLCJpc0VxdWFsV2l0aCIsImlzRXJyb3IiLCJpc0Z1bmN0aW9uIiwiaXNJbnRlZ2VyIiwiaXNMZW5ndGgiLCJpc01hdGNoIiwiaXNNYXRjaFdpdGgiLCJpc05hTiIsImlzTmF0aXZlIiwiaXNOaWwiLCJpc051bGwiLCJpc051bWJlciIsImlzT2JqZWN0IiwiaXNPYmplY3RMaWtlIiwiaXNQbGFpbk9iamVjdCIsImlzU2FmZUludGVnZXIiLCJpc1N0cmluZyIsImlzU3ltYm9sIiwiaXNVbmRlZmluZWQiLCJpc1dlYWtNYXAiLCJpc1dlYWtTZXQiLCJrZWJhYkNhc2UiLCJsYXN0IiwibG93ZXJDYXNlIiwibG93ZXJGaXJzdCIsImx0ZSIsIm1heEJ5IiwibWVhbiIsIm1lYW5CeSIsIm1pbkJ5Iiwic3R1YkFycmF5Iiwic3R1YkZhbHNlIiwic3R1Yk9iamVjdCIsInN0dWJTdHJpbmciLCJzdHViVHJ1ZSIsIm11bHRpcGx5IiwibnRoIiwibm9Db25mbGljdCIsIm5vb3AiLCJwYWQiLCJwYWRFbmQiLCJwYWRTdGFydCIsInJlZHVjZSIsInJlZHVjZVJpZ2h0IiwicmVwZWF0IiwicmVzdWx0Iiwicm91bmQiLCJydW5JbkNvbnRleHQiLCJzYW1wbGUiLCJzbmFrZUNhc2UiLCJzb21lIiwic29ydGVkSW5kZXgiLCJzb3J0ZWRJbmRleEJ5Iiwic29ydGVkSW5kZXhPZiIsInNvcnRlZExhc3RJbmRleCIsInNvcnRlZExhc3RJbmRleEJ5Iiwic29ydGVkTGFzdEluZGV4T2YiLCJzdGFydENhc2UiLCJzdGFydHNXaXRoIiwic3VidHJhY3QiLCJzdW0iLCJzdW1CeSIsInRlbXBsYXRlIiwidGltZXMiLCJ0b0Zpbml0ZSIsInRvSW50ZWdlciIsInRvTGVuZ3RoIiwidG9Mb3dlciIsInRvTnVtYmVyIiwidG9TYWZlSW50ZWdlciIsInRvVXBwZXIiLCJ0cmltIiwidHJpbUVuZCIsInRyaW1TdGFydCIsInRydW5jYXRlIiwidW5lc2NhcGUiLCJ1bmlxdWVJZCIsInVwcGVyQ2FzZSIsInVwcGVyRmlyc3QiLCJlYWNoIiwiZWFjaFJpZ2h0IiwiZmlyc3QiLCJWRVJTSU9OIiwiY29tbWl0IiwidG9KU09OIiwiemciLCJkZWZpbmVQcm9wZXJ0eSIsIktnIiwiZGVmaW5lUHJvcGVydGllcyIsIllnIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsInlhIiwiWmciLCJKZyIsIlNhIiwiY3IiLCJYZyIsImZ0IiwicnBjTWFwIiwicmVmZXJlbmNlIiwibmFtZXNwYWNlIiwiQ3QiLCJPYSIsIlFnIiwibmFtZXNwYWNlcyIsImFjY291bnRzIiwiV2kiLCJSYSIsImNoYWlucyIsIm1ldGhvZHMiLCJldmVudHMiLCJWZyIsImJhIiwiRmkiLCJOdW1iZXIiLCJUYSIsInoiLCJNaSIsImtnIiwiY2xpZW50IiwiY2hhaW5JZCIsImdldERlZmF1bHRDaGFpbiIsImh0dHBQcm92aWRlcnMiLCJjcmVhdGVIdHRwUHJvdmlkZXJzIiwidXBkYXRlTmFtZXNwYWNlIiwicmVxdWVzdEFjY291bnRzIiwiZ2V0QWNjb3VudHMiLCJkZWZhdWx0Q2hhaW4iLCJyZXF1ZXN0IiwiZ2V0SHR0cFByb3ZpZGVyIiwic2V0RGVmYXVsdENoYWluIiwic2V0SHR0cFByb3ZpZGVyIiwiZW1pdCIsImNyZWF0ZUh0dHBQcm92aWRlciIsImNvcmUiLCJwcm9qZWN0SWQiLCJqZyIsImhhbmRsZVN3aXRjaENoYWluIiwiU2V0IiwicGFyYW1zIiwiaXNDaGFpbkFwcHJvdmVkIiwidG9waWMiLCJudiIsInR2IiwiZXYiLCJnZXRDYXJkYW5vUlBDVXJsIiwicnYiLCJpdiIsInN2IiwidXYiLCJhdiIsIm92IiwiTGEiLCJmdiIsImN2IiwiRGEiLCJociIsInFpIiwibHIiLCJycGNQcm92aWRlcnMiLCJzaG91bGRBYm9ydFBhaXJpbmdBdHRlbXB0IiwibWF4UGFpcmluZ0F0dGVtcHRzIiwiZGlzYWJsZVByb3ZpZGVyUGluZyIsInByb3ZpZGVyT3B0cyIsImxvZ2dlciIsImxldmVsIiwiaW5pdCIsImluaXRpYWxpemUiLCJ2YWxpZGF0ZUNoYWluIiwic2Vzc2lvbiIsImdldFByb3ZpZGVyIiwiZXhwaXJ5Iiwic2VuZEFzeW5jIiwiZ2V0VGltZSIsInRoZW4iLCJjYXRjaCIsImVuYWJsZSIsImNvbm5lY3QiLCJvcHRpb25hbE5hbWVzcGFjZXMiLCJzZXNzaW9uUHJvcGVydGllcyIsImRpc2Nvbm5lY3QiLCJyZWFzb24iLCJjbGVhbnVwIiwic2V0TmFtZXNwYWNlcyIsImNsZWFudXBQZW5kaW5nUGFpcmluZ3MiLCJza2lwUGFpcmluZyIsInBhaXIiLCJwYWlyaW5nVG9waWMiLCJhdXRoZW50aWNhdGUiLCJ1cmkiLCJyZXNwb25zZSIsInBlcnNpc3QiLCJvbkNvbm5lY3QiLCJyZW1vdmVMaXN0ZW5lciIsIm9mZiIsImlzV2FsbGV0Q29ubmVjdCIsImFwcHJvdmFsIiwicmVxdWlyZWROYW1lc3BhY2VzIiwiaW5mbyIsInBhaXJpbmciLCJnZXRBbGwiLCJkZWxldGVQYWlyaW5ncyIsImV4cGlyZXIiLCJyZWxheWVyIiwic3Vic2NyaWJlciIsInVuc3Vic2NyaWJlIiwiYWJvcnRQYWlyaW5nQXR0ZW1wdCIsImNoZWNrU3RvcmFnZSIsImdldEZyb21TdG9yZSIsImNyZWF0ZVByb3ZpZGVycyIsInRyYWNlIiwiY3JlYXRlQ2xpZW50IiwicmVnaXN0ZXJFdmVudExpc3RlbmVycyIsInJlbGF5VXJsIiwibWV0YWRhdGEiLCJzdG9yYWdlT3B0aW9ucyIsInN0b3JhZ2UiLCJldmVudCIsImRhdGEiLCJvbkNoYWluQ2hhbmdlZCIsIm9uU2Vzc2lvblVwZGF0ZSIsInNldEl0ZW0iLCJnZXRJdGVtIiwiaHYiLCJVbml2ZXJzYWxQcm92aWRlciIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/universal-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/dist/index.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE10: () => (/* binding */ Gi),\n/* harmony export */   BASE16: () => (/* binding */ zt),\n/* harmony export */   BASE64: () => (/* binding */ Jr),\n/* harmony export */   COLON: () => (/* binding */ Yo),\n/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ di),\n/* harmony export */   EMPTY_SPACE: () => (/* binding */ Br),\n/* harmony export */   ENV_MAP: () => (/* binding */ qt),\n/* harmony export */   INTERNAL_ERRORS: () => (/* binding */ Ao),\n/* harmony export */   MemoryStore: () => (/* binding */ lh),\n/* harmony export */   ONE_THOUSAND: () => (/* binding */ Vo),\n/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ xn),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ ro),\n/* harmony export */   SDK_ERRORS: () => (/* binding */ go),\n/* harmony export */   SDK_TYPE: () => (/* binding */ En),\n/* harmony export */   SLASH: () => (/* binding */ Mn),\n/* harmony export */   TYPE_0: () => (/* binding */ Yi),\n/* harmony export */   TYPE_1: () => (/* binding */ lr),\n/* harmony export */   UTF8: () => (/* binding */ Gr),\n/* harmony export */   addResourceToRecap: () => (/* binding */ Vf),\n/* harmony export */   appendToQueryString: () => (/* binding */ Sn),\n/* harmony export */   assertType: () => (/* binding */ e0),\n/* harmony export */   assignAbilityToActions: () => (/* binding */ ji),\n/* harmony export */   base64Decode: () => (/* binding */ Gf),\n/* harmony export */   base64Encode: () => (/* binding */ Jf),\n/* harmony export */   buildApprovedNamespaces: () => (/* binding */ Lu),\n/* harmony export */   buildAuthObject: () => (/* binding */ su),\n/* harmony export */   buildNamespacesFromAuth: () => (/* binding */ ju),\n/* harmony export */   buildRecapStatement: () => (/* binding */ Xf),\n/* harmony export */   calcExpiry: () => (/* binding */ d0),\n/* harmony export */   capitalize: () => (/* binding */ s0),\n/* harmony export */   capitalizeWord: () => (/* binding */ Rn),\n/* harmony export */   createDelayedPromise: () => (/* binding */ a0),\n/* harmony export */   createEncodedRecap: () => (/* binding */ cu),\n/* harmony export */   createExpiringPromise: () => (/* binding */ u0),\n/* harmony export */   createRecap: () => (/* binding */ Yf),\n/* harmony export */   decodeRecap: () => (/* binding */ Oe),\n/* harmony export */   decodeTypeByte: () => (/* binding */ Mr),\n/* harmony export */   decrypt: () => (/* binding */ xu),\n/* harmony export */   deriveSymKey: () => (/* binding */ Au),\n/* harmony export */   deserialize: () => (/* binding */ Xi),\n/* harmony export */   encodeRecap: () => (/* binding */ jr),\n/* harmony export */   encodeTypeByte: () => (/* binding */ $f),\n/* harmony export */   encrypt: () => (/* binding */ wu),\n/* harmony export */   engineEvent: () => (/* binding */ v0),\n/* harmony export */   enumify: () => (/* binding */ o0),\n/* harmony export */   formatAccountId: () => (/* binding */ vn),\n/* harmony export */   formatAccountWithChain: () => (/* binding */ Ko),\n/* harmony export */   formatChainId: () => (/* binding */ pn),\n/* harmony export */   formatExpirerTarget: () => (/* binding */ vi),\n/* harmony export */   formatIdTarget: () => (/* binding */ c0),\n/* harmony export */   formatMessage: () => (/* binding */ zf),\n/* harmony export */   formatMessageContext: () => (/* binding */ r0),\n/* harmony export */   formatRelayParams: () => (/* binding */ ao),\n/* harmony export */   formatRelayRpcUrl: () => (/* binding */ $o),\n/* harmony export */   formatStatementFromRecap: () => (/* binding */ Ji),\n/* harmony export */   formatTopicTarget: () => (/* binding */ h0),\n/* harmony export */   formatUA: () => (/* binding */ _n),\n/* harmony export */   formatUri: () => (/* binding */ Du),\n/* harmony export */   generateKeyPair: () => (/* binding */ mu),\n/* harmony export */   generateRandomBytes32: () => (/* binding */ gu),\n/* harmony export */   getAccountsChains: () => (/* binding */ $e),\n/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ zo),\n/* harmony export */   getAddressFromAccount: () => (/* binding */ mn),\n/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Ho),\n/* harmony export */   getAppMetadata: () => (/* binding */ Xo),\n/* harmony export */   getBrowserOnlineStatus: () => (/* binding */ Bo),\n/* harmony export */   getBundleId: () => (/* binding */ Wo),\n/* harmony export */   getChainFromAccount: () => (/* binding */ gn),\n/* harmony export */   getChainsFromAccounts: () => (/* binding */ An),\n/* harmony export */   getChainsFromNamespace: () => (/* binding */ _r),\n/* harmony export */   getChainsFromNamespaces: () => (/* binding */ Lo),\n/* harmony export */   getChainsFromRecap: () => (/* binding */ pu),\n/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ jo),\n/* harmony export */   getCommonValuesInArrays: () => (/* binding */ mi),\n/* harmony export */   getDecodedRecapFromResources: () => (/* binding */ Lf),\n/* harmony export */   getDeepLink: () => (/* binding */ g0),\n/* harmony export */   getDidAddress: () => (/* binding */ Li),\n/* harmony export */   getDidAddressSegments: () => (/* binding */ Lr),\n/* harmony export */   getDidChainId: () => (/* binding */ zi),\n/* harmony export */   getEnvironment: () => (/* binding */ We),\n/* harmony export */   getHttpUrl: () => (/* binding */ t0),\n/* harmony export */   getInternalError: () => (/* binding */ xe),\n/* harmony export */   getJavascriptID: () => (/* binding */ In),\n/* harmony export */   getJavascriptOS: () => (/* binding */ Nn),\n/* harmony export */   getLastItems: () => (/* binding */ Cn),\n/* harmony export */   getMethodsFromRecap: () => (/* binding */ du),\n/* harmony export */   getNamespacedDidChainId: () => (/* binding */ fu),\n/* harmony export */   getNamespacesChains: () => (/* binding */ co),\n/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ po),\n/* harmony export */   getNamespacesFromAccounts: () => (/* binding */ mo),\n/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ lo),\n/* harmony export */   getNodeOnlineStatus: () => (/* binding */ Ro),\n/* harmony export */   getReCapActions: () => (/* binding */ Qf),\n/* harmony export */   getReactNativeOnlineStatus: () => (/* binding */ Co),\n/* harmony export */   getRecapAbilitiesFromResource: () => (/* binding */ hu),\n/* harmony export */   getRecapFromResources: () => (/* binding */ Qr),\n/* harmony export */   getRecapResource: () => (/* binding */ jf),\n/* harmony export */   getRelayClientMetadata: () => (/* binding */ Zo),\n/* harmony export */   getRelayProtocolApi: () => (/* binding */ Nu),\n/* harmony export */   getRelayProtocolName: () => (/* binding */ Su),\n/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ zu),\n/* harmony export */   getSdkError: () => (/* binding */ tr),\n/* harmony export */   getUniqueValues: () => (/* binding */ li),\n/* harmony export */   handleDeeplinkRedirect: () => (/* binding */ m0),\n/* harmony export */   hasOverlap: () => (/* binding */ _e),\n/* harmony export */   hashKey: () => (/* binding */ bu),\n/* harmony export */   hashMessage: () => (/* binding */ yu),\n/* harmony export */   isBrowser: () => (/* binding */ pr),\n/* harmony export */   isCaipNamespace: () => (/* binding */ Zi),\n/* harmony export */   isConformingNamespaces: () => (/* binding */ Io),\n/* harmony export */   isExpired: () => (/* binding */ p0),\n/* harmony export */   isNode: () => (/* binding */ pi),\n/* harmony export */   isOnline: () => (/* binding */ hh),\n/* harmony export */   isProposalStruct: () => (/* binding */ Gu),\n/* harmony export */   isReactNative: () => (/* binding */ er),\n/* harmony export */   isRecap: () => (/* binding */ Qi),\n/* harmony export */   isSessionCompatible: () => (/* binding */ Qu),\n/* harmony export */   isSessionStruct: () => (/* binding */ Yu),\n/* harmony export */   isTypeOneEnvelope: () => (/* binding */ Eu),\n/* harmony export */   isUndefined: () => (/* binding */ Pe),\n/* harmony export */   isValidAccountId: () => (/* binding */ bo),\n/* harmony export */   isValidAccounts: () => (/* binding */ xo),\n/* harmony export */   isValidActions: () => (/* binding */ Eo),\n/* harmony export */   isValidArray: () => (/* binding */ Er),\n/* harmony export */   isValidChainId: () => (/* binding */ Sr),\n/* harmony export */   isValidChains: () => (/* binding */ yo),\n/* harmony export */   isValidController: () => (/* binding */ Vu),\n/* harmony export */   isValidEip1271Signature: () => (/* binding */ kf),\n/* harmony export */   isValidEip191Signature: () => (/* binding */ Uf),\n/* harmony export */   isValidErrorReason: () => (/* binding */ th),\n/* harmony export */   isValidEvent: () => (/* binding */ ih),\n/* harmony export */   isValidId: () => (/* binding */ Zu),\n/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ Mo),\n/* harmony export */   isValidNamespaceActions: () => (/* binding */ en),\n/* harmony export */   isValidNamespaceChains: () => (/* binding */ wo),\n/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ tn),\n/* harmony export */   isValidNamespaces: () => (/* binding */ So),\n/* harmony export */   isValidNamespacesChainId: () => (/* binding */ nh),\n/* harmony export */   isValidNamespacesEvent: () => (/* binding */ oh),\n/* harmony export */   isValidNamespacesRequest: () => (/* binding */ fh),\n/* harmony export */   isValidNumber: () => (/* binding */ Vr),\n/* harmony export */   isValidObject: () => (/* binding */ Yr),\n/* harmony export */   isValidParams: () => (/* binding */ $u),\n/* harmony export */   isValidRecap: () => (/* binding */ me),\n/* harmony export */   isValidRelay: () => (/* binding */ No),\n/* harmony export */   isValidRelays: () => (/* binding */ Xu),\n/* harmony export */   isValidRequest: () => (/* binding */ eh),\n/* harmony export */   isValidRequestExpiry: () => (/* binding */ uh),\n/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ Wu),\n/* harmony export */   isValidResponse: () => (/* binding */ rh),\n/* harmony export */   isValidString: () => (/* binding */ Gt),\n/* harmony export */   isValidUrl: () => (/* binding */ Ju),\n/* harmony export */   mapEntries: () => (/* binding */ f0),\n/* harmony export */   mapToObj: () => (/* binding */ i0),\n/* harmony export */   mergeArrays: () => (/* binding */ ge),\n/* harmony export */   mergeEncodedRecaps: () => (/* binding */ lu),\n/* harmony export */   mergeRecaps: () => (/* binding */ Wf),\n/* harmony export */   normalizeNamespaces: () => (/* binding */ $i),\n/* harmony export */   objToMap: () => (/* binding */ n0),\n/* harmony export */   parseAccountId: () => (/* binding */ ci),\n/* harmony export */   parseChainId: () => (/* binding */ dn),\n/* harmony export */   parseContextNames: () => (/* binding */ Bn),\n/* harmony export */   parseExpirerTarget: () => (/* binding */ l0),\n/* harmony export */   parseNamespaceKey: () => (/* binding */ vo),\n/* harmony export */   parseRelayParams: () => (/* binding */ oo),\n/* harmony export */   parseTopic: () => (/* binding */ so),\n/* harmony export */   parseUri: () => (/* binding */ Pu),\n/* harmony export */   populateAuthPayload: () => (/* binding */ au),\n/* harmony export */   recapHasResource: () => (/* binding */ uu),\n/* harmony export */   serialize: () => (/* binding */ to),\n/* harmony export */   subscribeToBrowserNetworkChange: () => (/* binding */ Oo),\n/* harmony export */   subscribeToNetworkChange: () => (/* binding */ ch),\n/* harmony export */   subscribeToReactNativeNetworkChange: () => (/* binding */ Po),\n/* harmony export */   validateDecoding: () => (/* binding */ Mu),\n/* harmony export */   validateEncoding: () => (/* binding */ eo),\n/* harmony export */   validateSignedCacao: () => (/* binding */ ou),\n/* harmony export */   verifySignature: () => (/* binding */ Tf)\n/* harmony export */ });\n/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! detect-browser */ \"(ssr)/./node_modules/detect-browser/es/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/window-metadata */ \"(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js\");\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! query-string */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/query-string/index.js\");\n/* harmony import */ var _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stablelib/chacha20poly1305 */ \"(ssr)/./node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js\");\n/* harmony import */ var _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stablelib/hkdf */ \"(ssr)/./node_modules/@stablelib/hkdf/lib/hkdf.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/./node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stablelib/sha256 */ \"(ssr)/./node_modules/@stablelib/sha256/lib/sha256.js\");\n/* harmony import */ var _stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @stablelib/x25519 */ \"(ssr)/./node_modules/@stablelib/x25519/lib/x25519.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/relay-api */ \"(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst Ir = \":\";\nfunction dn(e) {\n    const [t, r] = e.split(Ir);\n    return {\n        namespace: t,\n        reference: r\n    };\n}\nfunction pn(e) {\n    const { namespace: t, reference: r } = e;\n    return [\n        t,\n        r\n    ].join(Ir);\n}\nfunction ci(e) {\n    const [t, r, i] = e.split(Ir);\n    return {\n        namespace: t,\n        reference: r,\n        address: i\n    };\n}\nfunction vn(e) {\n    const { namespace: t, reference: r, address: i } = e;\n    return [\n        t,\n        r,\n        i\n    ].join(Ir);\n}\nfunction li(e, t) {\n    const r = [];\n    return e.forEach((i)=>{\n        const n = t(i);\n        r.includes(n) || r.push(n);\n    }), r;\n}\nfunction mn(e) {\n    const { address: t } = ci(e);\n    return t;\n}\nfunction gn(e) {\n    const { namespace: t, reference: r } = ci(e);\n    return pn({\n        namespace: t,\n        reference: r\n    });\n}\nfunction Ko(e, t) {\n    const { namespace: r, reference: i } = dn(t);\n    return vn({\n        namespace: r,\n        reference: i,\n        address: e\n    });\n}\nfunction Ho(e) {\n    return li(e, mn);\n}\nfunction An(e) {\n    return li(e, gn);\n}\nfunction zo(e, t = []) {\n    const r = [];\n    return Object.keys(e).forEach((i)=>{\n        if (t.length && !t.includes(i)) return;\n        const n = e[i];\n        r.push(...n.accounts);\n    }), r;\n}\nfunction Lo(e, t = []) {\n    const r = [];\n    return Object.keys(e).forEach((i)=>{\n        if (t.length && !t.includes(i)) return;\n        const n = e[i];\n        r.push(...An(n.accounts));\n    }), r;\n}\nfunction jo(e, t = []) {\n    const r = [];\n    return Object.keys(e).forEach((i)=>{\n        if (t.length && !t.includes(i)) return;\n        const n = e[i];\n        r.push(..._r(i, n));\n    }), r;\n}\nfunction _r(e, t) {\n    return e.includes(\":\") ? [\n        e\n    ] : t.chains || [];\n}\nvar Qo = Object.defineProperty, bn = Object.getOwnPropertySymbols, Jo = Object.prototype.hasOwnProperty, Go = Object.prototype.propertyIsEnumerable, yn = (e, t, r)=>t in e ? Qo(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, wn = (e, t)=>{\n    for(var r in t || (t = {}))Jo.call(t, r) && yn(e, r, t[r]);\n    if (bn) for (var r of bn(t))Go.call(t, r) && yn(e, r, t[r]);\n    return e;\n};\nconst xn = \"ReactNative\", qt = {\n    reactNative: \"react-native\",\n    node: \"node\",\n    browser: \"browser\",\n    unknown: \"unknown\"\n}, Br = \" \", Yo = \":\", Mn = \"/\", di = 2, Vo = 1e3, En = \"js\";\nfunction pi() {\n    return typeof process < \"u\" && typeof process.versions < \"u\" && typeof process.versions.node < \"u\";\n}\nfunction er() {\n    return !(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)() && navigator.product === xn;\n}\nfunction pr() {\n    return !pi() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)();\n}\nfunction We() {\n    return er() ? qt.reactNative : pi() ? qt.node : pr() ? qt.browser : qt.unknown;\n}\nfunction Wo() {\n    var e;\n    try {\n        return er() && typeof global < \"u\" && typeof (global == null ? void 0 : global.Application) < \"u\" ? (e = global.Application) == null ? void 0 : e.applicationId : void 0;\n    } catch  {\n        return;\n    }\n}\nfunction Sn(e, t) {\n    let r = query_string__WEBPACK_IMPORTED_MODULE_3__.parse(e);\n    return r = wn(wn({}, r), t), e = query_string__WEBPACK_IMPORTED_MODULE_3__.stringify(r), e;\n}\nfunction Xo() {\n    return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__.getWindowMetadata)() || {\n        name: \"\",\n        description: \"\",\n        url: \"\",\n        icons: [\n            \"\"\n        ]\n    };\n}\nfunction Zo(e, t) {\n    var r;\n    const i = We(), n = {\n        protocol: e,\n        version: t,\n        env: i\n    };\n    return i === \"browser\" && (n.host = ((r = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)()) == null ? void 0 : r.host) || \"unknown\"), n;\n}\nfunction Nn() {\n    if (We() === qt.reactNative && typeof global < \"u\" && typeof (global == null ? void 0 : global.Platform) < \"u\") {\n        const { OS: r, Version: i } = global.Platform;\n        return [\n            r,\n            i\n        ].join(\"-\");\n    }\n    const e = (0,detect_browser__WEBPACK_IMPORTED_MODULE_11__.detect)();\n    if (e === null) return \"unknown\";\n    const t = e.os ? e.os.replace(\" \", \"\").toLowerCase() : \"unknown\";\n    return e.type === \"browser\" ? [\n        t,\n        e.name,\n        e.version\n    ].join(\"-\") : [\n        t,\n        e.version\n    ].join(\"-\");\n}\nfunction In() {\n    var e;\n    const t = We();\n    return t === qt.browser ? [\n        t,\n        ((e = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)()) == null ? void 0 : e.host) || \"unknown\"\n    ].join(\":\") : t;\n}\nfunction _n(e, t, r) {\n    const i = Nn(), n = In();\n    return [\n        [\n            e,\n            t\n        ].join(\"-\"),\n        [\n            En,\n            r\n        ].join(\"-\"),\n        i,\n        n\n    ].join(\"/\");\n}\nfunction $o({ protocol: e, version: t, relayUrl: r, sdkVersion: i, auth: n, projectId: o, useOnCloseEvent: h, bundleId: p }) {\n    const b = r.split(\"?\"), m = _n(e, t, i), w = {\n        auth: n,\n        ua: m,\n        projectId: o,\n        useOnCloseEvent: h || void 0,\n        origin: p || void 0\n    }, y = Sn(b[1] || \"\", w);\n    return b[0] + \"?\" + y;\n}\nfunction t0(e) {\n    let t = (e.match(/^[^:]+(?=:\\/\\/)/gi) || [])[0];\n    const r = typeof t < \"u\" ? e.split(\"://\")[1] : e;\n    return t = t === \"wss\" ? \"https\" : \"http\", [\n        t,\n        r\n    ].join(\"://\");\n}\nfunction e0(e, t, r) {\n    if (!e[t] || typeof e[t] !== r) throw new Error(`Missing or invalid \"${t}\" param`);\n}\nfunction Bn(e, t = di) {\n    return Cn(e.split(Mn), t);\n}\nfunction r0(e) {\n    return Bn(e).join(Br);\n}\nfunction _e(e, t) {\n    return e.filter((r)=>t.includes(r)).length === e.length;\n}\nfunction Cn(e, t = di) {\n    return e.slice(Math.max(e.length - t, 0));\n}\nfunction i0(e) {\n    return Object.fromEntries(e.entries());\n}\nfunction n0(e) {\n    return new Map(Object.entries(e));\n}\nfunction f0(e, t) {\n    const r = {};\n    return Object.keys(e).forEach((i)=>{\n        r[i] = t(e[i]);\n    }), r;\n}\nconst o0 = (e)=>e;\nfunction Rn(e) {\n    return e.trim().replace(/^\\w/, (t)=>t.toUpperCase());\n}\nfunction s0(e) {\n    return e.split(Br).map((t)=>Rn(t)).join(Br);\n}\nfunction a0(e = _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES, t) {\n    const r = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e || _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES);\n    let i, n, o;\n    return {\n        resolve: (h)=>{\n            o && i && (clearTimeout(o), i(h));\n        },\n        reject: (h)=>{\n            o && n && (clearTimeout(o), n(h));\n        },\n        done: ()=>new Promise((h, p)=>{\n                o = setTimeout(()=>{\n                    p(new Error(t));\n                }, r), i = h, n = p;\n            })\n    };\n}\nfunction u0(e, t, r) {\n    return new Promise(async (i, n)=>{\n        const o = setTimeout(()=>n(new Error(r)), t);\n        try {\n            const h = await e;\n            i(h);\n        } catch (h) {\n            n(h);\n        }\n        clearTimeout(o);\n    });\n}\nfunction vi(e, t) {\n    if (typeof t == \"string\" && t.startsWith(`${e}:`)) return t;\n    if (e.toLowerCase() === \"topic\") {\n        if (typeof t != \"string\") throw new Error('Value must be \"string\" for expirer target type: topic');\n        return `topic:${t}`;\n    } else if (e.toLowerCase() === \"id\") {\n        if (typeof t != \"number\") throw new Error('Value must be \"number\" for expirer target type: id');\n        return `id:${t}`;\n    }\n    throw new Error(`Unknown expirer target type: ${e}`);\n}\nfunction h0(e) {\n    return vi(\"topic\", e);\n}\nfunction c0(e) {\n    return vi(\"id\", e);\n}\nfunction l0(e) {\n    const [t, r] = e.split(\":\"), i = {\n        id: void 0,\n        topic: void 0\n    };\n    if (t === \"topic\" && typeof r == \"string\") i.topic = r;\n    else if (t === \"id\" && Number.isInteger(Number(r))) i.id = Number(r);\n    else throw new Error(`Invalid target, expected id:number or topic:string, got ${t}:${r}`);\n    return i;\n}\nfunction d0(e, t) {\n    return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.fromMiliseconds)((t || Date.now()) + (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e));\n}\nfunction p0(e) {\n    return Date.now() >= (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e);\n}\nfunction v0(e, t) {\n    return `${e}${t ? `:${t}` : \"\"}`;\n}\nfunction ge(e = [], t = []) {\n    return [\n        ...new Set([\n            ...e,\n            ...t\n        ])\n    ];\n}\nasync function m0({ id: e, topic: t, wcDeepLink: r }) {\n    try {\n        if (!r) return;\n        const i = typeof r == \"string\" ? JSON.parse(r) : r;\n        let n = i?.href;\n        if (typeof n != \"string\") return;\n        n.endsWith(\"/\") && (n = n.slice(0, -1));\n        const o = `${n}/wc?requestId=${e}&sessionTopic=${t}`, h = We();\n        h === qt.browser ? o.startsWith(\"https://\") || o.startsWith(\"http://\") ? window.open(o, \"_blank\", \"noreferrer noopener\") : window.open(o, \"_self\", \"noreferrer noopener\") : h === qt.reactNative && typeof (global == null ? void 0 : global.Linking) < \"u\" && await global.Linking.openURL(o);\n    } catch (i) {\n        console.error(i);\n    }\n}\nasync function g0(e, t) {\n    try {\n        return await e.getItem(t) || (pr() ? localStorage.getItem(t) : void 0);\n    } catch (r) {\n        console.error(r);\n    }\n}\nfunction mi(e, t) {\n    return e.filter((r)=>t.includes(r));\n}\nvar On = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {};\nfunction A0(e) {\n    var t = e.default;\n    if (typeof t == \"function\") {\n        var r = function() {\n            return t.apply(this, arguments);\n        };\n        r.prototype = t.prototype;\n    } else r = {};\n    return Object.defineProperty(r, \"__esModule\", {\n        value: !0\n    }), Object.keys(e).forEach(function(i) {\n        var n = Object.getOwnPropertyDescriptor(e, i);\n        Object.defineProperty(r, i, n.get ? n : {\n            enumerable: !0,\n            get: function() {\n                return e[i];\n            }\n        });\n    }), r;\n}\nvar Pn = {\n    exports: {}\n}; /**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */ \n(function(e) {\n    (function() {\n        var t = \"input is invalid type\", r = \"finalize already called\", i = \"undefined\" == \"object\", n = i ? window : {};\n        n.JS_SHA3_NO_WINDOW && (i = !1);\n        var o = !i && typeof self == \"object\", h = !n.JS_SHA3_NO_NODE_JS && typeof process == \"object\" && process.versions && process.versions.node;\n        h ? n = On : o && (n = self);\n        var p = !n.JS_SHA3_NO_COMMON_JS && !0 && e.exports, b = !n.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < \"u\", m = \"0123456789abcdef\".split(\"\"), w = [\n            31,\n            7936,\n            2031616,\n            520093696\n        ], y = [\n            4,\n            1024,\n            262144,\n            67108864\n        ], S = [\n            1,\n            256,\n            65536,\n            16777216\n        ], I = [\n            6,\n            1536,\n            393216,\n            100663296\n        ], N = [\n            0,\n            8,\n            16,\n            24\n        ], C = [\n            1,\n            0,\n            32898,\n            0,\n            32906,\n            2147483648,\n            2147516416,\n            2147483648,\n            32907,\n            0,\n            2147483649,\n            0,\n            2147516545,\n            2147483648,\n            32777,\n            2147483648,\n            138,\n            0,\n            136,\n            0,\n            2147516425,\n            0,\n            2147483658,\n            0,\n            2147516555,\n            0,\n            139,\n            2147483648,\n            32905,\n            2147483648,\n            32771,\n            2147483648,\n            32770,\n            2147483648,\n            128,\n            2147483648,\n            32778,\n            0,\n            2147483658,\n            2147483648,\n            2147516545,\n            2147483648,\n            32896,\n            2147483648,\n            2147483649,\n            0,\n            2147516424,\n            2147483648\n        ], F = [\n            224,\n            256,\n            384,\n            512\n        ], U = [\n            128,\n            256\n        ], J = [\n            \"hex\",\n            \"buffer\",\n            \"arrayBuffer\",\n            \"array\",\n            \"digest\"\n        ], Bt = {\n            128: 168,\n            256: 136\n        };\n        (n.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(u) {\n            return Object.prototype.toString.call(u) === \"[object Array]\";\n        }), b && (n.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(u) {\n            return typeof u == \"object\" && u.buffer && u.buffer.constructor === ArrayBuffer;\n        });\n        for(var G = function(u, E, _) {\n            return function(B) {\n                return new s(u, E, u).update(B)[_]();\n            };\n        }, H = function(u, E, _) {\n            return function(B, R) {\n                return new s(u, E, R).update(B)[_]();\n            };\n        }, z = function(u, E, _) {\n            return function(B, R, T, P) {\n                return f[\"cshake\" + u].update(B, R, T, P)[_]();\n            };\n        }, Pt = function(u, E, _) {\n            return function(B, R, T, P) {\n                return f[\"kmac\" + u].update(B, R, T, P)[_]();\n            };\n        }, W = function(u, E, _, B) {\n            for(var R = 0; R < J.length; ++R){\n                var T = J[R];\n                u[T] = E(_, B, T);\n            }\n            return u;\n        }, Rt = function(u, E) {\n            var _ = G(u, E, \"hex\");\n            return _.create = function() {\n                return new s(u, E, u);\n            }, _.update = function(B) {\n                return _.create().update(B);\n            }, W(_, G, u, E);\n        }, Yt = function(u, E) {\n            var _ = H(u, E, \"hex\");\n            return _.create = function(B) {\n                return new s(u, E, B);\n            }, _.update = function(B, R) {\n                return _.create(R).update(B);\n            }, W(_, H, u, E);\n        }, Y = function(u, E) {\n            var _ = Bt[u], B = z(u, E, \"hex\");\n            return B.create = function(R, T, P) {\n                return !T && !P ? f[\"shake\" + u].create(R) : new s(u, E, R).bytepad([\n                    T,\n                    P\n                ], _);\n            }, B.update = function(R, T, P, O) {\n                return B.create(T, P, O).update(R);\n            }, W(B, z, u, E);\n        }, Vt = function(u, E) {\n            var _ = Bt[u], B = Pt(u, E, \"hex\");\n            return B.create = function(R, T, P) {\n                return new v(u, E, T).bytepad([\n                    \"KMAC\",\n                    P\n                ], _).bytepad([\n                    R\n                ], _);\n            }, B.update = function(R, T, P, O) {\n                return B.create(R, P, O).update(T);\n            }, W(B, Pt, u, E);\n        }, A = [\n            {\n                name: \"keccak\",\n                padding: S,\n                bits: F,\n                createMethod: Rt\n            },\n            {\n                name: \"sha3\",\n                padding: I,\n                bits: F,\n                createMethod: Rt\n            },\n            {\n                name: \"shake\",\n                padding: w,\n                bits: U,\n                createMethod: Yt\n            },\n            {\n                name: \"cshake\",\n                padding: y,\n                bits: U,\n                createMethod: Y\n            },\n            {\n                name: \"kmac\",\n                padding: y,\n                bits: U,\n                createMethod: Vt\n            }\n        ], f = {}, a = [], c = 0; c < A.length; ++c)for(var d = A[c], g = d.bits, x = 0; x < g.length; ++x){\n            var M = d.name + \"_\" + g[x];\n            if (a.push(M), f[M] = d.createMethod(g[x], d.padding), d.name !== \"sha3\") {\n                var l = d.name + g[x];\n                a.push(l), f[l] = f[M];\n            }\n        }\n        function s(u, E, _) {\n            this.blocks = [], this.s = [], this.padding = E, this.outputBits = _, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (u << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = _ >> 5, this.extraBytes = (_ & 31) >> 3;\n            for(var B = 0; B < 50; ++B)this.s[B] = 0;\n        }\n        s.prototype.update = function(u) {\n            if (this.finalized) throw new Error(r);\n            var E, _ = typeof u;\n            if (_ !== \"string\") {\n                if (_ === \"object\") {\n                    if (u === null) throw new Error(t);\n                    if (b && u.constructor === ArrayBuffer) u = new Uint8Array(u);\n                    else if (!Array.isArray(u) && (!b || !ArrayBuffer.isView(u))) throw new Error(t);\n                } else throw new Error(t);\n                E = !0;\n            }\n            for(var B = this.blocks, R = this.byteCount, T = u.length, P = this.blockCount, O = 0, Ct = this.s, D, q; O < T;){\n                if (this.reset) for(this.reset = !1, B[0] = this.block, D = 1; D < P + 1; ++D)B[D] = 0;\n                if (E) for(D = this.start; O < T && D < R; ++O)B[D >> 2] |= u[O] << N[D++ & 3];\n                else for(D = this.start; O < T && D < R; ++O)q = u.charCodeAt(O), q < 128 ? B[D >> 2] |= q << N[D++ & 3] : q < 2048 ? (B[D >> 2] |= (192 | q >> 6) << N[D++ & 3], B[D >> 2] |= (128 | q & 63) << N[D++ & 3]) : q < 55296 || q >= 57344 ? (B[D >> 2] |= (224 | q >> 12) << N[D++ & 3], B[D >> 2] |= (128 | q >> 6 & 63) << N[D++ & 3], B[D >> 2] |= (128 | q & 63) << N[D++ & 3]) : (q = 65536 + ((q & 1023) << 10 | u.charCodeAt(++O) & 1023), B[D >> 2] |= (240 | q >> 18) << N[D++ & 3], B[D >> 2] |= (128 | q >> 12 & 63) << N[D++ & 3], B[D >> 2] |= (128 | q >> 6 & 63) << N[D++ & 3], B[D >> 2] |= (128 | q & 63) << N[D++ & 3]);\n                if (this.lastByteIndex = D, D >= R) {\n                    for(this.start = D - R, this.block = B[P], D = 0; D < P; ++D)Ct[D] ^= B[D];\n                    k(Ct), this.reset = !0;\n                } else this.start = D;\n            }\n            return this;\n        }, s.prototype.encode = function(u, E) {\n            var _ = u & 255, B = 1, R = [\n                _\n            ];\n            for(u = u >> 8, _ = u & 255; _ > 0;)R.unshift(_), u = u >> 8, _ = u & 255, ++B;\n            return E ? R.push(B) : R.unshift(B), this.update(R), R.length;\n        }, s.prototype.encodeString = function(u) {\n            var E, _ = typeof u;\n            if (_ !== \"string\") {\n                if (_ === \"object\") {\n                    if (u === null) throw new Error(t);\n                    if (b && u.constructor === ArrayBuffer) u = new Uint8Array(u);\n                    else if (!Array.isArray(u) && (!b || !ArrayBuffer.isView(u))) throw new Error(t);\n                } else throw new Error(t);\n                E = !0;\n            }\n            var B = 0, R = u.length;\n            if (E) B = R;\n            else for(var T = 0; T < u.length; ++T){\n                var P = u.charCodeAt(T);\n                P < 128 ? B += 1 : P < 2048 ? B += 2 : P < 55296 || P >= 57344 ? B += 3 : (P = 65536 + ((P & 1023) << 10 | u.charCodeAt(++T) & 1023), B += 4);\n            }\n            return B += this.encode(B * 8), this.update(u), B;\n        }, s.prototype.bytepad = function(u, E) {\n            for(var _ = this.encode(E), B = 0; B < u.length; ++B)_ += this.encodeString(u[B]);\n            var R = E - _ % E, T = [];\n            return T.length = R, this.update(T), this;\n        }, s.prototype.finalize = function() {\n            if (!this.finalized) {\n                this.finalized = !0;\n                var u = this.blocks, E = this.lastByteIndex, _ = this.blockCount, B = this.s;\n                if (u[E >> 2] |= this.padding[E & 3], this.lastByteIndex === this.byteCount) for(u[0] = u[_], E = 1; E < _ + 1; ++E)u[E] = 0;\n                for(u[_ - 1] |= 2147483648, E = 0; E < _; ++E)B[E] ^= u[E];\n                k(B);\n            }\n        }, s.prototype.toString = s.prototype.hex = function() {\n            this.finalize();\n            for(var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, T = 0, P = \"\", O; T < _;){\n                for(R = 0; R < u && T < _; ++R, ++T)O = E[R], P += m[O >> 4 & 15] + m[O & 15] + m[O >> 12 & 15] + m[O >> 8 & 15] + m[O >> 20 & 15] + m[O >> 16 & 15] + m[O >> 28 & 15] + m[O >> 24 & 15];\n                T % u === 0 && (k(E), R = 0);\n            }\n            return B && (O = E[R], P += m[O >> 4 & 15] + m[O & 15], B > 1 && (P += m[O >> 12 & 15] + m[O >> 8 & 15]), B > 2 && (P += m[O >> 20 & 15] + m[O >> 16 & 15])), P;\n        }, s.prototype.arrayBuffer = function() {\n            this.finalize();\n            var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, T = 0, P = this.outputBits >> 3, O;\n            B ? O = new ArrayBuffer(_ + 1 << 2) : O = new ArrayBuffer(P);\n            for(var Ct = new Uint32Array(O); T < _;){\n                for(R = 0; R < u && T < _; ++R, ++T)Ct[T] = E[R];\n                T % u === 0 && k(E);\n            }\n            return B && (Ct[R] = E[R], O = O.slice(0, P)), O;\n        }, s.prototype.buffer = s.prototype.arrayBuffer, s.prototype.digest = s.prototype.array = function() {\n            this.finalize();\n            for(var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, T = 0, P = [], O, Ct; T < _;){\n                for(R = 0; R < u && T < _; ++R, ++T)O = T << 2, Ct = E[R], P[O] = Ct & 255, P[O + 1] = Ct >> 8 & 255, P[O + 2] = Ct >> 16 & 255, P[O + 3] = Ct >> 24 & 255;\n                T % u === 0 && k(E);\n            }\n            return B && (O = T << 2, Ct = E[R], P[O] = Ct & 255, B > 1 && (P[O + 1] = Ct >> 8 & 255), B > 2 && (P[O + 2] = Ct >> 16 & 255)), P;\n        };\n        function v(u, E, _) {\n            s.call(this, u, E, _);\n        }\n        v.prototype = new s, v.prototype.finalize = function() {\n            return this.encode(this.outputBits, !0), s.prototype.finalize.call(this);\n        };\n        var k = function(u) {\n            var E, _, B, R, T, P, O, Ct, D, q, De, X, Z, Fe, $, tt, Te, et, rt, Ue, it, nt, ke, ft, ot, qe, st, at, Ke, ut, ht, He, ct, lt, ze, dt, pt, Le, vt, mt, je, gt, At, Qe, bt, yt, Je, wt, xt, Ge, Mt, Et, Ye, St, Nt, Ve, It, _t, Me, Ee, Se, Ne, Ie;\n            for(B = 0; B < 48; B += 2)R = u[0] ^ u[10] ^ u[20] ^ u[30] ^ u[40], T = u[1] ^ u[11] ^ u[21] ^ u[31] ^ u[41], P = u[2] ^ u[12] ^ u[22] ^ u[32] ^ u[42], O = u[3] ^ u[13] ^ u[23] ^ u[33] ^ u[43], Ct = u[4] ^ u[14] ^ u[24] ^ u[34] ^ u[44], D = u[5] ^ u[15] ^ u[25] ^ u[35] ^ u[45], q = u[6] ^ u[16] ^ u[26] ^ u[36] ^ u[46], De = u[7] ^ u[17] ^ u[27] ^ u[37] ^ u[47], X = u[8] ^ u[18] ^ u[28] ^ u[38] ^ u[48], Z = u[9] ^ u[19] ^ u[29] ^ u[39] ^ u[49], E = X ^ (P << 1 | O >>> 31), _ = Z ^ (O << 1 | P >>> 31), u[0] ^= E, u[1] ^= _, u[10] ^= E, u[11] ^= _, u[20] ^= E, u[21] ^= _, u[30] ^= E, u[31] ^= _, u[40] ^= E, u[41] ^= _, E = R ^ (Ct << 1 | D >>> 31), _ = T ^ (D << 1 | Ct >>> 31), u[2] ^= E, u[3] ^= _, u[12] ^= E, u[13] ^= _, u[22] ^= E, u[23] ^= _, u[32] ^= E, u[33] ^= _, u[42] ^= E, u[43] ^= _, E = P ^ (q << 1 | De >>> 31), _ = O ^ (De << 1 | q >>> 31), u[4] ^= E, u[5] ^= _, u[14] ^= E, u[15] ^= _, u[24] ^= E, u[25] ^= _, u[34] ^= E, u[35] ^= _, u[44] ^= E, u[45] ^= _, E = Ct ^ (X << 1 | Z >>> 31), _ = D ^ (Z << 1 | X >>> 31), u[6] ^= E, u[7] ^= _, u[16] ^= E, u[17] ^= _, u[26] ^= E, u[27] ^= _, u[36] ^= E, u[37] ^= _, u[46] ^= E, u[47] ^= _, E = q ^ (R << 1 | T >>> 31), _ = De ^ (T << 1 | R >>> 31), u[8] ^= E, u[9] ^= _, u[18] ^= E, u[19] ^= _, u[28] ^= E, u[29] ^= _, u[38] ^= E, u[39] ^= _, u[48] ^= E, u[49] ^= _, Fe = u[0], $ = u[1], yt = u[11] << 4 | u[10] >>> 28, Je = u[10] << 4 | u[11] >>> 28, at = u[20] << 3 | u[21] >>> 29, Ke = u[21] << 3 | u[20] >>> 29, Ee = u[31] << 9 | u[30] >>> 23, Se = u[30] << 9 | u[31] >>> 23, gt = u[40] << 18 | u[41] >>> 14, At = u[41] << 18 | u[40] >>> 14, lt = u[2] << 1 | u[3] >>> 31, ze = u[3] << 1 | u[2] >>> 31, tt = u[13] << 12 | u[12] >>> 20, Te = u[12] << 12 | u[13] >>> 20, wt = u[22] << 10 | u[23] >>> 22, xt = u[23] << 10 | u[22] >>> 22, ut = u[33] << 13 | u[32] >>> 19, ht = u[32] << 13 | u[33] >>> 19, Ne = u[42] << 2 | u[43] >>> 30, Ie = u[43] << 2 | u[42] >>> 30, St = u[5] << 30 | u[4] >>> 2, Nt = u[4] << 30 | u[5] >>> 2, dt = u[14] << 6 | u[15] >>> 26, pt = u[15] << 6 | u[14] >>> 26, et = u[25] << 11 | u[24] >>> 21, rt = u[24] << 11 | u[25] >>> 21, Ge = u[34] << 15 | u[35] >>> 17, Mt = u[35] << 15 | u[34] >>> 17, He = u[45] << 29 | u[44] >>> 3, ct = u[44] << 29 | u[45] >>> 3, ft = u[6] << 28 | u[7] >>> 4, ot = u[7] << 28 | u[6] >>> 4, Ve = u[17] << 23 | u[16] >>> 9, It = u[16] << 23 | u[17] >>> 9, Le = u[26] << 25 | u[27] >>> 7, vt = u[27] << 25 | u[26] >>> 7, Ue = u[36] << 21 | u[37] >>> 11, it = u[37] << 21 | u[36] >>> 11, Et = u[47] << 24 | u[46] >>> 8, Ye = u[46] << 24 | u[47] >>> 8, Qe = u[8] << 27 | u[9] >>> 5, bt = u[9] << 27 | u[8] >>> 5, qe = u[18] << 20 | u[19] >>> 12, st = u[19] << 20 | u[18] >>> 12, _t = u[29] << 7 | u[28] >>> 25, Me = u[28] << 7 | u[29] >>> 25, mt = u[38] << 8 | u[39] >>> 24, je = u[39] << 8 | u[38] >>> 24, nt = u[48] << 14 | u[49] >>> 18, ke = u[49] << 14 | u[48] >>> 18, u[0] = Fe ^ ~tt & et, u[1] = $ ^ ~Te & rt, u[10] = ft ^ ~qe & at, u[11] = ot ^ ~st & Ke, u[20] = lt ^ ~dt & Le, u[21] = ze ^ ~pt & vt, u[30] = Qe ^ ~yt & wt, u[31] = bt ^ ~Je & xt, u[40] = St ^ ~Ve & _t, u[41] = Nt ^ ~It & Me, u[2] = tt ^ ~et & Ue, u[3] = Te ^ ~rt & it, u[12] = qe ^ ~at & ut, u[13] = st ^ ~Ke & ht, u[22] = dt ^ ~Le & mt, u[23] = pt ^ ~vt & je, u[32] = yt ^ ~wt & Ge, u[33] = Je ^ ~xt & Mt, u[42] = Ve ^ ~_t & Ee, u[43] = It ^ ~Me & Se, u[4] = et ^ ~Ue & nt, u[5] = rt ^ ~it & ke, u[14] = at ^ ~ut & He, u[15] = Ke ^ ~ht & ct, u[24] = Le ^ ~mt & gt, u[25] = vt ^ ~je & At, u[34] = wt ^ ~Ge & Et, u[35] = xt ^ ~Mt & Ye, u[44] = _t ^ ~Ee & Ne, u[45] = Me ^ ~Se & Ie, u[6] = Ue ^ ~nt & Fe, u[7] = it ^ ~ke & $, u[16] = ut ^ ~He & ft, u[17] = ht ^ ~ct & ot, u[26] = mt ^ ~gt & lt, u[27] = je ^ ~At & ze, u[36] = Ge ^ ~Et & Qe, u[37] = Mt ^ ~Ye & bt, u[46] = Ee ^ ~Ne & St, u[47] = Se ^ ~Ie & Nt, u[8] = nt ^ ~Fe & tt, u[9] = ke ^ ~$ & Te, u[18] = He ^ ~ft & qe, u[19] = ct ^ ~ot & st, u[28] = gt ^ ~lt & dt, u[29] = At ^ ~ze & pt, u[38] = Et ^ ~Qe & yt, u[39] = Ye ^ ~bt & Je, u[48] = Ne ^ ~St & Ve, u[49] = Ie ^ ~Nt & It, u[0] ^= C[B], u[1] ^= C[B + 1];\n        };\n        if (p) e.exports = f;\n        else for(c = 0; c < a.length; ++c)n[a[c]] = f[a[c]];\n    })();\n})(Pn);\nvar b0 = Pn.exports;\nconst y0 = \"logger/5.7.0\";\nlet Dn = !1, Fn = !1;\nconst Cr = {\n    debug: 1,\n    default: 2,\n    info: 2,\n    warning: 3,\n    error: 4,\n    off: 5\n};\nlet Tn = Cr.default, gi = null;\nfunction w0() {\n    try {\n        const e = [];\n        if ([\n            \"NFD\",\n            \"NFC\",\n            \"NFKD\",\n            \"NFKC\"\n        ].forEach((t)=>{\n            try {\n                if (\"test\".normalize(t) !== \"test\") throw new Error(\"bad normalize\");\n            } catch  {\n                e.push(t);\n            }\n        }), e.length) throw new Error(\"missing \" + e.join(\", \"));\n        if (String.fromCharCode(233).normalize(\"NFD\") !== String.fromCharCode(101, 769)) throw new Error(\"broken implementation\");\n    } catch (e) {\n        return e.message;\n    }\n    return null;\n}\nconst Un = w0();\nvar Ai;\n(function(e) {\n    e.DEBUG = \"DEBUG\", e.INFO = \"INFO\", e.WARNING = \"WARNING\", e.ERROR = \"ERROR\", e.OFF = \"OFF\";\n})(Ai || (Ai = {}));\nvar re;\n(function(e) {\n    e.UNKNOWN_ERROR = \"UNKNOWN_ERROR\", e.NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\", e.UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\", e.NETWORK_ERROR = \"NETWORK_ERROR\", e.SERVER_ERROR = \"SERVER_ERROR\", e.TIMEOUT = \"TIMEOUT\", e.BUFFER_OVERRUN = \"BUFFER_OVERRUN\", e.NUMERIC_FAULT = \"NUMERIC_FAULT\", e.MISSING_NEW = \"MISSING_NEW\", e.INVALID_ARGUMENT = \"INVALID_ARGUMENT\", e.MISSING_ARGUMENT = \"MISSING_ARGUMENT\", e.UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\", e.CALL_EXCEPTION = \"CALL_EXCEPTION\", e.INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\", e.NONCE_EXPIRED = \"NONCE_EXPIRED\", e.REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\", e.UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\", e.TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\", e.ACTION_REJECTED = \"ACTION_REJECTED\";\n})(re || (re = {}));\nconst kn = \"0123456789abcdef\";\nclass L {\n    constructor(t){\n        Object.defineProperty(this, \"version\", {\n            enumerable: !0,\n            value: t,\n            writable: !1\n        });\n    }\n    _log(t, r) {\n        const i = t.toLowerCase();\n        Cr[i] == null && this.throwArgumentError(\"invalid log level name\", \"logLevel\", t), !(Tn > Cr[i]) && console.log.apply(console, r);\n    }\n    debug(...t) {\n        this._log(L.levels.DEBUG, t);\n    }\n    info(...t) {\n        this._log(L.levels.INFO, t);\n    }\n    warn(...t) {\n        this._log(L.levels.WARNING, t);\n    }\n    makeError(t, r, i) {\n        if (Fn) return this.makeError(\"censored error\", r, {});\n        r || (r = L.errors.UNKNOWN_ERROR), i || (i = {});\n        const n = [];\n        Object.keys(i).forEach((b)=>{\n            const m = i[b];\n            try {\n                if (m instanceof Uint8Array) {\n                    let w = \"\";\n                    for(let y = 0; y < m.length; y++)w += kn[m[y] >> 4], w += kn[m[y] & 15];\n                    n.push(b + \"=Uint8Array(0x\" + w + \")\");\n                } else n.push(b + \"=\" + JSON.stringify(m));\n            } catch  {\n                n.push(b + \"=\" + JSON.stringify(i[b].toString()));\n            }\n        }), n.push(`code=${r}`), n.push(`version=${this.version}`);\n        const o = t;\n        let h = \"\";\n        switch(r){\n            case re.NUMERIC_FAULT:\n                {\n                    h = \"NUMERIC_FAULT\";\n                    const b = t;\n                    switch(b){\n                        case \"overflow\":\n                        case \"underflow\":\n                        case \"division-by-zero\":\n                            h += \"-\" + b;\n                            break;\n                        case \"negative-power\":\n                        case \"negative-width\":\n                            h += \"-unsupported\";\n                            break;\n                        case \"unbound-bitwise-result\":\n                            h += \"-unbound-result\";\n                            break;\n                    }\n                    break;\n                }\n            case re.CALL_EXCEPTION:\n            case re.INSUFFICIENT_FUNDS:\n            case re.MISSING_NEW:\n            case re.NONCE_EXPIRED:\n            case re.REPLACEMENT_UNDERPRICED:\n            case re.TRANSACTION_REPLACED:\n            case re.UNPREDICTABLE_GAS_LIMIT:\n                h = r;\n                break;\n        }\n        h && (t += \" [ See: https://links.ethers.org/v5-errors-\" + h + \" ]\"), n.length && (t += \" (\" + n.join(\", \") + \")\");\n        const p = new Error(t);\n        return p.reason = o, p.code = r, Object.keys(i).forEach(function(b) {\n            p[b] = i[b];\n        }), p;\n    }\n    throwError(t, r, i) {\n        throw this.makeError(t, r, i);\n    }\n    throwArgumentError(t, r, i) {\n        return this.throwError(t, L.errors.INVALID_ARGUMENT, {\n            argument: r,\n            value: i\n        });\n    }\n    assert(t, r, i, n) {\n        t || this.throwError(r, i, n);\n    }\n    assertArgument(t, r, i, n) {\n        t || this.throwArgumentError(r, i, n);\n    }\n    checkNormalize(t) {\n        Un && this.throwError(\"platform missing String.prototype.normalize\", L.errors.UNSUPPORTED_OPERATION, {\n            operation: \"String.prototype.normalize\",\n            form: Un\n        });\n    }\n    checkSafeUint53(t, r) {\n        typeof t == \"number\" && (r == null && (r = \"value not safe\"), (t < 0 || t >= 9007199254740991) && this.throwError(r, L.errors.NUMERIC_FAULT, {\n            operation: \"checkSafeInteger\",\n            fault: \"out-of-safe-range\",\n            value: t\n        }), t % 1 && this.throwError(r, L.errors.NUMERIC_FAULT, {\n            operation: \"checkSafeInteger\",\n            fault: \"non-integer\",\n            value: t\n        }));\n    }\n    checkArgumentCount(t, r, i) {\n        i ? i = \": \" + i : i = \"\", t < r && this.throwError(\"missing argument\" + i, L.errors.MISSING_ARGUMENT, {\n            count: t,\n            expectedCount: r\n        }), t > r && this.throwError(\"too many arguments\" + i, L.errors.UNEXPECTED_ARGUMENT, {\n            count: t,\n            expectedCount: r\n        });\n    }\n    checkNew(t, r) {\n        (t === Object || t == null) && this.throwError(\"missing new\", L.errors.MISSING_NEW, {\n            name: r.name\n        });\n    }\n    checkAbstract(t, r) {\n        t === r ? this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(r.name) + \" directly; use a sub-class\", L.errors.UNSUPPORTED_OPERATION, {\n            name: t.name,\n            operation: \"new\"\n        }) : (t === Object || t == null) && this.throwError(\"missing new\", L.errors.MISSING_NEW, {\n            name: r.name\n        });\n    }\n    static globalLogger() {\n        return gi || (gi = new L(y0)), gi;\n    }\n    static setCensorship(t, r) {\n        if (!t && r && this.globalLogger().throwError(\"cannot permanently disable censorship\", L.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setCensorship\"\n        }), Dn) {\n            if (!t) return;\n            this.globalLogger().throwError(\"error censorship permanent\", L.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        Fn = !!t, Dn = !!r;\n    }\n    static setLogLevel(t) {\n        const r = Cr[t.toLowerCase()];\n        if (r == null) {\n            L.globalLogger().warn(\"invalid log level - \" + t);\n            return;\n        }\n        Tn = r;\n    }\n    static from(t) {\n        return new L(t);\n    }\n}\nL.errors = re, L.levels = Ai;\nconst x0 = \"bytes/5.7.0\", Dt = new L(x0);\nfunction qn(e) {\n    return !!e.toHexString;\n}\nfunction rr(e) {\n    return e.slice || (e.slice = function() {\n        const t = Array.prototype.slice.call(arguments);\n        return rr(new Uint8Array(Array.prototype.slice.apply(e, t)));\n    }), e;\n}\nfunction M0(e) {\n    return Qt(e) && !(e.length % 2) || ir(e);\n}\nfunction Kn(e) {\n    return typeof e == \"number\" && e == e && e % 1 === 0;\n}\nfunction ir(e) {\n    if (e == null) return !1;\n    if (e.constructor === Uint8Array) return !0;\n    if (typeof e == \"string\" || !Kn(e.length) || e.length < 0) return !1;\n    for(let t = 0; t < e.length; t++){\n        const r = e[t];\n        if (!Kn(r) || r < 0 || r >= 256) return !1;\n    }\n    return !0;\n}\nfunction Ot(e, t) {\n    if (t || (t = {}), typeof e == \"number\") {\n        Dt.checkSafeUint53(e, \"invalid arrayify value\");\n        const r = [];\n        for(; e;)r.unshift(e & 255), e = parseInt(String(e / 256));\n        return r.length === 0 && r.push(0), rr(new Uint8Array(r));\n    }\n    if (t.allowMissingPrefix && typeof e == \"string\" && e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), qn(e) && (e = e.toHexString()), Qt(e)) {\n        let r = e.substring(2);\n        r.length % 2 && (t.hexPad === \"left\" ? r = \"0\" + r : t.hexPad === \"right\" ? r += \"0\" : Dt.throwArgumentError(\"hex data is odd-length\", \"value\", e));\n        const i = [];\n        for(let n = 0; n < r.length; n += 2)i.push(parseInt(r.substring(n, n + 2), 16));\n        return rr(new Uint8Array(i));\n    }\n    return ir(e) ? rr(new Uint8Array(e)) : Dt.throwArgumentError(\"invalid arrayify value\", \"value\", e);\n}\nfunction E0(e) {\n    const t = e.map((n)=>Ot(n)), r = t.reduce((n, o)=>n + o.length, 0), i = new Uint8Array(r);\n    return t.reduce((n, o)=>(i.set(o, n), n + o.length), 0), rr(i);\n}\nfunction S0(e, t) {\n    e = Ot(e), e.length > t && Dt.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    const r = new Uint8Array(t);\n    return r.set(e, t - e.length), rr(r);\n}\nfunction Qt(e, t) {\n    return !(typeof e != \"string\" || !e.match(/^0x[0-9A-Fa-f]*$/) || t && e.length !== 2 + 2 * t);\n}\nconst bi = \"0123456789abcdef\";\nfunction Kt(e, t) {\n    if (t || (t = {}), typeof e == \"number\") {\n        Dt.checkSafeUint53(e, \"invalid hexlify value\");\n        let r = \"\";\n        for(; e;)r = bi[e & 15] + r, e = Math.floor(e / 16);\n        return r.length ? (r.length % 2 && (r = \"0\" + r), \"0x\" + r) : \"0x00\";\n    }\n    if (typeof e == \"bigint\") return e = e.toString(16), e.length % 2 ? \"0x0\" + e : \"0x\" + e;\n    if (t.allowMissingPrefix && typeof e == \"string\" && e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), qn(e)) return e.toHexString();\n    if (Qt(e)) return e.length % 2 && (t.hexPad === \"left\" ? e = \"0x0\" + e.substring(2) : t.hexPad === \"right\" ? e += \"0\" : Dt.throwArgumentError(\"hex data is odd-length\", \"value\", e)), e.toLowerCase();\n    if (ir(e)) {\n        let r = \"0x\";\n        for(let i = 0; i < e.length; i++){\n            let n = e[i];\n            r += bi[(n & 240) >> 4] + bi[n & 15];\n        }\n        return r;\n    }\n    return Dt.throwArgumentError(\"invalid hexlify value\", \"value\", e);\n}\nfunction N0(e) {\n    if (typeof e != \"string\") e = Kt(e);\n    else if (!Qt(e) || e.length % 2) return null;\n    return (e.length - 2) / 2;\n}\nfunction Hn(e, t, r) {\n    return typeof e != \"string\" ? e = Kt(e) : (!Qt(e) || e.length % 2) && Dt.throwArgumentError(\"invalid hexData\", \"value\", e), t = 2 + 2 * t, r != null ? \"0x\" + e.substring(t, 2 + 2 * r) : \"0x\" + e.substring(t);\n}\nfunction oe(e, t) {\n    for(typeof e != \"string\" ? e = Kt(e) : Qt(e) || Dt.throwArgumentError(\"invalid hex string\", \"value\", e), e.length > 2 * t + 2 && Dt.throwArgumentError(\"value out of range\", \"value\", arguments[1]); e.length < 2 * t + 2;)e = \"0x0\" + e.substring(2);\n    return e;\n}\nfunction zn(e) {\n    const t = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (M0(e)) {\n        let r = Ot(e);\n        r.length === 64 ? (t.v = 27 + (r[32] >> 7), r[32] &= 127, t.r = Kt(r.slice(0, 32)), t.s = Kt(r.slice(32, 64))) : r.length === 65 ? (t.r = Kt(r.slice(0, 32)), t.s = Kt(r.slice(32, 64)), t.v = r[64]) : Dt.throwArgumentError(\"invalid signature string\", \"signature\", e), t.v < 27 && (t.v === 0 || t.v === 1 ? t.v += 27 : Dt.throwArgumentError(\"signature invalid v byte\", \"signature\", e)), t.recoveryParam = 1 - t.v % 2, t.recoveryParam && (r[32] |= 128), t._vs = Kt(r.slice(32, 64));\n    } else {\n        if (t.r = e.r, t.s = e.s, t.v = e.v, t.recoveryParam = e.recoveryParam, t._vs = e._vs, t._vs != null) {\n            const n = S0(Ot(t._vs), 32);\n            t._vs = Kt(n);\n            const o = n[0] >= 128 ? 1 : 0;\n            t.recoveryParam == null ? t.recoveryParam = o : t.recoveryParam !== o && Dt.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", e), n[0] &= 127;\n            const h = Kt(n);\n            t.s == null ? t.s = h : t.s !== h && Dt.throwArgumentError(\"signature v mismatch _vs\", \"signature\", e);\n        }\n        if (t.recoveryParam == null) t.v == null ? Dt.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", e) : t.v === 0 || t.v === 1 ? t.recoveryParam = t.v : t.recoveryParam = 1 - t.v % 2;\n        else if (t.v == null) t.v = 27 + t.recoveryParam;\n        else {\n            const n = t.v === 0 || t.v === 1 ? t.v : 1 - t.v % 2;\n            t.recoveryParam !== n && Dt.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", e);\n        }\n        t.r == null || !Qt(t.r) ? Dt.throwArgumentError(\"signature missing or invalid r\", \"signature\", e) : t.r = oe(t.r, 32), t.s == null || !Qt(t.s) ? Dt.throwArgumentError(\"signature missing or invalid s\", \"signature\", e) : t.s = oe(t.s, 32);\n        const r = Ot(t.s);\n        r[0] >= 128 && Dt.throwArgumentError(\"signature s out of range\", \"signature\", e), t.recoveryParam && (r[0] |= 128);\n        const i = Kt(r);\n        t._vs && (Qt(t._vs) || Dt.throwArgumentError(\"signature invalid _vs\", \"signature\", e), t._vs = oe(t._vs, 32)), t._vs == null ? t._vs = i : t._vs !== i && Dt.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", e);\n    }\n    return t.yParityAndS = t._vs, t.compact = t.r + t.yParityAndS.substring(2), t;\n}\nfunction yi(e) {\n    return \"0x\" + b0.keccak_256(Ot(e));\n}\nvar Ln = {\n    exports: {}\n}, I0 = {}, _0 = Object.freeze({\n    __proto__: null,\n    default: I0\n}), B0 = A0(_0);\n(function(e) {\n    (function(t, r) {\n        function i(A, f) {\n            if (!A) throw new Error(f || \"Assertion failed\");\n        }\n        function n(A, f) {\n            A.super_ = f;\n            var a = function() {};\n            a.prototype = f.prototype, A.prototype = new a, A.prototype.constructor = A;\n        }\n        function o(A, f, a) {\n            if (o.isBN(A)) return A;\n            this.negative = 0, this.words = null, this.length = 0, this.red = null, A !== null && ((f === \"le\" || f === \"be\") && (a = f, f = 10), this._init(A || 0, f || 10, a || \"be\"));\n        }\n        typeof t == \"object\" ? t.exports = o : r.BN = o, o.BN = o, o.wordSize = 26;\n        var h;\n        try {\n             false ? 0 : h = B0.Buffer;\n        } catch  {}\n        o.isBN = function(f) {\n            return f instanceof o ? !0 : f !== null && typeof f == \"object\" && f.constructor.wordSize === o.wordSize && Array.isArray(f.words);\n        }, o.max = function(f, a) {\n            return f.cmp(a) > 0 ? f : a;\n        }, o.min = function(f, a) {\n            return f.cmp(a) < 0 ? f : a;\n        }, o.prototype._init = function(f, a, c) {\n            if (typeof f == \"number\") return this._initNumber(f, a, c);\n            if (typeof f == \"object\") return this._initArray(f, a, c);\n            a === \"hex\" && (a = 16), i(a === (a | 0) && a >= 2 && a <= 36), f = f.toString().replace(/\\s+/g, \"\");\n            var d = 0;\n            f[0] === \"-\" && (d++, this.negative = 1), d < f.length && (a === 16 ? this._parseHex(f, d, c) : (this._parseBase(f, a, d), c === \"le\" && this._initArray(this.toArray(), a, c)));\n        }, o.prototype._initNumber = function(f, a, c) {\n            f < 0 && (this.negative = 1, f = -f), f < 67108864 ? (this.words = [\n                f & 67108863\n            ], this.length = 1) : f < 4503599627370496 ? (this.words = [\n                f & 67108863,\n                f / 67108864 & 67108863\n            ], this.length = 2) : (i(f < 9007199254740992), this.words = [\n                f & 67108863,\n                f / 67108864 & 67108863,\n                1\n            ], this.length = 3), c === \"le\" && this._initArray(this.toArray(), a, c);\n        }, o.prototype._initArray = function(f, a, c) {\n            if (i(typeof f.length == \"number\"), f.length <= 0) return this.words = [\n                0\n            ], this.length = 1, this;\n            this.length = Math.ceil(f.length / 3), this.words = new Array(this.length);\n            for(var d = 0; d < this.length; d++)this.words[d] = 0;\n            var g, x, M = 0;\n            if (c === \"be\") for(d = f.length - 1, g = 0; d >= 0; d -= 3)x = f[d] | f[d - 1] << 8 | f[d - 2] << 16, this.words[g] |= x << M & 67108863, this.words[g + 1] = x >>> 26 - M & 67108863, M += 24, M >= 26 && (M -= 26, g++);\n            else if (c === \"le\") for(d = 0, g = 0; d < f.length; d += 3)x = f[d] | f[d + 1] << 8 | f[d + 2] << 16, this.words[g] |= x << M & 67108863, this.words[g + 1] = x >>> 26 - M & 67108863, M += 24, M >= 26 && (M -= 26, g++);\n            return this._strip();\n        };\n        function p(A, f) {\n            var a = A.charCodeAt(f);\n            if (a >= 48 && a <= 57) return a - 48;\n            if (a >= 65 && a <= 70) return a - 55;\n            if (a >= 97 && a <= 102) return a - 87;\n            i(!1, \"Invalid character in \" + A);\n        }\n        function b(A, f, a) {\n            var c = p(A, a);\n            return a - 1 >= f && (c |= p(A, a - 1) << 4), c;\n        }\n        o.prototype._parseHex = function(f, a, c) {\n            this.length = Math.ceil((f.length - a) / 6), this.words = new Array(this.length);\n            for(var d = 0; d < this.length; d++)this.words[d] = 0;\n            var g = 0, x = 0, M;\n            if (c === \"be\") for(d = f.length - 1; d >= a; d -= 2)M = b(f, a, d) << g, this.words[x] |= M & 67108863, g >= 18 ? (g -= 18, x += 1, this.words[x] |= M >>> 26) : g += 8;\n            else {\n                var l = f.length - a;\n                for(d = l % 2 === 0 ? a + 1 : a; d < f.length; d += 2)M = b(f, a, d) << g, this.words[x] |= M & 67108863, g >= 18 ? (g -= 18, x += 1, this.words[x] |= M >>> 26) : g += 8;\n            }\n            this._strip();\n        };\n        function m(A, f, a, c) {\n            for(var d = 0, g = 0, x = Math.min(A.length, a), M = f; M < x; M++){\n                var l = A.charCodeAt(M) - 48;\n                d *= c, l >= 49 ? g = l - 49 + 10 : l >= 17 ? g = l - 17 + 10 : g = l, i(l >= 0 && g < c, \"Invalid character\"), d += g;\n            }\n            return d;\n        }\n        o.prototype._parseBase = function(f, a, c) {\n            this.words = [\n                0\n            ], this.length = 1;\n            for(var d = 0, g = 1; g <= 67108863; g *= a)d++;\n            d--, g = g / a | 0;\n            for(var x = f.length - c, M = x % d, l = Math.min(x, x - M) + c, s = 0, v = c; v < l; v += d)s = m(f, v, v + d, a), this.imuln(g), this.words[0] + s < 67108864 ? this.words[0] += s : this._iaddn(s);\n            if (M !== 0) {\n                var k = 1;\n                for(s = m(f, v, f.length, a), v = 0; v < M; v++)k *= a;\n                this.imuln(k), this.words[0] + s < 67108864 ? this.words[0] += s : this._iaddn(s);\n            }\n            this._strip();\n        }, o.prototype.copy = function(f) {\n            f.words = new Array(this.length);\n            for(var a = 0; a < this.length; a++)f.words[a] = this.words[a];\n            f.length = this.length, f.negative = this.negative, f.red = this.red;\n        };\n        function w(A, f) {\n            A.words = f.words, A.length = f.length, A.negative = f.negative, A.red = f.red;\n        }\n        if (o.prototype._move = function(f) {\n            w(f, this);\n        }, o.prototype.clone = function() {\n            var f = new o(null);\n            return this.copy(f), f;\n        }, o.prototype._expand = function(f) {\n            for(; this.length < f;)this.words[this.length++] = 0;\n            return this;\n        }, o.prototype._strip = function() {\n            for(; this.length > 1 && this.words[this.length - 1] === 0;)this.length--;\n            return this._normSign();\n        }, o.prototype._normSign = function() {\n            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;\n        }, typeof Symbol < \"u\" && typeof Symbol.for == \"function\") try {\n            o.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = y;\n        } catch  {\n            o.prototype.inspect = y;\n        }\n        else o.prototype.inspect = y;\n        function y() {\n            return (this.red ? \"<BN-R: \" : \"<BN: \") + this.toString(16) + \">\";\n        }\n        var S = [\n            \"\",\n            \"0\",\n            \"00\",\n            \"000\",\n            \"0000\",\n            \"00000\",\n            \"000000\",\n            \"0000000\",\n            \"00000000\",\n            \"000000000\",\n            \"0000000000\",\n            \"00000000000\",\n            \"000000000000\",\n            \"0000000000000\",\n            \"00000000000000\",\n            \"000000000000000\",\n            \"0000000000000000\",\n            \"00000000000000000\",\n            \"000000000000000000\",\n            \"0000000000000000000\",\n            \"00000000000000000000\",\n            \"000000000000000000000\",\n            \"0000000000000000000000\",\n            \"00000000000000000000000\",\n            \"000000000000000000000000\",\n            \"0000000000000000000000000\"\n        ], I = [\n            0,\n            0,\n            25,\n            16,\n            12,\n            11,\n            10,\n            9,\n            8,\n            8,\n            7,\n            7,\n            7,\n            7,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5\n        ], N = [\n            0,\n            0,\n            33554432,\n            43046721,\n            16777216,\n            48828125,\n            60466176,\n            40353607,\n            16777216,\n            43046721,\n            1e7,\n            19487171,\n            35831808,\n            62748517,\n            7529536,\n            11390625,\n            16777216,\n            24137569,\n            34012224,\n            47045881,\n            64e6,\n            4084101,\n            5153632,\n            6436343,\n            7962624,\n            9765625,\n            11881376,\n            14348907,\n            17210368,\n            20511149,\n            243e5,\n            28629151,\n            33554432,\n            39135393,\n            45435424,\n            52521875,\n            60466176\n        ];\n        o.prototype.toString = function(f, a) {\n            f = f || 10, a = a | 0 || 1;\n            var c;\n            if (f === 16 || f === \"hex\") {\n                c = \"\";\n                for(var d = 0, g = 0, x = 0; x < this.length; x++){\n                    var M = this.words[x], l = ((M << d | g) & 16777215).toString(16);\n                    g = M >>> 24 - d & 16777215, d += 2, d >= 26 && (d -= 26, x--), g !== 0 || x !== this.length - 1 ? c = S[6 - l.length] + l + c : c = l + c;\n                }\n                for(g !== 0 && (c = g.toString(16) + c); c.length % a !== 0;)c = \"0\" + c;\n                return this.negative !== 0 && (c = \"-\" + c), c;\n            }\n            if (f === (f | 0) && f >= 2 && f <= 36) {\n                var s = I[f], v = N[f];\n                c = \"\";\n                var k = this.clone();\n                for(k.negative = 0; !k.isZero();){\n                    var u = k.modrn(v).toString(f);\n                    k = k.idivn(v), k.isZero() ? c = u + c : c = S[s - u.length] + u + c;\n                }\n                for(this.isZero() && (c = \"0\" + c); c.length % a !== 0;)c = \"0\" + c;\n                return this.negative !== 0 && (c = \"-\" + c), c;\n            }\n            i(!1, \"Base should be between 2 and 36\");\n        }, o.prototype.toNumber = function() {\n            var f = this.words[0];\n            return this.length === 2 ? f += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? f += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && i(!1, \"Number can only safely store up to 53 bits\"), this.negative !== 0 ? -f : f;\n        }, o.prototype.toJSON = function() {\n            return this.toString(16, 2);\n        }, h && (o.prototype.toBuffer = function(f, a) {\n            return this.toArrayLike(h, f, a);\n        }), o.prototype.toArray = function(f, a) {\n            return this.toArrayLike(Array, f, a);\n        };\n        var C = function(f, a) {\n            return f.allocUnsafe ? f.allocUnsafe(a) : new f(a);\n        };\n        o.prototype.toArrayLike = function(f, a, c) {\n            this._strip();\n            var d = this.byteLength(), g = c || Math.max(1, d);\n            i(d <= g, \"byte array longer than desired length\"), i(g > 0, \"Requested array length <= 0\");\n            var x = C(f, g), M = a === \"le\" ? \"LE\" : \"BE\";\n            return this[\"_toArrayLike\" + M](x, d), x;\n        }, o.prototype._toArrayLikeLE = function(f, a) {\n            for(var c = 0, d = 0, g = 0, x = 0; g < this.length; g++){\n                var M = this.words[g] << x | d;\n                f[c++] = M & 255, c < f.length && (f[c++] = M >> 8 & 255), c < f.length && (f[c++] = M >> 16 & 255), x === 6 ? (c < f.length && (f[c++] = M >> 24 & 255), d = 0, x = 0) : (d = M >>> 24, x += 2);\n            }\n            if (c < f.length) for(f[c++] = d; c < f.length;)f[c++] = 0;\n        }, o.prototype._toArrayLikeBE = function(f, a) {\n            for(var c = f.length - 1, d = 0, g = 0, x = 0; g < this.length; g++){\n                var M = this.words[g] << x | d;\n                f[c--] = M & 255, c >= 0 && (f[c--] = M >> 8 & 255), c >= 0 && (f[c--] = M >> 16 & 255), x === 6 ? (c >= 0 && (f[c--] = M >> 24 & 255), d = 0, x = 0) : (d = M >>> 24, x += 2);\n            }\n            if (c >= 0) for(f[c--] = d; c >= 0;)f[c--] = 0;\n        }, Math.clz32 ? o.prototype._countBits = function(f) {\n            return 32 - Math.clz32(f);\n        } : o.prototype._countBits = function(f) {\n            var a = f, c = 0;\n            return a >= 4096 && (c += 13, a >>>= 13), a >= 64 && (c += 7, a >>>= 7), a >= 8 && (c += 4, a >>>= 4), a >= 2 && (c += 2, a >>>= 2), c + a;\n        }, o.prototype._zeroBits = function(f) {\n            if (f === 0) return 26;\n            var a = f, c = 0;\n            return a & 8191 || (c += 13, a >>>= 13), a & 127 || (c += 7, a >>>= 7), a & 15 || (c += 4, a >>>= 4), a & 3 || (c += 2, a >>>= 2), a & 1 || c++, c;\n        }, o.prototype.bitLength = function() {\n            var f = this.words[this.length - 1], a = this._countBits(f);\n            return (this.length - 1) * 26 + a;\n        };\n        function F(A) {\n            for(var f = new Array(A.bitLength()), a = 0; a < f.length; a++){\n                var c = a / 26 | 0, d = a % 26;\n                f[a] = A.words[c] >>> d & 1;\n            }\n            return f;\n        }\n        o.prototype.zeroBits = function() {\n            if (this.isZero()) return 0;\n            for(var f = 0, a = 0; a < this.length; a++){\n                var c = this._zeroBits(this.words[a]);\n                if (f += c, c !== 26) break;\n            }\n            return f;\n        }, o.prototype.byteLength = function() {\n            return Math.ceil(this.bitLength() / 8);\n        }, o.prototype.toTwos = function(f) {\n            return this.negative !== 0 ? this.abs().inotn(f).iaddn(1) : this.clone();\n        }, o.prototype.fromTwos = function(f) {\n            return this.testn(f - 1) ? this.notn(f).iaddn(1).ineg() : this.clone();\n        }, o.prototype.isNeg = function() {\n            return this.negative !== 0;\n        }, o.prototype.neg = function() {\n            return this.clone().ineg();\n        }, o.prototype.ineg = function() {\n            return this.isZero() || (this.negative ^= 1), this;\n        }, o.prototype.iuor = function(f) {\n            for(; this.length < f.length;)this.words[this.length++] = 0;\n            for(var a = 0; a < f.length; a++)this.words[a] = this.words[a] | f.words[a];\n            return this._strip();\n        }, o.prototype.ior = function(f) {\n            return i((this.negative | f.negative) === 0), this.iuor(f);\n        }, o.prototype.or = function(f) {\n            return this.length > f.length ? this.clone().ior(f) : f.clone().ior(this);\n        }, o.prototype.uor = function(f) {\n            return this.length > f.length ? this.clone().iuor(f) : f.clone().iuor(this);\n        }, o.prototype.iuand = function(f) {\n            var a;\n            this.length > f.length ? a = f : a = this;\n            for(var c = 0; c < a.length; c++)this.words[c] = this.words[c] & f.words[c];\n            return this.length = a.length, this._strip();\n        }, o.prototype.iand = function(f) {\n            return i((this.negative | f.negative) === 0), this.iuand(f);\n        }, o.prototype.and = function(f) {\n            return this.length > f.length ? this.clone().iand(f) : f.clone().iand(this);\n        }, o.prototype.uand = function(f) {\n            return this.length > f.length ? this.clone().iuand(f) : f.clone().iuand(this);\n        }, o.prototype.iuxor = function(f) {\n            var a, c;\n            this.length > f.length ? (a = this, c = f) : (a = f, c = this);\n            for(var d = 0; d < c.length; d++)this.words[d] = a.words[d] ^ c.words[d];\n            if (this !== a) for(; d < a.length; d++)this.words[d] = a.words[d];\n            return this.length = a.length, this._strip();\n        }, o.prototype.ixor = function(f) {\n            return i((this.negative | f.negative) === 0), this.iuxor(f);\n        }, o.prototype.xor = function(f) {\n            return this.length > f.length ? this.clone().ixor(f) : f.clone().ixor(this);\n        }, o.prototype.uxor = function(f) {\n            return this.length > f.length ? this.clone().iuxor(f) : f.clone().iuxor(this);\n        }, o.prototype.inotn = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = Math.ceil(f / 26) | 0, c = f % 26;\n            this._expand(a), c > 0 && a--;\n            for(var d = 0; d < a; d++)this.words[d] = ~this.words[d] & 67108863;\n            return c > 0 && (this.words[d] = ~this.words[d] & 67108863 >> 26 - c), this._strip();\n        }, o.prototype.notn = function(f) {\n            return this.clone().inotn(f);\n        }, o.prototype.setn = function(f, a) {\n            i(typeof f == \"number\" && f >= 0);\n            var c = f / 26 | 0, d = f % 26;\n            return this._expand(c + 1), a ? this.words[c] = this.words[c] | 1 << d : this.words[c] = this.words[c] & ~(1 << d), this._strip();\n        }, o.prototype.iadd = function(f) {\n            var a;\n            if (this.negative !== 0 && f.negative === 0) return this.negative = 0, a = this.isub(f), this.negative ^= 1, this._normSign();\n            if (this.negative === 0 && f.negative !== 0) return f.negative = 0, a = this.isub(f), f.negative = 1, a._normSign();\n            var c, d;\n            this.length > f.length ? (c = this, d = f) : (c = f, d = this);\n            for(var g = 0, x = 0; x < d.length; x++)a = (c.words[x] | 0) + (d.words[x] | 0) + g, this.words[x] = a & 67108863, g = a >>> 26;\n            for(; g !== 0 && x < c.length; x++)a = (c.words[x] | 0) + g, this.words[x] = a & 67108863, g = a >>> 26;\n            if (this.length = c.length, g !== 0) this.words[this.length] = g, this.length++;\n            else if (c !== this) for(; x < c.length; x++)this.words[x] = c.words[x];\n            return this;\n        }, o.prototype.add = function(f) {\n            var a;\n            return f.negative !== 0 && this.negative === 0 ? (f.negative = 0, a = this.sub(f), f.negative ^= 1, a) : f.negative === 0 && this.negative !== 0 ? (this.negative = 0, a = f.sub(this), this.negative = 1, a) : this.length > f.length ? this.clone().iadd(f) : f.clone().iadd(this);\n        }, o.prototype.isub = function(f) {\n            if (f.negative !== 0) {\n                f.negative = 0;\n                var a = this.iadd(f);\n                return f.negative = 1, a._normSign();\n            } else if (this.negative !== 0) return this.negative = 0, this.iadd(f), this.negative = 1, this._normSign();\n            var c = this.cmp(f);\n            if (c === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;\n            var d, g;\n            c > 0 ? (d = this, g = f) : (d = f, g = this);\n            for(var x = 0, M = 0; M < g.length; M++)a = (d.words[M] | 0) - (g.words[M] | 0) + x, x = a >> 26, this.words[M] = a & 67108863;\n            for(; x !== 0 && M < d.length; M++)a = (d.words[M] | 0) + x, x = a >> 26, this.words[M] = a & 67108863;\n            if (x === 0 && M < d.length && d !== this) for(; M < d.length; M++)this.words[M] = d.words[M];\n            return this.length = Math.max(this.length, M), d !== this && (this.negative = 1), this._strip();\n        }, o.prototype.sub = function(f) {\n            return this.clone().isub(f);\n        };\n        function U(A, f, a) {\n            a.negative = f.negative ^ A.negative;\n            var c = A.length + f.length | 0;\n            a.length = c, c = c - 1 | 0;\n            var d = A.words[0] | 0, g = f.words[0] | 0, x = d * g, M = x & 67108863, l = x / 67108864 | 0;\n            a.words[0] = M;\n            for(var s = 1; s < c; s++){\n                for(var v = l >>> 26, k = l & 67108863, u = Math.min(s, f.length - 1), E = Math.max(0, s - A.length + 1); E <= u; E++){\n                    var _ = s - E | 0;\n                    d = A.words[_] | 0, g = f.words[E] | 0, x = d * g + k, v += x / 67108864 | 0, k = x & 67108863;\n                }\n                a.words[s] = k | 0, l = v | 0;\n            }\n            return l !== 0 ? a.words[s] = l | 0 : a.length--, a._strip();\n        }\n        var J = function(f, a, c) {\n            var d = f.words, g = a.words, x = c.words, M = 0, l, s, v, k = d[0] | 0, u = k & 8191, E = k >>> 13, _ = d[1] | 0, B = _ & 8191, R = _ >>> 13, T = d[2] | 0, P = T & 8191, O = T >>> 13, Ct = d[3] | 0, D = Ct & 8191, q = Ct >>> 13, De = d[4] | 0, X = De & 8191, Z = De >>> 13, Fe = d[5] | 0, $ = Fe & 8191, tt = Fe >>> 13, Te = d[6] | 0, et = Te & 8191, rt = Te >>> 13, Ue = d[7] | 0, it = Ue & 8191, nt = Ue >>> 13, ke = d[8] | 0, ft = ke & 8191, ot = ke >>> 13, qe = d[9] | 0, st = qe & 8191, at = qe >>> 13, Ke = g[0] | 0, ut = Ke & 8191, ht = Ke >>> 13, He = g[1] | 0, ct = He & 8191, lt = He >>> 13, ze = g[2] | 0, dt = ze & 8191, pt = ze >>> 13, Le = g[3] | 0, vt = Le & 8191, mt = Le >>> 13, je = g[4] | 0, gt = je & 8191, At = je >>> 13, Qe = g[5] | 0, bt = Qe & 8191, yt = Qe >>> 13, Je = g[6] | 0, wt = Je & 8191, xt = Je >>> 13, Ge = g[7] | 0, Mt = Ge & 8191, Et = Ge >>> 13, Ye = g[8] | 0, St = Ye & 8191, Nt = Ye >>> 13, Ve = g[9] | 0, It = Ve & 8191, _t = Ve >>> 13;\n            c.negative = f.negative ^ a.negative, c.length = 19, l = Math.imul(u, ut), s = Math.imul(u, ht), s = s + Math.imul(E, ut) | 0, v = Math.imul(E, ht);\n            var Me = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, l = Math.imul(B, ut), s = Math.imul(B, ht), s = s + Math.imul(R, ut) | 0, v = Math.imul(R, ht), l = l + Math.imul(u, ct) | 0, s = s + Math.imul(u, lt) | 0, s = s + Math.imul(E, ct) | 0, v = v + Math.imul(E, lt) | 0;\n            var Ee = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, l = Math.imul(P, ut), s = Math.imul(P, ht), s = s + Math.imul(O, ut) | 0, v = Math.imul(O, ht), l = l + Math.imul(B, ct) | 0, s = s + Math.imul(B, lt) | 0, s = s + Math.imul(R, ct) | 0, v = v + Math.imul(R, lt) | 0, l = l + Math.imul(u, dt) | 0, s = s + Math.imul(u, pt) | 0, s = s + Math.imul(E, dt) | 0, v = v + Math.imul(E, pt) | 0;\n            var Se = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, l = Math.imul(D, ut), s = Math.imul(D, ht), s = s + Math.imul(q, ut) | 0, v = Math.imul(q, ht), l = l + Math.imul(P, ct) | 0, s = s + Math.imul(P, lt) | 0, s = s + Math.imul(O, ct) | 0, v = v + Math.imul(O, lt) | 0, l = l + Math.imul(B, dt) | 0, s = s + Math.imul(B, pt) | 0, s = s + Math.imul(R, dt) | 0, v = v + Math.imul(R, pt) | 0, l = l + Math.imul(u, vt) | 0, s = s + Math.imul(u, mt) | 0, s = s + Math.imul(E, vt) | 0, v = v + Math.imul(E, mt) | 0;\n            var Ne = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (Ne >>> 26) | 0, Ne &= 67108863, l = Math.imul(X, ut), s = Math.imul(X, ht), s = s + Math.imul(Z, ut) | 0, v = Math.imul(Z, ht), l = l + Math.imul(D, ct) | 0, s = s + Math.imul(D, lt) | 0, s = s + Math.imul(q, ct) | 0, v = v + Math.imul(q, lt) | 0, l = l + Math.imul(P, dt) | 0, s = s + Math.imul(P, pt) | 0, s = s + Math.imul(O, dt) | 0, v = v + Math.imul(O, pt) | 0, l = l + Math.imul(B, vt) | 0, s = s + Math.imul(B, mt) | 0, s = s + Math.imul(R, vt) | 0, v = v + Math.imul(R, mt) | 0, l = l + Math.imul(u, gt) | 0, s = s + Math.imul(u, At) | 0, s = s + Math.imul(E, gt) | 0, v = v + Math.imul(E, At) | 0;\n            var Ie = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863, l = Math.imul($, ut), s = Math.imul($, ht), s = s + Math.imul(tt, ut) | 0, v = Math.imul(tt, ht), l = l + Math.imul(X, ct) | 0, s = s + Math.imul(X, lt) | 0, s = s + Math.imul(Z, ct) | 0, v = v + Math.imul(Z, lt) | 0, l = l + Math.imul(D, dt) | 0, s = s + Math.imul(D, pt) | 0, s = s + Math.imul(q, dt) | 0, v = v + Math.imul(q, pt) | 0, l = l + Math.imul(P, vt) | 0, s = s + Math.imul(P, mt) | 0, s = s + Math.imul(O, vt) | 0, v = v + Math.imul(O, mt) | 0, l = l + Math.imul(B, gt) | 0, s = s + Math.imul(B, At) | 0, s = s + Math.imul(R, gt) | 0, v = v + Math.imul(R, At) | 0, l = l + Math.imul(u, bt) | 0, s = s + Math.imul(u, yt) | 0, s = s + Math.imul(E, bt) | 0, v = v + Math.imul(E, yt) | 0;\n            var Wr = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (Wr >>> 26) | 0, Wr &= 67108863, l = Math.imul(et, ut), s = Math.imul(et, ht), s = s + Math.imul(rt, ut) | 0, v = Math.imul(rt, ht), l = l + Math.imul($, ct) | 0, s = s + Math.imul($, lt) | 0, s = s + Math.imul(tt, ct) | 0, v = v + Math.imul(tt, lt) | 0, l = l + Math.imul(X, dt) | 0, s = s + Math.imul(X, pt) | 0, s = s + Math.imul(Z, dt) | 0, v = v + Math.imul(Z, pt) | 0, l = l + Math.imul(D, vt) | 0, s = s + Math.imul(D, mt) | 0, s = s + Math.imul(q, vt) | 0, v = v + Math.imul(q, mt) | 0, l = l + Math.imul(P, gt) | 0, s = s + Math.imul(P, At) | 0, s = s + Math.imul(O, gt) | 0, v = v + Math.imul(O, At) | 0, l = l + Math.imul(B, bt) | 0, s = s + Math.imul(B, yt) | 0, s = s + Math.imul(R, bt) | 0, v = v + Math.imul(R, yt) | 0, l = l + Math.imul(u, wt) | 0, s = s + Math.imul(u, xt) | 0, s = s + Math.imul(E, wt) | 0, v = v + Math.imul(E, xt) | 0;\n            var Xr = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (Xr >>> 26) | 0, Xr &= 67108863, l = Math.imul(it, ut), s = Math.imul(it, ht), s = s + Math.imul(nt, ut) | 0, v = Math.imul(nt, ht), l = l + Math.imul(et, ct) | 0, s = s + Math.imul(et, lt) | 0, s = s + Math.imul(rt, ct) | 0, v = v + Math.imul(rt, lt) | 0, l = l + Math.imul($, dt) | 0, s = s + Math.imul($, pt) | 0, s = s + Math.imul(tt, dt) | 0, v = v + Math.imul(tt, pt) | 0, l = l + Math.imul(X, vt) | 0, s = s + Math.imul(X, mt) | 0, s = s + Math.imul(Z, vt) | 0, v = v + Math.imul(Z, mt) | 0, l = l + Math.imul(D, gt) | 0, s = s + Math.imul(D, At) | 0, s = s + Math.imul(q, gt) | 0, v = v + Math.imul(q, At) | 0, l = l + Math.imul(P, bt) | 0, s = s + Math.imul(P, yt) | 0, s = s + Math.imul(O, bt) | 0, v = v + Math.imul(O, yt) | 0, l = l + Math.imul(B, wt) | 0, s = s + Math.imul(B, xt) | 0, s = s + Math.imul(R, wt) | 0, v = v + Math.imul(R, xt) | 0, l = l + Math.imul(u, Mt) | 0, s = s + Math.imul(u, Et) | 0, s = s + Math.imul(E, Mt) | 0, v = v + Math.imul(E, Et) | 0;\n            var Zr = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, l = Math.imul(ft, ut), s = Math.imul(ft, ht), s = s + Math.imul(ot, ut) | 0, v = Math.imul(ot, ht), l = l + Math.imul(it, ct) | 0, s = s + Math.imul(it, lt) | 0, s = s + Math.imul(nt, ct) | 0, v = v + Math.imul(nt, lt) | 0, l = l + Math.imul(et, dt) | 0, s = s + Math.imul(et, pt) | 0, s = s + Math.imul(rt, dt) | 0, v = v + Math.imul(rt, pt) | 0, l = l + Math.imul($, vt) | 0, s = s + Math.imul($, mt) | 0, s = s + Math.imul(tt, vt) | 0, v = v + Math.imul(tt, mt) | 0, l = l + Math.imul(X, gt) | 0, s = s + Math.imul(X, At) | 0, s = s + Math.imul(Z, gt) | 0, v = v + Math.imul(Z, At) | 0, l = l + Math.imul(D, bt) | 0, s = s + Math.imul(D, yt) | 0, s = s + Math.imul(q, bt) | 0, v = v + Math.imul(q, yt) | 0, l = l + Math.imul(P, wt) | 0, s = s + Math.imul(P, xt) | 0, s = s + Math.imul(O, wt) | 0, v = v + Math.imul(O, xt) | 0, l = l + Math.imul(B, Mt) | 0, s = s + Math.imul(B, Et) | 0, s = s + Math.imul(R, Mt) | 0, v = v + Math.imul(R, Et) | 0, l = l + Math.imul(u, St) | 0, s = s + Math.imul(u, Nt) | 0, s = s + Math.imul(E, St) | 0, v = v + Math.imul(E, Nt) | 0;\n            var $r = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + ($r >>> 26) | 0, $r &= 67108863, l = Math.imul(st, ut), s = Math.imul(st, ht), s = s + Math.imul(at, ut) | 0, v = Math.imul(at, ht), l = l + Math.imul(ft, ct) | 0, s = s + Math.imul(ft, lt) | 0, s = s + Math.imul(ot, ct) | 0, v = v + Math.imul(ot, lt) | 0, l = l + Math.imul(it, dt) | 0, s = s + Math.imul(it, pt) | 0, s = s + Math.imul(nt, dt) | 0, v = v + Math.imul(nt, pt) | 0, l = l + Math.imul(et, vt) | 0, s = s + Math.imul(et, mt) | 0, s = s + Math.imul(rt, vt) | 0, v = v + Math.imul(rt, mt) | 0, l = l + Math.imul($, gt) | 0, s = s + Math.imul($, At) | 0, s = s + Math.imul(tt, gt) | 0, v = v + Math.imul(tt, At) | 0, l = l + Math.imul(X, bt) | 0, s = s + Math.imul(X, yt) | 0, s = s + Math.imul(Z, bt) | 0, v = v + Math.imul(Z, yt) | 0, l = l + Math.imul(D, wt) | 0, s = s + Math.imul(D, xt) | 0, s = s + Math.imul(q, wt) | 0, v = v + Math.imul(q, xt) | 0, l = l + Math.imul(P, Mt) | 0, s = s + Math.imul(P, Et) | 0, s = s + Math.imul(O, Mt) | 0, v = v + Math.imul(O, Et) | 0, l = l + Math.imul(B, St) | 0, s = s + Math.imul(B, Nt) | 0, s = s + Math.imul(R, St) | 0, v = v + Math.imul(R, Nt) | 0, l = l + Math.imul(u, It) | 0, s = s + Math.imul(u, _t) | 0, s = s + Math.imul(E, It) | 0, v = v + Math.imul(E, _t) | 0;\n            var ti = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (ti >>> 26) | 0, ti &= 67108863, l = Math.imul(st, ct), s = Math.imul(st, lt), s = s + Math.imul(at, ct) | 0, v = Math.imul(at, lt), l = l + Math.imul(ft, dt) | 0, s = s + Math.imul(ft, pt) | 0, s = s + Math.imul(ot, dt) | 0, v = v + Math.imul(ot, pt) | 0, l = l + Math.imul(it, vt) | 0, s = s + Math.imul(it, mt) | 0, s = s + Math.imul(nt, vt) | 0, v = v + Math.imul(nt, mt) | 0, l = l + Math.imul(et, gt) | 0, s = s + Math.imul(et, At) | 0, s = s + Math.imul(rt, gt) | 0, v = v + Math.imul(rt, At) | 0, l = l + Math.imul($, bt) | 0, s = s + Math.imul($, yt) | 0, s = s + Math.imul(tt, bt) | 0, v = v + Math.imul(tt, yt) | 0, l = l + Math.imul(X, wt) | 0, s = s + Math.imul(X, xt) | 0, s = s + Math.imul(Z, wt) | 0, v = v + Math.imul(Z, xt) | 0, l = l + Math.imul(D, Mt) | 0, s = s + Math.imul(D, Et) | 0, s = s + Math.imul(q, Mt) | 0, v = v + Math.imul(q, Et) | 0, l = l + Math.imul(P, St) | 0, s = s + Math.imul(P, Nt) | 0, s = s + Math.imul(O, St) | 0, v = v + Math.imul(O, Nt) | 0, l = l + Math.imul(B, It) | 0, s = s + Math.imul(B, _t) | 0, s = s + Math.imul(R, It) | 0, v = v + Math.imul(R, _t) | 0;\n            var ei = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (ei >>> 26) | 0, ei &= 67108863, l = Math.imul(st, dt), s = Math.imul(st, pt), s = s + Math.imul(at, dt) | 0, v = Math.imul(at, pt), l = l + Math.imul(ft, vt) | 0, s = s + Math.imul(ft, mt) | 0, s = s + Math.imul(ot, vt) | 0, v = v + Math.imul(ot, mt) | 0, l = l + Math.imul(it, gt) | 0, s = s + Math.imul(it, At) | 0, s = s + Math.imul(nt, gt) | 0, v = v + Math.imul(nt, At) | 0, l = l + Math.imul(et, bt) | 0, s = s + Math.imul(et, yt) | 0, s = s + Math.imul(rt, bt) | 0, v = v + Math.imul(rt, yt) | 0, l = l + Math.imul($, wt) | 0, s = s + Math.imul($, xt) | 0, s = s + Math.imul(tt, wt) | 0, v = v + Math.imul(tt, xt) | 0, l = l + Math.imul(X, Mt) | 0, s = s + Math.imul(X, Et) | 0, s = s + Math.imul(Z, Mt) | 0, v = v + Math.imul(Z, Et) | 0, l = l + Math.imul(D, St) | 0, s = s + Math.imul(D, Nt) | 0, s = s + Math.imul(q, St) | 0, v = v + Math.imul(q, Nt) | 0, l = l + Math.imul(P, It) | 0, s = s + Math.imul(P, _t) | 0, s = s + Math.imul(O, It) | 0, v = v + Math.imul(O, _t) | 0;\n            var ri = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (ri >>> 26) | 0, ri &= 67108863, l = Math.imul(st, vt), s = Math.imul(st, mt), s = s + Math.imul(at, vt) | 0, v = Math.imul(at, mt), l = l + Math.imul(ft, gt) | 0, s = s + Math.imul(ft, At) | 0, s = s + Math.imul(ot, gt) | 0, v = v + Math.imul(ot, At) | 0, l = l + Math.imul(it, bt) | 0, s = s + Math.imul(it, yt) | 0, s = s + Math.imul(nt, bt) | 0, v = v + Math.imul(nt, yt) | 0, l = l + Math.imul(et, wt) | 0, s = s + Math.imul(et, xt) | 0, s = s + Math.imul(rt, wt) | 0, v = v + Math.imul(rt, xt) | 0, l = l + Math.imul($, Mt) | 0, s = s + Math.imul($, Et) | 0, s = s + Math.imul(tt, Mt) | 0, v = v + Math.imul(tt, Et) | 0, l = l + Math.imul(X, St) | 0, s = s + Math.imul(X, Nt) | 0, s = s + Math.imul(Z, St) | 0, v = v + Math.imul(Z, Nt) | 0, l = l + Math.imul(D, It) | 0, s = s + Math.imul(D, _t) | 0, s = s + Math.imul(q, It) | 0, v = v + Math.imul(q, _t) | 0;\n            var ii = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (ii >>> 26) | 0, ii &= 67108863, l = Math.imul(st, gt), s = Math.imul(st, At), s = s + Math.imul(at, gt) | 0, v = Math.imul(at, At), l = l + Math.imul(ft, bt) | 0, s = s + Math.imul(ft, yt) | 0, s = s + Math.imul(ot, bt) | 0, v = v + Math.imul(ot, yt) | 0, l = l + Math.imul(it, wt) | 0, s = s + Math.imul(it, xt) | 0, s = s + Math.imul(nt, wt) | 0, v = v + Math.imul(nt, xt) | 0, l = l + Math.imul(et, Mt) | 0, s = s + Math.imul(et, Et) | 0, s = s + Math.imul(rt, Mt) | 0, v = v + Math.imul(rt, Et) | 0, l = l + Math.imul($, St) | 0, s = s + Math.imul($, Nt) | 0, s = s + Math.imul(tt, St) | 0, v = v + Math.imul(tt, Nt) | 0, l = l + Math.imul(X, It) | 0, s = s + Math.imul(X, _t) | 0, s = s + Math.imul(Z, It) | 0, v = v + Math.imul(Z, _t) | 0;\n            var ni = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (ni >>> 26) | 0, ni &= 67108863, l = Math.imul(st, bt), s = Math.imul(st, yt), s = s + Math.imul(at, bt) | 0, v = Math.imul(at, yt), l = l + Math.imul(ft, wt) | 0, s = s + Math.imul(ft, xt) | 0, s = s + Math.imul(ot, wt) | 0, v = v + Math.imul(ot, xt) | 0, l = l + Math.imul(it, Mt) | 0, s = s + Math.imul(it, Et) | 0, s = s + Math.imul(nt, Mt) | 0, v = v + Math.imul(nt, Et) | 0, l = l + Math.imul(et, St) | 0, s = s + Math.imul(et, Nt) | 0, s = s + Math.imul(rt, St) | 0, v = v + Math.imul(rt, Nt) | 0, l = l + Math.imul($, It) | 0, s = s + Math.imul($, _t) | 0, s = s + Math.imul(tt, It) | 0, v = v + Math.imul(tt, _t) | 0;\n            var fi = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (fi >>> 26) | 0, fi &= 67108863, l = Math.imul(st, wt), s = Math.imul(st, xt), s = s + Math.imul(at, wt) | 0, v = Math.imul(at, xt), l = l + Math.imul(ft, Mt) | 0, s = s + Math.imul(ft, Et) | 0, s = s + Math.imul(ot, Mt) | 0, v = v + Math.imul(ot, Et) | 0, l = l + Math.imul(it, St) | 0, s = s + Math.imul(it, Nt) | 0, s = s + Math.imul(nt, St) | 0, v = v + Math.imul(nt, Nt) | 0, l = l + Math.imul(et, It) | 0, s = s + Math.imul(et, _t) | 0, s = s + Math.imul(rt, It) | 0, v = v + Math.imul(rt, _t) | 0;\n            var oi = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (oi >>> 26) | 0, oi &= 67108863, l = Math.imul(st, Mt), s = Math.imul(st, Et), s = s + Math.imul(at, Mt) | 0, v = Math.imul(at, Et), l = l + Math.imul(ft, St) | 0, s = s + Math.imul(ft, Nt) | 0, s = s + Math.imul(ot, St) | 0, v = v + Math.imul(ot, Nt) | 0, l = l + Math.imul(it, It) | 0, s = s + Math.imul(it, _t) | 0, s = s + Math.imul(nt, It) | 0, v = v + Math.imul(nt, _t) | 0;\n            var si = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (si >>> 26) | 0, si &= 67108863, l = Math.imul(st, St), s = Math.imul(st, Nt), s = s + Math.imul(at, St) | 0, v = Math.imul(at, Nt), l = l + Math.imul(ft, It) | 0, s = s + Math.imul(ft, _t) | 0, s = s + Math.imul(ot, It) | 0, v = v + Math.imul(ot, _t) | 0;\n            var ai = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (v + (s >>> 13) | 0) + (ai >>> 26) | 0, ai &= 67108863, l = Math.imul(st, It), s = Math.imul(st, _t), s = s + Math.imul(at, It) | 0, v = Math.imul(at, _t);\n            var ui = (M + l | 0) + ((s & 8191) << 13) | 0;\n            return M = (v + (s >>> 13) | 0) + (ui >>> 26) | 0, ui &= 67108863, x[0] = Me, x[1] = Ee, x[2] = Se, x[3] = Ne, x[4] = Ie, x[5] = Wr, x[6] = Xr, x[7] = Zr, x[8] = $r, x[9] = ti, x[10] = ei, x[11] = ri, x[12] = ii, x[13] = ni, x[14] = fi, x[15] = oi, x[16] = si, x[17] = ai, x[18] = ui, M !== 0 && (x[19] = M, c.length++), c;\n        };\n        Math.imul || (J = U);\n        function Bt(A, f, a) {\n            a.negative = f.negative ^ A.negative, a.length = A.length + f.length;\n            for(var c = 0, d = 0, g = 0; g < a.length - 1; g++){\n                var x = d;\n                d = 0;\n                for(var M = c & 67108863, l = Math.min(g, f.length - 1), s = Math.max(0, g - A.length + 1); s <= l; s++){\n                    var v = g - s, k = A.words[v] | 0, u = f.words[s] | 0, E = k * u, _ = E & 67108863;\n                    x = x + (E / 67108864 | 0) | 0, _ = _ + M | 0, M = _ & 67108863, x = x + (_ >>> 26) | 0, d += x >>> 26, x &= 67108863;\n                }\n                a.words[g] = M, c = x, x = d;\n            }\n            return c !== 0 ? a.words[g] = c : a.length--, a._strip();\n        }\n        function G(A, f, a) {\n            return Bt(A, f, a);\n        }\n        o.prototype.mulTo = function(f, a) {\n            var c, d = this.length + f.length;\n            return this.length === 10 && f.length === 10 ? c = J(this, f, a) : d < 63 ? c = U(this, f, a) : d < 1024 ? c = Bt(this, f, a) : c = G(this, f, a), c;\n        }, o.prototype.mul = function(f) {\n            var a = new o(null);\n            return a.words = new Array(this.length + f.length), this.mulTo(f, a);\n        }, o.prototype.mulf = function(f) {\n            var a = new o(null);\n            return a.words = new Array(this.length + f.length), G(this, f, a);\n        }, o.prototype.imul = function(f) {\n            return this.clone().mulTo(f, this);\n        }, o.prototype.imuln = function(f) {\n            var a = f < 0;\n            a && (f = -f), i(typeof f == \"number\"), i(f < 67108864);\n            for(var c = 0, d = 0; d < this.length; d++){\n                var g = (this.words[d] | 0) * f, x = (g & 67108863) + (c & 67108863);\n                c >>= 26, c += g / 67108864 | 0, c += x >>> 26, this.words[d] = x & 67108863;\n            }\n            return c !== 0 && (this.words[d] = c, this.length++), a ? this.ineg() : this;\n        }, o.prototype.muln = function(f) {\n            return this.clone().imuln(f);\n        }, o.prototype.sqr = function() {\n            return this.mul(this);\n        }, o.prototype.isqr = function() {\n            return this.imul(this.clone());\n        }, o.prototype.pow = function(f) {\n            var a = F(f);\n            if (a.length === 0) return new o(1);\n            for(var c = this, d = 0; d < a.length && a[d] === 0; d++, c = c.sqr());\n            if (++d < a.length) for(var g = c.sqr(); d < a.length; d++, g = g.sqr())a[d] !== 0 && (c = c.mul(g));\n            return c;\n        }, o.prototype.iushln = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = f % 26, c = (f - a) / 26, d = 67108863 >>> 26 - a << 26 - a, g;\n            if (a !== 0) {\n                var x = 0;\n                for(g = 0; g < this.length; g++){\n                    var M = this.words[g] & d, l = (this.words[g] | 0) - M << a;\n                    this.words[g] = l | x, x = M >>> 26 - a;\n                }\n                x && (this.words[g] = x, this.length++);\n            }\n            if (c !== 0) {\n                for(g = this.length - 1; g >= 0; g--)this.words[g + c] = this.words[g];\n                for(g = 0; g < c; g++)this.words[g] = 0;\n                this.length += c;\n            }\n            return this._strip();\n        }, o.prototype.ishln = function(f) {\n            return i(this.negative === 0), this.iushln(f);\n        }, o.prototype.iushrn = function(f, a, c) {\n            i(typeof f == \"number\" && f >= 0);\n            var d;\n            a ? d = (a - a % 26) / 26 : d = 0;\n            var g = f % 26, x = Math.min((f - g) / 26, this.length), M = 67108863 ^ 67108863 >>> g << g, l = c;\n            if (d -= x, d = Math.max(0, d), l) {\n                for(var s = 0; s < x; s++)l.words[s] = this.words[s];\n                l.length = x;\n            }\n            if (x !== 0) if (this.length > x) for(this.length -= x, s = 0; s < this.length; s++)this.words[s] = this.words[s + x];\n            else this.words[0] = 0, this.length = 1;\n            var v = 0;\n            for(s = this.length - 1; s >= 0 && (v !== 0 || s >= d); s--){\n                var k = this.words[s] | 0;\n                this.words[s] = v << 26 - g | k >>> g, v = k & M;\n            }\n            return l && v !== 0 && (l.words[l.length++] = v), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();\n        }, o.prototype.ishrn = function(f, a, c) {\n            return i(this.negative === 0), this.iushrn(f, a, c);\n        }, o.prototype.shln = function(f) {\n            return this.clone().ishln(f);\n        }, o.prototype.ushln = function(f) {\n            return this.clone().iushln(f);\n        }, o.prototype.shrn = function(f) {\n            return this.clone().ishrn(f);\n        }, o.prototype.ushrn = function(f) {\n            return this.clone().iushrn(f);\n        }, o.prototype.testn = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = f % 26, c = (f - a) / 26, d = 1 << a;\n            if (this.length <= c) return !1;\n            var g = this.words[c];\n            return !!(g & d);\n        }, o.prototype.imaskn = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = f % 26, c = (f - a) / 26;\n            if (i(this.negative === 0, \"imaskn works only with positive numbers\"), this.length <= c) return this;\n            if (a !== 0 && c++, this.length = Math.min(c, this.length), a !== 0) {\n                var d = 67108863 ^ 67108863 >>> a << a;\n                this.words[this.length - 1] &= d;\n            }\n            return this._strip();\n        }, o.prototype.maskn = function(f) {\n            return this.clone().imaskn(f);\n        }, o.prototype.iaddn = function(f) {\n            return i(typeof f == \"number\"), i(f < 67108864), f < 0 ? this.isubn(-f) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= f ? (this.words[0] = f - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(f), this.negative = 1, this) : this._iaddn(f);\n        }, o.prototype._iaddn = function(f) {\n            this.words[0] += f;\n            for(var a = 0; a < this.length && this.words[a] >= 67108864; a++)this.words[a] -= 67108864, a === this.length - 1 ? this.words[a + 1] = 1 : this.words[a + 1]++;\n            return this.length = Math.max(this.length, a + 1), this;\n        }, o.prototype.isubn = function(f) {\n            if (i(typeof f == \"number\"), i(f < 67108864), f < 0) return this.iaddn(-f);\n            if (this.negative !== 0) return this.negative = 0, this.iaddn(f), this.negative = 1, this;\n            if (this.words[0] -= f, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;\n            else for(var a = 0; a < this.length && this.words[a] < 0; a++)this.words[a] += 67108864, this.words[a + 1] -= 1;\n            return this._strip();\n        }, o.prototype.addn = function(f) {\n            return this.clone().iaddn(f);\n        }, o.prototype.subn = function(f) {\n            return this.clone().isubn(f);\n        }, o.prototype.iabs = function() {\n            return this.negative = 0, this;\n        }, o.prototype.abs = function() {\n            return this.clone().iabs();\n        }, o.prototype._ishlnsubmul = function(f, a, c) {\n            var d = f.length + c, g;\n            this._expand(d);\n            var x, M = 0;\n            for(g = 0; g < f.length; g++){\n                x = (this.words[g + c] | 0) + M;\n                var l = (f.words[g] | 0) * a;\n                x -= l & 67108863, M = (x >> 26) - (l / 67108864 | 0), this.words[g + c] = x & 67108863;\n            }\n            for(; g < this.length - c; g++)x = (this.words[g + c] | 0) + M, M = x >> 26, this.words[g + c] = x & 67108863;\n            if (M === 0) return this._strip();\n            for(i(M === -1), M = 0, g = 0; g < this.length; g++)x = -(this.words[g] | 0) + M, M = x >> 26, this.words[g] = x & 67108863;\n            return this.negative = 1, this._strip();\n        }, o.prototype._wordDiv = function(f, a) {\n            var c = this.length - f.length, d = this.clone(), g = f, x = g.words[g.length - 1] | 0, M = this._countBits(x);\n            c = 26 - M, c !== 0 && (g = g.ushln(c), d.iushln(c), x = g.words[g.length - 1] | 0);\n            var l = d.length - g.length, s;\n            if (a !== \"mod\") {\n                s = new o(null), s.length = l + 1, s.words = new Array(s.length);\n                for(var v = 0; v < s.length; v++)s.words[v] = 0;\n            }\n            var k = d.clone()._ishlnsubmul(g, 1, l);\n            k.negative === 0 && (d = k, s && (s.words[l] = 1));\n            for(var u = l - 1; u >= 0; u--){\n                var E = (d.words[g.length + u] | 0) * 67108864 + (d.words[g.length + u - 1] | 0);\n                for(E = Math.min(E / x | 0, 67108863), d._ishlnsubmul(g, E, u); d.negative !== 0;)E--, d.negative = 0, d._ishlnsubmul(g, 1, u), d.isZero() || (d.negative ^= 1);\n                s && (s.words[u] = E);\n            }\n            return s && s._strip(), d._strip(), a !== \"div\" && c !== 0 && d.iushrn(c), {\n                div: s || null,\n                mod: d\n            };\n        }, o.prototype.divmod = function(f, a, c) {\n            if (i(!f.isZero()), this.isZero()) return {\n                div: new o(0),\n                mod: new o(0)\n            };\n            var d, g, x;\n            return this.negative !== 0 && f.negative === 0 ? (x = this.neg().divmod(f, a), a !== \"mod\" && (d = x.div.neg()), a !== \"div\" && (g = x.mod.neg(), c && g.negative !== 0 && g.iadd(f)), {\n                div: d,\n                mod: g\n            }) : this.negative === 0 && f.negative !== 0 ? (x = this.divmod(f.neg(), a), a !== \"mod\" && (d = x.div.neg()), {\n                div: d,\n                mod: x.mod\n            }) : this.negative & f.negative ? (x = this.neg().divmod(f.neg(), a), a !== \"div\" && (g = x.mod.neg(), c && g.negative !== 0 && g.isub(f)), {\n                div: x.div,\n                mod: g\n            }) : f.length > this.length || this.cmp(f) < 0 ? {\n                div: new o(0),\n                mod: this\n            } : f.length === 1 ? a === \"div\" ? {\n                div: this.divn(f.words[0]),\n                mod: null\n            } : a === \"mod\" ? {\n                div: null,\n                mod: new o(this.modrn(f.words[0]))\n            } : {\n                div: this.divn(f.words[0]),\n                mod: new o(this.modrn(f.words[0]))\n            } : this._wordDiv(f, a);\n        }, o.prototype.div = function(f) {\n            return this.divmod(f, \"div\", !1).div;\n        }, o.prototype.mod = function(f) {\n            return this.divmod(f, \"mod\", !1).mod;\n        }, o.prototype.umod = function(f) {\n            return this.divmod(f, \"mod\", !0).mod;\n        }, o.prototype.divRound = function(f) {\n            var a = this.divmod(f);\n            if (a.mod.isZero()) return a.div;\n            var c = a.div.negative !== 0 ? a.mod.isub(f) : a.mod, d = f.ushrn(1), g = f.andln(1), x = c.cmp(d);\n            return x < 0 || g === 1 && x === 0 ? a.div : a.div.negative !== 0 ? a.div.isubn(1) : a.div.iaddn(1);\n        }, o.prototype.modrn = function(f) {\n            var a = f < 0;\n            a && (f = -f), i(f <= 67108863);\n            for(var c = (1 << 26) % f, d = 0, g = this.length - 1; g >= 0; g--)d = (c * d + (this.words[g] | 0)) % f;\n            return a ? -d : d;\n        }, o.prototype.modn = function(f) {\n            return this.modrn(f);\n        }, o.prototype.idivn = function(f) {\n            var a = f < 0;\n            a && (f = -f), i(f <= 67108863);\n            for(var c = 0, d = this.length - 1; d >= 0; d--){\n                var g = (this.words[d] | 0) + c * 67108864;\n                this.words[d] = g / f | 0, c = g % f;\n            }\n            return this._strip(), a ? this.ineg() : this;\n        }, o.prototype.divn = function(f) {\n            return this.clone().idivn(f);\n        }, o.prototype.egcd = function(f) {\n            i(f.negative === 0), i(!f.isZero());\n            var a = this, c = f.clone();\n            a.negative !== 0 ? a = a.umod(f) : a = a.clone();\n            for(var d = new o(1), g = new o(0), x = new o(0), M = new o(1), l = 0; a.isEven() && c.isEven();)a.iushrn(1), c.iushrn(1), ++l;\n            for(var s = c.clone(), v = a.clone(); !a.isZero();){\n                for(var k = 0, u = 1; !(a.words[0] & u) && k < 26; ++k, u <<= 1);\n                if (k > 0) for(a.iushrn(k); k-- > 0;)(d.isOdd() || g.isOdd()) && (d.iadd(s), g.isub(v)), d.iushrn(1), g.iushrn(1);\n                for(var E = 0, _ = 1; !(c.words[0] & _) && E < 26; ++E, _ <<= 1);\n                if (E > 0) for(c.iushrn(E); E-- > 0;)(x.isOdd() || M.isOdd()) && (x.iadd(s), M.isub(v)), x.iushrn(1), M.iushrn(1);\n                a.cmp(c) >= 0 ? (a.isub(c), d.isub(x), g.isub(M)) : (c.isub(a), x.isub(d), M.isub(g));\n            }\n            return {\n                a: x,\n                b: M,\n                gcd: c.iushln(l)\n            };\n        }, o.prototype._invmp = function(f) {\n            i(f.negative === 0), i(!f.isZero());\n            var a = this, c = f.clone();\n            a.negative !== 0 ? a = a.umod(f) : a = a.clone();\n            for(var d = new o(1), g = new o(0), x = c.clone(); a.cmpn(1) > 0 && c.cmpn(1) > 0;){\n                for(var M = 0, l = 1; !(a.words[0] & l) && M < 26; ++M, l <<= 1);\n                if (M > 0) for(a.iushrn(M); M-- > 0;)d.isOdd() && d.iadd(x), d.iushrn(1);\n                for(var s = 0, v = 1; !(c.words[0] & v) && s < 26; ++s, v <<= 1);\n                if (s > 0) for(c.iushrn(s); s-- > 0;)g.isOdd() && g.iadd(x), g.iushrn(1);\n                a.cmp(c) >= 0 ? (a.isub(c), d.isub(g)) : (c.isub(a), g.isub(d));\n            }\n            var k;\n            return a.cmpn(1) === 0 ? k = d : k = g, k.cmpn(0) < 0 && k.iadd(f), k;\n        }, o.prototype.gcd = function(f) {\n            if (this.isZero()) return f.abs();\n            if (f.isZero()) return this.abs();\n            var a = this.clone(), c = f.clone();\n            a.negative = 0, c.negative = 0;\n            for(var d = 0; a.isEven() && c.isEven(); d++)a.iushrn(1), c.iushrn(1);\n            do {\n                for(; a.isEven();)a.iushrn(1);\n                for(; c.isEven();)c.iushrn(1);\n                var g = a.cmp(c);\n                if (g < 0) {\n                    var x = a;\n                    a = c, c = x;\n                } else if (g === 0 || c.cmpn(1) === 0) break;\n                a.isub(c);\n            }while (!0);\n            return c.iushln(d);\n        }, o.prototype.invm = function(f) {\n            return this.egcd(f).a.umod(f);\n        }, o.prototype.isEven = function() {\n            return (this.words[0] & 1) === 0;\n        }, o.prototype.isOdd = function() {\n            return (this.words[0] & 1) === 1;\n        }, o.prototype.andln = function(f) {\n            return this.words[0] & f;\n        }, o.prototype.bincn = function(f) {\n            i(typeof f == \"number\");\n            var a = f % 26, c = (f - a) / 26, d = 1 << a;\n            if (this.length <= c) return this._expand(c + 1), this.words[c] |= d, this;\n            for(var g = d, x = c; g !== 0 && x < this.length; x++){\n                var M = this.words[x] | 0;\n                M += g, g = M >>> 26, M &= 67108863, this.words[x] = M;\n            }\n            return g !== 0 && (this.words[x] = g, this.length++), this;\n        }, o.prototype.isZero = function() {\n            return this.length === 1 && this.words[0] === 0;\n        }, o.prototype.cmpn = function(f) {\n            var a = f < 0;\n            if (this.negative !== 0 && !a) return -1;\n            if (this.negative === 0 && a) return 1;\n            this._strip();\n            var c;\n            if (this.length > 1) c = 1;\n            else {\n                a && (f = -f), i(f <= 67108863, \"Number is too big\");\n                var d = this.words[0] | 0;\n                c = d === f ? 0 : d < f ? -1 : 1;\n            }\n            return this.negative !== 0 ? -c | 0 : c;\n        }, o.prototype.cmp = function(f) {\n            if (this.negative !== 0 && f.negative === 0) return -1;\n            if (this.negative === 0 && f.negative !== 0) return 1;\n            var a = this.ucmp(f);\n            return this.negative !== 0 ? -a | 0 : a;\n        }, o.prototype.ucmp = function(f) {\n            if (this.length > f.length) return 1;\n            if (this.length < f.length) return -1;\n            for(var a = 0, c = this.length - 1; c >= 0; c--){\n                var d = this.words[c] | 0, g = f.words[c] | 0;\n                if (d !== g) {\n                    d < g ? a = -1 : d > g && (a = 1);\n                    break;\n                }\n            }\n            return a;\n        }, o.prototype.gtn = function(f) {\n            return this.cmpn(f) === 1;\n        }, o.prototype.gt = function(f) {\n            return this.cmp(f) === 1;\n        }, o.prototype.gten = function(f) {\n            return this.cmpn(f) >= 0;\n        }, o.prototype.gte = function(f) {\n            return this.cmp(f) >= 0;\n        }, o.prototype.ltn = function(f) {\n            return this.cmpn(f) === -1;\n        }, o.prototype.lt = function(f) {\n            return this.cmp(f) === -1;\n        }, o.prototype.lten = function(f) {\n            return this.cmpn(f) <= 0;\n        }, o.prototype.lte = function(f) {\n            return this.cmp(f) <= 0;\n        }, o.prototype.eqn = function(f) {\n            return this.cmpn(f) === 0;\n        }, o.prototype.eq = function(f) {\n            return this.cmp(f) === 0;\n        }, o.red = function(f) {\n            return new Y(f);\n        }, o.prototype.toRed = function(f) {\n            return i(!this.red, \"Already a number in reduction context\"), i(this.negative === 0, \"red works only with positives\"), f.convertTo(this)._forceRed(f);\n        }, o.prototype.fromRed = function() {\n            return i(this.red, \"fromRed works only with numbers in reduction context\"), this.red.convertFrom(this);\n        }, o.prototype._forceRed = function(f) {\n            return this.red = f, this;\n        }, o.prototype.forceRed = function(f) {\n            return i(!this.red, \"Already a number in reduction context\"), this._forceRed(f);\n        }, o.prototype.redAdd = function(f) {\n            return i(this.red, \"redAdd works only with red numbers\"), this.red.add(this, f);\n        }, o.prototype.redIAdd = function(f) {\n            return i(this.red, \"redIAdd works only with red numbers\"), this.red.iadd(this, f);\n        }, o.prototype.redSub = function(f) {\n            return i(this.red, \"redSub works only with red numbers\"), this.red.sub(this, f);\n        }, o.prototype.redISub = function(f) {\n            return i(this.red, \"redISub works only with red numbers\"), this.red.isub(this, f);\n        }, o.prototype.redShl = function(f) {\n            return i(this.red, \"redShl works only with red numbers\"), this.red.shl(this, f);\n        }, o.prototype.redMul = function(f) {\n            return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, f), this.red.mul(this, f);\n        }, o.prototype.redIMul = function(f) {\n            return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, f), this.red.imul(this, f);\n        }, o.prototype.redSqr = function() {\n            return i(this.red, \"redSqr works only with red numbers\"), this.red._verify1(this), this.red.sqr(this);\n        }, o.prototype.redISqr = function() {\n            return i(this.red, \"redISqr works only with red numbers\"), this.red._verify1(this), this.red.isqr(this);\n        }, o.prototype.redSqrt = function() {\n            return i(this.red, \"redSqrt works only with red numbers\"), this.red._verify1(this), this.red.sqrt(this);\n        }, o.prototype.redInvm = function() {\n            return i(this.red, \"redInvm works only with red numbers\"), this.red._verify1(this), this.red.invm(this);\n        }, o.prototype.redNeg = function() {\n            return i(this.red, \"redNeg works only with red numbers\"), this.red._verify1(this), this.red.neg(this);\n        }, o.prototype.redPow = function(f) {\n            return i(this.red && !f.red, \"redPow(normalNum)\"), this.red._verify1(this), this.red.pow(this, f);\n        };\n        var H = {\n            k256: null,\n            p224: null,\n            p192: null,\n            p25519: null\n        };\n        function z(A, f) {\n            this.name = A, this.p = new o(f, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();\n        }\n        z.prototype._tmp = function() {\n            var f = new o(null);\n            return f.words = new Array(Math.ceil(this.n / 13)), f;\n        }, z.prototype.ireduce = function(f) {\n            var a = f, c;\n            do this.split(a, this.tmp), a = this.imulK(a), a = a.iadd(this.tmp), c = a.bitLength();\n            while (c > this.n);\n            var d = c < this.n ? -1 : a.ucmp(this.p);\n            return d === 0 ? (a.words[0] = 0, a.length = 1) : d > 0 ? a.isub(this.p) : a.strip !== void 0 ? a.strip() : a._strip(), a;\n        }, z.prototype.split = function(f, a) {\n            f.iushrn(this.n, 0, a);\n        }, z.prototype.imulK = function(f) {\n            return f.imul(this.k);\n        };\n        function Pt() {\n            z.call(this, \"k256\", \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\");\n        }\n        n(Pt, z), Pt.prototype.split = function(f, a) {\n            for(var c = 4194303, d = Math.min(f.length, 9), g = 0; g < d; g++)a.words[g] = f.words[g];\n            if (a.length = d, f.length <= 9) {\n                f.words[0] = 0, f.length = 1;\n                return;\n            }\n            var x = f.words[9];\n            for(a.words[a.length++] = x & c, g = 10; g < f.length; g++){\n                var M = f.words[g] | 0;\n                f.words[g - 10] = (M & c) << 4 | x >>> 22, x = M;\n            }\n            x >>>= 22, f.words[g - 10] = x, x === 0 && f.length > 10 ? f.length -= 10 : f.length -= 9;\n        }, Pt.prototype.imulK = function(f) {\n            f.words[f.length] = 0, f.words[f.length + 1] = 0, f.length += 2;\n            for(var a = 0, c = 0; c < f.length; c++){\n                var d = f.words[c] | 0;\n                a += d * 977, f.words[c] = a & 67108863, a = d * 64 + (a / 67108864 | 0);\n            }\n            return f.words[f.length - 1] === 0 && (f.length--, f.words[f.length - 1] === 0 && f.length--), f;\n        };\n        function W() {\n            z.call(this, \"p224\", \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\");\n        }\n        n(W, z);\n        function Rt() {\n            z.call(this, \"p192\", \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\");\n        }\n        n(Rt, z);\n        function Yt() {\n            z.call(this, \"25519\", \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\");\n        }\n        n(Yt, z), Yt.prototype.imulK = function(f) {\n            for(var a = 0, c = 0; c < f.length; c++){\n                var d = (f.words[c] | 0) * 19 + a, g = d & 67108863;\n                d >>>= 26, f.words[c] = g, a = d;\n            }\n            return a !== 0 && (f.words[f.length++] = a), f;\n        }, o._prime = function(f) {\n            if (H[f]) return H[f];\n            var a;\n            if (f === \"k256\") a = new Pt;\n            else if (f === \"p224\") a = new W;\n            else if (f === \"p192\") a = new Rt;\n            else if (f === \"p25519\") a = new Yt;\n            else throw new Error(\"Unknown prime \" + f);\n            return H[f] = a, a;\n        };\n        function Y(A) {\n            if (typeof A == \"string\") {\n                var f = o._prime(A);\n                this.m = f.p, this.prime = f;\n            } else i(A.gtn(1), \"modulus must be greater than 1\"), this.m = A, this.prime = null;\n        }\n        Y.prototype._verify1 = function(f) {\n            i(f.negative === 0, \"red works only with positives\"), i(f.red, \"red works only with red numbers\");\n        }, Y.prototype._verify2 = function(f, a) {\n            i((f.negative | a.negative) === 0, \"red works only with positives\"), i(f.red && f.red === a.red, \"red works only with red numbers\");\n        }, Y.prototype.imod = function(f) {\n            return this.prime ? this.prime.ireduce(f)._forceRed(this) : (w(f, f.umod(this.m)._forceRed(this)), f);\n        }, Y.prototype.neg = function(f) {\n            return f.isZero() ? f.clone() : this.m.sub(f)._forceRed(this);\n        }, Y.prototype.add = function(f, a) {\n            this._verify2(f, a);\n            var c = f.add(a);\n            return c.cmp(this.m) >= 0 && c.isub(this.m), c._forceRed(this);\n        }, Y.prototype.iadd = function(f, a) {\n            this._verify2(f, a);\n            var c = f.iadd(a);\n            return c.cmp(this.m) >= 0 && c.isub(this.m), c;\n        }, Y.prototype.sub = function(f, a) {\n            this._verify2(f, a);\n            var c = f.sub(a);\n            return c.cmpn(0) < 0 && c.iadd(this.m), c._forceRed(this);\n        }, Y.prototype.isub = function(f, a) {\n            this._verify2(f, a);\n            var c = f.isub(a);\n            return c.cmpn(0) < 0 && c.iadd(this.m), c;\n        }, Y.prototype.shl = function(f, a) {\n            return this._verify1(f), this.imod(f.ushln(a));\n        }, Y.prototype.imul = function(f, a) {\n            return this._verify2(f, a), this.imod(f.imul(a));\n        }, Y.prototype.mul = function(f, a) {\n            return this._verify2(f, a), this.imod(f.mul(a));\n        }, Y.prototype.isqr = function(f) {\n            return this.imul(f, f.clone());\n        }, Y.prototype.sqr = function(f) {\n            return this.mul(f, f);\n        }, Y.prototype.sqrt = function(f) {\n            if (f.isZero()) return f.clone();\n            var a = this.m.andln(3);\n            if (i(a % 2 === 1), a === 3) {\n                var c = this.m.add(new o(1)).iushrn(2);\n                return this.pow(f, c);\n            }\n            for(var d = this.m.subn(1), g = 0; !d.isZero() && d.andln(1) === 0;)g++, d.iushrn(1);\n            i(!d.isZero());\n            var x = new o(1).toRed(this), M = x.redNeg(), l = this.m.subn(1).iushrn(1), s = this.m.bitLength();\n            for(s = new o(2 * s * s).toRed(this); this.pow(s, l).cmp(M) !== 0;)s.redIAdd(M);\n            for(var v = this.pow(s, d), k = this.pow(f, d.addn(1).iushrn(1)), u = this.pow(f, d), E = g; u.cmp(x) !== 0;){\n                for(var _ = u, B = 0; _.cmp(x) !== 0; B++)_ = _.redSqr();\n                i(B < E);\n                var R = this.pow(v, new o(1).iushln(E - B - 1));\n                k = k.redMul(R), v = R.redSqr(), u = u.redMul(v), E = B;\n            }\n            return k;\n        }, Y.prototype.invm = function(f) {\n            var a = f._invmp(this.m);\n            return a.negative !== 0 ? (a.negative = 0, this.imod(a).redNeg()) : this.imod(a);\n        }, Y.prototype.pow = function(f, a) {\n            if (a.isZero()) return new o(1).toRed(this);\n            if (a.cmpn(1) === 0) return f.clone();\n            var c = 4, d = new Array(1 << c);\n            d[0] = new o(1).toRed(this), d[1] = f;\n            for(var g = 2; g < d.length; g++)d[g] = this.mul(d[g - 1], f);\n            var x = d[0], M = 0, l = 0, s = a.bitLength() % 26;\n            for(s === 0 && (s = 26), g = a.length - 1; g >= 0; g--){\n                for(var v = a.words[g], k = s - 1; k >= 0; k--){\n                    var u = v >> k & 1;\n                    if (x !== d[0] && (x = this.sqr(x)), u === 0 && M === 0) {\n                        l = 0;\n                        continue;\n                    }\n                    M <<= 1, M |= u, l++, !(l !== c && (g !== 0 || k !== 0)) && (x = this.mul(x, d[M]), l = 0, M = 0);\n                }\n                s = 26;\n            }\n            return x;\n        }, Y.prototype.convertTo = function(f) {\n            var a = f.umod(this.m);\n            return a === f ? a.clone() : a;\n        }, Y.prototype.convertFrom = function(f) {\n            var a = f.clone();\n            return a.red = null, a;\n        }, o.mont = function(f) {\n            return new Vt(f);\n        };\n        function Vt(A) {\n            Y.call(this, A), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);\n        }\n        n(Vt, Y), Vt.prototype.convertTo = function(f) {\n            return this.imod(f.ushln(this.shift));\n        }, Vt.prototype.convertFrom = function(f) {\n            var a = this.imod(f.mul(this.rinv));\n            return a.red = null, a;\n        }, Vt.prototype.imul = function(f, a) {\n            if (f.isZero() || a.isZero()) return f.words[0] = 0, f.length = 1, f;\n            var c = f.imul(a), d = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), g = c.isub(d).iushrn(this.shift), x = g;\n            return g.cmp(this.m) >= 0 ? x = g.isub(this.m) : g.cmpn(0) < 0 && (x = g.iadd(this.m)), x._forceRed(this);\n        }, Vt.prototype.mul = function(f, a) {\n            if (f.isZero() || a.isZero()) return new o(0)._forceRed(this);\n            var c = f.mul(a), d = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), g = c.isub(d).iushrn(this.shift), x = g;\n            return g.cmp(this.m) >= 0 ? x = g.isub(this.m) : g.cmpn(0) < 0 && (x = g.iadd(this.m)), x._forceRed(this);\n        }, Vt.prototype.invm = function(f) {\n            var a = this.imod(f._invmp(this.m).mul(this.r2));\n            return a._forceRed(this);\n        };\n    })(e, On);\n})(Ln);\nvar K = Ln.exports;\nconst jn = \"bignumber/5.7.0\";\nvar Rr = K.BN;\nconst Ae = new L(jn), wi = {}, Qn = 9007199254740991;\nfunction C0(e) {\n    return e != null && (V.isBigNumber(e) || typeof e == \"number\" && e % 1 === 0 || typeof e == \"string\" && !!e.match(/^-?[0-9]+$/) || Qt(e) || typeof e == \"bigint\" || ir(e));\n}\nlet Jn = !1;\nclass V {\n    constructor(t, r){\n        t !== wi && Ae.throwError(\"cannot call constructor directly; use BigNumber.from\", L.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new (BigNumber)\"\n        }), this._hex = r, this._isBigNumber = !0, Object.freeze(this);\n    }\n    fromTwos(t) {\n        return Lt(j(this).fromTwos(t));\n    }\n    toTwos(t) {\n        return Lt(j(this).toTwos(t));\n    }\n    abs() {\n        return this._hex[0] === \"-\" ? V.from(this._hex.substring(1)) : this;\n    }\n    add(t) {\n        return Lt(j(this).add(j(t)));\n    }\n    sub(t) {\n        return Lt(j(this).sub(j(t)));\n    }\n    div(t) {\n        return V.from(t).isZero() && Wt(\"division-by-zero\", \"div\"), Lt(j(this).div(j(t)));\n    }\n    mul(t) {\n        return Lt(j(this).mul(j(t)));\n    }\n    mod(t) {\n        const r = j(t);\n        return r.isNeg() && Wt(\"division-by-zero\", \"mod\"), Lt(j(this).umod(r));\n    }\n    pow(t) {\n        const r = j(t);\n        return r.isNeg() && Wt(\"negative-power\", \"pow\"), Lt(j(this).pow(r));\n    }\n    and(t) {\n        const r = j(t);\n        return (this.isNegative() || r.isNeg()) && Wt(\"unbound-bitwise-result\", \"and\"), Lt(j(this).and(r));\n    }\n    or(t) {\n        const r = j(t);\n        return (this.isNegative() || r.isNeg()) && Wt(\"unbound-bitwise-result\", \"or\"), Lt(j(this).or(r));\n    }\n    xor(t) {\n        const r = j(t);\n        return (this.isNegative() || r.isNeg()) && Wt(\"unbound-bitwise-result\", \"xor\"), Lt(j(this).xor(r));\n    }\n    mask(t) {\n        return (this.isNegative() || t < 0) && Wt(\"negative-width\", \"mask\"), Lt(j(this).maskn(t));\n    }\n    shl(t) {\n        return (this.isNegative() || t < 0) && Wt(\"negative-width\", \"shl\"), Lt(j(this).shln(t));\n    }\n    shr(t) {\n        return (this.isNegative() || t < 0) && Wt(\"negative-width\", \"shr\"), Lt(j(this).shrn(t));\n    }\n    eq(t) {\n        return j(this).eq(j(t));\n    }\n    lt(t) {\n        return j(this).lt(j(t));\n    }\n    lte(t) {\n        return j(this).lte(j(t));\n    }\n    gt(t) {\n        return j(this).gt(j(t));\n    }\n    gte(t) {\n        return j(this).gte(j(t));\n    }\n    isNegative() {\n        return this._hex[0] === \"-\";\n    }\n    isZero() {\n        return j(this).isZero();\n    }\n    toNumber() {\n        try {\n            return j(this).toNumber();\n        } catch  {\n            Wt(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        } catch  {}\n        return Ae.throwError(\"this platform does not support BigInt\", L.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        return arguments.length > 0 && (arguments[0] === 10 ? Jn || (Jn = !0, Ae.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\")) : arguments[0] === 16 ? Ae.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", L.errors.UNEXPECTED_ARGUMENT, {}) : Ae.throwError(\"BigNumber.toString does not accept parameters\", L.errors.UNEXPECTED_ARGUMENT, {})), j(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(t) {\n        return {\n            type: \"BigNumber\",\n            hex: this.toHexString()\n        };\n    }\n    static from(t) {\n        if (t instanceof V) return t;\n        if (typeof t == \"string\") return t.match(/^-?0x[0-9a-f]+$/i) ? new V(wi, vr(t)) : t.match(/^-?[0-9]+$/) ? new V(wi, vr(new Rr(t))) : Ae.throwArgumentError(\"invalid BigNumber string\", \"value\", t);\n        if (typeof t == \"number\") return t % 1 && Wt(\"underflow\", \"BigNumber.from\", t), (t >= Qn || t <= -Qn) && Wt(\"overflow\", \"BigNumber.from\", t), V.from(String(t));\n        const r = t;\n        if (typeof r == \"bigint\") return V.from(r.toString());\n        if (ir(r)) return V.from(Kt(r));\n        if (r) if (r.toHexString) {\n            const i = r.toHexString();\n            if (typeof i == \"string\") return V.from(i);\n        } else {\n            let i = r._hex;\n            if (i == null && r.type === \"BigNumber\" && (i = r.hex), typeof i == \"string\" && (Qt(i) || i[0] === \"-\" && Qt(i.substring(1)))) return V.from(i);\n        }\n        return Ae.throwArgumentError(\"invalid BigNumber value\", \"value\", t);\n    }\n    static isBigNumber(t) {\n        return !!(t && t._isBigNumber);\n    }\n}\nfunction vr(e) {\n    if (typeof e != \"string\") return vr(e.toString(16));\n    if (e[0] === \"-\") return e = e.substring(1), e[0] === \"-\" && Ae.throwArgumentError(\"invalid hex\", \"value\", e), e = vr(e), e === \"0x00\" ? e : \"-\" + e;\n    if (e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), e === \"0x\") return \"0x00\";\n    for(e.length % 2 && (e = \"0x0\" + e.substring(2)); e.length > 4 && e.substring(0, 4) === \"0x00\";)e = \"0x\" + e.substring(4);\n    return e;\n}\nfunction Lt(e) {\n    return V.from(vr(e));\n}\nfunction j(e) {\n    const t = V.from(e).toHexString();\n    return t[0] === \"-\" ? new Rr(\"-\" + t.substring(3), 16) : new Rr(t.substring(2), 16);\n}\nfunction Wt(e, t, r) {\n    const i = {\n        fault: e,\n        operation: t\n    };\n    return r != null && (i.value = r), Ae.throwError(e, L.errors.NUMERIC_FAULT, i);\n}\nfunction R0(e) {\n    return new Rr(e, 36).toString(16);\n}\nconst Ht = new L(jn), mr = {}, Gn = V.from(0), Yn = V.from(-1);\nfunction Vn(e, t, r, i) {\n    const n = {\n        fault: t,\n        operation: r\n    };\n    return i !== void 0 && (n.value = i), Ht.throwError(e, L.errors.NUMERIC_FAULT, n);\n}\nlet gr = \"0\";\nfor(; gr.length < 256;)gr += gr;\nfunction xi(e) {\n    if (typeof e != \"number\") try {\n        e = V.from(e).toNumber();\n    } catch  {}\n    return typeof e == \"number\" && e >= 0 && e <= 256 && !(e % 1) ? \"1\" + gr.substring(0, e) : Ht.throwArgumentError(\"invalid decimal size\", \"decimals\", e);\n}\nfunction Mi(e, t) {\n    t == null && (t = 0);\n    const r = xi(t);\n    e = V.from(e);\n    const i = e.lt(Gn);\n    i && (e = e.mul(Yn));\n    let n = e.mod(r).toString();\n    for(; n.length < r.length - 1;)n = \"0\" + n;\n    n = n.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const o = e.div(r).toString();\n    return r.length === 1 ? e = o : e = o + \".\" + n, i && (e = \"-\" + e), e;\n}\nfunction be(e, t) {\n    t == null && (t = 0);\n    const r = xi(t);\n    (typeof e != \"string\" || !e.match(/^-?[0-9.]+$/)) && Ht.throwArgumentError(\"invalid decimal value\", \"value\", e);\n    const i = e.substring(0, 1) === \"-\";\n    i && (e = e.substring(1)), e === \".\" && Ht.throwArgumentError(\"missing value\", \"value\", e);\n    const n = e.split(\".\");\n    n.length > 2 && Ht.throwArgumentError(\"too many decimal points\", \"value\", e);\n    let o = n[0], h = n[1];\n    for(o || (o = \"0\"), h || (h = \"0\"); h[h.length - 1] === \"0\";)h = h.substring(0, h.length - 1);\n    for(h.length > r.length - 1 && Vn(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\"), h === \"\" && (h = \"0\"); h.length < r.length - 1;)h += \"0\";\n    const p = V.from(o), b = V.from(h);\n    let m = p.mul(r).add(b);\n    return i && (m = m.mul(Yn)), m;\n}\nclass dr {\n    constructor(t, r, i, n){\n        t !== mr && Ht.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", L.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new FixedFormat\"\n        }), this.signed = r, this.width = i, this.decimals = n, this.name = (r ? \"\" : \"u\") + \"fixed\" + String(i) + \"x\" + String(n), this._multiplier = xi(n), Object.freeze(this);\n    }\n    static from(t) {\n        if (t instanceof dr) return t;\n        typeof t == \"number\" && (t = `fixed128x${t}`);\n        let r = !0, i = 128, n = 18;\n        if (typeof t == \"string\") {\n            if (t !== \"fixed\") if (t === \"ufixed\") r = !1;\n            else {\n                const o = t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                o || Ht.throwArgumentError(\"invalid fixed format\", \"format\", t), r = o[1] !== \"u\", i = parseInt(o[2]), n = parseInt(o[3]);\n            }\n        } else if (t) {\n            const o = (h, p, b)=>t[h] == null ? b : (typeof t[h] !== p && Ht.throwArgumentError(\"invalid fixed format (\" + h + \" not \" + p + \")\", \"format.\" + h, t[h]), t[h]);\n            r = o(\"signed\", \"boolean\", r), i = o(\"width\", \"number\", i), n = o(\"decimals\", \"number\", n);\n        }\n        return i % 8 && Ht.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", i), n > 80 && Ht.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", n), new dr(mr, r, i, n);\n    }\n}\nclass Ut {\n    constructor(t, r, i, n){\n        t !== mr && Ht.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", L.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new FixedFormat\"\n        }), this.format = n, this._hex = r, this._value = i, this._isFixedNumber = !0, Object.freeze(this);\n    }\n    _checkFormat(t) {\n        this.format.name !== t.format.name && Ht.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", t);\n    }\n    addUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.add(i), this.format.decimals, this.format);\n    }\n    subUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.sub(i), this.format.decimals, this.format);\n    }\n    mulUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.mul(i).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.mul(this.format._multiplier).div(i), this.format.decimals, this.format);\n    }\n    floor() {\n        const t = this.toString().split(\".\");\n        t.length === 1 && t.push(\"0\");\n        let r = Ut.from(t[0], this.format);\n        const i = !t[1].match(/^(0*)$/);\n        return this.isNegative() && i && (r = r.subUnsafe(Wn.toFormat(r.format))), r;\n    }\n    ceiling() {\n        const t = this.toString().split(\".\");\n        t.length === 1 && t.push(\"0\");\n        let r = Ut.from(t[0], this.format);\n        const i = !t[1].match(/^(0*)$/);\n        return !this.isNegative() && i && (r = r.addUnsafe(Wn.toFormat(r.format))), r;\n    }\n    round(t) {\n        t == null && (t = 0);\n        const r = this.toString().split(\".\");\n        if (r.length === 1 && r.push(\"0\"), (t < 0 || t > 80 || t % 1) && Ht.throwArgumentError(\"invalid decimal count\", \"decimals\", t), r[1].length <= t) return this;\n        const i = Ut.from(\"1\" + gr.substring(0, t), this.format), n = O0.toFormat(this.format);\n        return this.mulUnsafe(i).addUnsafe(n).floor().divUnsafe(i);\n    }\n    isZero() {\n        return this._value === \"0.0\" || this._value === \"0\";\n    }\n    isNegative() {\n        return this._value[0] === \"-\";\n    }\n    toString() {\n        return this._value;\n    }\n    toHexString(t) {\n        if (t == null) return this._hex;\n        t % 8 && Ht.throwArgumentError(\"invalid byte width\", \"width\", t);\n        const r = V.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();\n        return oe(r, t / 8);\n    }\n    toUnsafeFloat() {\n        return parseFloat(this.toString());\n    }\n    toFormat(t) {\n        return Ut.fromString(this._value, t);\n    }\n    static fromValue(t, r, i) {\n        return i == null && r != null && !C0(r) && (i = r, r = null), r == null && (r = 0), i == null && (i = \"fixed\"), Ut.fromString(Mi(t, r), dr.from(i));\n    }\n    static fromString(t, r) {\n        r == null && (r = \"fixed\");\n        const i = dr.from(r), n = be(t, i.decimals);\n        !i.signed && n.lt(Gn) && Vn(\"unsigned value cannot be negative\", \"overflow\", \"value\", t);\n        let o = null;\n        i.signed ? o = n.toTwos(i.width).toHexString() : (o = n.toHexString(), o = oe(o, i.width / 8));\n        const h = Mi(n, i.decimals);\n        return new Ut(mr, o, h, i);\n    }\n    static fromBytes(t, r) {\n        r == null && (r = \"fixed\");\n        const i = dr.from(r);\n        if (Ot(t).length > i.width / 8) throw new Error(\"overflow\");\n        let n = V.from(t);\n        i.signed && (n = n.fromTwos(i.width));\n        const o = n.toTwos((i.signed ? 0 : 1) + i.width).toHexString(), h = Mi(n, i.decimals);\n        return new Ut(mr, o, h, i);\n    }\n    static from(t, r) {\n        if (typeof t == \"string\") return Ut.fromString(t, r);\n        if (ir(t)) return Ut.fromBytes(t, r);\n        try {\n            return Ut.fromValue(t, 0, r);\n        } catch (i) {\n            if (i.code !== L.errors.INVALID_ARGUMENT) throw i;\n        }\n        return Ht.throwArgumentError(\"invalid FixedNumber value\", \"value\", t);\n    }\n    static isFixedNumber(t) {\n        return !!(t && t._isFixedNumber);\n    }\n}\nconst Wn = Ut.from(1), O0 = Ut.from(\"0.5\"), P0 = \"strings/5.7.0\", Xn = new L(P0);\nvar Or;\n(function(e) {\n    e.current = \"\", e.NFC = \"NFC\", e.NFD = \"NFD\", e.NFKC = \"NFKC\", e.NFKD = \"NFKD\";\n})(Or || (Or = {}));\nvar nr;\n(function(e) {\n    e.UNEXPECTED_CONTINUE = \"unexpected continuation byte\", e.BAD_PREFIX = \"bad codepoint prefix\", e.OVERRUN = \"string overrun\", e.MISSING_CONTINUE = \"missing continuation byte\", e.OUT_OF_RANGE = \"out of UTF-8 range\", e.UTF16_SURROGATE = \"UTF-16 surrogate\", e.OVERLONG = \"overlong representation\";\n})(nr || (nr = {}));\nfunction D0(e, t, r, i, n) {\n    return Xn.throwArgumentError(`invalid codepoint at offset ${t}; ${e}`, \"bytes\", r);\n}\nfunction Zn(e, t, r, i, n) {\n    if (e === nr.BAD_PREFIX || e === nr.UNEXPECTED_CONTINUE) {\n        let o = 0;\n        for(let h = t + 1; h < r.length && r[h] >> 6 === 2; h++)o++;\n        return o;\n    }\n    return e === nr.OVERRUN ? r.length - t - 1 : 0;\n}\nfunction F0(e, t, r, i, n) {\n    return e === nr.OVERLONG ? (i.push(n), 0) : (i.push(65533), Zn(e, t, r));\n}\nObject.freeze({\n    error: D0,\n    ignore: Zn,\n    replace: F0\n});\nfunction Ei(e, t = Or.current) {\n    t != Or.current && (Xn.checkNormalize(), e = e.normalize(t));\n    let r = [];\n    for(let i = 0; i < e.length; i++){\n        const n = e.charCodeAt(i);\n        if (n < 128) r.push(n);\n        else if (n < 2048) r.push(n >> 6 | 192), r.push(n & 63 | 128);\n        else if ((n & 64512) == 55296) {\n            i++;\n            const o = e.charCodeAt(i);\n            if (i >= e.length || (o & 64512) !== 56320) throw new Error(\"invalid utf-8 string\");\n            const h = 65536 + ((n & 1023) << 10) + (o & 1023);\n            r.push(h >> 18 | 240), r.push(h >> 12 & 63 | 128), r.push(h >> 6 & 63 | 128), r.push(h & 63 | 128);\n        } else r.push(n >> 12 | 224), r.push(n >> 6 & 63 | 128), r.push(n & 63 | 128);\n    }\n    return Ot(r);\n}\nfunction T0(e) {\n    if (e.length % 4 !== 0) throw new Error(\"bad data\");\n    let t = [];\n    for(let r = 0; r < e.length; r += 4)t.push(parseInt(e.substring(r, r + 4), 16));\n    return t;\n}\nfunction Si(e, t) {\n    t || (t = function(n) {\n        return [\n            parseInt(n, 16)\n        ];\n    });\n    let r = 0, i = {};\n    return e.split(\",\").forEach((n)=>{\n        let o = n.split(\":\");\n        r += parseInt(o[0], 16), i[r] = t(o[1]);\n    }), i;\n}\nfunction $n(e) {\n    let t = 0;\n    return e.split(\",\").map((r)=>{\n        let i = r.split(\"-\");\n        i.length === 1 ? i[1] = \"0\" : i[1] === \"\" && (i[1] = \"1\");\n        let n = t + parseInt(i[0], 16);\n        return t = parseInt(i[1], 16), {\n            l: n,\n            h: t\n        };\n    });\n}\n$n(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\"), \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((e)=>parseInt(e, 16)), Si(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\"), Si(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\"), Si(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", T0), $n(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nconst tf = \"hash/5.7.0\";\nfunction U0(e) {\n    e = atob(e);\n    const t = [];\n    for(let r = 0; r < e.length; r++)t.push(e.charCodeAt(r));\n    return Ot(t);\n}\nfunction ef(e, t) {\n    t == null && (t = 1);\n    const r = [], i = r.forEach, n = function(o, h) {\n        i.call(o, function(p) {\n            h > 0 && Array.isArray(p) ? n(p, h - 1) : r.push(p);\n        });\n    };\n    return n(e, t), r;\n}\nfunction k0(e) {\n    const t = {};\n    for(let r = 0; r < e.length; r++){\n        const i = e[r];\n        t[i[0]] = i[1];\n    }\n    return t;\n}\nfunction q0(e) {\n    let t = 0;\n    function r() {\n        return e[t++] << 8 | e[t++];\n    }\n    let i = r(), n = 1, o = [\n        0,\n        1\n    ];\n    for(let H = 1; H < i; H++)o.push(n += r());\n    let h = r(), p = t;\n    t += h;\n    let b = 0, m = 0;\n    function w() {\n        return b == 0 && (m = m << 8 | e[t++], b = 8), m >> --b & 1;\n    }\n    const y = 31, S = Math.pow(2, y), I = S >>> 1, N = I >> 1, C = S - 1;\n    let F = 0;\n    for(let H = 0; H < y; H++)F = F << 1 | w();\n    let U = [], J = 0, Bt = S;\n    for(;;){\n        let H = Math.floor(((F - J + 1) * n - 1) / Bt), z = 0, Pt = i;\n        for(; Pt - z > 1;){\n            let Yt = z + Pt >>> 1;\n            H < o[Yt] ? Pt = Yt : z = Yt;\n        }\n        if (z == 0) break;\n        U.push(z);\n        let W = J + Math.floor(Bt * o[z] / n), Rt = J + Math.floor(Bt * o[z + 1] / n) - 1;\n        for(; !((W ^ Rt) & I);)F = F << 1 & C | w(), W = W << 1 & C, Rt = Rt << 1 & C | 1;\n        for(; W & ~Rt & N;)F = F & I | F << 1 & C >>> 1 | w(), W = W << 1 ^ I, Rt = (Rt ^ I) << 1 | I | 1;\n        J = W, Bt = 1 + Rt - W;\n    }\n    let G = i - 4;\n    return U.map((H)=>{\n        switch(H - G){\n            case 3:\n                return G + 65792 + (e[p++] << 16 | e[p++] << 8 | e[p++]);\n            case 2:\n                return G + 256 + (e[p++] << 8 | e[p++]);\n            case 1:\n                return G + e[p++];\n            default:\n                return H - 1;\n        }\n    });\n}\nfunction K0(e) {\n    let t = 0;\n    return ()=>e[t++];\n}\nfunction H0(e) {\n    return K0(q0(e));\n}\nfunction z0(e) {\n    return e & 1 ? ~e >> 1 : e >> 1;\n}\nfunction L0(e, t) {\n    let r = Array(e);\n    for(let i = 0; i < e; i++)r[i] = 1 + t();\n    return r;\n}\nfunction rf(e, t) {\n    let r = Array(e);\n    for(let i = 0, n = -1; i < e; i++)r[i] = n += 1 + t();\n    return r;\n}\nfunction j0(e, t) {\n    let r = Array(e);\n    for(let i = 0, n = 0; i < e; i++)r[i] = n += z0(t());\n    return r;\n}\nfunction Pr(e, t) {\n    let r = rf(e(), e), i = e(), n = rf(i, e), o = L0(i, e);\n    for(let h = 0; h < i; h++)for(let p = 0; p < o[h]; p++)r.push(n[h] + p);\n    return t ? r.map((h)=>t[h]) : r;\n}\nfunction Q0(e) {\n    let t = [];\n    for(;;){\n        let r = e();\n        if (r == 0) break;\n        t.push(G0(r, e));\n    }\n    for(;;){\n        let r = e() - 1;\n        if (r < 0) break;\n        t.push(Y0(r, e));\n    }\n    return k0(ef(t));\n}\nfunction J0(e) {\n    let t = [];\n    for(;;){\n        let r = e();\n        if (r == 0) break;\n        t.push(r);\n    }\n    return t;\n}\nfunction nf(e, t, r) {\n    let i = Array(e).fill(void 0).map(()=>[]);\n    for(let n = 0; n < t; n++)j0(e, r).forEach((o, h)=>i[h].push(o));\n    return i;\n}\nfunction G0(e, t) {\n    let r = 1 + t(), i = t(), n = J0(t), o = nf(n.length, 1 + e, t);\n    return ef(o.map((h, p)=>{\n        const b = h[0], m = h.slice(1);\n        return Array(n[p]).fill(void 0).map((w, y)=>{\n            let S = y * i;\n            return [\n                b + y * r,\n                m.map((I)=>I + S)\n            ];\n        });\n    }));\n}\nfunction Y0(e, t) {\n    let r = 1 + t();\n    return nf(r, 1 + e, t).map((n)=>[\n            n[0],\n            n.slice(1)\n        ]);\n}\nfunction V0(e) {\n    let t = Pr(e).sort((i, n)=>i - n);\n    return r();\n    function r() {\n        let i = [];\n        for(;;){\n            let m = Pr(e, t);\n            if (m.length == 0) break;\n            i.push({\n                set: new Set(m),\n                node: r()\n            });\n        }\n        i.sort((m, w)=>w.set.size - m.set.size);\n        let n = e(), o = n % 3;\n        n = n / 3 | 0;\n        let h = !!(n & 1);\n        n >>= 1;\n        let p = n == 1, b = n == 2;\n        return {\n            branches: i,\n            valid: o,\n            fe0f: h,\n            save: p,\n            check: b\n        };\n    }\n}\nfunction W0() {\n    return H0(U0(\"\"));\n}\nconst Dr = W0();\nnew Set(Pr(Dr)), new Set(Pr(Dr)), Q0(Dr), V0(Dr), new L(tf);\nconst X0 = new Uint8Array(32);\nX0.fill(0);\nconst Z0 = `\u0019Ethereum Signed Message:\n`;\nfunction ff(e) {\n    return typeof e == \"string\" && (e = Ei(e)), yi(E0([\n        Ei(Z0),\n        Ei(String(e.length)),\n        e\n    ]));\n}\nconst $0 = \"rlp/5.7.0\";\nnew L($0);\nconst ts = \"address/5.7.0\", Ar = new L(ts);\nfunction of(e) {\n    Qt(e, 20) || Ar.throwArgumentError(\"invalid address\", \"address\", e), e = e.toLowerCase();\n    const t = e.substring(2).split(\"\"), r = new Uint8Array(40);\n    for(let n = 0; n < 40; n++)r[n] = t[n].charCodeAt(0);\n    const i = Ot(yi(r));\n    for(let n = 0; n < 40; n += 2)i[n >> 1] >> 4 >= 8 && (t[n] = t[n].toUpperCase()), (i[n >> 1] & 15) >= 8 && (t[n + 1] = t[n + 1].toUpperCase());\n    return \"0x\" + t.join(\"\");\n}\nconst es = 9007199254740991;\nfunction rs(e) {\n    return Math.log10 ? Math.log10(e) : Math.log(e) / Math.LN10;\n}\nconst Ni = {};\nfor(let e = 0; e < 10; e++)Ni[String(e)] = String(e);\nfor(let e = 0; e < 26; e++)Ni[String.fromCharCode(65 + e)] = String(10 + e);\nconst sf = Math.floor(rs(es));\nfunction is(e) {\n    e = e.toUpperCase(), e = e.substring(4) + e.substring(0, 2) + \"00\";\n    let t = e.split(\"\").map((i)=>Ni[i]).join(\"\");\n    for(; t.length >= sf;){\n        let i = t.substring(0, sf);\n        t = parseInt(i, 10) % 97 + t.substring(i.length);\n    }\n    let r = String(98 - parseInt(t, 10) % 97);\n    for(; r.length < 2;)r = \"0\" + r;\n    return r;\n}\nfunction ns(e) {\n    let t = null;\n    if (typeof e != \"string\" && Ar.throwArgumentError(\"invalid address\", \"address\", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), t = of(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e && Ar.throwArgumentError(\"bad address checksum\", \"address\", e);\n    else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        for(e.substring(2, 4) !== is(e) && Ar.throwArgumentError(\"bad icap checksum\", \"address\", e), t = R0(e.substring(4)); t.length < 40;)t = \"0\" + t;\n        t = of(\"0x\" + t);\n    } else Ar.throwArgumentError(\"invalid address\", \"address\", e);\n    return t;\n}\nconst fs = \"properties/5.7.0\";\nnew L(fs);\nfunction br(e, t, r) {\n    Object.defineProperty(e, t, {\n        enumerable: !0,\n        value: r,\n        writable: !1\n    });\n}\nnew L(tf);\nconst os = new Uint8Array(32);\nos.fill(0), V.from(-1);\nconst ss = V.from(0), as = V.from(1);\nV.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"), oe(as.toHexString(), 32), oe(ss.toHexString(), 32);\nvar se = {}, Q = {}, yr = af;\nfunction af(e, t) {\n    if (!e) throw new Error(t || \"Assertion failed\");\n}\naf.equal = function(t, r, i) {\n    if (t != r) throw new Error(i || \"Assertion failed: \" + t + \" != \" + r);\n};\nvar Ii = {\n    exports: {}\n};\ntypeof Object.create == \"function\" ? Ii.exports = function(t, r) {\n    r && (t.super_ = r, t.prototype = Object.create(r.prototype, {\n        constructor: {\n            value: t,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n        }\n    }));\n} : Ii.exports = function(t, r) {\n    if (r) {\n        t.super_ = r;\n        var i = function() {};\n        i.prototype = r.prototype, t.prototype = new i, t.prototype.constructor = t;\n    }\n};\nvar us = yr, hs = Ii.exports;\nQ.inherits = hs;\nfunction cs(e, t) {\n    return (e.charCodeAt(t) & 64512) !== 55296 || t < 0 || t + 1 >= e.length ? !1 : (e.charCodeAt(t + 1) & 64512) === 56320;\n}\nfunction ls(e, t) {\n    if (Array.isArray(e)) return e.slice();\n    if (!e) return [];\n    var r = [];\n    if (typeof e == \"string\") if (t) {\n        if (t === \"hex\") for(e = e.replace(/[^a-z0-9]+/ig, \"\"), e.length % 2 !== 0 && (e = \"0\" + e), n = 0; n < e.length; n += 2)r.push(parseInt(e[n] + e[n + 1], 16));\n    } else for(var i = 0, n = 0; n < e.length; n++){\n        var o = e.charCodeAt(n);\n        o < 128 ? r[i++] = o : o < 2048 ? (r[i++] = o >> 6 | 192, r[i++] = o & 63 | 128) : cs(e, n) ? (o = 65536 + ((o & 1023) << 10) + (e.charCodeAt(++n) & 1023), r[i++] = o >> 18 | 240, r[i++] = o >> 12 & 63 | 128, r[i++] = o >> 6 & 63 | 128, r[i++] = o & 63 | 128) : (r[i++] = o >> 12 | 224, r[i++] = o >> 6 & 63 | 128, r[i++] = o & 63 | 128);\n    }\n    else for(n = 0; n < e.length; n++)r[n] = e[n] | 0;\n    return r;\n}\nQ.toArray = ls;\nfunction ds(e) {\n    for(var t = \"\", r = 0; r < e.length; r++)t += hf(e[r].toString(16));\n    return t;\n}\nQ.toHex = ds;\nfunction uf(e) {\n    var t = e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (e & 255) << 24;\n    return t >>> 0;\n}\nQ.htonl = uf;\nfunction ps(e, t) {\n    for(var r = \"\", i = 0; i < e.length; i++){\n        var n = e[i];\n        t === \"little\" && (n = uf(n)), r += cf(n.toString(16));\n    }\n    return r;\n}\nQ.toHex32 = ps;\nfunction hf(e) {\n    return e.length === 1 ? \"0\" + e : e;\n}\nQ.zero2 = hf;\nfunction cf(e) {\n    return e.length === 7 ? \"0\" + e : e.length === 6 ? \"00\" + e : e.length === 5 ? \"000\" + e : e.length === 4 ? \"0000\" + e : e.length === 3 ? \"00000\" + e : e.length === 2 ? \"000000\" + e : e.length === 1 ? \"0000000\" + e : e;\n}\nQ.zero8 = cf;\nfunction vs(e, t, r, i) {\n    var n = r - t;\n    us(n % 4 === 0);\n    for(var o = new Array(n / 4), h = 0, p = t; h < o.length; h++, p += 4){\n        var b;\n        i === \"big\" ? b = e[p] << 24 | e[p + 1] << 16 | e[p + 2] << 8 | e[p + 3] : b = e[p + 3] << 24 | e[p + 2] << 16 | e[p + 1] << 8 | e[p], o[h] = b >>> 0;\n    }\n    return o;\n}\nQ.join32 = vs;\nfunction ms(e, t) {\n    for(var r = new Array(e.length * 4), i = 0, n = 0; i < e.length; i++, n += 4){\n        var o = e[i];\n        t === \"big\" ? (r[n] = o >>> 24, r[n + 1] = o >>> 16 & 255, r[n + 2] = o >>> 8 & 255, r[n + 3] = o & 255) : (r[n + 3] = o >>> 24, r[n + 2] = o >>> 16 & 255, r[n + 1] = o >>> 8 & 255, r[n] = o & 255);\n    }\n    return r;\n}\nQ.split32 = ms;\nfunction gs(e, t) {\n    return e >>> t | e << 32 - t;\n}\nQ.rotr32 = gs;\nfunction As(e, t) {\n    return e << t | e >>> 32 - t;\n}\nQ.rotl32 = As;\nfunction bs(e, t) {\n    return e + t >>> 0;\n}\nQ.sum32 = bs;\nfunction ys(e, t, r) {\n    return e + t + r >>> 0;\n}\nQ.sum32_3 = ys;\nfunction ws(e, t, r, i) {\n    return e + t + r + i >>> 0;\n}\nQ.sum32_4 = ws;\nfunction xs(e, t, r, i, n) {\n    return e + t + r + i + n >>> 0;\n}\nQ.sum32_5 = xs;\nfunction Ms(e, t, r, i) {\n    var n = e[t], o = e[t + 1], h = i + o >>> 0, p = (h < i ? 1 : 0) + r + n;\n    e[t] = p >>> 0, e[t + 1] = h;\n}\nQ.sum64 = Ms;\nfunction Es(e, t, r, i) {\n    var n = t + i >>> 0, o = (n < t ? 1 : 0) + e + r;\n    return o >>> 0;\n}\nQ.sum64_hi = Es;\nfunction Ss(e, t, r, i) {\n    var n = t + i;\n    return n >>> 0;\n}\nQ.sum64_lo = Ss;\nfunction Ns(e, t, r, i, n, o, h, p) {\n    var b = 0, m = t;\n    m = m + i >>> 0, b += m < t ? 1 : 0, m = m + o >>> 0, b += m < o ? 1 : 0, m = m + p >>> 0, b += m < p ? 1 : 0;\n    var w = e + r + n + h + b;\n    return w >>> 0;\n}\nQ.sum64_4_hi = Ns;\nfunction Is(e, t, r, i, n, o, h, p) {\n    var b = t + i + o + p;\n    return b >>> 0;\n}\nQ.sum64_4_lo = Is;\nfunction _s(e, t, r, i, n, o, h, p, b, m) {\n    var w = 0, y = t;\n    y = y + i >>> 0, w += y < t ? 1 : 0, y = y + o >>> 0, w += y < o ? 1 : 0, y = y + p >>> 0, w += y < p ? 1 : 0, y = y + m >>> 0, w += y < m ? 1 : 0;\n    var S = e + r + n + h + b + w;\n    return S >>> 0;\n}\nQ.sum64_5_hi = _s;\nfunction Bs(e, t, r, i, n, o, h, p, b, m) {\n    var w = t + i + o + p + m;\n    return w >>> 0;\n}\nQ.sum64_5_lo = Bs;\nfunction Cs(e, t, r) {\n    var i = t << 32 - r | e >>> r;\n    return i >>> 0;\n}\nQ.rotr64_hi = Cs;\nfunction Rs(e, t, r) {\n    var i = e << 32 - r | t >>> r;\n    return i >>> 0;\n}\nQ.rotr64_lo = Rs;\nfunction Os(e, t, r) {\n    return e >>> r;\n}\nQ.shr64_hi = Os;\nfunction Ps(e, t, r) {\n    var i = e << 32 - r | t >>> r;\n    return i >>> 0;\n}\nQ.shr64_lo = Ps;\nvar fr = {}, lf = Q, Ds = yr;\nfunction Fr() {\n    this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = \"big\", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;\n}\nfr.BlockHash = Fr, Fr.prototype.update = function(t, r) {\n    if (t = lf.toArray(t, r), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {\n        t = this.pending;\n        var i = t.length % this._delta8;\n        this.pending = t.slice(t.length - i, t.length), this.pending.length === 0 && (this.pending = null), t = lf.join32(t, 0, t.length - i, this.endian);\n        for(var n = 0; n < t.length; n += this._delta32)this._update(t, n, n + this._delta32);\n    }\n    return this;\n}, Fr.prototype.digest = function(t) {\n    return this.update(this._pad()), Ds(this.pending === null), this._digest(t);\n}, Fr.prototype._pad = function() {\n    var t = this.pendingTotal, r = this._delta8, i = r - (t + this.padLength) % r, n = new Array(i + this.padLength);\n    n[0] = 128;\n    for(var o = 1; o < i; o++)n[o] = 0;\n    if (t <<= 3, this.endian === \"big\") {\n        for(var h = 8; h < this.padLength; h++)n[o++] = 0;\n        n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = t >>> 24 & 255, n[o++] = t >>> 16 & 255, n[o++] = t >>> 8 & 255, n[o++] = t & 255;\n    } else for(n[o++] = t & 255, n[o++] = t >>> 8 & 255, n[o++] = t >>> 16 & 255, n[o++] = t >>> 24 & 255, n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = 0, h = 8; h < this.padLength; h++)n[o++] = 0;\n    return n;\n};\nvar or = {}, ae = {}, Fs = Q, ue = Fs.rotr32;\nfunction Ts(e, t, r, i) {\n    if (e === 0) return df(t, r, i);\n    if (e === 1 || e === 3) return vf(t, r, i);\n    if (e === 2) return pf(t, r, i);\n}\nae.ft_1 = Ts;\nfunction df(e, t, r) {\n    return e & t ^ ~e & r;\n}\nae.ch32 = df;\nfunction pf(e, t, r) {\n    return e & t ^ e & r ^ t & r;\n}\nae.maj32 = pf;\nfunction vf(e, t, r) {\n    return e ^ t ^ r;\n}\nae.p32 = vf;\nfunction Us(e) {\n    return ue(e, 2) ^ ue(e, 13) ^ ue(e, 22);\n}\nae.s0_256 = Us;\nfunction ks(e) {\n    return ue(e, 6) ^ ue(e, 11) ^ ue(e, 25);\n}\nae.s1_256 = ks;\nfunction qs(e) {\n    return ue(e, 7) ^ ue(e, 18) ^ e >>> 3;\n}\nae.g0_256 = qs;\nfunction Ks(e) {\n    return ue(e, 17) ^ ue(e, 19) ^ e >>> 10;\n}\nae.g1_256 = Ks;\nvar sr = Q, Hs = fr, zs = ae, _i = sr.rotl32, wr = sr.sum32, Ls = sr.sum32_5, js = zs.ft_1, mf = Hs.BlockHash, Qs = [\n    1518500249,\n    1859775393,\n    2400959708,\n    3395469782\n];\nfunction he() {\n    if (!(this instanceof he)) return new he;\n    mf.call(this), this.h = [\n        1732584193,\n        4023233417,\n        2562383102,\n        271733878,\n        3285377520\n    ], this.W = new Array(80);\n}\nsr.inherits(he, mf);\nvar Js = he;\nhe.blockSize = 512, he.outSize = 160, he.hmacStrength = 80, he.padLength = 64, he.prototype._update = function(t, r) {\n    for(var i = this.W, n = 0; n < 16; n++)i[n] = t[r + n];\n    for(; n < i.length; n++)i[n] = _i(i[n - 3] ^ i[n - 8] ^ i[n - 14] ^ i[n - 16], 1);\n    var o = this.h[0], h = this.h[1], p = this.h[2], b = this.h[3], m = this.h[4];\n    for(n = 0; n < i.length; n++){\n        var w = ~~(n / 20), y = Ls(_i(o, 5), js(w, h, p, b), m, i[n], Qs[w]);\n        m = b, b = p, p = _i(h, 30), h = o, o = y;\n    }\n    this.h[0] = wr(this.h[0], o), this.h[1] = wr(this.h[1], h), this.h[2] = wr(this.h[2], p), this.h[3] = wr(this.h[3], b), this.h[4] = wr(this.h[4], m);\n}, he.prototype._digest = function(t) {\n    return t === \"hex\" ? sr.toHex32(this.h, \"big\") : sr.split32(this.h, \"big\");\n};\nvar ar = Q, Gs = fr, ur = ae, Ys = yr, ie = ar.sum32, Vs = ar.sum32_4, Ws = ar.sum32_5, Xs = ur.ch32, Zs = ur.maj32, $s = ur.s0_256, ta = ur.s1_256, ea = ur.g0_256, ra = ur.g1_256, gf = Gs.BlockHash, ia = [\n    1116352408,\n    1899447441,\n    3049323471,\n    3921009573,\n    961987163,\n    1508970993,\n    2453635748,\n    2870763221,\n    3624381080,\n    310598401,\n    607225278,\n    1426881987,\n    1925078388,\n    2162078206,\n    2614888103,\n    3248222580,\n    3835390401,\n    4022224774,\n    264347078,\n    604807628,\n    770255983,\n    1249150122,\n    1555081692,\n    1996064986,\n    2554220882,\n    2821834349,\n    2952996808,\n    3210313671,\n    3336571891,\n    3584528711,\n    113926993,\n    338241895,\n    666307205,\n    773529912,\n    1294757372,\n    1396182291,\n    1695183700,\n    1986661051,\n    2177026350,\n    2456956037,\n    2730485921,\n    2820302411,\n    3259730800,\n    3345764771,\n    3516065817,\n    3600352804,\n    4094571909,\n    275423344,\n    430227734,\n    506948616,\n    659060556,\n    883997877,\n    958139571,\n    1322822218,\n    1537002063,\n    1747873779,\n    1955562222,\n    2024104815,\n    2227730452,\n    2361852424,\n    2428436474,\n    2756734187,\n    3204031479,\n    3329325298\n];\nfunction ce() {\n    if (!(this instanceof ce)) return new ce;\n    gf.call(this), this.h = [\n        1779033703,\n        3144134277,\n        1013904242,\n        2773480762,\n        1359893119,\n        2600822924,\n        528734635,\n        1541459225\n    ], this.k = ia, this.W = new Array(64);\n}\nar.inherits(ce, gf);\nvar Af = ce;\nce.blockSize = 512, ce.outSize = 256, ce.hmacStrength = 192, ce.padLength = 64, ce.prototype._update = function(t, r) {\n    for(var i = this.W, n = 0; n < 16; n++)i[n] = t[r + n];\n    for(; n < i.length; n++)i[n] = Vs(ra(i[n - 2]), i[n - 7], ea(i[n - 15]), i[n - 16]);\n    var o = this.h[0], h = this.h[1], p = this.h[2], b = this.h[3], m = this.h[4], w = this.h[5], y = this.h[6], S = this.h[7];\n    for(Ys(this.k.length === i.length), n = 0; n < i.length; n++){\n        var I = Ws(S, ta(m), Xs(m, w, y), this.k[n], i[n]), N = ie($s(o), Zs(o, h, p));\n        S = y, y = w, w = m, m = ie(b, I), b = p, p = h, h = o, o = ie(I, N);\n    }\n    this.h[0] = ie(this.h[0], o), this.h[1] = ie(this.h[1], h), this.h[2] = ie(this.h[2], p), this.h[3] = ie(this.h[3], b), this.h[4] = ie(this.h[4], m), this.h[5] = ie(this.h[5], w), this.h[6] = ie(this.h[6], y), this.h[7] = ie(this.h[7], S);\n}, ce.prototype._digest = function(t) {\n    return t === \"hex\" ? ar.toHex32(this.h, \"big\") : ar.split32(this.h, \"big\");\n};\nvar Bi = Q, bf = Af;\nfunction ye() {\n    if (!(this instanceof ye)) return new ye;\n    bf.call(this), this.h = [\n        3238371032,\n        914150663,\n        812702999,\n        4144912697,\n        4290775857,\n        1750603025,\n        1694076839,\n        3204075428\n    ];\n}\nBi.inherits(ye, bf);\nvar na = ye;\nye.blockSize = 512, ye.outSize = 224, ye.hmacStrength = 192, ye.padLength = 64, ye.prototype._digest = function(t) {\n    return t === \"hex\" ? Bi.toHex32(this.h.slice(0, 7), \"big\") : Bi.split32(this.h.slice(0, 7), \"big\");\n};\nvar jt = Q, fa = fr, oa = yr, le = jt.rotr64_hi, de = jt.rotr64_lo, yf = jt.shr64_hi, wf = jt.shr64_lo, Be = jt.sum64, Ci = jt.sum64_hi, Ri = jt.sum64_lo, sa = jt.sum64_4_hi, aa = jt.sum64_4_lo, ua = jt.sum64_5_hi, ha = jt.sum64_5_lo, xf = fa.BlockHash, ca = [\n    1116352408,\n    3609767458,\n    1899447441,\n    602891725,\n    3049323471,\n    3964484399,\n    3921009573,\n    2173295548,\n    961987163,\n    4081628472,\n    1508970993,\n    3053834265,\n    2453635748,\n    2937671579,\n    2870763221,\n    3664609560,\n    3624381080,\n    2734883394,\n    310598401,\n    1164996542,\n    607225278,\n    1323610764,\n    1426881987,\n    3590304994,\n    1925078388,\n    4068182383,\n    2162078206,\n    991336113,\n    2614888103,\n    633803317,\n    3248222580,\n    3479774868,\n    3835390401,\n    2666613458,\n    4022224774,\n    944711139,\n    264347078,\n    2341262773,\n    604807628,\n    2007800933,\n    770255983,\n    1495990901,\n    1249150122,\n    1856431235,\n    1555081692,\n    3175218132,\n    1996064986,\n    2198950837,\n    2554220882,\n    3999719339,\n    2821834349,\n    766784016,\n    2952996808,\n    2566594879,\n    3210313671,\n    3203337956,\n    3336571891,\n    1034457026,\n    3584528711,\n    2466948901,\n    113926993,\n    3758326383,\n    338241895,\n    168717936,\n    666307205,\n    1188179964,\n    773529912,\n    1546045734,\n    1294757372,\n    1522805485,\n    1396182291,\n    2643833823,\n    1695183700,\n    2343527390,\n    1986661051,\n    1014477480,\n    2177026350,\n    1206759142,\n    2456956037,\n    344077627,\n    2730485921,\n    1290863460,\n    2820302411,\n    3158454273,\n    3259730800,\n    3505952657,\n    3345764771,\n    106217008,\n    3516065817,\n    3606008344,\n    3600352804,\n    1432725776,\n    4094571909,\n    1467031594,\n    275423344,\n    851169720,\n    430227734,\n    3100823752,\n    506948616,\n    1363258195,\n    659060556,\n    3750685593,\n    883997877,\n    3785050280,\n    958139571,\n    3318307427,\n    1322822218,\n    3812723403,\n    1537002063,\n    2003034995,\n    1747873779,\n    3602036899,\n    1955562222,\n    1575990012,\n    2024104815,\n    1125592928,\n    2227730452,\n    2716904306,\n    2361852424,\n    442776044,\n    2428436474,\n    593698344,\n    2756734187,\n    3733110249,\n    3204031479,\n    2999351573,\n    3329325298,\n    3815920427,\n    3391569614,\n    3928383900,\n    3515267271,\n    566280711,\n    3940187606,\n    3454069534,\n    4118630271,\n    4000239992,\n    116418474,\n    1914138554,\n    174292421,\n    2731055270,\n    289380356,\n    3203993006,\n    460393269,\n    320620315,\n    685471733,\n    587496836,\n    852142971,\n    1086792851,\n    1017036298,\n    365543100,\n    1126000580,\n    2618297676,\n    1288033470,\n    3409855158,\n    1501505948,\n    4234509866,\n    1607167915,\n    987167468,\n    1816402316,\n    1246189591\n];\nfunction ne() {\n    if (!(this instanceof ne)) return new ne;\n    xf.call(this), this.h = [\n        1779033703,\n        4089235720,\n        3144134277,\n        2227873595,\n        1013904242,\n        4271175723,\n        2773480762,\n        1595750129,\n        1359893119,\n        2917565137,\n        2600822924,\n        725511199,\n        528734635,\n        4215389547,\n        1541459225,\n        327033209\n    ], this.k = ca, this.W = new Array(160);\n}\njt.inherits(ne, xf);\nvar Mf = ne;\nne.blockSize = 1024, ne.outSize = 512, ne.hmacStrength = 192, ne.padLength = 128, ne.prototype._prepareBlock = function(t, r) {\n    for(var i = this.W, n = 0; n < 32; n++)i[n] = t[r + n];\n    for(; n < i.length; n += 2){\n        var o = xa(i[n - 4], i[n - 3]), h = Ma(i[n - 4], i[n - 3]), p = i[n - 14], b = i[n - 13], m = ya(i[n - 30], i[n - 29]), w = wa(i[n - 30], i[n - 29]), y = i[n - 32], S = i[n - 31];\n        i[n] = sa(o, h, p, b, m, w, y, S), i[n + 1] = aa(o, h, p, b, m, w, y, S);\n    }\n}, ne.prototype._update = function(t, r) {\n    this._prepareBlock(t, r);\n    var i = this.W, n = this.h[0], o = this.h[1], h = this.h[2], p = this.h[3], b = this.h[4], m = this.h[5], w = this.h[6], y = this.h[7], S = this.h[8], I = this.h[9], N = this.h[10], C = this.h[11], F = this.h[12], U = this.h[13], J = this.h[14], Bt = this.h[15];\n    oa(this.k.length === i.length);\n    for(var G = 0; G < i.length; G += 2){\n        var H = J, z = Bt, Pt = Aa(S, I), W = ba(S, I), Rt = la(S, I, N, C, F), Yt = da(S, I, N, C, F, U), Y = this.k[G], Vt = this.k[G + 1], A = i[G], f = i[G + 1], a = ua(H, z, Pt, W, Rt, Yt, Y, Vt, A, f), c = ha(H, z, Pt, W, Rt, Yt, Y, Vt, A, f);\n        H = ma(n, o), z = ga(n, o), Pt = pa(n, o, h, p, b), W = va(n, o, h, p, b, m);\n        var d = Ci(H, z, Pt, W), g = Ri(H, z, Pt, W);\n        J = F, Bt = U, F = N, U = C, N = S, C = I, S = Ci(w, y, a, c), I = Ri(y, y, a, c), w = b, y = m, b = h, m = p, h = n, p = o, n = Ci(a, c, d, g), o = Ri(a, c, d, g);\n    }\n    Be(this.h, 0, n, o), Be(this.h, 2, h, p), Be(this.h, 4, b, m), Be(this.h, 6, w, y), Be(this.h, 8, S, I), Be(this.h, 10, N, C), Be(this.h, 12, F, U), Be(this.h, 14, J, Bt);\n}, ne.prototype._digest = function(t) {\n    return t === \"hex\" ? jt.toHex32(this.h, \"big\") : jt.split32(this.h, \"big\");\n};\nfunction la(e, t, r, i, n) {\n    var o = e & r ^ ~e & n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction da(e, t, r, i, n, o) {\n    var h = t & i ^ ~t & o;\n    return h < 0 && (h += 4294967296), h;\n}\nfunction pa(e, t, r, i, n) {\n    var o = e & r ^ e & n ^ r & n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction va(e, t, r, i, n, o) {\n    var h = t & i ^ t & o ^ i & o;\n    return h < 0 && (h += 4294967296), h;\n}\nfunction ma(e, t) {\n    var r = le(e, t, 28), i = le(t, e, 2), n = le(t, e, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction ga(e, t) {\n    var r = de(e, t, 28), i = de(t, e, 2), n = de(t, e, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Aa(e, t) {\n    var r = le(e, t, 14), i = le(e, t, 18), n = le(t, e, 9), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction ba(e, t) {\n    var r = de(e, t, 14), i = de(e, t, 18), n = de(t, e, 9), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction ya(e, t) {\n    var r = le(e, t, 1), i = le(e, t, 8), n = yf(e, t, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction wa(e, t) {\n    var r = de(e, t, 1), i = de(e, t, 8), n = wf(e, t, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction xa(e, t) {\n    var r = le(e, t, 19), i = le(t, e, 29), n = yf(e, t, 6), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ma(e, t) {\n    var r = de(e, t, 19), i = de(t, e, 29), n = wf(e, t, 6), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nvar Oi = Q, Ef = Mf;\nfunction we() {\n    if (!(this instanceof we)) return new we;\n    Ef.call(this), this.h = [\n        3418070365,\n        3238371032,\n        1654270250,\n        914150663,\n        2438529370,\n        812702999,\n        355462360,\n        4144912697,\n        1731405415,\n        4290775857,\n        2394180231,\n        1750603025,\n        3675008525,\n        1694076839,\n        1203062813,\n        3204075428\n    ];\n}\nOi.inherits(we, Ef);\nvar Ea = we;\nwe.blockSize = 1024, we.outSize = 384, we.hmacStrength = 192, we.padLength = 128, we.prototype._digest = function(t) {\n    return t === \"hex\" ? Oi.toHex32(this.h.slice(0, 12), \"big\") : Oi.split32(this.h.slice(0, 12), \"big\");\n}, or.sha1 = Js, or.sha224 = na, or.sha256 = Af, or.sha384 = Ea, or.sha512 = Mf;\nvar Sf = {}, Xe = Q, Sa = fr, Tr = Xe.rotl32, Nf = Xe.sum32, xr = Xe.sum32_3, If = Xe.sum32_4, _f = Sa.BlockHash;\nfunction pe() {\n    if (!(this instanceof pe)) return new pe;\n    _f.call(this), this.h = [\n        1732584193,\n        4023233417,\n        2562383102,\n        271733878,\n        3285377520\n    ], this.endian = \"little\";\n}\nXe.inherits(pe, _f), Sf.ripemd160 = pe, pe.blockSize = 512, pe.outSize = 160, pe.hmacStrength = 192, pe.padLength = 64, pe.prototype._update = function(t, r) {\n    for(var i = this.h[0], n = this.h[1], o = this.h[2], h = this.h[3], p = this.h[4], b = i, m = n, w = o, y = h, S = p, I = 0; I < 80; I++){\n        var N = Nf(Tr(If(i, Bf(I, n, o, h), t[_a[I] + r], Na(I)), Ca[I]), p);\n        i = p, p = h, h = Tr(o, 10), o = n, n = N, N = Nf(Tr(If(b, Bf(79 - I, m, w, y), t[Ba[I] + r], Ia(I)), Ra[I]), S), b = S, S = y, y = Tr(w, 10), w = m, m = N;\n    }\n    N = xr(this.h[1], o, y), this.h[1] = xr(this.h[2], h, S), this.h[2] = xr(this.h[3], p, b), this.h[3] = xr(this.h[4], i, m), this.h[4] = xr(this.h[0], n, w), this.h[0] = N;\n}, pe.prototype._digest = function(t) {\n    return t === \"hex\" ? Xe.toHex32(this.h, \"little\") : Xe.split32(this.h, \"little\");\n};\nfunction Bf(e, t, r, i) {\n    return e <= 15 ? t ^ r ^ i : e <= 31 ? t & r | ~t & i : e <= 47 ? (t | ~r) ^ i : e <= 63 ? t & i | r & ~i : t ^ (r | ~i);\n}\nfunction Na(e) {\n    return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838;\n}\nfunction Ia(e) {\n    return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0;\n}\nvar _a = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    7,\n    4,\n    13,\n    1,\n    10,\n    6,\n    15,\n    3,\n    12,\n    0,\n    9,\n    5,\n    2,\n    14,\n    11,\n    8,\n    3,\n    10,\n    14,\n    4,\n    9,\n    15,\n    8,\n    1,\n    2,\n    7,\n    0,\n    6,\n    13,\n    11,\n    5,\n    12,\n    1,\n    9,\n    11,\n    10,\n    0,\n    8,\n    12,\n    4,\n    13,\n    3,\n    7,\n    15,\n    14,\n    5,\n    6,\n    2,\n    4,\n    0,\n    5,\n    9,\n    7,\n    12,\n    2,\n    10,\n    14,\n    1,\n    3,\n    8,\n    11,\n    6,\n    15,\n    13\n], Ba = [\n    5,\n    14,\n    7,\n    0,\n    9,\n    2,\n    11,\n    4,\n    13,\n    6,\n    15,\n    8,\n    1,\n    10,\n    3,\n    12,\n    6,\n    11,\n    3,\n    7,\n    0,\n    13,\n    5,\n    10,\n    14,\n    15,\n    8,\n    12,\n    4,\n    9,\n    1,\n    2,\n    15,\n    5,\n    1,\n    3,\n    7,\n    14,\n    6,\n    9,\n    11,\n    8,\n    12,\n    2,\n    10,\n    0,\n    4,\n    13,\n    8,\n    6,\n    4,\n    1,\n    3,\n    11,\n    15,\n    0,\n    5,\n    12,\n    2,\n    13,\n    9,\n    7,\n    10,\n    14,\n    12,\n    15,\n    10,\n    4,\n    1,\n    5,\n    8,\n    7,\n    6,\n    2,\n    13,\n    14,\n    0,\n    3,\n    9,\n    11\n], Ca = [\n    11,\n    14,\n    15,\n    12,\n    5,\n    8,\n    7,\n    9,\n    11,\n    13,\n    14,\n    15,\n    6,\n    7,\n    9,\n    8,\n    7,\n    6,\n    8,\n    13,\n    11,\n    9,\n    7,\n    15,\n    7,\n    12,\n    15,\n    9,\n    11,\n    7,\n    13,\n    12,\n    11,\n    13,\n    6,\n    7,\n    14,\n    9,\n    13,\n    15,\n    14,\n    8,\n    13,\n    6,\n    5,\n    12,\n    7,\n    5,\n    11,\n    12,\n    14,\n    15,\n    14,\n    15,\n    9,\n    8,\n    9,\n    14,\n    5,\n    6,\n    8,\n    6,\n    5,\n    12,\n    9,\n    15,\n    5,\n    11,\n    6,\n    8,\n    13,\n    12,\n    5,\n    12,\n    13,\n    14,\n    11,\n    8,\n    5,\n    6\n], Ra = [\n    8,\n    9,\n    9,\n    11,\n    13,\n    15,\n    15,\n    5,\n    7,\n    7,\n    8,\n    11,\n    14,\n    14,\n    12,\n    6,\n    9,\n    13,\n    15,\n    7,\n    12,\n    8,\n    9,\n    11,\n    7,\n    7,\n    12,\n    7,\n    6,\n    15,\n    13,\n    11,\n    9,\n    7,\n    15,\n    11,\n    8,\n    6,\n    6,\n    14,\n    12,\n    13,\n    5,\n    14,\n    13,\n    13,\n    7,\n    5,\n    15,\n    5,\n    8,\n    11,\n    14,\n    14,\n    6,\n    14,\n    6,\n    9,\n    12,\n    9,\n    12,\n    5,\n    15,\n    8,\n    8,\n    5,\n    12,\n    9,\n    12,\n    5,\n    14,\n    6,\n    8,\n    13,\n    6,\n    5,\n    15,\n    13,\n    11,\n    11\n], Oa = Q, Pa = yr;\nfunction hr(e, t, r) {\n    if (!(this instanceof hr)) return new hr(e, t, r);\n    this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(Oa.toArray(t, r));\n}\nvar Da = hr;\nhr.prototype._init = function(t) {\n    t.length > this.blockSize && (t = new this.Hash().update(t).digest()), Pa(t.length <= this.blockSize);\n    for(var r = t.length; r < this.blockSize; r++)t.push(0);\n    for(r = 0; r < t.length; r++)t[r] ^= 54;\n    for(this.inner = new this.Hash().update(t), r = 0; r < t.length; r++)t[r] ^= 106;\n    this.outer = new this.Hash().update(t);\n}, hr.prototype.update = function(t, r) {\n    return this.inner.update(t, r), this;\n}, hr.prototype.digest = function(t) {\n    return this.outer.update(this.inner.digest()), this.outer.digest(t);\n}, function(e) {\n    var t = e;\n    t.utils = Q, t.common = fr, t.sha = or, t.ripemd = Sf, t.hmac = Da, t.sha1 = t.sha.sha1, t.sha256 = t.sha.sha256, t.sha224 = t.sha.sha224, t.sha384 = t.sha.sha384, t.sha512 = t.sha.sha512, t.ripemd160 = t.ripemd.ripemd160;\n}(se);\nfunction cr(e, t, r) {\n    return r = {\n        path: t,\n        exports: {},\n        require: function(i, n) {\n            return Fa(i, n ?? r.path);\n        }\n    }, e(r, r.exports), r.exports;\n}\nfunction Fa() {\n    throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\");\n}\nvar Pi = Cf;\nfunction Cf(e, t) {\n    if (!e) throw new Error(t || \"Assertion failed\");\n}\nCf.equal = function(t, r, i) {\n    if (t != r) throw new Error(i || \"Assertion failed: \" + t + \" != \" + r);\n};\nvar fe = cr(function(e, t) {\n    var r = t;\n    function i(h, p) {\n        if (Array.isArray(h)) return h.slice();\n        if (!h) return [];\n        var b = [];\n        if (typeof h != \"string\") {\n            for(var m = 0; m < h.length; m++)b[m] = h[m] | 0;\n            return b;\n        }\n        if (p === \"hex\") {\n            h = h.replace(/[^a-z0-9]+/ig, \"\"), h.length % 2 !== 0 && (h = \"0\" + h);\n            for(var m = 0; m < h.length; m += 2)b.push(parseInt(h[m] + h[m + 1], 16));\n        } else for(var m = 0; m < h.length; m++){\n            var w = h.charCodeAt(m), y = w >> 8, S = w & 255;\n            y ? b.push(y, S) : b.push(S);\n        }\n        return b;\n    }\n    r.toArray = i;\n    function n(h) {\n        return h.length === 1 ? \"0\" + h : h;\n    }\n    r.zero2 = n;\n    function o(h) {\n        for(var p = \"\", b = 0; b < h.length; b++)p += n(h[b].toString(16));\n        return p;\n    }\n    r.toHex = o, r.encode = function(p, b) {\n        return b === \"hex\" ? o(p) : p;\n    };\n}), Jt = cr(function(e, t) {\n    var r = t;\n    r.assert = Pi, r.toArray = fe.toArray, r.zero2 = fe.zero2, r.toHex = fe.toHex, r.encode = fe.encode;\n    function i(b, m, w) {\n        var y = new Array(Math.max(b.bitLength(), w) + 1);\n        y.fill(0);\n        for(var S = 1 << m + 1, I = b.clone(), N = 0; N < y.length; N++){\n            var C, F = I.andln(S - 1);\n            I.isOdd() ? (F > (S >> 1) - 1 ? C = (S >> 1) - F : C = F, I.isubn(C)) : C = 0, y[N] = C, I.iushrn(1);\n        }\n        return y;\n    }\n    r.getNAF = i;\n    function n(b, m) {\n        var w = [\n            [],\n            []\n        ];\n        b = b.clone(), m = m.clone();\n        for(var y = 0, S = 0, I; b.cmpn(-y) > 0 || m.cmpn(-S) > 0;){\n            var N = b.andln(3) + y & 3, C = m.andln(3) + S & 3;\n            N === 3 && (N = -1), C === 3 && (C = -1);\n            var F;\n            N & 1 ? (I = b.andln(7) + y & 7, (I === 3 || I === 5) && C === 2 ? F = -N : F = N) : F = 0, w[0].push(F);\n            var U;\n            C & 1 ? (I = m.andln(7) + S & 7, (I === 3 || I === 5) && N === 2 ? U = -C : U = C) : U = 0, w[1].push(U), 2 * y === F + 1 && (y = 1 - y), 2 * S === U + 1 && (S = 1 - S), b.iushrn(1), m.iushrn(1);\n        }\n        return w;\n    }\n    r.getJSF = n;\n    function o(b, m, w) {\n        var y = \"_\" + m;\n        b.prototype[m] = function() {\n            return this[y] !== void 0 ? this[y] : this[y] = w.call(this);\n        };\n    }\n    r.cachedProperty = o;\n    function h(b) {\n        return typeof b == \"string\" ? r.toArray(b, \"hex\") : b;\n    }\n    r.parseBytes = h;\n    function p(b) {\n        return new K(b, \"hex\", \"le\");\n    }\n    r.intFromLE = p;\n}), Ur = Jt.getNAF, Ta = Jt.getJSF, kr = Jt.assert;\nfunction Ce(e, t) {\n    this.type = e, this.p = new K(t.p, 16), this.red = t.prime ? K.red(t.prime) : K.mont(this.p), this.zero = new K(0).toRed(this.red), this.one = new K(1).toRed(this.red), this.two = new K(2).toRed(this.red), this.n = t.n && new K(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;\n    var r = this.n && this.p.div(this.n);\n    !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));\n}\nvar Ze = Ce;\nCe.prototype.point = function() {\n    throw new Error(\"Not implemented\");\n}, Ce.prototype.validate = function() {\n    throw new Error(\"Not implemented\");\n}, Ce.prototype._fixedNafMul = function(t, r) {\n    kr(t.precomputed);\n    var i = t._getDoubles(), n = Ur(r, 1, this._bitLength), o = (1 << i.step + 1) - (i.step % 2 === 0 ? 2 : 1);\n    o /= 3;\n    var h = [], p, b;\n    for(p = 0; p < n.length; p += i.step){\n        b = 0;\n        for(var m = p + i.step - 1; m >= p; m--)b = (b << 1) + n[m];\n        h.push(b);\n    }\n    for(var w = this.jpoint(null, null, null), y = this.jpoint(null, null, null), S = o; S > 0; S--){\n        for(p = 0; p < h.length; p++)b = h[p], b === S ? y = y.mixedAdd(i.points[p]) : b === -S && (y = y.mixedAdd(i.points[p].neg()));\n        w = w.add(y);\n    }\n    return w.toP();\n}, Ce.prototype._wnafMul = function(t, r) {\n    var i = 4, n = t._getNAFPoints(i);\n    i = n.wnd;\n    for(var o = n.points, h = Ur(r, i, this._bitLength), p = this.jpoint(null, null, null), b = h.length - 1; b >= 0; b--){\n        for(var m = 0; b >= 0 && h[b] === 0; b--)m++;\n        if (b >= 0 && m++, p = p.dblp(m), b < 0) break;\n        var w = h[b];\n        kr(w !== 0), t.type === \"affine\" ? w > 0 ? p = p.mixedAdd(o[w - 1 >> 1]) : p = p.mixedAdd(o[-w - 1 >> 1].neg()) : w > 0 ? p = p.add(o[w - 1 >> 1]) : p = p.add(o[-w - 1 >> 1].neg());\n    }\n    return t.type === \"affine\" ? p.toP() : p;\n}, Ce.prototype._wnafMulAdd = function(t, r, i, n, o) {\n    var h = this._wnafT1, p = this._wnafT2, b = this._wnafT3, m = 0, w, y, S;\n    for(w = 0; w < n; w++){\n        S = r[w];\n        var I = S._getNAFPoints(t);\n        h[w] = I.wnd, p[w] = I.points;\n    }\n    for(w = n - 1; w >= 1; w -= 2){\n        var N = w - 1, C = w;\n        if (h[N] !== 1 || h[C] !== 1) {\n            b[N] = Ur(i[N], h[N], this._bitLength), b[C] = Ur(i[C], h[C], this._bitLength), m = Math.max(b[N].length, m), m = Math.max(b[C].length, m);\n            continue;\n        }\n        var F = [\n            r[N],\n            null,\n            null,\n            r[C]\n        ];\n        r[N].y.cmp(r[C].y) === 0 ? (F[1] = r[N].add(r[C]), F[2] = r[N].toJ().mixedAdd(r[C].neg())) : r[N].y.cmp(r[C].y.redNeg()) === 0 ? (F[1] = r[N].toJ().mixedAdd(r[C]), F[2] = r[N].add(r[C].neg())) : (F[1] = r[N].toJ().mixedAdd(r[C]), F[2] = r[N].toJ().mixedAdd(r[C].neg()));\n        var U = [\n            -3,\n            -1,\n            -5,\n            -7,\n            0,\n            7,\n            5,\n            1,\n            3\n        ], J = Ta(i[N], i[C]);\n        for(m = Math.max(J[0].length, m), b[N] = new Array(m), b[C] = new Array(m), y = 0; y < m; y++){\n            var Bt = J[0][y] | 0, G = J[1][y] | 0;\n            b[N][y] = U[(Bt + 1) * 3 + (G + 1)], b[C][y] = 0, p[N] = F;\n        }\n    }\n    var H = this.jpoint(null, null, null), z = this._wnafT4;\n    for(w = m; w >= 0; w--){\n        for(var Pt = 0; w >= 0;){\n            var W = !0;\n            for(y = 0; y < n; y++)z[y] = b[y][w] | 0, z[y] !== 0 && (W = !1);\n            if (!W) break;\n            Pt++, w--;\n        }\n        if (w >= 0 && Pt++, H = H.dblp(Pt), w < 0) break;\n        for(y = 0; y < n; y++){\n            var Rt = z[y];\n            Rt !== 0 && (Rt > 0 ? S = p[y][Rt - 1 >> 1] : Rt < 0 && (S = p[y][-Rt - 1 >> 1].neg()), S.type === \"affine\" ? H = H.mixedAdd(S) : H = H.add(S));\n        }\n    }\n    for(w = 0; w < n; w++)p[w] = null;\n    return o ? H : H.toP();\n};\nfunction Xt(e, t) {\n    this.curve = e, this.type = t, this.precomputed = null;\n}\nCe.BasePoint = Xt, Xt.prototype.eq = function() {\n    throw new Error(\"Not implemented\");\n}, Xt.prototype.validate = function() {\n    return this.curve.validate(this);\n}, Ce.prototype.decodePoint = function(t, r) {\n    t = Jt.toArray(t, r);\n    var i = this.p.byteLength();\n    if ((t[0] === 4 || t[0] === 6 || t[0] === 7) && t.length - 1 === 2 * i) {\n        t[0] === 6 ? kr(t[t.length - 1] % 2 === 0) : t[0] === 7 && kr(t[t.length - 1] % 2 === 1);\n        var n = this.point(t.slice(1, 1 + i), t.slice(1 + i, 1 + 2 * i));\n        return n;\n    } else if ((t[0] === 2 || t[0] === 3) && t.length - 1 === i) return this.pointFromX(t.slice(1, 1 + i), t[0] === 3);\n    throw new Error(\"Unknown point format\");\n}, Xt.prototype.encodeCompressed = function(t) {\n    return this.encode(t, !0);\n}, Xt.prototype._encode = function(t) {\n    var r = this.curve.p.byteLength(), i = this.getX().toArray(\"be\", r);\n    return t ? [\n        this.getY().isEven() ? 2 : 3\n    ].concat(i) : [\n        4\n    ].concat(i, this.getY().toArray(\"be\", r));\n}, Xt.prototype.encode = function(t, r) {\n    return Jt.encode(this._encode(r), t);\n}, Xt.prototype.precompute = function(t) {\n    if (this.precomputed) return this;\n    var r = {\n        doubles: null,\n        naf: null,\n        beta: null\n    };\n    return r.naf = this._getNAFPoints(8), r.doubles = this._getDoubles(4, t), r.beta = this._getBeta(), this.precomputed = r, this;\n}, Xt.prototype._hasDoubles = function(t) {\n    if (!this.precomputed) return !1;\n    var r = this.precomputed.doubles;\n    return r ? r.points.length >= Math.ceil((t.bitLength() + 1) / r.step) : !1;\n}, Xt.prototype._getDoubles = function(t, r) {\n    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n    for(var i = [\n        this\n    ], n = this, o = 0; o < r; o += t){\n        for(var h = 0; h < t; h++)n = n.dbl();\n        i.push(n);\n    }\n    return {\n        step: t,\n        points: i\n    };\n}, Xt.prototype._getNAFPoints = function(t) {\n    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n    for(var r = [\n        this\n    ], i = (1 << t) - 1, n = i === 1 ? null : this.dbl(), o = 1; o < i; o++)r[o] = r[o - 1].add(n);\n    return {\n        wnd: t,\n        points: r\n    };\n}, Xt.prototype._getBeta = function() {\n    return null;\n}, Xt.prototype.dblp = function(t) {\n    for(var r = this, i = 0; i < t; i++)r = r.dbl();\n    return r;\n};\nvar Di = cr(function(e) {\n    typeof Object.create == \"function\" ? e.exports = function(r, i) {\n        i && (r.super_ = i, r.prototype = Object.create(i.prototype, {\n            constructor: {\n                value: r,\n                enumerable: !1,\n                writable: !0,\n                configurable: !0\n            }\n        }));\n    } : e.exports = function(r, i) {\n        if (i) {\n            r.super_ = i;\n            var n = function() {};\n            n.prototype = i.prototype, r.prototype = new n, r.prototype.constructor = r;\n        }\n    };\n}), Ua = Jt.assert;\nfunction Zt(e) {\n    Ze.call(this, \"short\", e), this.a = new K(e.a, 16).toRed(this.red), this.b = new K(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);\n}\nDi(Zt, Ze);\nvar ka = Zt;\nZt.prototype._getEndomorphism = function(t) {\n    if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {\n        var r, i;\n        if (t.beta) r = new K(t.beta, 16).toRed(this.red);\n        else {\n            var n = this._getEndoRoots(this.p);\n            r = n[0].cmp(n[1]) < 0 ? n[0] : n[1], r = r.toRed(this.red);\n        }\n        if (t.lambda) i = new K(t.lambda, 16);\n        else {\n            var o = this._getEndoRoots(this.n);\n            this.g.mul(o[0]).x.cmp(this.g.x.redMul(r)) === 0 ? i = o[0] : (i = o[1], Ua(this.g.mul(i).x.cmp(this.g.x.redMul(r)) === 0));\n        }\n        var h;\n        return t.basis ? h = t.basis.map(function(p) {\n            return {\n                a: new K(p.a, 16),\n                b: new K(p.b, 16)\n            };\n        }) : h = this._getEndoBasis(i), {\n            beta: r,\n            lambda: i,\n            basis: h\n        };\n    }\n}, Zt.prototype._getEndoRoots = function(t) {\n    var r = t === this.p ? this.red : K.mont(t), i = new K(2).toRed(r).redInvm(), n = i.redNeg(), o = new K(3).toRed(r).redNeg().redSqrt().redMul(i), h = n.redAdd(o).fromRed(), p = n.redSub(o).fromRed();\n    return [\n        h,\n        p\n    ];\n}, Zt.prototype._getEndoBasis = function(t) {\n    for(var r = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), i = t, n = this.n.clone(), o = new K(1), h = new K(0), p = new K(0), b = new K(1), m, w, y, S, I, N, C, F = 0, U, J; i.cmpn(0) !== 0;){\n        var Bt = n.div(i);\n        U = n.sub(Bt.mul(i)), J = p.sub(Bt.mul(o));\n        var G = b.sub(Bt.mul(h));\n        if (!y && U.cmp(r) < 0) m = C.neg(), w = o, y = U.neg(), S = J;\n        else if (y && ++F === 2) break;\n        C = U, n = i, i = U, p = o, o = J, b = h, h = G;\n    }\n    I = U.neg(), N = J;\n    var H = y.sqr().add(S.sqr()), z = I.sqr().add(N.sqr());\n    return z.cmp(H) >= 0 && (I = m, N = w), y.negative && (y = y.neg(), S = S.neg()), I.negative && (I = I.neg(), N = N.neg()), [\n        {\n            a: y,\n            b: S\n        },\n        {\n            a: I,\n            b: N\n        }\n    ];\n}, Zt.prototype._endoSplit = function(t) {\n    var r = this.endo.basis, i = r[0], n = r[1], o = n.b.mul(t).divRound(this.n), h = i.b.neg().mul(t).divRound(this.n), p = o.mul(i.a), b = h.mul(n.a), m = o.mul(i.b), w = h.mul(n.b), y = t.sub(p).sub(b), S = m.add(w).neg();\n    return {\n        k1: y,\n        k2: S\n    };\n}, Zt.prototype.pointFromX = function(t, r) {\n    t = new K(t, 16), t.red || (t = t.toRed(this.red));\n    var i = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b), n = i.redSqrt();\n    if (n.redSqr().redSub(i).cmp(this.zero) !== 0) throw new Error(\"invalid point\");\n    var o = n.fromRed().isOdd();\n    return (r && !o || !r && o) && (n = n.redNeg()), this.point(t, n);\n}, Zt.prototype.validate = function(t) {\n    if (t.inf) return !0;\n    var r = t.x, i = t.y, n = this.a.redMul(r), o = r.redSqr().redMul(r).redIAdd(n).redIAdd(this.b);\n    return i.redSqr().redISub(o).cmpn(0) === 0;\n}, Zt.prototype._endoWnafMulAdd = function(t, r, i) {\n    for(var n = this._endoWnafT1, o = this._endoWnafT2, h = 0; h < t.length; h++){\n        var p = this._endoSplit(r[h]), b = t[h], m = b._getBeta();\n        p.k1.negative && (p.k1.ineg(), b = b.neg(!0)), p.k2.negative && (p.k2.ineg(), m = m.neg(!0)), n[h * 2] = b, n[h * 2 + 1] = m, o[h * 2] = p.k1, o[h * 2 + 1] = p.k2;\n    }\n    for(var w = this._wnafMulAdd(1, n, o, h * 2, i), y = 0; y < h * 2; y++)n[y] = null, o[y] = null;\n    return w;\n};\nfunction Ft(e, t, r, i) {\n    Ze.BasePoint.call(this, e, \"affine\"), t === null && r === null ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new K(t, 16), this.y = new K(r, 16), i && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);\n}\nDi(Ft, Ze.BasePoint), Zt.prototype.point = function(t, r, i) {\n    return new Ft(this, t, r, i);\n}, Zt.prototype.pointFromJSON = function(t, r) {\n    return Ft.fromJSON(this, t, r);\n}, Ft.prototype._getBeta = function() {\n    if (this.curve.endo) {\n        var t = this.precomputed;\n        if (t && t.beta) return t.beta;\n        var r = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n        if (t) {\n            var i = this.curve, n = function(o) {\n                return i.point(o.x.redMul(i.endo.beta), o.y);\n            };\n            t.beta = r, r.precomputed = {\n                beta: null,\n                naf: t.naf && {\n                    wnd: t.naf.wnd,\n                    points: t.naf.points.map(n)\n                },\n                doubles: t.doubles && {\n                    step: t.doubles.step,\n                    points: t.doubles.points.map(n)\n                }\n            };\n        }\n        return r;\n    }\n}, Ft.prototype.toJSON = function() {\n    return this.precomputed ? [\n        this.x,\n        this.y,\n        this.precomputed && {\n            doubles: this.precomputed.doubles && {\n                step: this.precomputed.doubles.step,\n                points: this.precomputed.doubles.points.slice(1)\n            },\n            naf: this.precomputed.naf && {\n                wnd: this.precomputed.naf.wnd,\n                points: this.precomputed.naf.points.slice(1)\n            }\n        }\n    ] : [\n        this.x,\n        this.y\n    ];\n}, Ft.fromJSON = function(t, r, i) {\n    typeof r == \"string\" && (r = JSON.parse(r));\n    var n = t.point(r[0], r[1], i);\n    if (!r[2]) return n;\n    function o(p) {\n        return t.point(p[0], p[1], i);\n    }\n    var h = r[2];\n    return n.precomputed = {\n        beta: null,\n        doubles: h.doubles && {\n            step: h.doubles.step,\n            points: [\n                n\n            ].concat(h.doubles.points.map(o))\n        },\n        naf: h.naf && {\n            wnd: h.naf.wnd,\n            points: [\n                n\n            ].concat(h.naf.points.map(o))\n        }\n    }, n;\n}, Ft.prototype.inspect = function() {\n    return this.isInfinity() ? \"<EC Point Infinity>\" : \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" y: \" + this.y.fromRed().toString(16, 2) + \">\";\n}, Ft.prototype.isInfinity = function() {\n    return this.inf;\n}, Ft.prototype.add = function(t) {\n    if (this.inf) return t;\n    if (t.inf) return this;\n    if (this.eq(t)) return this.dbl();\n    if (this.neg().eq(t)) return this.curve.point(null, null);\n    if (this.x.cmp(t.x) === 0) return this.curve.point(null, null);\n    var r = this.y.redSub(t.y);\n    r.cmpn(0) !== 0 && (r = r.redMul(this.x.redSub(t.x).redInvm()));\n    var i = r.redSqr().redISub(this.x).redISub(t.x), n = r.redMul(this.x.redSub(i)).redISub(this.y);\n    return this.curve.point(i, n);\n}, Ft.prototype.dbl = function() {\n    if (this.inf) return this;\n    var t = this.y.redAdd(this.y);\n    if (t.cmpn(0) === 0) return this.curve.point(null, null);\n    var r = this.curve.a, i = this.x.redSqr(), n = t.redInvm(), o = i.redAdd(i).redIAdd(i).redIAdd(r).redMul(n), h = o.redSqr().redISub(this.x.redAdd(this.x)), p = o.redMul(this.x.redSub(h)).redISub(this.y);\n    return this.curve.point(h, p);\n}, Ft.prototype.getX = function() {\n    return this.x.fromRed();\n}, Ft.prototype.getY = function() {\n    return this.y.fromRed();\n}, Ft.prototype.mul = function(t) {\n    return t = new K(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([\n        this\n    ], [\n        t\n    ]) : this.curve._wnafMul(this, t);\n}, Ft.prototype.mulAdd = function(t, r, i) {\n    var n = [\n        this,\n        r\n    ], o = [\n        t,\n        i\n    ];\n    return this.curve.endo ? this.curve._endoWnafMulAdd(n, o) : this.curve._wnafMulAdd(1, n, o, 2);\n}, Ft.prototype.jmulAdd = function(t, r, i) {\n    var n = [\n        this,\n        r\n    ], o = [\n        t,\n        i\n    ];\n    return this.curve.endo ? this.curve._endoWnafMulAdd(n, o, !0) : this.curve._wnafMulAdd(1, n, o, 2, !0);\n}, Ft.prototype.eq = function(t) {\n    return this === t || this.inf === t.inf && (this.inf || this.x.cmp(t.x) === 0 && this.y.cmp(t.y) === 0);\n}, Ft.prototype.neg = function(t) {\n    if (this.inf) return this;\n    var r = this.curve.point(this.x, this.y.redNeg());\n    if (t && this.precomputed) {\n        var i = this.precomputed, n = function(o) {\n            return o.neg();\n        };\n        r.precomputed = {\n            naf: i.naf && {\n                wnd: i.naf.wnd,\n                points: i.naf.points.map(n)\n            },\n            doubles: i.doubles && {\n                step: i.doubles.step,\n                points: i.doubles.points.map(n)\n            }\n        };\n    }\n    return r;\n}, Ft.prototype.toJ = function() {\n    if (this.inf) return this.curve.jpoint(null, null, null);\n    var t = this.curve.jpoint(this.x, this.y, this.curve.one);\n    return t;\n};\nfunction Tt(e, t, r, i) {\n    Ze.BasePoint.call(this, e, \"jacobian\"), t === null && r === null && i === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new K(0)) : (this.x = new K(t, 16), this.y = new K(r, 16), this.z = new K(i, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;\n}\nDi(Tt, Ze.BasePoint), Zt.prototype.jpoint = function(t, r, i) {\n    return new Tt(this, t, r, i);\n}, Tt.prototype.toP = function() {\n    if (this.isInfinity()) return this.curve.point(null, null);\n    var t = this.z.redInvm(), r = t.redSqr(), i = this.x.redMul(r), n = this.y.redMul(r).redMul(t);\n    return this.curve.point(i, n);\n}, Tt.prototype.neg = function() {\n    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n}, Tt.prototype.add = function(t) {\n    if (this.isInfinity()) return t;\n    if (t.isInfinity()) return this;\n    var r = t.z.redSqr(), i = this.z.redSqr(), n = this.x.redMul(r), o = t.x.redMul(i), h = this.y.redMul(r.redMul(t.z)), p = t.y.redMul(i.redMul(this.z)), b = n.redSub(o), m = h.redSub(p);\n    if (b.cmpn(0) === 0) return m.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();\n    var w = b.redSqr(), y = w.redMul(b), S = n.redMul(w), I = m.redSqr().redIAdd(y).redISub(S).redISub(S), N = m.redMul(S.redISub(I)).redISub(h.redMul(y)), C = this.z.redMul(t.z).redMul(b);\n    return this.curve.jpoint(I, N, C);\n}, Tt.prototype.mixedAdd = function(t) {\n    if (this.isInfinity()) return t.toJ();\n    if (t.isInfinity()) return this;\n    var r = this.z.redSqr(), i = this.x, n = t.x.redMul(r), o = this.y, h = t.y.redMul(r).redMul(this.z), p = i.redSub(n), b = o.redSub(h);\n    if (p.cmpn(0) === 0) return b.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();\n    var m = p.redSqr(), w = m.redMul(p), y = i.redMul(m), S = b.redSqr().redIAdd(w).redISub(y).redISub(y), I = b.redMul(y.redISub(S)).redISub(o.redMul(w)), N = this.z.redMul(p);\n    return this.curve.jpoint(S, I, N);\n}, Tt.prototype.dblp = function(t) {\n    if (t === 0) return this;\n    if (this.isInfinity()) return this;\n    if (!t) return this.dbl();\n    var r;\n    if (this.curve.zeroA || this.curve.threeA) {\n        var i = this;\n        for(r = 0; r < t; r++)i = i.dbl();\n        return i;\n    }\n    var n = this.curve.a, o = this.curve.tinv, h = this.x, p = this.y, b = this.z, m = b.redSqr().redSqr(), w = p.redAdd(p);\n    for(r = 0; r < t; r++){\n        var y = h.redSqr(), S = w.redSqr(), I = S.redSqr(), N = y.redAdd(y).redIAdd(y).redIAdd(n.redMul(m)), C = h.redMul(S), F = N.redSqr().redISub(C.redAdd(C)), U = C.redISub(F), J = N.redMul(U);\n        J = J.redIAdd(J).redISub(I);\n        var Bt = w.redMul(b);\n        r + 1 < t && (m = m.redMul(I)), h = F, b = Bt, w = J;\n    }\n    return this.curve.jpoint(h, w.redMul(o), b);\n}, Tt.prototype.dbl = function() {\n    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();\n}, Tt.prototype._zeroDbl = function() {\n    var t, r, i;\n    if (this.zOne) {\n        var n = this.x.redSqr(), o = this.y.redSqr(), h = o.redSqr(), p = this.x.redAdd(o).redSqr().redISub(n).redISub(h);\n        p = p.redIAdd(p);\n        var b = n.redAdd(n).redIAdd(n), m = b.redSqr().redISub(p).redISub(p), w = h.redIAdd(h);\n        w = w.redIAdd(w), w = w.redIAdd(w), t = m, r = b.redMul(p.redISub(m)).redISub(w), i = this.y.redAdd(this.y);\n    } else {\n        var y = this.x.redSqr(), S = this.y.redSqr(), I = S.redSqr(), N = this.x.redAdd(S).redSqr().redISub(y).redISub(I);\n        N = N.redIAdd(N);\n        var C = y.redAdd(y).redIAdd(y), F = C.redSqr(), U = I.redIAdd(I);\n        U = U.redIAdd(U), U = U.redIAdd(U), t = F.redISub(N).redISub(N), r = C.redMul(N.redISub(t)).redISub(U), i = this.y.redMul(this.z), i = i.redIAdd(i);\n    }\n    return this.curve.jpoint(t, r, i);\n}, Tt.prototype._threeDbl = function() {\n    var t, r, i;\n    if (this.zOne) {\n        var n = this.x.redSqr(), o = this.y.redSqr(), h = o.redSqr(), p = this.x.redAdd(o).redSqr().redISub(n).redISub(h);\n        p = p.redIAdd(p);\n        var b = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a), m = b.redSqr().redISub(p).redISub(p);\n        t = m;\n        var w = h.redIAdd(h);\n        w = w.redIAdd(w), w = w.redIAdd(w), r = b.redMul(p.redISub(m)).redISub(w), i = this.y.redAdd(this.y);\n    } else {\n        var y = this.z.redSqr(), S = this.y.redSqr(), I = this.x.redMul(S), N = this.x.redSub(y).redMul(this.x.redAdd(y));\n        N = N.redAdd(N).redIAdd(N);\n        var C = I.redIAdd(I);\n        C = C.redIAdd(C);\n        var F = C.redAdd(C);\n        t = N.redSqr().redISub(F), i = this.y.redAdd(this.z).redSqr().redISub(S).redISub(y);\n        var U = S.redSqr();\n        U = U.redIAdd(U), U = U.redIAdd(U), U = U.redIAdd(U), r = N.redMul(C.redISub(t)).redISub(U);\n    }\n    return this.curve.jpoint(t, r, i);\n}, Tt.prototype._dbl = function() {\n    var t = this.curve.a, r = this.x, i = this.y, n = this.z, o = n.redSqr().redSqr(), h = r.redSqr(), p = i.redSqr(), b = h.redAdd(h).redIAdd(h).redIAdd(t.redMul(o)), m = r.redAdd(r);\n    m = m.redIAdd(m);\n    var w = m.redMul(p), y = b.redSqr().redISub(w.redAdd(w)), S = w.redISub(y), I = p.redSqr();\n    I = I.redIAdd(I), I = I.redIAdd(I), I = I.redIAdd(I);\n    var N = b.redMul(S).redISub(I), C = i.redAdd(i).redMul(n);\n    return this.curve.jpoint(y, N, C);\n}, Tt.prototype.trpl = function() {\n    if (!this.curve.zeroA) return this.dbl().add(this);\n    var t = this.x.redSqr(), r = this.y.redSqr(), i = this.z.redSqr(), n = r.redSqr(), o = t.redAdd(t).redIAdd(t), h = o.redSqr(), p = this.x.redAdd(r).redSqr().redISub(t).redISub(n);\n    p = p.redIAdd(p), p = p.redAdd(p).redIAdd(p), p = p.redISub(h);\n    var b = p.redSqr(), m = n.redIAdd(n);\n    m = m.redIAdd(m), m = m.redIAdd(m), m = m.redIAdd(m);\n    var w = o.redIAdd(p).redSqr().redISub(h).redISub(b).redISub(m), y = r.redMul(w);\n    y = y.redIAdd(y), y = y.redIAdd(y);\n    var S = this.x.redMul(b).redISub(y);\n    S = S.redIAdd(S), S = S.redIAdd(S);\n    var I = this.y.redMul(w.redMul(m.redISub(w)).redISub(p.redMul(b)));\n    I = I.redIAdd(I), I = I.redIAdd(I), I = I.redIAdd(I);\n    var N = this.z.redAdd(p).redSqr().redISub(i).redISub(b);\n    return this.curve.jpoint(S, I, N);\n}, Tt.prototype.mul = function(t, r) {\n    return t = new K(t, r), this.curve._wnafMul(this, t);\n}, Tt.prototype.eq = function(t) {\n    if (t.type === \"affine\") return this.eq(t.toJ());\n    if (this === t) return !0;\n    var r = this.z.redSqr(), i = t.z.redSqr();\n    if (this.x.redMul(i).redISub(t.x.redMul(r)).cmpn(0) !== 0) return !1;\n    var n = r.redMul(this.z), o = i.redMul(t.z);\n    return this.y.redMul(o).redISub(t.y.redMul(n)).cmpn(0) === 0;\n}, Tt.prototype.eqXToP = function(t) {\n    var r = this.z.redSqr(), i = t.toRed(this.curve.red).redMul(r);\n    if (this.x.cmp(i) === 0) return !0;\n    for(var n = t.clone(), o = this.curve.redN.redMul(r);;){\n        if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;\n        if (i.redIAdd(o), this.x.cmp(i) === 0) return !0;\n    }\n}, Tt.prototype.inspect = function() {\n    return this.isInfinity() ? \"<EC JPoint Infinity>\" : \"<EC JPoint x: \" + this.x.toString(16, 2) + \" y: \" + this.y.toString(16, 2) + \" z: \" + this.z.toString(16, 2) + \">\";\n}, Tt.prototype.isInfinity = function() {\n    return this.z.cmpn(0) === 0;\n};\nvar qr = cr(function(e, t) {\n    var r = t;\n    r.base = Ze, r.short = ka, r.mont = null, r.edwards = null;\n}), Kr = cr(function(e, t) {\n    var r = t, i = Jt.assert;\n    function n(p) {\n        p.type === \"short\" ? this.curve = new qr.short(p) : p.type === \"edwards\" ? this.curve = new qr.edwards(p) : this.curve = new qr.mont(p), this.g = this.curve.g, this.n = this.curve.n, this.hash = p.hash, i(this.g.validate(), \"Invalid curve\"), i(this.g.mul(this.n).isInfinity(), \"Invalid curve, G*N != O\");\n    }\n    r.PresetCurve = n;\n    function o(p, b) {\n        Object.defineProperty(r, p, {\n            configurable: !0,\n            enumerable: !0,\n            get: function() {\n                var m = new n(b);\n                return Object.defineProperty(r, p, {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: m\n                }), m;\n            }\n        });\n    }\n    o(\"p192\", {\n        type: \"short\",\n        prime: \"p192\",\n        p: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",\n        a: \"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",\n        b: \"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",\n        n: \"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\n            \"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"\n        ]\n    }), o(\"p224\", {\n        type: \"short\",\n        prime: \"p224\",\n        p: \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",\n        a: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",\n        b: \"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",\n        n: \"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\n            \"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"\n        ]\n    }), o(\"p256\", {\n        type: \"short\",\n        prime: null,\n        p: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",\n        a: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",\n        b: \"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",\n        n: \"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\n            \"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"\n        ]\n    }), o(\"p384\", {\n        type: \"short\",\n        prime: null,\n        p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff\",\n        a: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc\",\n        b: \"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",\n        n: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",\n        hash: se.sha384,\n        gRed: !1,\n        g: [\n            \"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7\",\n            \"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"\n        ]\n    }), o(\"p521\", {\n        type: \"short\",\n        prime: null,\n        p: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff\",\n        a: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc\",\n        b: \"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",\n        n: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",\n        hash: se.sha512,\n        gRed: !1,\n        g: [\n            \"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\n            \"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650\"\n        ]\n    }), o(\"curve25519\", {\n        type: \"mont\",\n        prime: \"p25519\",\n        p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n        a: \"76d06\",\n        b: \"1\",\n        n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"9\"\n        ]\n    }), o(\"ed25519\", {\n        type: \"edwards\",\n        prime: \"p25519\",\n        p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n        a: \"-1\",\n        c: \"1\",\n        d: \"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",\n        n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\n            \"6666666666666666666666666666666666666666666666666666666666666658\"\n        ]\n    });\n    var h;\n    try {\n        h = null.crash();\n    } catch  {\n        h = void 0;\n    }\n    o(\"secp256k1\", {\n        type: \"short\",\n        prime: \"k256\",\n        p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",\n        a: \"0\",\n        b: \"7\",\n        n: \"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",\n        h: \"1\",\n        hash: se.sha256,\n        beta: \"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",\n        lambda: \"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",\n        basis: [\n            {\n                a: \"3086d221a7d46bcde86c90e49284eb15\",\n                b: \"-e4437ed6010e88286f547fa90abfe4c3\"\n            },\n            {\n                a: \"114ca50f7a8e2f3f657c1108d9d44cfd8\",\n                b: \"3086d221a7d46bcde86c90e49284eb15\"\n            }\n        ],\n        gRed: !1,\n        g: [\n            \"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\n            \"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",\n            h\n        ]\n    });\n});\nfunction Re(e) {\n    if (!(this instanceof Re)) return new Re(e);\n    this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;\n    var t = fe.toArray(e.entropy, e.entropyEnc || \"hex\"), r = fe.toArray(e.nonce, e.nonceEnc || \"hex\"), i = fe.toArray(e.pers, e.persEnc || \"hex\");\n    Pi(t.length >= this.minEntropy / 8, \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"), this._init(t, r, i);\n}\nvar Rf = Re;\nRe.prototype._init = function(t, r, i) {\n    var n = t.concat(r).concat(i);\n    this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);\n    for(var o = 0; o < this.V.length; o++)this.K[o] = 0, this.V[o] = 1;\n    this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656;\n}, Re.prototype._hmac = function() {\n    return new se.hmac(this.hash, this.K);\n}, Re.prototype._update = function(t) {\n    var r = this._hmac().update(this.V).update([\n        0\n    ]);\n    t && (r = r.update(t)), this.K = r.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([\n        1\n    ]).update(t).digest(), this.V = this._hmac().update(this.V).digest());\n}, Re.prototype.reseed = function(t, r, i, n) {\n    typeof r != \"string\" && (n = i, i = r, r = null), t = fe.toArray(t, r), i = fe.toArray(i, n), Pi(t.length >= this.minEntropy / 8, \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"), this._update(t.concat(i || [])), this._reseed = 1;\n}, Re.prototype.generate = function(t, r, i, n) {\n    if (this._reseed > this.reseedInterval) throw new Error(\"Reseed is required\");\n    typeof r != \"string\" && (n = i, i = r, r = null), i && (i = fe.toArray(i, n || \"hex\"), this._update(i));\n    for(var o = []; o.length < t;)this.V = this._hmac().update(this.V).digest(), o = o.concat(this.V);\n    var h = o.slice(0, t);\n    return this._update(i), this._reseed++, fe.encode(h, r);\n};\nvar Fi = Jt.assert;\nfunction kt(e, t) {\n    this.ec = e, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc);\n}\nvar Ti = kt;\nkt.fromPublic = function(t, r, i) {\n    return r instanceof kt ? r : new kt(t, {\n        pub: r,\n        pubEnc: i\n    });\n}, kt.fromPrivate = function(t, r, i) {\n    return r instanceof kt ? r : new kt(t, {\n        priv: r,\n        privEnc: i\n    });\n}, kt.prototype.validate = function() {\n    var t = this.getPublic();\n    return t.isInfinity() ? {\n        result: !1,\n        reason: \"Invalid public key\"\n    } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {\n        result: !0,\n        reason: null\n    } : {\n        result: !1,\n        reason: \"Public key * N != O\"\n    } : {\n        result: !1,\n        reason: \"Public key is not a point\"\n    };\n}, kt.prototype.getPublic = function(t, r) {\n    return typeof t == \"string\" && (r = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r ? this.pub.encode(r, t) : this.pub;\n}, kt.prototype.getPrivate = function(t) {\n    return t === \"hex\" ? this.priv.toString(16, 2) : this.priv;\n}, kt.prototype._importPrivate = function(t, r) {\n    this.priv = new K(t, r || 16), this.priv = this.priv.umod(this.ec.curve.n);\n}, kt.prototype._importPublic = function(t, r) {\n    if (t.x || t.y) {\n        this.ec.curve.type === \"mont\" ? Fi(t.x, \"Need x coordinate\") : (this.ec.curve.type === \"short\" || this.ec.curve.type === \"edwards\") && Fi(t.x && t.y, \"Need both x and y coordinate\"), this.pub = this.ec.curve.point(t.x, t.y);\n        return;\n    }\n    this.pub = this.ec.curve.decodePoint(t, r);\n}, kt.prototype.derive = function(t) {\n    return t.validate() || Fi(t.validate(), \"public point not validated\"), t.mul(this.priv).getX();\n}, kt.prototype.sign = function(t, r, i) {\n    return this.ec.sign(t, this, r, i);\n}, kt.prototype.verify = function(t, r) {\n    return this.ec.verify(t, r, this);\n}, kt.prototype.inspect = function() {\n    return \"<Key priv: \" + (this.priv && this.priv.toString(16, 2)) + \" pub: \" + (this.pub && this.pub.inspect()) + \" >\";\n};\nvar qa = Jt.assert;\nfunction Hr(e, t) {\n    if (e instanceof Hr) return e;\n    this._importDER(e, t) || (qa(e.r && e.s, \"Signature without r or s\"), this.r = new K(e.r, 16), this.s = new K(e.s, 16), e.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam);\n}\nvar zr = Hr;\nfunction Ka() {\n    this.place = 0;\n}\nfunction Ui(e, t) {\n    var r = e[t.place++];\n    if (!(r & 128)) return r;\n    var i = r & 15;\n    if (i === 0 || i > 4) return !1;\n    for(var n = 0, o = 0, h = t.place; o < i; o++, h++)n <<= 8, n |= e[h], n >>>= 0;\n    return n <= 127 ? !1 : (t.place = h, n);\n}\nfunction Of(e) {\n    for(var t = 0, r = e.length - 1; !e[t] && !(e[t + 1] & 128) && t < r;)t++;\n    return t === 0 ? e : e.slice(t);\n}\nHr.prototype._importDER = function(t, r) {\n    t = Jt.toArray(t, r);\n    var i = new Ka;\n    if (t[i.place++] !== 48) return !1;\n    var n = Ui(t, i);\n    if (n === !1 || n + i.place !== t.length || t[i.place++] !== 2) return !1;\n    var o = Ui(t, i);\n    if (o === !1) return !1;\n    var h = t.slice(i.place, o + i.place);\n    if (i.place += o, t[i.place++] !== 2) return !1;\n    var p = Ui(t, i);\n    if (p === !1 || t.length !== p + i.place) return !1;\n    var b = t.slice(i.place, p + i.place);\n    if (h[0] === 0) if (h[1] & 128) h = h.slice(1);\n    else return !1;\n    if (b[0] === 0) if (b[1] & 128) b = b.slice(1);\n    else return !1;\n    return this.r = new K(h), this.s = new K(b), this.recoveryParam = null, !0;\n};\nfunction ki(e, t) {\n    if (t < 128) {\n        e.push(t);\n        return;\n    }\n    var r = 1 + (Math.log(t) / Math.LN2 >>> 3);\n    for(e.push(r | 128); --r;)e.push(t >>> (r << 3) & 255);\n    e.push(t);\n}\nHr.prototype.toDER = function(t) {\n    var r = this.r.toArray(), i = this.s.toArray();\n    for(r[0] & 128 && (r = [\n        0\n    ].concat(r)), i[0] & 128 && (i = [\n        0\n    ].concat(i)), r = Of(r), i = Of(i); !i[0] && !(i[1] & 128);)i = i.slice(1);\n    var n = [\n        2\n    ];\n    ki(n, r.length), n = n.concat(r), n.push(2), ki(n, i.length);\n    var o = n.concat(i), h = [\n        48\n    ];\n    return ki(h, o.length), h = h.concat(o), Jt.encode(h, t);\n};\nvar Ha = function() {\n    throw new Error(\"unsupported\");\n}, Pf = Jt.assert;\nfunction $t(e) {\n    if (!(this instanceof $t)) return new $t(e);\n    typeof e == \"string\" && (Pf(Object.prototype.hasOwnProperty.call(Kr, e), \"Unknown curve \" + e), e = Kr[e]), e instanceof Kr.PresetCurve && (e = {\n        curve: e\n    }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash;\n}\nvar za = $t;\n$t.prototype.keyPair = function(t) {\n    return new Ti(this, t);\n}, $t.prototype.keyFromPrivate = function(t, r) {\n    return Ti.fromPrivate(this, t, r);\n}, $t.prototype.keyFromPublic = function(t, r) {\n    return Ti.fromPublic(this, t, r);\n}, $t.prototype.genKeyPair = function(t) {\n    t || (t = {});\n    for(var r = new Rf({\n        hash: this.hash,\n        pers: t.pers,\n        persEnc: t.persEnc || \"utf8\",\n        entropy: t.entropy || Ha(this.hash.hmacStrength),\n        entropyEnc: t.entropy && t.entropyEnc || \"utf8\",\n        nonce: this.n.toArray()\n    }), i = this.n.byteLength(), n = this.n.sub(new K(2));;){\n        var o = new K(r.generate(i));\n        if (!(o.cmp(n) > 0)) return o.iaddn(1), this.keyFromPrivate(o);\n    }\n}, $t.prototype._truncateToN = function(t, r) {\n    var i = t.byteLength() * 8 - this.n.bitLength();\n    return i > 0 && (t = t.ushrn(i)), !r && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;\n}, $t.prototype.sign = function(t, r, i, n) {\n    typeof i == \"object\" && (n = i, i = null), n || (n = {}), r = this.keyFromPrivate(r, i), t = this._truncateToN(new K(t, 16));\n    for(var o = this.n.byteLength(), h = r.getPrivate().toArray(\"be\", o), p = t.toArray(\"be\", o), b = new Rf({\n        hash: this.hash,\n        entropy: h,\n        nonce: p,\n        pers: n.pers,\n        persEnc: n.persEnc || \"utf8\"\n    }), m = this.n.sub(new K(1)), w = 0;; w++){\n        var y = n.k ? n.k(w) : new K(b.generate(this.n.byteLength()));\n        if (y = this._truncateToN(y, !0), !(y.cmpn(1) <= 0 || y.cmp(m) >= 0)) {\n            var S = this.g.mul(y);\n            if (!S.isInfinity()) {\n                var I = S.getX(), N = I.umod(this.n);\n                if (N.cmpn(0) !== 0) {\n                    var C = y.invm(this.n).mul(N.mul(r.getPrivate()).iadd(t));\n                    if (C = C.umod(this.n), C.cmpn(0) !== 0) {\n                        var F = (S.getY().isOdd() ? 1 : 0) | (I.cmp(N) !== 0 ? 2 : 0);\n                        return n.canonical && C.cmp(this.nh) > 0 && (C = this.n.sub(C), F ^= 1), new zr({\n                            r: N,\n                            s: C,\n                            recoveryParam: F\n                        });\n                    }\n                }\n            }\n        }\n    }\n}, $t.prototype.verify = function(t, r, i, n) {\n    t = this._truncateToN(new K(t, 16)), i = this.keyFromPublic(i, n), r = new zr(r, \"hex\");\n    var o = r.r, h = r.s;\n    if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0 || h.cmpn(1) < 0 || h.cmp(this.n) >= 0) return !1;\n    var p = h.invm(this.n), b = p.mul(t).umod(this.n), m = p.mul(o).umod(this.n), w;\n    return this.curve._maxwellTrick ? (w = this.g.jmulAdd(b, i.getPublic(), m), w.isInfinity() ? !1 : w.eqXToP(o)) : (w = this.g.mulAdd(b, i.getPublic(), m), w.isInfinity() ? !1 : w.getX().umod(this.n).cmp(o) === 0);\n}, $t.prototype.recoverPubKey = function(e, t, r, i) {\n    Pf((3 & r) === r, \"The recovery param is more than two bits\"), t = new zr(t, i);\n    var n = this.n, o = new K(e), h = t.r, p = t.s, b = r & 1, m = r >> 1;\n    if (h.cmp(this.curve.p.umod(this.curve.n)) >= 0 && m) throw new Error(\"Unable to find sencond key candinate\");\n    m ? h = this.curve.pointFromX(h.add(this.curve.n), b) : h = this.curve.pointFromX(h, b);\n    var w = t.r.invm(n), y = n.sub(o).mul(w).umod(n), S = p.mul(w).umod(n);\n    return this.g.mulAdd(y, h, S);\n}, $t.prototype.getKeyRecoveryParam = function(e, t, r, i) {\n    if (t = new zr(t, i), t.recoveryParam !== null) return t.recoveryParam;\n    for(var n = 0; n < 4; n++){\n        var o;\n        try {\n            o = this.recoverPubKey(e, t, n);\n        } catch  {\n            continue;\n        }\n        if (o.eq(r)) return n;\n    }\n    throw new Error(\"Unable to find valid recovery factor\");\n};\nvar La = cr(function(e, t) {\n    var r = t;\n    r.version = \"6.5.4\", r.utils = Jt, r.rand = function() {\n        throw new Error(\"unsupported\");\n    }, r.curve = qr, r.curves = Kr, r.ec = za, r.eddsa = null;\n}), ja = La.ec;\nconst Qa = \"signing-key/5.7.0\", qi = new L(Qa);\nlet Ki = null;\nfunction ve() {\n    return Ki || (Ki = new ja(\"secp256k1\")), Ki;\n}\nclass Ja {\n    constructor(t){\n        br(this, \"curve\", \"secp256k1\"), br(this, \"privateKey\", Kt(t)), N0(this.privateKey) !== 32 && qi.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        const r = ve().keyFromPrivate(Ot(this.privateKey));\n        br(this, \"publicKey\", \"0x\" + r.getPublic(!1, \"hex\")), br(this, \"compressedPublicKey\", \"0x\" + r.getPublic(!0, \"hex\")), br(this, \"_isSigningKey\", !0);\n    }\n    _addPoint(t) {\n        const r = ve().keyFromPublic(Ot(this.publicKey)), i = ve().keyFromPublic(Ot(t));\n        return \"0x\" + r.pub.add(i.pub).encodeCompressed(\"hex\");\n    }\n    signDigest(t) {\n        const r = ve().keyFromPrivate(Ot(this.privateKey)), i = Ot(t);\n        i.length !== 32 && qi.throwArgumentError(\"bad digest length\", \"digest\", t);\n        const n = r.sign(i, {\n            canonical: !0\n        });\n        return zn({\n            recoveryParam: n.recoveryParam,\n            r: oe(\"0x\" + n.r.toString(16), 32),\n            s: oe(\"0x\" + n.s.toString(16), 32)\n        });\n    }\n    computeSharedSecret(t) {\n        const r = ve().keyFromPrivate(Ot(this.privateKey)), i = ve().keyFromPublic(Ot(Df(t)));\n        return oe(\"0x\" + r.derive(i.getPublic()).toString(16), 32);\n    }\n    static isSigningKey(t) {\n        return !!(t && t._isSigningKey);\n    }\n}\nfunction Ga(e, t) {\n    const r = zn(t), i = {\n        r: Ot(r.r),\n        s: Ot(r.s)\n    };\n    return \"0x\" + ve().recoverPubKey(Ot(e), i, r.recoveryParam).encode(\"hex\", !1);\n}\nfunction Df(e, t) {\n    const r = Ot(e);\n    if (r.length === 32) {\n        const i = new Ja(r);\n        return t ? \"0x\" + ve().keyFromPrivate(r).getPublic(!0, \"hex\") : i.publicKey;\n    } else {\n        if (r.length === 33) return t ? Kt(r) : \"0x\" + ve().keyFromPublic(r).getPublic(!1, \"hex\");\n        if (r.length === 65) return t ? \"0x\" + ve().keyFromPublic(r).getPublic(!0, \"hex\") : Kt(r);\n    }\n    return qi.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\nconst Ya = \"transactions/5.7.0\";\nnew L(Ya);\nvar Ff;\n(function(e) {\n    e[e.legacy = 0] = \"legacy\", e[e.eip2930 = 1] = \"eip2930\", e[e.eip1559 = 2] = \"eip1559\";\n})(Ff || (Ff = {}));\nfunction Va(e) {\n    const t = Df(e);\n    return ns(Hn(yi(Hn(t, 1)), 12));\n}\nfunction Wa(e, t) {\n    return Va(Ga(Ot(e), t));\n}\nconst Xa = \"https://rpc.walletconnect.com/v1\";\nasync function Tf(e, t, r, i, n, o) {\n    switch(r.t){\n        case \"eip191\":\n            return Uf(e, t, r.s);\n        case \"eip1271\":\n            return await kf(e, t, r.s, i, n, o);\n        default:\n            throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${r.t}`);\n    }\n}\nfunction Uf(e, t, r) {\n    return Wa(ff(t), r).toLowerCase() === e.toLowerCase();\n}\nasync function kf(e, t, r, i, n, o) {\n    try {\n        const h = \"0x1626ba7e\", p = \"0000000000000000000000000000000000000000000000000000000000000040\", b = \"0000000000000000000000000000000000000000000000000000000000000041\", m = r.substring(2), w = ff(t).substring(2), y = h + w + p + b + m, S = await fetch(`${o || Xa}/?chainId=${i}&projectId=${n}`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                id: Za(),\n                jsonrpc: \"2.0\",\n                method: \"eth_call\",\n                params: [\n                    {\n                        to: e,\n                        data: y\n                    },\n                    \"latest\"\n                ]\n            })\n        }), { result: I } = await S.json();\n        return I ? I.slice(0, h.length).toLowerCase() === h.toLowerCase() : !1;\n    } catch (h) {\n        return console.error(\"isValidEip1271Signature: \", h), !1;\n    }\n}\nfunction Za() {\n    return Date.now() + Math.floor(Math.random() * 1e3);\n}\nvar $a = Object.defineProperty, tu = Object.defineProperties, eu = Object.getOwnPropertyDescriptors, qf = Object.getOwnPropertySymbols, ru = Object.prototype.hasOwnProperty, iu = Object.prototype.propertyIsEnumerable, Kf = (e, t, r)=>t in e ? $a(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, Hi = (e, t)=>{\n    for(var r in t || (t = {}))ru.call(t, r) && Kf(e, r, t[r]);\n    if (qf) for (var r of qf(t))iu.call(t, r) && Kf(e, r, t[r]);\n    return e;\n}, Hf = (e, t)=>tu(e, eu(t));\nconst nu = \"did:pkh:\", Lr = (e)=>e?.split(\":\"), zi = (e)=>{\n    const t = e && Lr(e);\n    if (t) return e.includes(nu) ? t[3] : t[1];\n}, fu = (e)=>{\n    const t = e && Lr(e);\n    if (t) return t[2] + \":\" + t[3];\n}, Li = (e)=>{\n    const t = e && Lr(e);\n    if (t) return t.pop();\n};\nasync function ou(e) {\n    const { cacao: t, projectId: r } = e, { s: i, p: n } = t, o = zf(n, n.iss), h = Li(n.iss);\n    return await Tf(h, o, i, zi(n.iss), r);\n}\nconst zf = (e, t)=>{\n    const r = `${e.domain} wants you to sign in with your Ethereum account:`, i = Li(t);\n    if (!e.aud && !e.uri) throw new Error(\"Either `aud` or `uri` is required to construct the message\");\n    let n = e.statement || void 0;\n    const o = `URI: ${e.aud || e.uri}`, h = `Version: ${e.version}`, p = `Chain ID: ${zi(t)}`, b = `Nonce: ${e.nonce}`, m = `Issued At: ${e.iat}`, w = e.resources ? `Resources:${e.resources.map((S)=>`\n- ${S}`).join(\"\")}` : void 0, y = Qr(e.resources);\n    if (y) {\n        const S = Oe(y);\n        n = Ji(n, S);\n    }\n    return [\n        r,\n        i,\n        \"\",\n        n,\n        \"\",\n        o,\n        h,\n        p,\n        b,\n        m,\n        w\n    ].filter((S)=>S != null).join(`\n`);\n};\nfunction su(e, t, r) {\n    return r.includes(\"did:pkh:\") || (r = `did:pkh:${r}`), {\n        h: {\n            t: \"caip122\"\n        },\n        p: {\n            iss: r,\n            domain: e.domain,\n            aud: e.aud,\n            version: e.version,\n            nonce: e.nonce,\n            iat: e.iat,\n            statement: e.statement,\n            requestId: e.requestId,\n            resources: e.resources,\n            nbf: e.nbf,\n            exp: e.exp\n        },\n        s: t\n    };\n}\nfunction au(e) {\n    var t;\n    const { authPayload: r, chains: i, methods: n } = e, o = r.statement || \"\";\n    if (!(i != null && i.length)) return r;\n    const h = r.chains, p = mi(h, i);\n    if (!(p != null && p.length)) throw new Error(\"No supported chains\");\n    const b = Lf(r.resources);\n    if (!b) return r;\n    me(b);\n    const m = jf(b, \"eip155\");\n    let w = r?.resources || [];\n    if (m != null && m.length) {\n        const y = Qf(m), S = mi(y, n);\n        if (!(S != null && S.length)) throw new Error(`Supported methods don't satisfy the requested: ${JSON.stringify(y)}, supported: ${JSON.stringify(n)}`);\n        const I = ji(\"request\", S, {\n            chains: p\n        }), N = Vf(b, \"eip155\", I);\n        w = ((t = r?.resources) == null ? void 0 : t.slice(0, -1)) || [], w.push(jr(N));\n    }\n    return Hf(Hi({}, r), {\n        statement: Xf(o, Qr(w)),\n        chains: p,\n        resources: r != null && r.resources || w.length > 0 ? w : void 0\n    });\n}\nfunction Lf(e) {\n    const t = Qr(e);\n    if (t && Qi(t)) return Oe(t);\n}\nfunction uu(e, t) {\n    var r;\n    return (r = e?.att) == null ? void 0 : r.hasOwnProperty(t);\n}\nfunction jf(e, t) {\n    var r, i;\n    return (r = e?.att) != null && r[t] ? Object.keys((i = e?.att) == null ? void 0 : i[t]) : [];\n}\nfunction hu(e) {\n    return e?.map((t)=>Object.keys(t)) || [];\n}\nfunction Qf(e) {\n    return e?.map((t)=>{\n        var r;\n        return (r = t.split(\"/\")) == null ? void 0 : r[1];\n    }) || [];\n}\nfunction Jf(e) {\n    return Buffer.from(JSON.stringify(e)).toString(\"base64\");\n}\nfunction Gf(e) {\n    return JSON.parse(Buffer.from(e, \"base64\").toString(\"utf-8\"));\n}\nfunction me(e) {\n    if (!e) throw new Error(\"No recap provided, value is undefined\");\n    if (!e.att) throw new Error(\"No `att` property found\");\n    const t = Object.keys(e.att);\n    if (!(t != null && t.length)) throw new Error(\"No resources found in `att` property\");\n    t.forEach((r)=>{\n        const i = e.att[r];\n        if (Array.isArray(i)) throw new Error(`Resource must be an object: ${r}`);\n        if (typeof i != \"object\") throw new Error(`Resource must be an object: ${r}`);\n        if (!Object.keys(i).length) throw new Error(`Resource object is empty: ${r}`);\n        Object.keys(i).forEach((n)=>{\n            const o = i[n];\n            if (!Array.isArray(o)) throw new Error(`Ability limits ${n} must be an array of objects, found: ${o}`);\n            if (!o.length) throw new Error(`Value of ${n} is empty array, must be an array with objects`);\n            o.forEach((h)=>{\n                if (typeof h != \"object\") throw new Error(`Ability limits (${n}) must be an array of objects, found: ${h}`);\n            });\n        });\n    });\n}\nfunction Yf(e, t, r, i = {}) {\n    return r?.sort((n, o)=>n.localeCompare(o)), {\n        att: {\n            [e]: ji(t, r, i)\n        }\n    };\n}\nfunction Vf(e, t, r) {\n    var i;\n    return e.att[t] = Hi({}, r), ((i = Object.keys(e.att)) == null ? void 0 : i.sort((n, o)=>n.localeCompare(o))).reduce((n, o)=>(n.att[o] = e.att[o], n), {\n        att: {}\n    });\n}\nfunction ji(e, t, r = {}) {\n    t = t?.sort((n, o)=>n.localeCompare(o));\n    const i = t.map((n)=>({\n            [`${e}/${n}`]: [\n                r\n            ]\n        }));\n    return Object.assign({}, ...i);\n}\nfunction jr(e) {\n    return me(e), `urn:recap:${Jf(e).replace(/=/g, \"\")}`;\n}\nfunction Oe(e) {\n    const t = Gf(e.replace(\"urn:recap:\", \"\"));\n    return me(t), t;\n}\nfunction cu(e, t, r) {\n    const i = Yf(e, t, r);\n    return jr(i);\n}\nfunction Qi(e) {\n    return e && e.includes(\"urn:recap:\");\n}\nfunction lu(e, t) {\n    const r = Oe(e), i = Oe(t), n = Wf(r, i);\n    return jr(n);\n}\nfunction Wf(e, t) {\n    me(e), me(t);\n    const r = Object.keys(e.att).concat(Object.keys(t.att)).sort((n, o)=>n.localeCompare(o)), i = {\n        att: {}\n    };\n    return r.forEach((n)=>{\n        var o, h;\n        Object.keys(((o = e.att) == null ? void 0 : o[n]) || {}).concat(Object.keys(((h = t.att) == null ? void 0 : h[n]) || {})).sort((p, b)=>p.localeCompare(b)).forEach((p)=>{\n            var b, m;\n            i.att[n] = Hf(Hi({}, i.att[n]), {\n                [p]: ((b = e.att[n]) == null ? void 0 : b[p]) || ((m = t.att[n]) == null ? void 0 : m[p])\n            });\n        });\n    }), i;\n}\nfunction Ji(e = \"\", t) {\n    me(t);\n    const r = \"I further authorize the stated URI to perform the following actions on my behalf: \";\n    if (e.includes(r)) return e;\n    const i = [];\n    let n = 0;\n    Object.keys(t.att).forEach((p)=>{\n        const b = Object.keys(t.att[p]).map((y)=>({\n                ability: y.split(\"/\")[0],\n                action: y.split(\"/\")[1]\n            }));\n        b.sort((y, S)=>y.action.localeCompare(S.action));\n        const m = {};\n        b.forEach((y)=>{\n            m[y.ability] || (m[y.ability] = []), m[y.ability].push(y.action);\n        });\n        const w = Object.keys(m).map((y)=>(n++, `(${n}) '${y}': '${m[y].join(\"', '\")}' for '${p}'.`));\n        i.push(w.join(\", \").replace(\".,\", \".\"));\n    });\n    const o = i.join(\" \"), h = `${r}${o}`;\n    return `${e ? e + \" \" : \"\"}${h}`;\n}\nfunction du(e) {\n    var t;\n    const r = Oe(e);\n    me(r);\n    const i = (t = r.att) == null ? void 0 : t.eip155;\n    return i ? Object.keys(i).map((n)=>n.split(\"/\")[1]) : [];\n}\nfunction pu(e) {\n    const t = Oe(e);\n    me(t);\n    const r = [];\n    return Object.values(t.att).forEach((i)=>{\n        Object.values(i).forEach((n)=>{\n            var o;\n            (o = n?.[0]) != null && o.chains && r.push(n[0].chains);\n        });\n    }), [\n        ...new Set(r.flat())\n    ];\n}\nfunction Xf(e, t) {\n    if (!t) return e;\n    const r = Oe(t);\n    return me(r), Ji(e, r);\n}\nfunction Qr(e) {\n    if (!e) return;\n    const t = e?.[e.length - 1];\n    return Qi(t) ? t : void 0;\n}\nconst Gi = \"base10\", zt = \"base16\", Jr = \"base64pad\", Gr = \"utf8\", Yi = 0, lr = 1, vu = 0, Zf = 1, Vi = 12, Wi = 32;\nfunction mu() {\n    const e = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__.generateKeyPair();\n    return {\n        privateKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e.secretKey, zt),\n        publicKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e.publicKey, zt)\n    };\n}\nfunction gu() {\n    const e = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(Wi);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e, zt);\n}\nfunction Au(e, t) {\n    const r = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__.sharedKey((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, zt), (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(t, zt), !0), i = new _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_5__.HKDF(_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.SHA256, r).expand(Wi);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(i, zt);\n}\nfunction bu(e) {\n    const t = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, zt));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(t, zt);\n}\nfunction yu(e) {\n    const t = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, Gr));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(t, zt);\n}\nfunction $f(e) {\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(`${e}`, Gi);\n}\nfunction Mr(e) {\n    return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e, Gi));\n}\nfunction wu(e) {\n    const t = $f(typeof e.type < \"u\" ? e.type : Yi);\n    if (Mr(t) === lr && typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n    const r = typeof e.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.senderPublicKey, zt) : void 0, i = typeof e.iv < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.iv, zt) : (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(Vi), n = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.symKey, zt)).seal(i, (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.message, Gr));\n    return to({\n        type: t,\n        sealed: n,\n        iv: i,\n        senderPublicKey: r\n    });\n}\nfunction xu(e) {\n    const t = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.symKey, zt)), { sealed: r, iv: i } = Xi(e.encoded), n = t.open(i, r);\n    if (n === null) throw new Error(\"Failed to decrypt\");\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(n, Gr);\n}\nfunction to(e) {\n    if (Mr(e.type) === lr) {\n        if (typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n        return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.concat)([\n            e.type,\n            e.senderPublicKey,\n            e.iv,\n            e.sealed\n        ]), Jr);\n    }\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.concat)([\n        e.type,\n        e.iv,\n        e.sealed\n    ]), Jr);\n}\nfunction Xi(e) {\n    const t = (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, Jr), r = t.slice(vu, Zf), i = Zf;\n    if (Mr(r) === lr) {\n        const p = i + Wi, b = p + Vi, m = t.slice(i, p), w = t.slice(p, b), y = t.slice(b);\n        return {\n            type: r,\n            sealed: y,\n            iv: w,\n            senderPublicKey: m\n        };\n    }\n    const n = i + Vi, o = t.slice(i, n), h = t.slice(n);\n    return {\n        type: r,\n        sealed: h,\n        iv: o\n    };\n}\nfunction Mu(e, t) {\n    const r = Xi(e);\n    return eo({\n        type: Mr(r.type),\n        senderPublicKey: typeof r.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(r.senderPublicKey, zt) : void 0,\n        receiverPublicKey: t?.receiverPublicKey\n    });\n}\nfunction eo(e) {\n    const t = e?.type || Yi;\n    if (t === lr) {\n        if (typeof e?.senderPublicKey > \"u\") throw new Error(\"missing sender public key\");\n        if (typeof e?.receiverPublicKey > \"u\") throw new Error(\"missing receiver public key\");\n    }\n    return {\n        type: t,\n        senderPublicKey: e?.senderPublicKey,\n        receiverPublicKey: e?.receiverPublicKey\n    };\n}\nfunction Eu(e) {\n    return e.type === lr && typeof e.senderPublicKey == \"string\" && typeof e.receiverPublicKey == \"string\";\n}\nconst ro = \"irn\";\nfunction Su(e) {\n    return e?.relay || {\n        protocol: ro\n    };\n}\nfunction Nu(e) {\n    const t = _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__.RELAY_JSONRPC[e];\n    if (typeof t > \"u\") throw new Error(`Relay Protocol not supported: ${e}`);\n    return t;\n}\nvar Iu = Object.defineProperty, _u = Object.defineProperties, Bu = Object.getOwnPropertyDescriptors, io = Object.getOwnPropertySymbols, Cu = Object.prototype.hasOwnProperty, Ru = Object.prototype.propertyIsEnumerable, no = (e, t, r)=>t in e ? Iu(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, fo = (e, t)=>{\n    for(var r in t || (t = {}))Cu.call(t, r) && no(e, r, t[r]);\n    if (io) for (var r of io(t))Ru.call(t, r) && no(e, r, t[r]);\n    return e;\n}, Ou = (e, t)=>_u(e, Bu(t));\nfunction oo(e, t = \"-\") {\n    const r = {}, i = \"relay\" + t;\n    return Object.keys(e).forEach((n)=>{\n        if (n.startsWith(i)) {\n            const o = n.replace(i, \"\"), h = e[n];\n            r[o] = h;\n        }\n    }), r;\n}\nfunction Pu(e) {\n    e = e.includes(\"wc://\") ? e.replace(\"wc://\", \"\") : e, e = e.includes(\"wc:\") ? e.replace(\"wc:\", \"\") : e;\n    const t = e.indexOf(\":\"), r = e.indexOf(\"?\") !== -1 ? e.indexOf(\"?\") : void 0, i = e.substring(0, t), n = e.substring(t + 1, r).split(\"@\"), o = typeof r < \"u\" ? e.substring(r) : \"\", h = query_string__WEBPACK_IMPORTED_MODULE_3__.parse(o), p = typeof h.methods == \"string\" ? h.methods.split(\",\") : void 0;\n    return {\n        protocol: i,\n        topic: so(n[0]),\n        version: parseInt(n[1], 10),\n        symKey: h.symKey,\n        relay: oo(h),\n        methods: p,\n        expiryTimestamp: h.expiryTimestamp ? parseInt(h.expiryTimestamp, 10) : void 0\n    };\n}\nfunction so(e) {\n    return e.startsWith(\"//\") ? e.substring(2) : e;\n}\nfunction ao(e, t = \"-\") {\n    const r = \"relay\", i = {};\n    return Object.keys(e).forEach((n)=>{\n        const o = r + t + n;\n        e[n] && (i[o] = e[n]);\n    }), i;\n}\nfunction Du(e) {\n    return `${e.protocol}:${e.topic}@${e.version}?` + query_string__WEBPACK_IMPORTED_MODULE_3__.stringify(fo(Ou(fo({\n        symKey: e.symKey\n    }, ao(e.relay)), {\n        expiryTimestamp: e.expiryTimestamp\n    }), e.methods ? {\n        methods: e.methods.join(\",\")\n    } : {}));\n}\nvar Fu = Object.defineProperty, Tu = Object.defineProperties, Uu = Object.getOwnPropertyDescriptors, uo = Object.getOwnPropertySymbols, ku = Object.prototype.hasOwnProperty, qu = Object.prototype.propertyIsEnumerable, ho = (e, t, r)=>t in e ? Fu(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, Ku = (e, t)=>{\n    for(var r in t || (t = {}))ku.call(t, r) && ho(e, r, t[r]);\n    if (uo) for (var r of uo(t))qu.call(t, r) && ho(e, r, t[r]);\n    return e;\n}, Hu = (e, t)=>Tu(e, Uu(t));\nfunction $e(e) {\n    const t = [];\n    return e.forEach((r)=>{\n        const [i, n] = r.split(\":\");\n        t.push(`${i}:${n}`);\n    }), t;\n}\nfunction co(e) {\n    const t = [];\n    return Object.values(e).forEach((r)=>{\n        t.push(...$e(r.accounts));\n    }), t;\n}\nfunction lo(e, t) {\n    const r = [];\n    return Object.values(e).forEach((i)=>{\n        $e(i.accounts).includes(t) && r.push(...i.methods);\n    }), r;\n}\nfunction po(e, t) {\n    const r = [];\n    return Object.values(e).forEach((i)=>{\n        $e(i.accounts).includes(t) && r.push(...i.events);\n    }), r;\n}\nfunction zu(e, t) {\n    const r = So(e, t);\n    if (r) throw new Error(r.message);\n    const i = {};\n    for (const [n, o] of Object.entries(e))i[n] = {\n        methods: o.methods,\n        events: o.events,\n        chains: o.accounts.map((h)=>`${h.split(\":\")[0]}:${h.split(\":\")[1]}`)\n    };\n    return i;\n}\nfunction Lu(e) {\n    const { proposal: { requiredNamespaces: t, optionalNamespaces: r = {} }, supportedNamespaces: i } = e, n = $i(t), o = $i(r), h = {};\n    Object.keys(i).forEach((m)=>{\n        const w = i[m].chains, y = i[m].methods, S = i[m].events, I = i[m].accounts;\n        w.forEach((N)=>{\n            if (!I.some((C)=>C.includes(N))) throw new Error(`No accounts provided for chain ${N} in namespace ${m}`);\n        }), h[m] = {\n            chains: w,\n            methods: y,\n            events: S,\n            accounts: I\n        };\n    });\n    const p = Io(t, h, \"approve()\");\n    if (p) throw new Error(p.message);\n    const b = {};\n    return !Object.keys(t).length && !Object.keys(r).length ? h : (Object.keys(n).forEach((m)=>{\n        const w = i[m].chains.filter((N)=>{\n            var C, F;\n            return (F = (C = n[m]) == null ? void 0 : C.chains) == null ? void 0 : F.includes(N);\n        }), y = i[m].methods.filter((N)=>{\n            var C, F;\n            return (F = (C = n[m]) == null ? void 0 : C.methods) == null ? void 0 : F.includes(N);\n        }), S = i[m].events.filter((N)=>{\n            var C, F;\n            return (F = (C = n[m]) == null ? void 0 : C.events) == null ? void 0 : F.includes(N);\n        }), I = w.map((N)=>i[m].accounts.filter((C)=>C.includes(`${N}:`))).flat();\n        b[m] = {\n            chains: w,\n            methods: y,\n            events: S,\n            accounts: I\n        };\n    }), Object.keys(o).forEach((m)=>{\n        var w, y, S, I, N, C;\n        if (!i[m]) return;\n        const F = (y = (w = o[m]) == null ? void 0 : w.chains) == null ? void 0 : y.filter((G)=>i[m].chains.includes(G)), U = i[m].methods.filter((G)=>{\n            var H, z;\n            return (z = (H = o[m]) == null ? void 0 : H.methods) == null ? void 0 : z.includes(G);\n        }), J = i[m].events.filter((G)=>{\n            var H, z;\n            return (z = (H = o[m]) == null ? void 0 : H.events) == null ? void 0 : z.includes(G);\n        }), Bt = F?.map((G)=>i[m].accounts.filter((H)=>H.includes(`${G}:`))).flat();\n        b[m] = {\n            chains: ge((S = b[m]) == null ? void 0 : S.chains, F),\n            methods: ge((I = b[m]) == null ? void 0 : I.methods, U),\n            events: ge((N = b[m]) == null ? void 0 : N.events, J),\n            accounts: ge((C = b[m]) == null ? void 0 : C.accounts, Bt)\n        };\n    }), b);\n}\nfunction Zi(e) {\n    return e.includes(\":\");\n}\nfunction vo(e) {\n    return Zi(e) ? e.split(\":\")[0] : e;\n}\nfunction $i(e) {\n    var t, r, i;\n    const n = {};\n    if (!Yr(e)) return n;\n    for (const [o, h] of Object.entries(e)){\n        const p = Zi(o) ? [\n            o\n        ] : h.chains, b = h.methods || [], m = h.events || [], w = vo(o);\n        n[w] = Hu(Ku({}, n[w]), {\n            chains: ge(p, (t = n[w]) == null ? void 0 : t.chains),\n            methods: ge(b, (r = n[w]) == null ? void 0 : r.methods),\n            events: ge(m, (i = n[w]) == null ? void 0 : i.events)\n        });\n    }\n    return n;\n}\nfunction mo(e) {\n    const t = {};\n    return e?.forEach((r)=>{\n        const [i, n] = r.split(\":\");\n        t[i] || (t[i] = {\n            accounts: [],\n            chains: [],\n            events: []\n        }), t[i].accounts.push(r), t[i].chains.push(`${i}:${n}`);\n    }), t;\n}\nfunction ju(e, t) {\n    t = t.map((i)=>i.replace(\"did:pkh:\", \"\"));\n    const r = mo(t);\n    for (const [i, n] of Object.entries(r))n.methods ? n.methods = ge(n.methods, e) : n.methods = e, n.events = [\n        \"chainChanged\",\n        \"accountsChanged\"\n    ];\n    return r;\n}\nconst go = {\n    INVALID_METHOD: {\n        message: \"Invalid method.\",\n        code: 1001\n    },\n    INVALID_EVENT: {\n        message: \"Invalid event.\",\n        code: 1002\n    },\n    INVALID_UPDATE_REQUEST: {\n        message: \"Invalid update request.\",\n        code: 1003\n    },\n    INVALID_EXTEND_REQUEST: {\n        message: \"Invalid extend request.\",\n        code: 1004\n    },\n    INVALID_SESSION_SETTLE_REQUEST: {\n        message: \"Invalid session settle request.\",\n        code: 1005\n    },\n    UNAUTHORIZED_METHOD: {\n        message: \"Unauthorized method.\",\n        code: 3001\n    },\n    UNAUTHORIZED_EVENT: {\n        message: \"Unauthorized event.\",\n        code: 3002\n    },\n    UNAUTHORIZED_UPDATE_REQUEST: {\n        message: \"Unauthorized update request.\",\n        code: 3003\n    },\n    UNAUTHORIZED_EXTEND_REQUEST: {\n        message: \"Unauthorized extend request.\",\n        code: 3004\n    },\n    USER_REJECTED: {\n        message: \"User rejected.\",\n        code: 5e3\n    },\n    USER_REJECTED_CHAINS: {\n        message: \"User rejected chains.\",\n        code: 5001\n    },\n    USER_REJECTED_METHODS: {\n        message: \"User rejected methods.\",\n        code: 5002\n    },\n    USER_REJECTED_EVENTS: {\n        message: \"User rejected events.\",\n        code: 5003\n    },\n    UNSUPPORTED_CHAINS: {\n        message: \"Unsupported chains.\",\n        code: 5100\n    },\n    UNSUPPORTED_METHODS: {\n        message: \"Unsupported methods.\",\n        code: 5101\n    },\n    UNSUPPORTED_EVENTS: {\n        message: \"Unsupported events.\",\n        code: 5102\n    },\n    UNSUPPORTED_ACCOUNTS: {\n        message: \"Unsupported accounts.\",\n        code: 5103\n    },\n    UNSUPPORTED_NAMESPACE_KEY: {\n        message: \"Unsupported namespace key.\",\n        code: 5104\n    },\n    USER_DISCONNECTED: {\n        message: \"User disconnected.\",\n        code: 6e3\n    },\n    SESSION_SETTLEMENT_FAILED: {\n        message: \"Session settlement failed.\",\n        code: 7e3\n    },\n    WC_METHOD_UNSUPPORTED: {\n        message: \"Unsupported wc_ method.\",\n        code: 10001\n    }\n}, Ao = {\n    NOT_INITIALIZED: {\n        message: \"Not initialized.\",\n        code: 1\n    },\n    NO_MATCHING_KEY: {\n        message: \"No matching key.\",\n        code: 2\n    },\n    RESTORE_WILL_OVERRIDE: {\n        message: \"Restore will override.\",\n        code: 3\n    },\n    RESUBSCRIBED: {\n        message: \"Resubscribed.\",\n        code: 4\n    },\n    MISSING_OR_INVALID: {\n        message: \"Missing or invalid.\",\n        code: 5\n    },\n    EXPIRED: {\n        message: \"Expired.\",\n        code: 6\n    },\n    UNKNOWN_TYPE: {\n        message: \"Unknown type.\",\n        code: 7\n    },\n    MISMATCHED_TOPIC: {\n        message: \"Mismatched topic.\",\n        code: 8\n    },\n    NON_CONFORMING_NAMESPACES: {\n        message: \"Non conforming namespaces.\",\n        code: 9\n    }\n};\nfunction xe(e, t) {\n    const { message: r, code: i } = Ao[e];\n    return {\n        message: t ? `${r} ${t}` : r,\n        code: i\n    };\n}\nfunction tr(e, t) {\n    const { message: r, code: i } = go[e];\n    return {\n        message: t ? `${r} ${t}` : r,\n        code: i\n    };\n}\nfunction Er(e, t) {\n    return Array.isArray(e) ? typeof t < \"u\" && e.length ? e.every(t) : !0 : !1;\n}\nfunction Yr(e) {\n    return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;\n}\nfunction Pe(e) {\n    return typeof e > \"u\";\n}\nfunction Gt(e, t) {\n    return t && Pe(e) ? !0 : typeof e == \"string\" && !!e.trim().length;\n}\nfunction Vr(e, t) {\n    return t && Pe(e) ? !0 : typeof e == \"number\" && !isNaN(e);\n}\nfunction Qu(e, t) {\n    const { requiredNamespaces: r } = t, i = Object.keys(e.namespaces), n = Object.keys(r);\n    let o = !0;\n    return _e(n, i) ? (i.forEach((h)=>{\n        const { accounts: p, methods: b, events: m } = e.namespaces[h], w = $e(p), y = r[h];\n        (!_e(_r(h, y), w) || !_e(y.methods, b) || !_e(y.events, m)) && (o = !1);\n    }), o) : !1;\n}\nfunction Sr(e) {\n    return Gt(e, !1) && e.includes(\":\") ? e.split(\":\").length === 2 : !1;\n}\nfunction bo(e) {\n    if (Gt(e, !1) && e.includes(\":\")) {\n        const t = e.split(\":\");\n        if (t.length === 3) {\n            const r = t[0] + \":\" + t[1];\n            return !!t[2] && Sr(r);\n        }\n    }\n    return !1;\n}\nfunction Ju(e) {\n    if (Gt(e, !1)) try {\n        return typeof new URL(e) < \"u\";\n    } catch  {\n        return !1;\n    }\n    return !1;\n}\nfunction Gu(e) {\n    var t;\n    return (t = e?.proposer) == null ? void 0 : t.publicKey;\n}\nfunction Yu(e) {\n    return e?.topic;\n}\nfunction Vu(e, t) {\n    let r = null;\n    return Gt(e?.publicKey, !1) || (r = xe(\"MISSING_OR_INVALID\", `${t} controller public key should be a string`)), r;\n}\nfunction tn(e) {\n    let t = !0;\n    return Er(e) ? e.length && (t = e.every((r)=>Gt(r, !1))) : t = !1, t;\n}\nfunction yo(e, t, r) {\n    let i = null;\n    return Er(t) && t.length ? t.forEach((n)=>{\n        i || Sr(n) || (i = tr(\"UNSUPPORTED_CHAINS\", `${r}, chain ${n} should be a string and conform to \"namespace:chainId\" format`));\n    }) : Sr(e) || (i = tr(\"UNSUPPORTED_CHAINS\", `${r}, chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }`)), i;\n}\nfunction wo(e, t, r) {\n    let i = null;\n    return Object.entries(e).forEach(([n, o])=>{\n        if (i) return;\n        const h = yo(n, _r(n, o), `${t} ${r}`);\n        h && (i = h);\n    }), i;\n}\nfunction xo(e, t) {\n    let r = null;\n    return Er(e) ? e.forEach((i)=>{\n        r || bo(i) || (r = tr(\"UNSUPPORTED_ACCOUNTS\", `${t}, account ${i} should be a string and conform to \"namespace:chainId:address\" format`));\n    }) : r = tr(\"UNSUPPORTED_ACCOUNTS\", `${t}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`), r;\n}\nfunction Mo(e, t) {\n    let r = null;\n    return Object.values(e).forEach((i)=>{\n        if (r) return;\n        const n = xo(i?.accounts, `${t} namespace`);\n        n && (r = n);\n    }), r;\n}\nfunction Eo(e, t) {\n    let r = null;\n    return tn(e?.methods) ? tn(e?.events) || (r = tr(\"UNSUPPORTED_EVENTS\", `${t}, events should be an array of strings or empty array for no events`)) : r = tr(\"UNSUPPORTED_METHODS\", `${t}, methods should be an array of strings or empty array for no methods`), r;\n}\nfunction en(e, t) {\n    let r = null;\n    return Object.values(e).forEach((i)=>{\n        if (r) return;\n        const n = Eo(i, `${t}, namespace`);\n        n && (r = n);\n    }), r;\n}\nfunction Wu(e, t, r) {\n    let i = null;\n    if (e && Yr(e)) {\n        const n = en(e, t);\n        n && (i = n);\n        const o = wo(e, t, r);\n        o && (i = o);\n    } else i = xe(\"MISSING_OR_INVALID\", `${t}, ${r} should be an object with data`);\n    return i;\n}\nfunction So(e, t) {\n    let r = null;\n    if (e && Yr(e)) {\n        const i = en(e, t);\n        i && (r = i);\n        const n = Mo(e, t);\n        n && (r = n);\n    } else r = xe(\"MISSING_OR_INVALID\", `${t}, namespaces should be an object with data`);\n    return r;\n}\nfunction No(e) {\n    return Gt(e.protocol, !0);\n}\nfunction Xu(e, t) {\n    let r = !1;\n    return t && !e ? r = !0 : e && Er(e) && e.length && e.forEach((i)=>{\n        r = No(i);\n    }), r;\n}\nfunction Zu(e) {\n    return typeof e == \"number\";\n}\nfunction $u(e) {\n    return typeof e < \"u\" && typeof e !== null;\n}\nfunction th(e) {\n    return !(!e || typeof e != \"object\" || !e.code || !Vr(e.code, !1) || !e.message || !Gt(e.message, !1));\n}\nfunction eh(e) {\n    return !(Pe(e) || !Gt(e.method, !1));\n}\nfunction rh(e) {\n    return !(Pe(e) || Pe(e.result) && Pe(e.error) || !Vr(e.id, !1) || !Gt(e.jsonrpc, !1));\n}\nfunction ih(e) {\n    return !(Pe(e) || !Gt(e.name, !1));\n}\nfunction nh(e, t) {\n    return !(!Sr(t) || !co(e).includes(t));\n}\nfunction fh(e, t, r) {\n    return Gt(r, !1) ? lo(e, t).includes(r) : !1;\n}\nfunction oh(e, t, r) {\n    return Gt(r, !1) ? po(e, t).includes(r) : !1;\n}\nfunction Io(e, t, r) {\n    let i = null;\n    const n = sh(e), o = ah(t), h = Object.keys(n), p = Object.keys(o), b = _o(Object.keys(e)), m = _o(Object.keys(t)), w = b.filter((y)=>!m.includes(y));\n    return w.length && (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${w.toString()}\n      Received: ${Object.keys(t).toString()}`)), _e(h, p) || (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces chains don't satisfy required namespaces.\n      Required: ${h.toString()}\n      Approved: ${p.toString()}`)), Object.keys(t).forEach((y)=>{\n        if (!y.includes(\":\") || i) return;\n        const S = $e(t[y].accounts);\n        S.includes(y) || (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces accounts don't satisfy namespace accounts for ${y}\n        Required: ${y}\n        Approved: ${S.toString()}`));\n    }), h.forEach((y)=>{\n        i || (_e(n[y].methods, o[y].methods) ? _e(n[y].events, o[y].events) || (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces events don't satisfy namespace events for ${y}`)) : i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces methods don't satisfy namespace methods for ${y}`));\n    }), i;\n}\nfunction sh(e) {\n    const t = {};\n    return Object.keys(e).forEach((r)=>{\n        var i;\n        r.includes(\":\") ? t[r] = e[r] : (i = e[r].chains) == null || i.forEach((n)=>{\n            t[n] = {\n                methods: e[r].methods,\n                events: e[r].events\n            };\n        });\n    }), t;\n}\nfunction _o(e) {\n    return [\n        ...new Set(e.map((t)=>t.includes(\":\") ? t.split(\":\")[0] : t))\n    ];\n}\nfunction ah(e) {\n    const t = {};\n    return Object.keys(e).forEach((r)=>{\n        if (r.includes(\":\")) t[r] = e[r];\n        else {\n            const i = $e(e[r].accounts);\n            i?.forEach((n)=>{\n                t[n] = {\n                    accounts: e[r].accounts.filter((o)=>o.includes(`${n}:`)),\n                    methods: e[r].methods,\n                    events: e[r].events\n                };\n            });\n        }\n    }), t;\n}\nfunction uh(e, t) {\n    return Vr(e, !1) && e <= t.max && e >= t.min;\n}\nfunction hh() {\n    const e = We();\n    return new Promise((t)=>{\n        switch(e){\n            case qt.browser:\n                t(Bo());\n                break;\n            case qt.reactNative:\n                t(Co());\n                break;\n            case qt.node:\n                t(Ro());\n                break;\n            default:\n                t(!0);\n        }\n    });\n}\nfunction Bo() {\n    return pr() && navigator?.onLine;\n}\nasync function Co() {\n    if (er() && typeof global < \"u\" && global != null && global.NetInfo) {\n        const e = await (global == null ? void 0 : global.NetInfo.fetch());\n        return e?.isConnected;\n    }\n    return !0;\n}\nfunction Ro() {\n    return !0;\n}\nfunction ch(e) {\n    switch(We()){\n        case qt.browser:\n            Oo(e);\n            break;\n        case qt.reactNative:\n            Po(e);\n            break;\n        case qt.node:\n            break;\n    }\n}\nfunction Oo(e) {\n    !er() && pr() && (window.addEventListener(\"online\", ()=>e(!0)), window.addEventListener(\"offline\", ()=>e(!1)));\n}\nfunction Po(e) {\n    er() && typeof global < \"u\" && global != null && global.NetInfo && global?.NetInfo.addEventListener((t)=>e(t?.isConnected));\n}\nconst rn = {};\nclass lh {\n    static get(t) {\n        return rn[t];\n    }\n    static set(t, r) {\n        rn[t] = r;\n    }\n    static delete(t) {\n        delete rn[t];\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/decode-uri-component/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/decode-uri-component/index.js ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nvar token = \"%[a-f0-9]{2}\";\nvar singleMatcher = new RegExp(\"(\" + token + \")|([^%]+?)\", \"gi\");\nvar multiMatcher = new RegExp(\"(\" + token + \")+\", \"gi\");\nfunction decodeComponents(components, split) {\n    try {\n        // Try to decode the entire string first\n        return [\n            decodeURIComponent(components.join(\"\"))\n        ];\n    } catch (err) {\n    // Do nothing\n    }\n    if (components.length === 1) {\n        return components;\n    }\n    split = split || 1;\n    // Split the array in 2 parts\n    var left = components.slice(0, split);\n    var right = components.slice(split);\n    return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\nfunction decode(input) {\n    try {\n        return decodeURIComponent(input);\n    } catch (err) {\n        var tokens = input.match(singleMatcher) || [];\n        for(var i = 1; i < tokens.length; i++){\n            input = decodeComponents(tokens, i).join(\"\");\n            tokens = input.match(singleMatcher) || [];\n        }\n        return input;\n    }\n}\nfunction customDecodeURIComponent(input) {\n    // Keep track of all the replacements and prefill the map with the `BOM`\n    var replaceMap = {\n        \"%FE%FF\": \"��\",\n        \"%FF%FE\": \"��\"\n    };\n    var match = multiMatcher.exec(input);\n    while(match){\n        try {\n            // Decode as big chunks as possible\n            replaceMap[match[0]] = decodeURIComponent(match[0]);\n        } catch (err) {\n            var result = decode(match[0]);\n            if (result !== match[0]) {\n                replaceMap[match[0]] = result;\n            }\n        }\n        match = multiMatcher.exec(input);\n    }\n    // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n    replaceMap[\"%C2\"] = \"�\";\n    var entries = Object.keys(replaceMap);\n    for(var i = 0; i < entries.length; i++){\n        // Replace all decoded components\n        var key = entries[i];\n        input = input.replace(new RegExp(key, \"g\"), replaceMap[key]);\n    }\n    return input;\n}\nmodule.exports = function(encodedURI) {\n    if (typeof encodedURI !== \"string\") {\n        throw new TypeError(\"Expected `encodedURI` to be of type `string`, got `\" + typeof encodedURI + \"`\");\n    }\n    try {\n        encodedURI = encodedURI.replace(/\\+/g, \" \");\n        // Try the built in decoder first\n        return decodeURIComponent(encodedURI);\n    } catch (err) {\n        // Fallback to a more advanced decoder\n        return customDecodeURIComponent(encodedURI);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL2RlY29kZS11cmktY29tcG9uZW50L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsUUFBUTtBQUNaLElBQUlDLGdCQUFnQixJQUFJQyxPQUFPLE1BQU1GLFFBQVEsY0FBYztBQUMzRCxJQUFJRyxlQUFlLElBQUlELE9BQU8sTUFBTUYsUUFBUSxNQUFNO0FBRWxELFNBQVNJLGlCQUFpQkMsVUFBVSxFQUFFQyxLQUFLO0lBQzFDLElBQUk7UUFDSCx3Q0FBd0M7UUFDeEMsT0FBTztZQUFDQyxtQkFBbUJGLFdBQVdHLElBQUksQ0FBQztTQUFLO0lBQ2pELEVBQUUsT0FBT0MsS0FBSztJQUNiLGFBQWE7SUFDZDtJQUVBLElBQUlKLFdBQVdLLE1BQU0sS0FBSyxHQUFHO1FBQzVCLE9BQU9MO0lBQ1I7SUFFQUMsUUFBUUEsU0FBUztJQUVqQiw2QkFBNkI7SUFDN0IsSUFBSUssT0FBT04sV0FBV08sS0FBSyxDQUFDLEdBQUdOO0lBQy9CLElBQUlPLFFBQVFSLFdBQVdPLEtBQUssQ0FBQ047SUFFN0IsT0FBT1EsTUFBTUMsU0FBUyxDQUFDQyxNQUFNLENBQUNDLElBQUksQ0FBQyxFQUFFLEVBQUViLGlCQUFpQk8sT0FBT1AsaUJBQWlCUztBQUNqRjtBQUVBLFNBQVNLLE9BQU9DLEtBQUs7SUFDcEIsSUFBSTtRQUNILE9BQU9aLG1CQUFtQlk7SUFDM0IsRUFBRSxPQUFPVixLQUFLO1FBQ2IsSUFBSVcsU0FBU0QsTUFBTUUsS0FBSyxDQUFDcEIsa0JBQWtCLEVBQUU7UUFFN0MsSUFBSyxJQUFJcUIsSUFBSSxHQUFHQSxJQUFJRixPQUFPVixNQUFNLEVBQUVZLElBQUs7WUFDdkNILFFBQVFmLGlCQUFpQmdCLFFBQVFFLEdBQUdkLElBQUksQ0FBQztZQUV6Q1ksU0FBU0QsTUFBTUUsS0FBSyxDQUFDcEIsa0JBQWtCLEVBQUU7UUFDMUM7UUFFQSxPQUFPa0I7SUFDUjtBQUNEO0FBRUEsU0FBU0kseUJBQXlCSixLQUFLO0lBQ3RDLHdFQUF3RTtJQUN4RSxJQUFJSyxhQUFhO1FBQ2hCLFVBQVU7UUFDVixVQUFVO0lBQ1g7SUFFQSxJQUFJSCxRQUFRbEIsYUFBYXNCLElBQUksQ0FBQ047SUFDOUIsTUFBT0UsTUFBTztRQUNiLElBQUk7WUFDSCxtQ0FBbUM7WUFDbkNHLFVBQVUsQ0FBQ0gsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHZCxtQkFBbUJjLEtBQUssQ0FBQyxFQUFFO1FBQ25ELEVBQUUsT0FBT1osS0FBSztZQUNiLElBQUlpQixTQUFTUixPQUFPRyxLQUFLLENBQUMsRUFBRTtZQUU1QixJQUFJSyxXQUFXTCxLQUFLLENBQUMsRUFBRSxFQUFFO2dCQUN4QkcsVUFBVSxDQUFDSCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUdLO1lBQ3hCO1FBQ0Q7UUFFQUwsUUFBUWxCLGFBQWFzQixJQUFJLENBQUNOO0lBQzNCO0lBRUEseUdBQXlHO0lBQ3pHSyxVQUFVLENBQUMsTUFBTSxHQUFHO0lBRXBCLElBQUlHLFVBQVVDLE9BQU9DLElBQUksQ0FBQ0w7SUFFMUIsSUFBSyxJQUFJRixJQUFJLEdBQUdBLElBQUlLLFFBQVFqQixNQUFNLEVBQUVZLElBQUs7UUFDeEMsaUNBQWlDO1FBQ2pDLElBQUlRLE1BQU1ILE9BQU8sQ0FBQ0wsRUFBRTtRQUNwQkgsUUFBUUEsTUFBTVksT0FBTyxDQUFDLElBQUk3QixPQUFPNEIsS0FBSyxNQUFNTixVQUFVLENBQUNNLElBQUk7SUFDNUQ7SUFFQSxPQUFPWDtBQUNSO0FBRUFhLE9BQU9DLE9BQU8sR0FBRyxTQUFVQyxVQUFVO0lBQ3BDLElBQUksT0FBT0EsZUFBZSxVQUFVO1FBQ25DLE1BQU0sSUFBSUMsVUFBVSx3REFBd0QsT0FBT0QsYUFBYTtJQUNqRztJQUVBLElBQUk7UUFDSEEsYUFBYUEsV0FBV0gsT0FBTyxDQUFDLE9BQU87UUFFdkMsaUNBQWlDO1FBQ2pDLE9BQU94QixtQkFBbUIyQjtJQUMzQixFQUFFLE9BQU96QixLQUFLO1FBQ2Isc0NBQXNDO1FBQ3RDLE9BQU9jLHlCQUF5Qlc7SUFDakM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL2RlY29kZS11cmktY29tcG9uZW50L2luZGV4LmpzPzhlNDMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIHRva2VuID0gJyVbYS1mMC05XXsyfSc7XG52YXIgc2luZ2xlTWF0Y2hlciA9IG5ldyBSZWdFeHAoJygnICsgdG9rZW4gKyAnKXwoW14lXSs/KScsICdnaScpO1xudmFyIG11bHRpTWF0Y2hlciA9IG5ldyBSZWdFeHAoJygnICsgdG9rZW4gKyAnKSsnLCAnZ2knKTtcblxuZnVuY3Rpb24gZGVjb2RlQ29tcG9uZW50cyhjb21wb25lbnRzLCBzcGxpdCkge1xuXHR0cnkge1xuXHRcdC8vIFRyeSB0byBkZWNvZGUgdGhlIGVudGlyZSBzdHJpbmcgZmlyc3Rcblx0XHRyZXR1cm4gW2RlY29kZVVSSUNvbXBvbmVudChjb21wb25lbnRzLmpvaW4oJycpKV07XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIERvIG5vdGhpbmdcblx0fVxuXG5cdGlmIChjb21wb25lbnRzLmxlbmd0aCA9PT0gMSkge1xuXHRcdHJldHVybiBjb21wb25lbnRzO1xuXHR9XG5cblx0c3BsaXQgPSBzcGxpdCB8fCAxO1xuXG5cdC8vIFNwbGl0IHRoZSBhcnJheSBpbiAyIHBhcnRzXG5cdHZhciBsZWZ0ID0gY29tcG9uZW50cy5zbGljZSgwLCBzcGxpdCk7XG5cdHZhciByaWdodCA9IGNvbXBvbmVudHMuc2xpY2Uoc3BsaXQpO1xuXG5cdHJldHVybiBBcnJheS5wcm90b3R5cGUuY29uY2F0LmNhbGwoW10sIGRlY29kZUNvbXBvbmVudHMobGVmdCksIGRlY29kZUNvbXBvbmVudHMocmlnaHQpKTtcbn1cblxuZnVuY3Rpb24gZGVjb2RlKGlucHV0KSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChpbnB1dCk7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdHZhciB0b2tlbnMgPSBpbnB1dC5tYXRjaChzaW5nbGVNYXRjaGVyKSB8fCBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAxOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRpbnB1dCA9IGRlY29kZUNvbXBvbmVudHModG9rZW5zLCBpKS5qb2luKCcnKTtcblxuXHRcdFx0dG9rZW5zID0gaW5wdXQubWF0Y2goc2luZ2xlTWF0Y2hlcikgfHwgW107XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGlucHV0O1xuXHR9XG59XG5cbmZ1bmN0aW9uIGN1c3RvbURlY29kZVVSSUNvbXBvbmVudChpbnB1dCkge1xuXHQvLyBLZWVwIHRyYWNrIG9mIGFsbCB0aGUgcmVwbGFjZW1lbnRzIGFuZCBwcmVmaWxsIHRoZSBtYXAgd2l0aCB0aGUgYEJPTWBcblx0dmFyIHJlcGxhY2VNYXAgPSB7XG5cdFx0JyVGRSVGRic6ICdcXHVGRkZEXFx1RkZGRCcsXG5cdFx0JyVGRiVGRSc6ICdcXHVGRkZEXFx1RkZGRCdcblx0fTtcblxuXHR2YXIgbWF0Y2ggPSBtdWx0aU1hdGNoZXIuZXhlYyhpbnB1dCk7XG5cdHdoaWxlIChtYXRjaCkge1xuXHRcdHRyeSB7XG5cdFx0XHQvLyBEZWNvZGUgYXMgYmlnIGNodW5rcyBhcyBwb3NzaWJsZVxuXHRcdFx0cmVwbGFjZU1hcFttYXRjaFswXV0gPSBkZWNvZGVVUklDb21wb25lbnQobWF0Y2hbMF0pO1xuXHRcdH0gY2F0Y2ggKGVycikge1xuXHRcdFx0dmFyIHJlc3VsdCA9IGRlY29kZShtYXRjaFswXSk7XG5cblx0XHRcdGlmIChyZXN1bHQgIT09IG1hdGNoWzBdKSB7XG5cdFx0XHRcdHJlcGxhY2VNYXBbbWF0Y2hbMF1dID0gcmVzdWx0O1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdG1hdGNoID0gbXVsdGlNYXRjaGVyLmV4ZWMoaW5wdXQpO1xuXHR9XG5cblx0Ly8gQWRkIGAlQzJgIGF0IHRoZSBlbmQgb2YgdGhlIG1hcCB0byBtYWtlIHN1cmUgaXQgZG9lcyBub3QgcmVwbGFjZSB0aGUgY29tYmluYXRvciBiZWZvcmUgZXZlcnl0aGluZyBlbHNlXG5cdHJlcGxhY2VNYXBbJyVDMiddID0gJ1xcdUZGRkQnO1xuXG5cdHZhciBlbnRyaWVzID0gT2JqZWN0LmtleXMocmVwbGFjZU1hcCk7XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBlbnRyaWVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0Ly8gUmVwbGFjZSBhbGwgZGVjb2RlZCBjb21wb25lbnRzXG5cdFx0dmFyIGtleSA9IGVudHJpZXNbaV07XG5cdFx0aW5wdXQgPSBpbnB1dC5yZXBsYWNlKG5ldyBSZWdFeHAoa2V5LCAnZycpLCByZXBsYWNlTWFwW2tleV0pO1xuXHR9XG5cblx0cmV0dXJuIGlucHV0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChlbmNvZGVkVVJJKSB7XG5cdGlmICh0eXBlb2YgZW5jb2RlZFVSSSAhPT0gJ3N0cmluZycpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBgZW5jb2RlZFVSSWAgdG8gYmUgb2YgdHlwZSBgc3RyaW5nYCwgZ290IGAnICsgdHlwZW9mIGVuY29kZWRVUkkgKyAnYCcpO1xuXHR9XG5cblx0dHJ5IHtcblx0XHRlbmNvZGVkVVJJID0gZW5jb2RlZFVSSS5yZXBsYWNlKC9cXCsvZywgJyAnKTtcblxuXHRcdC8vIFRyeSB0aGUgYnVpbHQgaW4gZGVjb2RlciBmaXJzdFxuXHRcdHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoZW5jb2RlZFVSSSk7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIEZhbGxiYWNrIHRvIGEgbW9yZSBhZHZhbmNlZCBkZWNvZGVyXG5cdFx0cmV0dXJuIGN1c3RvbURlY29kZVVSSUNvbXBvbmVudChlbmNvZGVkVVJJKTtcblx0fVxufTtcbiJdLCJuYW1lcyI6WyJ0b2tlbiIsInNpbmdsZU1hdGNoZXIiLCJSZWdFeHAiLCJtdWx0aU1hdGNoZXIiLCJkZWNvZGVDb21wb25lbnRzIiwiY29tcG9uZW50cyIsInNwbGl0IiwiZGVjb2RlVVJJQ29tcG9uZW50Iiwiam9pbiIsImVyciIsImxlbmd0aCIsImxlZnQiLCJzbGljZSIsInJpZ2h0IiwiQXJyYXkiLCJwcm90b3R5cGUiLCJjb25jYXQiLCJjYWxsIiwiZGVjb2RlIiwiaW5wdXQiLCJ0b2tlbnMiLCJtYXRjaCIsImkiLCJjdXN0b21EZWNvZGVVUklDb21wb25lbnQiLCJyZXBsYWNlTWFwIiwiZXhlYyIsInJlc3VsdCIsImVudHJpZXMiLCJPYmplY3QiLCJrZXlzIiwia2V5IiwicmVwbGFjZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJlbmNvZGVkVVJJIiwiVHlwZUVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/decode-uri-component/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/filter-obj/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/filter-obj/index.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = function(obj, predicate) {\n    var ret = {};\n    var keys = Object.keys(obj);\n    var isArr = Array.isArray(predicate);\n    for(var i = 0; i < keys.length; i++){\n        var key = keys[i];\n        var val = obj[key];\n        if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n            ret[key] = val;\n        }\n    }\n    return ret;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL2ZpbHRlci1vYmovaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQUEsT0FBT0MsT0FBTyxHQUFHLFNBQVVDLEdBQUcsRUFBRUMsU0FBUztJQUN4QyxJQUFJQyxNQUFNLENBQUM7SUFDWCxJQUFJQyxPQUFPQyxPQUFPRCxJQUFJLENBQUNIO0lBQ3ZCLElBQUlLLFFBQVFDLE1BQU1DLE9BQU8sQ0FBQ047SUFFMUIsSUFBSyxJQUFJTyxJQUFJLEdBQUdBLElBQUlMLEtBQUtNLE1BQU0sRUFBRUQsSUFBSztRQUNyQyxJQUFJRSxNQUFNUCxJQUFJLENBQUNLLEVBQUU7UUFDakIsSUFBSUcsTUFBTVgsR0FBRyxDQUFDVSxJQUFJO1FBRWxCLElBQUlMLFFBQVFKLFVBQVVXLE9BQU8sQ0FBQ0YsU0FBUyxDQUFDLElBQUlULFVBQVVTLEtBQUtDLEtBQUtYLE1BQU07WUFDckVFLEdBQUcsQ0FBQ1EsSUFBSSxHQUFHQztRQUNaO0lBQ0Q7SUFFQSxPQUFPVDtBQUNSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvZmlsdGVyLW9iai9pbmRleC5qcz9hYTg4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iaiwgcHJlZGljYXRlKSB7XG5cdHZhciByZXQgPSB7fTtcblx0dmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuXHR2YXIgaXNBcnIgPSBBcnJheS5pc0FycmF5KHByZWRpY2F0ZSk7XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGtleSA9IGtleXNbaV07XG5cdFx0dmFyIHZhbCA9IG9ialtrZXldO1xuXG5cdFx0aWYgKGlzQXJyID8gcHJlZGljYXRlLmluZGV4T2Yoa2V5KSAhPT0gLTEgOiBwcmVkaWNhdGUoa2V5LCB2YWwsIG9iaikpIHtcblx0XHRcdHJldFtrZXldID0gdmFsO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiByZXQ7XG59O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJvYmoiLCJwcmVkaWNhdGUiLCJyZXQiLCJrZXlzIiwiT2JqZWN0IiwiaXNBcnIiLCJBcnJheSIsImlzQXJyYXkiLCJpIiwibGVuZ3RoIiwia2V5IiwidmFsIiwiaW5kZXhPZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/filter-obj/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/query-string/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/query-string/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst strictUriEncode = __webpack_require__(/*! strict-uri-encode */ \"(ssr)/./node_modules/strict-uri-encode/index.js\");\nconst decodeComponent = __webpack_require__(/*! decode-uri-component */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/decode-uri-component/index.js\");\nconst splitOnFirst = __webpack_require__(/*! split-on-first */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/split-on-first/index.js\");\nconst filterObject = __webpack_require__(/*! filter-obj */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/filter-obj/index.js\");\nconst isNullOrUndefined = (value)=>value === null || value === undefined;\nconst encodeFragmentIdentifier = Symbol(\"encodeFragmentIdentifier\");\nfunction encoderForArrayFormat(options) {\n    switch(options.arrayFormat){\n        case \"index\":\n            return (key)=>(result, value)=>{\n                    const index = result.length;\n                    if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === \"\") {\n                        return result;\n                    }\n                    if (value === null) {\n                        return [\n                            ...result,\n                            [\n                                encode(key, options),\n                                \"[\",\n                                index,\n                                \"]\"\n                            ].join(\"\")\n                        ];\n                    }\n                    return [\n                        ...result,\n                        [\n                            encode(key, options),\n                            \"[\",\n                            encode(index, options),\n                            \"]=\",\n                            encode(value, options)\n                        ].join(\"\")\n                    ];\n                };\n        case \"bracket\":\n            return (key)=>(result, value)=>{\n                    if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === \"\") {\n                        return result;\n                    }\n                    if (value === null) {\n                        return [\n                            ...result,\n                            [\n                                encode(key, options),\n                                \"[]\"\n                            ].join(\"\")\n                        ];\n                    }\n                    return [\n                        ...result,\n                        [\n                            encode(key, options),\n                            \"[]=\",\n                            encode(value, options)\n                        ].join(\"\")\n                    ];\n                };\n        case \"colon-list-separator\":\n            return (key)=>(result, value)=>{\n                    if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === \"\") {\n                        return result;\n                    }\n                    if (value === null) {\n                        return [\n                            ...result,\n                            [\n                                encode(key, options),\n                                \":list=\"\n                            ].join(\"\")\n                        ];\n                    }\n                    return [\n                        ...result,\n                        [\n                            encode(key, options),\n                            \":list=\",\n                            encode(value, options)\n                        ].join(\"\")\n                    ];\n                };\n        case \"comma\":\n        case \"separator\":\n        case \"bracket-separator\":\n            {\n                const keyValueSep = options.arrayFormat === \"bracket-separator\" ? \"[]=\" : \"=\";\n                return (key)=>(result, value)=>{\n                        if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === \"\") {\n                            return result;\n                        }\n                        // Translate null to an empty string so that it doesn't serialize as 'null'\n                        value = value === null ? \"\" : value;\n                        if (result.length === 0) {\n                            return [\n                                [\n                                    encode(key, options),\n                                    keyValueSep,\n                                    encode(value, options)\n                                ].join(\"\")\n                            ];\n                        }\n                        return [\n                            [\n                                result,\n                                encode(value, options)\n                            ].join(options.arrayFormatSeparator)\n                        ];\n                    };\n            }\n        default:\n            return (key)=>(result, value)=>{\n                    if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === \"\") {\n                        return result;\n                    }\n                    if (value === null) {\n                        return [\n                            ...result,\n                            encode(key, options)\n                        ];\n                    }\n                    return [\n                        ...result,\n                        [\n                            encode(key, options),\n                            \"=\",\n                            encode(value, options)\n                        ].join(\"\")\n                    ];\n                };\n    }\n}\nfunction parserForArrayFormat(options) {\n    let result;\n    switch(options.arrayFormat){\n        case \"index\":\n            return (key, value, accumulator)=>{\n                result = /\\[(\\d*)\\]$/.exec(key);\n                key = key.replace(/\\[\\d*\\]$/, \"\");\n                if (!result) {\n                    accumulator[key] = value;\n                    return;\n                }\n                if (accumulator[key] === undefined) {\n                    accumulator[key] = {};\n                }\n                accumulator[key][result[1]] = value;\n            };\n        case \"bracket\":\n            return (key, value, accumulator)=>{\n                result = /(\\[\\])$/.exec(key);\n                key = key.replace(/\\[\\]$/, \"\");\n                if (!result) {\n                    accumulator[key] = value;\n                    return;\n                }\n                if (accumulator[key] === undefined) {\n                    accumulator[key] = [\n                        value\n                    ];\n                    return;\n                }\n                accumulator[key] = [].concat(accumulator[key], value);\n            };\n        case \"colon-list-separator\":\n            return (key, value, accumulator)=>{\n                result = /(:list)$/.exec(key);\n                key = key.replace(/:list$/, \"\");\n                if (!result) {\n                    accumulator[key] = value;\n                    return;\n                }\n                if (accumulator[key] === undefined) {\n                    accumulator[key] = [\n                        value\n                    ];\n                    return;\n                }\n                accumulator[key] = [].concat(accumulator[key], value);\n            };\n        case \"comma\":\n        case \"separator\":\n            return (key, value, accumulator)=>{\n                const isArray = typeof value === \"string\" && value.includes(options.arrayFormatSeparator);\n                const isEncodedArray = typeof value === \"string\" && !isArray && decode(value, options).includes(options.arrayFormatSeparator);\n                value = isEncodedArray ? decode(value, options) : value;\n                const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item)=>decode(item, options)) : value === null ? value : decode(value, options);\n                accumulator[key] = newValue;\n            };\n        case \"bracket-separator\":\n            return (key, value, accumulator)=>{\n                const isArray = /(\\[\\])$/.test(key);\n                key = key.replace(/\\[\\]$/, \"\");\n                if (!isArray) {\n                    accumulator[key] = value ? decode(value, options) : value;\n                    return;\n                }\n                const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item)=>decode(item, options));\n                if (accumulator[key] === undefined) {\n                    accumulator[key] = arrayValue;\n                    return;\n                }\n                accumulator[key] = [].concat(accumulator[key], arrayValue);\n            };\n        default:\n            return (key, value, accumulator)=>{\n                if (accumulator[key] === undefined) {\n                    accumulator[key] = value;\n                    return;\n                }\n                accumulator[key] = [].concat(accumulator[key], value);\n            };\n    }\n}\nfunction validateArrayFormatSeparator(value) {\n    if (typeof value !== \"string\" || value.length !== 1) {\n        throw new TypeError(\"arrayFormatSeparator must be single character string\");\n    }\n}\nfunction encode(value, options) {\n    if (options.encode) {\n        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n    }\n    return value;\n}\nfunction decode(value, options) {\n    if (options.decode) {\n        return decodeComponent(value);\n    }\n    return value;\n}\nfunction keysSorter(input) {\n    if (Array.isArray(input)) {\n        return input.sort();\n    }\n    if (typeof input === \"object\") {\n        return keysSorter(Object.keys(input)).sort((a, b)=>Number(a) - Number(b)).map((key)=>input[key]);\n    }\n    return input;\n}\nfunction removeHash(input) {\n    const hashStart = input.indexOf(\"#\");\n    if (hashStart !== -1) {\n        input = input.slice(0, hashStart);\n    }\n    return input;\n}\nfunction getHash(url) {\n    let hash = \"\";\n    const hashStart = url.indexOf(\"#\");\n    if (hashStart !== -1) {\n        hash = url.slice(hashStart);\n    }\n    return hash;\n}\nfunction extract(input) {\n    input = removeHash(input);\n    const queryStart = input.indexOf(\"?\");\n    if (queryStart === -1) {\n        return \"\";\n    }\n    return input.slice(queryStart + 1);\n}\nfunction parseValue(value, options) {\n    if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === \"string\" && value.trim() !== \"\") {\n        value = Number(value);\n    } else if (options.parseBooleans && value !== null && (value.toLowerCase() === \"true\" || value.toLowerCase() === \"false\")) {\n        value = value.toLowerCase() === \"true\";\n    }\n    return value;\n}\nfunction parse(query, options) {\n    options = Object.assign({\n        decode: true,\n        sort: true,\n        arrayFormat: \"none\",\n        arrayFormatSeparator: \",\",\n        parseNumbers: false,\n        parseBooleans: false\n    }, options);\n    validateArrayFormatSeparator(options.arrayFormatSeparator);\n    const formatter = parserForArrayFormat(options);\n    // Create an object with no prototype\n    const ret = Object.create(null);\n    if (typeof query !== \"string\") {\n        return ret;\n    }\n    query = query.trim().replace(/^[?#&]/, \"\");\n    if (!query) {\n        return ret;\n    }\n    for (const param of query.split(\"&\")){\n        if (param === \"\") {\n            continue;\n        }\n        let [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, \" \") : param, \"=\");\n        // Missing `=` should be `null`:\n        // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n        value = value === undefined ? null : [\n            \"comma\",\n            \"separator\",\n            \"bracket-separator\"\n        ].includes(options.arrayFormat) ? value : decode(value, options);\n        formatter(decode(key, options), value, ret);\n    }\n    for (const key of Object.keys(ret)){\n        const value = ret[key];\n        if (typeof value === \"object\" && value !== null) {\n            for (const k of Object.keys(value)){\n                value[k] = parseValue(value[k], options);\n            }\n        } else {\n            ret[key] = parseValue(value, options);\n        }\n    }\n    if (options.sort === false) {\n        return ret;\n    }\n    return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key)=>{\n        const value = ret[key];\n        if (Boolean(value) && typeof value === \"object\" && !Array.isArray(value)) {\n            // Sort object keys, not values\n            result[key] = keysSorter(value);\n        } else {\n            result[key] = value;\n        }\n        return result;\n    }, Object.create(null));\n}\nexports.extract = extract;\nexports.parse = parse;\nexports.stringify = (object, options)=>{\n    if (!object) {\n        return \"\";\n    }\n    options = Object.assign({\n        encode: true,\n        strict: true,\n        arrayFormat: \"none\",\n        arrayFormatSeparator: \",\"\n    }, options);\n    validateArrayFormatSeparator(options.arrayFormatSeparator);\n    const shouldFilter = (key)=>options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === \"\";\n    const formatter = encoderForArrayFormat(options);\n    const objectCopy = {};\n    for (const key of Object.keys(object)){\n        if (!shouldFilter(key)) {\n            objectCopy[key] = object[key];\n        }\n    }\n    const keys = Object.keys(objectCopy);\n    if (options.sort !== false) {\n        keys.sort(options.sort);\n    }\n    return keys.map((key)=>{\n        const value = object[key];\n        if (value === undefined) {\n            return \"\";\n        }\n        if (value === null) {\n            return encode(key, options);\n        }\n        if (Array.isArray(value)) {\n            if (value.length === 0 && options.arrayFormat === \"bracket-separator\") {\n                return encode(key, options) + \"[]\";\n            }\n            return value.reduce(formatter(key), []).join(\"&\");\n        }\n        return encode(key, options) + \"=\" + encode(value, options);\n    }).filter((x)=>x.length > 0).join(\"&\");\n};\nexports.parseUrl = (url, options)=>{\n    options = Object.assign({\n        decode: true\n    }, options);\n    const [url_, hash] = splitOnFirst(url, \"#\");\n    return Object.assign({\n        url: url_.split(\"?\")[0] || \"\",\n        query: parse(extract(url), options)\n    }, options && options.parseFragmentIdentifier && hash ? {\n        fragmentIdentifier: decode(hash, options)\n    } : {});\n};\nexports.stringifyUrl = (object, options)=>{\n    options = Object.assign({\n        encode: true,\n        strict: true,\n        [encodeFragmentIdentifier]: true\n    }, options);\n    const url = removeHash(object.url).split(\"?\")[0] || \"\";\n    const queryFromUrl = exports.extract(object.url);\n    const parsedQueryFromUrl = exports.parse(queryFromUrl, {\n        sort: false\n    });\n    const query = Object.assign(parsedQueryFromUrl, object.query);\n    let queryString = exports.stringify(query, options);\n    if (queryString) {\n        queryString = `?${queryString}`;\n    }\n    let hash = getHash(object.url);\n    if (object.fragmentIdentifier) {\n        hash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n    }\n    return `${url}${queryString}${hash}`;\n};\nexports.pick = (input, filter, options)=>{\n    options = Object.assign({\n        parseFragmentIdentifier: true,\n        [encodeFragmentIdentifier]: false\n    }, options);\n    const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);\n    return exports.stringifyUrl({\n        url,\n        query: filterObject(query, filter),\n        fragmentIdentifier\n    }, options);\n};\nexports.exclude = (input, filter, options)=>{\n    const exclusionFilter = Array.isArray(filter) ? (key)=>!filter.includes(key) : (key, value)=>!filter(key, value);\n    return exports.pick(input, exclusionFilter, options);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3F1ZXJ5LXN0cmluZy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU1BLGtCQUFrQkMsbUJBQU9BLENBQUM7QUFDaEMsTUFBTUMsa0JBQWtCRCxtQkFBT0EsQ0FBQztBQUNoQyxNQUFNRSxlQUFlRixtQkFBT0EsQ0FBQztBQUM3QixNQUFNRyxlQUFlSCxtQkFBT0EsQ0FBQztBQUU3QixNQUFNSSxvQkFBb0JDLENBQUFBLFFBQVNBLFVBQVUsUUFBUUEsVUFBVUM7QUFFL0QsTUFBTUMsMkJBQTJCQyxPQUFPO0FBRXhDLFNBQVNDLHNCQUFzQkMsT0FBTztJQUNyQyxPQUFRQSxRQUFRQyxXQUFXO1FBQzFCLEtBQUs7WUFDSixPQUFPQyxDQUFBQSxNQUFPLENBQUNDLFFBQVFSO29CQUN0QixNQUFNUyxRQUFRRCxPQUFPRSxNQUFNO29CQUUzQixJQUNDVixVQUFVQyxhQUNUSSxRQUFRTSxRQUFRLElBQUlYLFVBQVUsUUFDOUJLLFFBQVFPLGVBQWUsSUFBSVosVUFBVSxJQUNyQzt3QkFDRCxPQUFPUTtvQkFDUjtvQkFFQSxJQUFJUixVQUFVLE1BQU07d0JBQ25CLE9BQU87K0JBQUlROzRCQUFRO2dDQUFDSyxPQUFPTixLQUFLRjtnQ0FBVTtnQ0FBS0k7Z0NBQU87NkJBQUksQ0FBQ0ssSUFBSSxDQUFDO3lCQUFJO29CQUNyRTtvQkFFQSxPQUFPOzJCQUNITjt3QkFDSDs0QkFBQ0ssT0FBT04sS0FBS0Y7NEJBQVU7NEJBQUtRLE9BQU9KLE9BQU9KOzRCQUFVOzRCQUFNUSxPQUFPYixPQUFPSzt5QkFBUyxDQUFDUyxJQUFJLENBQUM7cUJBQ3ZGO2dCQUNGO1FBRUQsS0FBSztZQUNKLE9BQU9QLENBQUFBLE1BQU8sQ0FBQ0MsUUFBUVI7b0JBQ3RCLElBQ0NBLFVBQVVDLGFBQ1RJLFFBQVFNLFFBQVEsSUFBSVgsVUFBVSxRQUM5QkssUUFBUU8sZUFBZSxJQUFJWixV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QyxRQUFRdEU7SUFDakMsTUFBTWtGLGtCQUFrQmpELE1BQU1oQixPQUFPLENBQUNxRCxVQUFVcEUsQ0FBQUEsTUFBTyxDQUFDb0UsT0FBT3BELFFBQVEsQ0FBQ2hCLE9BQU8sQ0FBQ0EsS0FBS1AsUUFBVSxDQUFDMkUsT0FBT3BFLEtBQUtQO0lBRTVHLE9BQU9zRSxRQUFRZSxJQUFJLENBQUNoRCxPQUFPa0QsaUJBQWlCbEY7QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXN0YXJ0ZXIta2l0Ly4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL25vZGVfbW9kdWxlcy9xdWVyeS1zdHJpbmcvaW5kZXguanM/MDc0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBzdHJpY3RVcmlFbmNvZGUgPSByZXF1aXJlKCdzdHJpY3QtdXJpLWVuY29kZScpO1xuY29uc3QgZGVjb2RlQ29tcG9uZW50ID0gcmVxdWlyZSgnZGVjb2RlLXVyaS1jb21wb25lbnQnKTtcbmNvbnN0IHNwbGl0T25GaXJzdCA9IHJlcXVpcmUoJ3NwbGl0LW9uLWZpcnN0Jyk7XG5jb25zdCBmaWx0ZXJPYmplY3QgPSByZXF1aXJlKCdmaWx0ZXItb2JqJyk7XG5cbmNvbnN0IGlzTnVsbE9yVW5kZWZpbmVkID0gdmFsdWUgPT4gdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZDtcblxuY29uc3QgZW5jb2RlRnJhZ21lbnRJZGVudGlmaWVyID0gU3ltYm9sKCdlbmNvZGVGcmFnbWVudElkZW50aWZpZXInKTtcblxuZnVuY3Rpb24gZW5jb2RlckZvckFycmF5Rm9ybWF0KG9wdGlvbnMpIHtcblx0c3dpdGNoIChvcHRpb25zLmFycmF5Rm9ybWF0KSB7XG5cdFx0Y2FzZSAnaW5kZXgnOlxuXHRcdFx0cmV0dXJuIGtleSA9PiAocmVzdWx0LCB2YWx1ZSkgPT4ge1xuXHRcdFx0XHRjb25zdCBpbmRleCA9IHJlc3VsdC5sZW5ndGg7XG5cblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHZhbHVlID09PSB1bmRlZmluZWQgfHxcblx0XHRcdFx0XHQob3B0aW9ucy5za2lwTnVsbCAmJiB2YWx1ZSA9PT0gbnVsbCkgfHxcblx0XHRcdFx0XHQob3B0aW9ucy5za2lwRW1wdHlTdHJpbmcgJiYgdmFsdWUgPT09ICcnKVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKHZhbHVlID09PSBudWxsKSB7XG5cdFx0XHRcdFx0cmV0dXJuIFsuLi5yZXN1bHQsIFtlbmNvZGUoa2V5LCBvcHRpb25zKSwgJ1snLCBpbmRleCwgJ10nXS5qb2luKCcnKV07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gW1xuXHRcdFx0XHRcdC4uLnJlc3VsdCxcblx0XHRcdFx0XHRbZW5jb2RlKGtleSwgb3B0aW9ucyksICdbJywgZW5jb2RlKGluZGV4LCBvcHRpb25zKSwgJ109JywgZW5jb2RlKHZhbHVlLCBvcHRpb25zKV0uam9pbignJylcblx0XHRcdFx0XTtcblx0XHRcdH07XG5cblx0XHRjYXNlICdicmFja2V0Jzpcblx0XHRcdHJldHVybiBrZXkgPT4gKHJlc3VsdCwgdmFsdWUpID0+IHtcblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHZhbHVlID09PSB1bmRlZmluZWQgfHxcblx0XHRcdFx0XHQob3B0aW9ucy5za2lwTnVsbCAmJiB2YWx1ZSA9PT0gbnVsbCkgfHxcblx0XHRcdFx0XHQob3B0aW9ucy5za2lwRW1wdHlTdHJpbmcgJiYgdmFsdWUgPT09ICcnKVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKHZhbHVlID09PSBudWxsKSB7XG5cdFx0XHRcdFx0cmV0dXJuIFsuLi5yZXN1bHQsIFtlbmNvZGUoa2V5LCBvcHRpb25zKSwgJ1tdJ10uam9pbignJyldO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIFsuLi5yZXN1bHQsIFtlbmNvZGUoa2V5LCBvcHRpb25zKSwgJ1tdPScsIGVuY29kZSh2YWx1ZSwgb3B0aW9ucyldLmpvaW4oJycpXTtcblx0XHRcdH07XG5cblx0XHRjYXNlICdjb2xvbi1saXN0LXNlcGFyYXRvcic6XG5cdFx0XHRyZXR1cm4ga2V5ID0+IChyZXN1bHQsIHZhbHVlKSA9PiB7XG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHR2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8XG5cdFx0XHRcdFx0KG9wdGlvbnMuc2tpcE51bGwgJiYgdmFsdWUgPT09IG51bGwpIHx8XG5cdFx0XHRcdFx0KG9wdGlvbnMuc2tpcEVtcHR5U3RyaW5nICYmIHZhbHVlID09PSAnJylcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuXHRcdFx0XHRcdHJldHVybiBbLi4ucmVzdWx0LCBbZW5jb2RlKGtleSwgb3B0aW9ucyksICc6bGlzdD0nXS5qb2luKCcnKV07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gWy4uLnJlc3VsdCwgW2VuY29kZShrZXksIG9wdGlvbnMpLCAnOmxpc3Q9JywgZW5jb2RlKHZhbHVlLCBvcHRpb25zKV0uam9pbignJyldO1xuXHRcdFx0fTtcblxuXHRcdGNhc2UgJ2NvbW1hJzpcblx0XHRjYXNlICdzZXBhcmF0b3InOlxuXHRcdGNhc2UgJ2JyYWNrZXQtc2VwYXJhdG9yJzoge1xuXHRcdFx0Y29uc3Qga2V5VmFsdWVTZXAgPSBvcHRpb25zLmFycmF5Rm9ybWF0ID09PSAnYnJhY2tldC1zZXBhcmF0b3InID9cblx0XHRcdFx0J1tdPScgOlxuXHRcdFx0XHQnPSc7XG5cblx0XHRcdHJldHVybiBrZXkgPT4gKHJlc3VsdCwgdmFsdWUpID0+IHtcblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHZhbHVlID09PSB1bmRlZmluZWQgfHxcblx0XHRcdFx0XHQob3B0aW9ucy5za2lwTnVsbCAmJiB2YWx1ZSA9PT0gbnVsbCkgfHxcblx0XHRcdFx0XHQob3B0aW9ucy5za2lwRW1wdHlTdHJpbmcgJiYgdmFsdWUgPT09ICcnKVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHJhbnNsYXRlIG51bGwgdG8gYW4gZW1wdHkgc3RyaW5nIHNvIHRoYXQgaXQgZG9lc24ndCBzZXJpYWxpemUgYXMgJ251bGwnXG5cdFx0XHRcdHZhbHVlID0gdmFsdWUgPT09IG51bGwgPyAnJyA6IHZhbHVlO1xuXG5cdFx0XHRcdGlmIChyZXN1bHQubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRcdFx0cmV0dXJuIFtbZW5jb2RlKGtleSwgb3B0aW9ucyksIGtleVZhbHVlU2VwLCBlbmNvZGUodmFsdWUsIG9wdGlvbnMpXS5qb2luKCcnKV07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gW1tyZXN1bHQsIGVuY29kZSh2YWx1ZSwgb3B0aW9ucyldLmpvaW4ob3B0aW9ucy5hcnJheUZvcm1hdFNlcGFyYXRvcildO1xuXHRcdFx0fTtcblx0XHR9XG5cblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIGtleSA9PiAocmVzdWx0LCB2YWx1ZSkgPT4ge1xuXHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0dmFsdWUgPT09IHVuZGVmaW5lZCB8fFxuXHRcdFx0XHRcdChvcHRpb25zLnNraXBOdWxsICYmIHZhbHVlID09PSBudWxsKSB8fFxuXHRcdFx0XHRcdChvcHRpb25zLnNraXBFbXB0eVN0cmluZyAmJiB2YWx1ZSA9PT0gJycpXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAodmFsdWUgPT09IG51bGwpIHtcblx0XHRcdFx0XHRyZXR1cm4gWy4uLnJlc3VsdCwgZW5jb2RlKGtleSwgb3B0aW9ucyldO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIFsuLi5yZXN1bHQsIFtlbmNvZGUoa2V5LCBvcHRpb25zKSwgJz0nLCBlbmNvZGUodmFsdWUsIG9wdGlvbnMpXS5qb2luKCcnKV07XG5cdFx0XHR9O1xuXHR9XG59XG5cbmZ1bmN0aW9uIHBhcnNlckZvckFycmF5Rm9ybWF0KG9wdGlvbnMpIHtcblx0bGV0IHJlc3VsdDtcblxuXHRzd2l0Y2ggKG9wdGlvbnMuYXJyYXlGb3JtYXQpIHtcblx0XHRjYXNlICdpbmRleCc6XG5cdFx0XHRyZXR1cm4gKGtleSwgdmFsdWUsIGFjY3VtdWxhdG9yKSA9PiB7XG5cdFx0XHRcdHJlc3VsdCA9IC9cXFsoXFxkKilcXF0kLy5leGVjKGtleSk7XG5cblx0XHRcdFx0a2V5ID0ga2V5LnJlcGxhY2UoL1xcW1xcZCpcXF0kLywgJycpO1xuXG5cdFx0XHRcdGlmICghcmVzdWx0KSB7XG5cdFx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IHZhbHVlO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChhY2N1bXVsYXRvcltrZXldID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0ge307XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRhY2N1bXVsYXRvcltrZXldW3Jlc3VsdFsxXV0gPSB2YWx1ZTtcblx0XHRcdH07XG5cblx0XHRjYXNlICdicmFja2V0Jzpcblx0XHRcdHJldHVybiAoa2V5LCB2YWx1ZSwgYWNjdW11bGF0b3IpID0+IHtcblx0XHRcdFx0cmVzdWx0ID0gLyhcXFtcXF0pJC8uZXhlYyhrZXkpO1xuXHRcdFx0XHRrZXkgPSBrZXkucmVwbGFjZSgvXFxbXFxdJC8sICcnKTtcblxuXHRcdFx0XHRpZiAoIXJlc3VsdCkge1xuXHRcdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSB2YWx1ZTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoYWNjdW11bGF0b3Jba2V5XSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IFt2YWx1ZV07XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IFtdLmNvbmNhdChhY2N1bXVsYXRvcltrZXldLCB2YWx1ZSk7XG5cdFx0XHR9O1xuXG5cdFx0Y2FzZSAnY29sb24tbGlzdC1zZXBhcmF0b3InOlxuXHRcdFx0cmV0dXJuIChrZXksIHZhbHVlLCBhY2N1bXVsYXRvcikgPT4ge1xuXHRcdFx0XHRyZXN1bHQgPSAvKDpsaXN0KSQvLmV4ZWMoa2V5KTtcblx0XHRcdFx0a2V5ID0ga2V5LnJlcGxhY2UoLzpsaXN0JC8sICcnKTtcblxuXHRcdFx0XHRpZiAoIXJlc3VsdCkge1xuXHRcdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSB2YWx1ZTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoYWNjdW11bGF0b3Jba2V5XSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IFt2YWx1ZV07XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IFtdLmNvbmNhdChhY2N1bXVsYXRvcltrZXldLCB2YWx1ZSk7XG5cdFx0XHR9O1xuXG5cdFx0Y2FzZSAnY29tbWEnOlxuXHRcdGNhc2UgJ3NlcGFyYXRvcic6XG5cdFx0XHRyZXR1cm4gKGtleSwgdmFsdWUsIGFjY3VtdWxhdG9yKSA9PiB7XG5cdFx0XHRcdGNvbnN0IGlzQXJyYXkgPSB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHZhbHVlLmluY2x1ZGVzKG9wdGlvbnMuYXJyYXlGb3JtYXRTZXBhcmF0b3IpO1xuXHRcdFx0XHRjb25zdCBpc0VuY29kZWRBcnJheSA9ICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmICFpc0FycmF5ICYmIGRlY29kZSh2YWx1ZSwgb3B0aW9ucykuaW5jbHVkZXMob3B0aW9ucy5hcnJheUZvcm1hdFNlcGFyYXRvcikpO1xuXHRcdFx0XHR2YWx1ZSA9IGlzRW5jb2RlZEFycmF5ID8gZGVjb2RlKHZhbHVlLCBvcHRpb25zKSA6IHZhbHVlO1xuXHRcdFx0XHRjb25zdCBuZXdWYWx1ZSA9IGlzQXJyYXkgfHwgaXNFbmNvZGVkQXJyYXkgPyB2YWx1ZS5zcGxpdChvcHRpb25zLmFycmF5Rm9ybWF0U2VwYXJhdG9yKS5tYXAoaXRlbSA9PiBkZWNvZGUoaXRlbSwgb3B0aW9ucykpIDogdmFsdWUgPT09IG51bGwgPyB2YWx1ZSA6IGRlY29kZSh2YWx1ZSwgb3B0aW9ucyk7XG5cdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSBuZXdWYWx1ZTtcblx0XHRcdH07XG5cblx0XHRjYXNlICdicmFja2V0LXNlcGFyYXRvcic6XG5cdFx0XHRyZXR1cm4gKGtleSwgdmFsdWUsIGFjY3VtdWxhdG9yKSA9PiB7XG5cdFx0XHRcdGNvbnN0IGlzQXJyYXkgPSAvKFxcW1xcXSkkLy50ZXN0KGtleSk7XG5cdFx0XHRcdGtleSA9IGtleS5yZXBsYWNlKC9cXFtcXF0kLywgJycpO1xuXG5cdFx0XHRcdGlmICghaXNBcnJheSkge1xuXHRcdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSB2YWx1ZSA/IGRlY29kZSh2YWx1ZSwgb3B0aW9ucykgOiB2YWx1ZTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRjb25zdCBhcnJheVZhbHVlID0gdmFsdWUgPT09IG51bGwgP1xuXHRcdFx0XHRcdFtdIDpcblx0XHRcdFx0XHR2YWx1ZS5zcGxpdChvcHRpb25zLmFycmF5Rm9ybWF0U2VwYXJhdG9yKS5tYXAoaXRlbSA9PiBkZWNvZGUoaXRlbSwgb3B0aW9ucykpO1xuXG5cdFx0XHRcdGlmIChhY2N1bXVsYXRvcltrZXldID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0gYXJyYXlWYWx1ZTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0gW10uY29uY2F0KGFjY3VtdWxhdG9yW2tleV0sIGFycmF5VmFsdWUpO1xuXHRcdFx0fTtcblxuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4gKGtleSwgdmFsdWUsIGFjY3VtdWxhdG9yKSA9PiB7XG5cdFx0XHRcdGlmIChhY2N1bXVsYXRvcltrZXldID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0gdmFsdWU7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IFtdLmNvbmNhdChhY2N1bXVsYXRvcltrZXldLCB2YWx1ZSk7XG5cdFx0XHR9O1xuXHR9XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlQXJyYXlGb3JtYXRTZXBhcmF0b3IodmFsdWUpIHtcblx0aWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycgfHwgdmFsdWUubGVuZ3RoICE9PSAxKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignYXJyYXlGb3JtYXRTZXBhcmF0b3IgbXVzdCBiZSBzaW5nbGUgY2hhcmFjdGVyIHN0cmluZycpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWx1ZSwgb3B0aW9ucykge1xuXHRpZiAob3B0aW9ucy5lbmNvZGUpIHtcblx0XHRyZXR1cm4gb3B0aW9ucy5zdHJpY3QgPyBzdHJpY3RVcmlFbmNvZGUodmFsdWUpIDogZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKTtcblx0fVxuXG5cdHJldHVybiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gZGVjb2RlKHZhbHVlLCBvcHRpb25zKSB7XG5cdGlmIChvcHRpb25zLmRlY29kZSkge1xuXHRcdHJldHVybiBkZWNvZGVDb21wb25lbnQodmFsdWUpO1xuXHR9XG5cblx0cmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBrZXlzU29ydGVyKGlucHV0KSB7XG5cdGlmIChBcnJheS5pc0FycmF5KGlucHV0KSkge1xuXHRcdHJldHVybiBpbnB1dC5zb3J0KCk7XG5cdH1cblxuXHRpZiAodHlwZW9mIGlucHV0ID09PSAnb2JqZWN0Jykge1xuXHRcdHJldHVybiBrZXlzU29ydGVyKE9iamVjdC5rZXlzKGlucHV0KSlcblx0XHRcdC5zb3J0KChhLCBiKSA9PiBOdW1iZXIoYSkgLSBOdW1iZXIoYikpXG5cdFx0XHQubWFwKGtleSA9PiBpbnB1dFtrZXldKTtcblx0fVxuXG5cdHJldHVybiBpbnB1dDtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlSGFzaChpbnB1dCkge1xuXHRjb25zdCBoYXNoU3RhcnQgPSBpbnB1dC5pbmRleE9mKCcjJyk7XG5cdGlmIChoYXNoU3RhcnQgIT09IC0xKSB7XG5cdFx0aW5wdXQgPSBpbnB1dC5zbGljZSgwLCBoYXNoU3RhcnQpO1xuXHR9XG5cblx0cmV0dXJuIGlucHV0O1xufVxuXG5mdW5jdGlvbiBnZXRIYXNoKHVybCkge1xuXHRsZXQgaGFzaCA9ICcnO1xuXHRjb25zdCBoYXNoU3RhcnQgPSB1cmwuaW5kZXhPZignIycpO1xuXHRpZiAoaGFzaFN0YXJ0ICE9PSAtMSkge1xuXHRcdGhhc2ggPSB1cmwuc2xpY2UoaGFzaFN0YXJ0KTtcblx0fVxuXG5cdHJldHVybiBoYXNoO1xufVxuXG5mdW5jdGlvbiBleHRyYWN0KGlucHV0KSB7XG5cdGlucHV0ID0gcmVtb3ZlSGFzaChpbnB1dCk7XG5cdGNvbnN0IHF1ZXJ5U3RhcnQgPSBpbnB1dC5pbmRleE9mKCc/Jyk7XG5cdGlmIChxdWVyeVN0YXJ0ID09PSAtMSkge1xuXHRcdHJldHVybiAnJztcblx0fVxuXG5cdHJldHVybiBpbnB1dC5zbGljZShxdWVyeVN0YXJ0ICsgMSk7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVmFsdWUodmFsdWUsIG9wdGlvbnMpIHtcblx0aWYgKG9wdGlvbnMucGFyc2VOdW1iZXJzICYmICFOdW1iZXIuaXNOYU4oTnVtYmVyKHZhbHVlKSkgJiYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUudHJpbSgpICE9PSAnJykpIHtcblx0XHR2YWx1ZSA9IE51bWJlcih2YWx1ZSk7XG5cdH0gZWxzZSBpZiAob3B0aW9ucy5wYXJzZUJvb2xlYW5zICYmIHZhbHVlICE9PSBudWxsICYmICh2YWx1ZS50b0xvd2VyQ2FzZSgpID09PSAndHJ1ZScgfHwgdmFsdWUudG9Mb3dlckNhc2UoKSA9PT0gJ2ZhbHNlJykpIHtcblx0XHR2YWx1ZSA9IHZhbHVlLnRvTG93ZXJDYXNlKCkgPT09ICd0cnVlJztcblx0fVxuXG5cdHJldHVybiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gcGFyc2UocXVlcnksIG9wdGlvbnMpIHtcblx0b3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe1xuXHRcdGRlY29kZTogdHJ1ZSxcblx0XHRzb3J0OiB0cnVlLFxuXHRcdGFycmF5Rm9ybWF0OiAnbm9uZScsXG5cdFx0YXJyYXlGb3JtYXRTZXBhcmF0b3I6ICcsJyxcblx0XHRwYXJzZU51bWJlcnM6IGZhbHNlLFxuXHRcdHBhcnNlQm9vbGVhbnM6IGZhbHNlXG5cdH0sIG9wdGlvbnMpO1xuXG5cdHZhbGlkYXRlQXJyYXlGb3JtYXRTZXBhcmF0b3Iob3B0aW9ucy5hcnJheUZvcm1hdFNlcGFyYXRvcik7XG5cblx0Y29uc3QgZm9ybWF0dGVyID0gcGFyc2VyRm9yQXJyYXlGb3JtYXQob3B0aW9ucyk7XG5cblx0Ly8gQ3JlYXRlIGFuIG9iamVjdCB3aXRoIG5vIHByb3RvdHlwZVxuXHRjb25zdCByZXQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG5cdGlmICh0eXBlb2YgcXVlcnkgIT09ICdzdHJpbmcnKSB7XG5cdFx0cmV0dXJuIHJldDtcblx0fVxuXG5cdHF1ZXJ5ID0gcXVlcnkudHJpbSgpLnJlcGxhY2UoL15bPyMmXS8sICcnKTtcblxuXHRpZiAoIXF1ZXJ5KSB7XG5cdFx0cmV0dXJuIHJldDtcblx0fVxuXG5cdGZvciAoY29uc3QgcGFyYW0gb2YgcXVlcnkuc3BsaXQoJyYnKSkge1xuXHRcdGlmIChwYXJhbSA9PT0gJycpIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGxldCBba2V5LCB2YWx1ZV0gPSBzcGxpdE9uRmlyc3Qob3B0aW9ucy5kZWNvZGUgPyBwYXJhbS5yZXBsYWNlKC9cXCsvZywgJyAnKSA6IHBhcmFtLCAnPScpO1xuXG5cdFx0Ly8gTWlzc2luZyBgPWAgc2hvdWxkIGJlIGBudWxsYDpcblx0XHQvLyBodHRwOi8vdzMub3JnL1RSLzIwMTIvV0QtdXJsLTIwMTIwNTI0LyNjb2xsZWN0LXVybC1wYXJhbWV0ZXJzXG5cdFx0dmFsdWUgPSB2YWx1ZSA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IFsnY29tbWEnLCAnc2VwYXJhdG9yJywgJ2JyYWNrZXQtc2VwYXJhdG9yJ10uaW5jbHVkZXMob3B0aW9ucy5hcnJheUZvcm1hdCkgPyB2YWx1ZSA6IGRlY29kZSh2YWx1ZSwgb3B0aW9ucyk7XG5cdFx0Zm9ybWF0dGVyKGRlY29kZShrZXksIG9wdGlvbnMpLCB2YWx1ZSwgcmV0KTtcblx0fVxuXG5cdGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHJldCkpIHtcblx0XHRjb25zdCB2YWx1ZSA9IHJldFtrZXldO1xuXHRcdGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsKSB7XG5cdFx0XHRmb3IgKGNvbnN0IGsgb2YgT2JqZWN0LmtleXModmFsdWUpKSB7XG5cdFx0XHRcdHZhbHVlW2tdID0gcGFyc2VWYWx1ZSh2YWx1ZVtrXSwgb3B0aW9ucyk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldFtrZXldID0gcGFyc2VWYWx1ZSh2YWx1ZSwgb3B0aW9ucyk7XG5cdFx0fVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc29ydCA9PT0gZmFsc2UpIHtcblx0XHRyZXR1cm4gcmV0O1xuXHR9XG5cblx0cmV0dXJuIChvcHRpb25zLnNvcnQgPT09IHRydWUgPyBPYmplY3Qua2V5cyhyZXQpLnNvcnQoKSA6IE9iamVjdC5rZXlzKHJldCkuc29ydChvcHRpb25zLnNvcnQpKS5yZWR1Y2UoKHJlc3VsdCwga2V5KSA9PiB7XG5cdFx0Y29uc3QgdmFsdWUgPSByZXRba2V5XTtcblx0XHRpZiAoQm9vbGVhbih2YWx1ZSkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcblx0XHRcdC8vIFNvcnQgb2JqZWN0IGtleXMsIG5vdCB2YWx1ZXNcblx0XHRcdHJlc3VsdFtrZXldID0ga2V5c1NvcnRlcih2YWx1ZSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlc3VsdFtrZXldID0gdmFsdWU7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fSwgT2JqZWN0LmNyZWF0ZShudWxsKSk7XG59XG5cbmV4cG9ydHMuZXh0cmFjdCA9IGV4dHJhY3Q7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5cbmV4cG9ydHMuc3RyaW5naWZ5ID0gKG9iamVjdCwgb3B0aW9ucykgPT4ge1xuXHRpZiAoIW9iamVjdCkge1xuXHRcdHJldHVybiAnJztcblx0fVxuXG5cdG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcblx0XHRlbmNvZGU6IHRydWUsXG5cdFx0c3RyaWN0OiB0cnVlLFxuXHRcdGFycmF5Rm9ybWF0OiAnbm9uZScsXG5cdFx0YXJyYXlGb3JtYXRTZXBhcmF0b3I6ICcsJ1xuXHR9LCBvcHRpb25zKTtcblxuXHR2YWxpZGF0ZUFycmF5Rm9ybWF0U2VwYXJhdG9yKG9wdGlvbnMuYXJyYXlGb3JtYXRTZXBhcmF0b3IpO1xuXG5cdGNvbnN0IHNob3VsZEZpbHRlciA9IGtleSA9PiAoXG5cdFx0KG9wdGlvbnMuc2tpcE51bGwgJiYgaXNOdWxsT3JVbmRlZmluZWQob2JqZWN0W2tleV0pKSB8fFxuXHRcdChvcHRpb25zLnNraXBFbXB0eVN0cmluZyAmJiBvYmplY3Rba2V5XSA9PT0gJycpXG5cdCk7XG5cblx0Y29uc3QgZm9ybWF0dGVyID0gZW5jb2RlckZvckFycmF5Rm9ybWF0KG9wdGlvbnMpO1xuXG5cdGNvbnN0IG9iamVjdENvcHkgPSB7fTtcblxuXHRmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhvYmplY3QpKSB7XG5cdFx0aWYgKCFzaG91bGRGaWx0ZXIoa2V5KSkge1xuXHRcdFx0b2JqZWN0Q29weVtrZXldID0gb2JqZWN0W2tleV07XG5cdFx0fVxuXHR9XG5cblx0Y29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdENvcHkpO1xuXG5cdGlmIChvcHRpb25zLnNvcnQgIT09IGZhbHNlKSB7XG5cdFx0a2V5cy5zb3J0KG9wdGlvbnMuc29ydCk7XG5cdH1cblxuXHRyZXR1cm4ga2V5cy5tYXAoa2V5ID0+IHtcblx0XHRjb25zdCB2YWx1ZSA9IG9iamVjdFtrZXldO1xuXG5cdFx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHRcdHJldHVybiAnJztcblx0XHR9XG5cblx0XHRpZiAodmFsdWUgPT09IG51bGwpIHtcblx0XHRcdHJldHVybiBlbmNvZGUoa2V5LCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcblx0XHRcdGlmICh2YWx1ZS5sZW5ndGggPT09IDAgJiYgb3B0aW9ucy5hcnJheUZvcm1hdCA9PT0gJ2JyYWNrZXQtc2VwYXJhdG9yJykge1xuXHRcdFx0XHRyZXR1cm4gZW5jb2RlKGtleSwgb3B0aW9ucykgKyAnW10nO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdmFsdWVcblx0XHRcdFx0LnJlZHVjZShmb3JtYXR0ZXIoa2V5KSwgW10pXG5cdFx0XHRcdC5qb2luKCcmJyk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGVuY29kZShrZXksIG9wdGlvbnMpICsgJz0nICsgZW5jb2RlKHZhbHVlLCBvcHRpb25zKTtcblx0fSkuZmlsdGVyKHggPT4geC5sZW5ndGggPiAwKS5qb2luKCcmJyk7XG59O1xuXG5leHBvcnRzLnBhcnNlVXJsID0gKHVybCwgb3B0aW9ucykgPT4ge1xuXHRvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG5cdFx0ZGVjb2RlOiB0cnVlXG5cdH0sIG9wdGlvbnMpO1xuXG5cdGNvbnN0IFt1cmxfLCBoYXNoXSA9IHNwbGl0T25GaXJzdCh1cmwsICcjJyk7XG5cblx0cmV0dXJuIE9iamVjdC5hc3NpZ24oXG5cdFx0e1xuXHRcdFx0dXJsOiB1cmxfLnNwbGl0KCc/JylbMF0gfHwgJycsXG5cdFx0XHRxdWVyeTogcGFyc2UoZXh0cmFjdCh1cmwpLCBvcHRpb25zKVxuXHRcdH0sXG5cdFx0b3B0aW9ucyAmJiBvcHRpb25zLnBhcnNlRnJhZ21lbnRJZGVudGlmaWVyICYmIGhhc2ggPyB7ZnJhZ21lbnRJZGVudGlmaWVyOiBkZWNvZGUoaGFzaCwgb3B0aW9ucyl9IDoge31cblx0KTtcbn07XG5cbmV4cG9ydHMuc3RyaW5naWZ5VXJsID0gKG9iamVjdCwgb3B0aW9ucykgPT4ge1xuXHRvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG5cdFx0ZW5jb2RlOiB0cnVlLFxuXHRcdHN0cmljdDogdHJ1ZSxcblx0XHRbZW5jb2RlRnJhZ21lbnRJZGVudGlmaWVyXTogdHJ1ZVxuXHR9LCBvcHRpb25zKTtcblxuXHRjb25zdCB1cmwgPSByZW1vdmVIYXNoKG9iamVjdC51cmwpLnNwbGl0KCc/JylbMF0gfHwgJyc7XG5cdGNvbnN0IHF1ZXJ5RnJvbVVybCA9IGV4cG9ydHMuZXh0cmFjdChvYmplY3QudXJsKTtcblx0Y29uc3QgcGFyc2VkUXVlcnlGcm9tVXJsID0gZXhwb3J0cy5wYXJzZShxdWVyeUZyb21VcmwsIHtzb3J0OiBmYWxzZX0pO1xuXG5cdGNvbnN0IHF1ZXJ5ID0gT2JqZWN0LmFzc2lnbihwYXJzZWRRdWVyeUZyb21VcmwsIG9iamVjdC5xdWVyeSk7XG5cdGxldCBxdWVyeVN0cmluZyA9IGV4cG9ydHMuc3RyaW5naWZ5KHF1ZXJ5LCBvcHRpb25zKTtcblx0aWYgKHF1ZXJ5U3RyaW5nKSB7XG5cdFx0cXVlcnlTdHJpbmcgPSBgPyR7cXVlcnlTdHJpbmd9YDtcblx0fVxuXG5cdGxldCBoYXNoID0gZ2V0SGFzaChvYmplY3QudXJsKTtcblx0aWYgKG9iamVjdC5mcmFnbWVudElkZW50aWZpZXIpIHtcblx0XHRoYXNoID0gYCMke29wdGlvbnNbZW5jb2RlRnJhZ21lbnRJZGVudGlmaWVyXSA/IGVuY29kZShvYmplY3QuZnJhZ21lbnRJZGVudGlmaWVyLCBvcHRpb25zKSA6IG9iamVjdC5mcmFnbWVudElkZW50aWZpZXJ9YDtcblx0fVxuXG5cdHJldHVybiBgJHt1cmx9JHtxdWVyeVN0cmluZ30ke2hhc2h9YDtcbn07XG5cbmV4cG9ydHMucGljayA9IChpbnB1dCwgZmlsdGVyLCBvcHRpb25zKSA9PiB7XG5cdG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcblx0XHRwYXJzZUZyYWdtZW50SWRlbnRpZmllcjogdHJ1ZSxcblx0XHRbZW5jb2RlRnJhZ21lbnRJZGVudGlmaWVyXTogZmFsc2Vcblx0fSwgb3B0aW9ucyk7XG5cblx0Y29uc3Qge3VybCwgcXVlcnksIGZyYWdtZW50SWRlbnRpZmllcn0gPSBleHBvcnRzLnBhcnNlVXJsKGlucHV0LCBvcHRpb25zKTtcblx0cmV0dXJuIGV4cG9ydHMuc3RyaW5naWZ5VXJsKHtcblx0XHR1cmwsXG5cdFx0cXVlcnk6IGZpbHRlck9iamVjdChxdWVyeSwgZmlsdGVyKSxcblx0XHRmcmFnbWVudElkZW50aWZpZXJcblx0fSwgb3B0aW9ucyk7XG59O1xuXG5leHBvcnRzLmV4Y2x1ZGUgPSAoaW5wdXQsIGZpbHRlciwgb3B0aW9ucykgPT4ge1xuXHRjb25zdCBleGNsdXNpb25GaWx0ZXIgPSBBcnJheS5pc0FycmF5KGZpbHRlcikgPyBrZXkgPT4gIWZpbHRlci5pbmNsdWRlcyhrZXkpIDogKGtleSwgdmFsdWUpID0+ICFmaWx0ZXIoa2V5LCB2YWx1ZSk7XG5cblx0cmV0dXJuIGV4cG9ydHMucGljayhpbnB1dCwgZXhjbHVzaW9uRmlsdGVyLCBvcHRpb25zKTtcbn07XG4iXSwibmFtZXMiOlsic3RyaWN0VXJpRW5jb2RlIiwicmVxdWlyZSIsImRlY29kZUNvbXBvbmVudCIsInNwbGl0T25GaXJzdCIsImZpbHRlck9iamVjdCIsImlzTnVsbE9yVW5kZWZpbmVkIiwidmFsdWUiLCJ1bmRlZmluZWQiLCJlbmNvZGVGcmFnbWVudElkZW50aWZpZXIiLCJTeW1ib2wiLCJlbmNvZGVyRm9yQXJyYXlGb3JtYXQiLCJvcHRpb25zIiwiYXJyYXlGb3JtYXQiLCJrZXkiLCJyZXN1bHQiLCJpbmRleCIsImxlbmd0aCIsInNraXBOdWxsIiwic2tpcEVtcHR5U3RyaW5nIiwiZW5jb2RlIiwiam9pbiIsImtleVZhbHVlU2VwIiwiYXJyYXlGb3JtYXRTZXBhcmF0b3IiLCJwYXJzZXJGb3JBcnJheUZvcm1hdCIsImFjY3VtdWxhdG9yIiwiZXhlYyIsInJlcGxhY2UiLCJjb25jYXQiLCJpc0FycmF5IiwiaW5jbHVkZXMiLCJpc0VuY29kZWRBcnJheSIsImRlY29kZSIsIm5ld1ZhbHVlIiwic3BsaXQiLCJtYXAiLCJpdGVtIiwidGVzdCIsImFycmF5VmFsdWUiLCJ2YWxpZGF0ZUFycmF5Rm9ybWF0U2VwYXJhdG9yIiwiVHlwZUVycm9yIiwic3RyaWN0IiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwia2V5c1NvcnRlciIsImlucHV0IiwiQXJyYXkiLCJzb3J0IiwiT2JqZWN0Iiwia2V5cyIsImEiLCJiIiwiTnVtYmVyIiwicmVtb3ZlSGFzaCIsImhhc2hTdGFydCIsImluZGV4T2YiLCJzbGljZSIsImdldEhhc2giLCJ1cmwiLCJoYXNoIiwiZXh0cmFjdCIsInF1ZXJ5U3RhcnQiLCJwYXJzZVZhbHVlIiwicGFyc2VOdW1iZXJzIiwiaXNOYU4iLCJ0cmltIiwicGFyc2VCb29sZWFucyIsInRvTG93ZXJDYXNlIiwicGFyc2UiLCJxdWVyeSIsImFzc2lnbiIsImZvcm1hdHRlciIsInJldCIsImNyZWF0ZSIsInBhcmFtIiwiayIsInJlZHVjZSIsIkJvb2xlYW4iLCJleHBvcnRzIiwic3RyaW5naWZ5Iiwib2JqZWN0Iiwic2hvdWxkRmlsdGVyIiwib2JqZWN0Q29weSIsImZpbHRlciIsIngiLCJwYXJzZVVybCIsInVybF8iLCJwYXJzZUZyYWdtZW50SWRlbnRpZmllciIsImZyYWdtZW50SWRlbnRpZmllciIsInN0cmluZ2lmeVVybCIsInF1ZXJ5RnJvbVVybCIsInBhcnNlZFF1ZXJ5RnJvbVVybCIsInF1ZXJ5U3RyaW5nIiwicGljayIsImV4Y2x1ZGUiLCJleGNsdXNpb25GaWx0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/query-string/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/split-on-first/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/split-on-first/index.js ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = (string, separator)=>{\n    if (!(typeof string === \"string\" && typeof separator === \"string\")) {\n        throw new TypeError(\"Expected the arguments to be of type `string`\");\n    }\n    if (separator === \"\") {\n        return [\n            string\n        ];\n    }\n    const separatorIndex = string.indexOf(separator);\n    if (separatorIndex === -1) {\n        return [\n            string\n        ];\n    }\n    return [\n        string.slice(0, separatorIndex),\n        string.slice(separatorIndex + separator.length)\n    ];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3NwbGl0LW9uLWZpcnN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBRyxDQUFDQyxRQUFRQztJQUN6QixJQUFJLENBQUUsUUFBT0QsV0FBVyxZQUFZLE9BQU9DLGNBQWMsUUFBTyxHQUFJO1FBQ25FLE1BQU0sSUFBSUMsVUFBVTtJQUNyQjtJQUVBLElBQUlELGNBQWMsSUFBSTtRQUNyQixPQUFPO1lBQUNEO1NBQU87SUFDaEI7SUFFQSxNQUFNRyxpQkFBaUJILE9BQU9JLE9BQU8sQ0FBQ0g7SUFFdEMsSUFBSUUsbUJBQW1CLENBQUMsR0FBRztRQUMxQixPQUFPO1lBQUNIO1NBQU87SUFDaEI7SUFFQSxPQUFPO1FBQ05BLE9BQU9LLEtBQUssQ0FBQyxHQUFHRjtRQUNoQkgsT0FBT0ssS0FBSyxDQUFDRixpQkFBaUJGLFVBQVVLLE1BQU07S0FDOUM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3NwbGl0LW9uLWZpcnN0L2luZGV4LmpzPzIwYmYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChzdHJpbmcsIHNlcGFyYXRvcikgPT4ge1xuXHRpZiAoISh0eXBlb2Ygc3RyaW5nID09PSAnc3RyaW5nJyAmJiB0eXBlb2Ygc2VwYXJhdG9yID09PSAnc3RyaW5nJykpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCB0aGUgYXJndW1lbnRzIHRvIGJlIG9mIHR5cGUgYHN0cmluZ2AnKTtcblx0fVxuXG5cdGlmIChzZXBhcmF0b3IgPT09ICcnKSB7XG5cdFx0cmV0dXJuIFtzdHJpbmddO1xuXHR9XG5cblx0Y29uc3Qgc2VwYXJhdG9ySW5kZXggPSBzdHJpbmcuaW5kZXhPZihzZXBhcmF0b3IpO1xuXG5cdGlmIChzZXBhcmF0b3JJbmRleCA9PT0gLTEpIHtcblx0XHRyZXR1cm4gW3N0cmluZ107XG5cdH1cblxuXHRyZXR1cm4gW1xuXHRcdHN0cmluZy5zbGljZSgwLCBzZXBhcmF0b3JJbmRleCksXG5cdFx0c3RyaW5nLnNsaWNlKHNlcGFyYXRvckluZGV4ICsgc2VwYXJhdG9yLmxlbmd0aClcblx0XTtcbn07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInN0cmluZyIsInNlcGFyYXRvciIsIlR5cGVFcnJvciIsInNlcGFyYXRvckluZGV4IiwiaW5kZXhPZiIsInNsaWNlIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/split-on-first/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/window-getters/dist/cjs/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;\nfunction getFromWindow(name) {\n    let res = undefined;\n    if (false) {}\n    return res;\n}\nexports.getFromWindow = getFromWindow;\nfunction getFromWindowOrThrow(name) {\n    const res = getFromWindow(name);\n    if (!res) {\n        throw new Error(`${name} is not defined in Window`);\n    }\n    return res;\n}\nexports.getFromWindowOrThrow = getFromWindowOrThrow;\nfunction getDocumentOrThrow() {\n    return getFromWindowOrThrow(\"document\");\n}\nexports.getDocumentOrThrow = getDocumentOrThrow;\nfunction getDocument() {\n    return getFromWindow(\"document\");\n}\nexports.getDocument = getDocument;\nfunction getNavigatorOrThrow() {\n    return getFromWindowOrThrow(\"navigator\");\n}\nexports.getNavigatorOrThrow = getNavigatorOrThrow;\nfunction getNavigator() {\n    return getFromWindow(\"navigator\");\n}\nexports.getNavigator = getNavigator;\nfunction getLocationOrThrow() {\n    return getFromWindowOrThrow(\"location\");\n}\nexports.getLocationOrThrow = getLocationOrThrow;\nfunction getLocation() {\n    return getFromWindow(\"location\");\n}\nexports.getLocation = getLocation;\nfunction getCryptoOrThrow() {\n    return getFromWindowOrThrow(\"crypto\");\n}\nexports.getCryptoOrThrow = getCryptoOrThrow;\nfunction getCrypto() {\n    return getFromWindow(\"crypto\");\n}\nexports.getCrypto = getCrypto;\nfunction getLocalStorageOrThrow() {\n    return getFromWindowOrThrow(\"localStorage\");\n}\nexports.getLocalStorageOrThrow = getLocalStorageOrThrow;\nfunction getLocalStorage() {\n    return getFromWindow(\"localStorage\");\n}\nexports.getLocalStorage = getLocalStorage; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvd2luZG93LWdldHRlcnMvZGlzdC9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHVCQUF1QixHQUFHQSw4QkFBOEIsR0FBR0EsaUJBQWlCLEdBQUdBLHdCQUF3QixHQUFHQSxtQkFBbUIsR0FBR0EsMEJBQTBCLEdBQUdBLG9CQUFvQixHQUFHQSwyQkFBMkIsR0FBR0EsbUJBQW1CLEdBQUdBLDBCQUEwQixHQUFHQSw0QkFBNEIsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUNqVSxTQUFTYSxjQUFjQyxJQUFJO0lBQ3ZCLElBQUlDLE1BQU1DO0lBQ1YsSUFBSSxLQUFvRSxFQUFFLEVBRXpFO0lBQ0QsT0FBT0Q7QUFDWDtBQUNBZixxQkFBcUIsR0FBR2E7QUFDeEIsU0FBU0QscUJBQXFCRSxJQUFJO0lBQzlCLE1BQU1DLE1BQU1GLGNBQWNDO0lBQzFCLElBQUksQ0FBQ0MsS0FBSztRQUNOLE1BQU0sSUFBSUcsTUFBTSxDQUFDLEVBQUVKLEtBQUsseUJBQXlCLENBQUM7SUFDdEQ7SUFDQSxPQUFPQztBQUNYO0FBQ0FmLDRCQUE0QixHQUFHWTtBQUMvQixTQUFTRDtJQUNMLE9BQU9DLHFCQUFxQjtBQUNoQztBQUNBWiwwQkFBMEIsR0FBR1c7QUFDN0IsU0FBU0Q7SUFDTCxPQUFPRyxjQUFjO0FBQ3pCO0FBQ0FiLG1CQUFtQixHQUFHVTtBQUN0QixTQUFTRDtJQUNMLE9BQU9HLHFCQUFxQjtBQUNoQztBQUNBWiwyQkFBMkIsR0FBR1M7QUFDOUIsU0FBU0Q7SUFDTCxPQUFPSyxjQUFjO0FBQ3pCO0FBQ0FiLG9CQUFvQixHQUFHUTtBQUN2QixTQUFTRDtJQUNMLE9BQU9LLHFCQUFxQjtBQUNoQztBQUNBWiwwQkFBMEIsR0FBR087QUFDN0IsU0FBU0Q7SUFDTCxPQUFPTyxjQUFjO0FBQ3pCO0FBQ0FiLG1CQUFtQixHQUFHTTtBQUN0QixTQUFTRDtJQUNMLE9BQU9PLHFCQUFxQjtBQUNoQztBQUNBWix3QkFBd0IsR0FBR0s7QUFDM0IsU0FBU0Q7SUFDTCxPQUFPUyxjQUFjO0FBQ3pCO0FBQ0FiLGlCQUFpQixHQUFHSTtBQUNwQixTQUFTRDtJQUNMLE9BQU9TLHFCQUFxQjtBQUNoQztBQUNBWiw4QkFBOEIsR0FBR0c7QUFDakMsU0FBU0Q7SUFDTCxPQUFPVyxjQUFjO0FBQ3pCO0FBQ0FiLHVCQUF1QixHQUFHRSxpQkFDMUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC93aW5kb3ctZ2V0dGVycy9kaXN0L2Nqcy9pbmRleC5qcz83YjIzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRMb2NhbFN0b3JhZ2UgPSBleHBvcnRzLmdldExvY2FsU3RvcmFnZU9yVGhyb3cgPSBleHBvcnRzLmdldENyeXB0byA9IGV4cG9ydHMuZ2V0Q3J5cHRvT3JUaHJvdyA9IGV4cG9ydHMuZ2V0TG9jYXRpb24gPSBleHBvcnRzLmdldExvY2F0aW9uT3JUaHJvdyA9IGV4cG9ydHMuZ2V0TmF2aWdhdG9yID0gZXhwb3J0cy5nZXROYXZpZ2F0b3JPclRocm93ID0gZXhwb3J0cy5nZXREb2N1bWVudCA9IGV4cG9ydHMuZ2V0RG9jdW1lbnRPclRocm93ID0gZXhwb3J0cy5nZXRGcm9tV2luZG93T3JUaHJvdyA9IGV4cG9ydHMuZ2V0RnJvbVdpbmRvdyA9IHZvaWQgMDtcbmZ1bmN0aW9uIGdldEZyb21XaW5kb3cobmFtZSkge1xuICAgIGxldCByZXMgPSB1bmRlZmluZWQ7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIHdpbmRvd1tuYW1lXSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXMgPSB3aW5kb3dbbmFtZV07XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG5leHBvcnRzLmdldEZyb21XaW5kb3cgPSBnZXRGcm9tV2luZG93O1xuZnVuY3Rpb24gZ2V0RnJvbVdpbmRvd09yVGhyb3cobmFtZSkge1xuICAgIGNvbnN0IHJlcyA9IGdldEZyb21XaW5kb3cobmFtZSk7XG4gICAgaWYgKCFyZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke25hbWV9IGlzIG5vdCBkZWZpbmVkIGluIFdpbmRvd2ApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuZXhwb3J0cy5nZXRGcm9tV2luZG93T3JUaHJvdyA9IGdldEZyb21XaW5kb3dPclRocm93O1xuZnVuY3Rpb24gZ2V0RG9jdW1lbnRPclRocm93KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93T3JUaHJvdyhcImRvY3VtZW50XCIpO1xufVxuZXhwb3J0cy5nZXREb2N1bWVudE9yVGhyb3cgPSBnZXREb2N1bWVudE9yVGhyb3c7XG5mdW5jdGlvbiBnZXREb2N1bWVudCgpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvdyhcImRvY3VtZW50XCIpO1xufVxuZXhwb3J0cy5nZXREb2N1bWVudCA9IGdldERvY3VtZW50O1xuZnVuY3Rpb24gZ2V0TmF2aWdhdG9yT3JUaHJvdygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvd09yVGhyb3coXCJuYXZpZ2F0b3JcIik7XG59XG5leHBvcnRzLmdldE5hdmlnYXRvck9yVGhyb3cgPSBnZXROYXZpZ2F0b3JPclRocm93O1xuZnVuY3Rpb24gZ2V0TmF2aWdhdG9yKCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93KFwibmF2aWdhdG9yXCIpO1xufVxuZXhwb3J0cy5nZXROYXZpZ2F0b3IgPSBnZXROYXZpZ2F0b3I7XG5mdW5jdGlvbiBnZXRMb2NhdGlvbk9yVGhyb3coKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3dPclRocm93KFwibG9jYXRpb25cIik7XG59XG5leHBvcnRzLmdldExvY2F0aW9uT3JUaHJvdyA9IGdldExvY2F0aW9uT3JUaHJvdztcbmZ1bmN0aW9uIGdldExvY2F0aW9uKCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93KFwibG9jYXRpb25cIik7XG59XG5leHBvcnRzLmdldExvY2F0aW9uID0gZ2V0TG9jYXRpb247XG5mdW5jdGlvbiBnZXRDcnlwdG9PclRocm93KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93T3JUaHJvdyhcImNyeXB0b1wiKTtcbn1cbmV4cG9ydHMuZ2V0Q3J5cHRvT3JUaHJvdyA9IGdldENyeXB0b09yVGhyb3c7XG5mdW5jdGlvbiBnZXRDcnlwdG8oKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3coXCJjcnlwdG9cIik7XG59XG5leHBvcnRzLmdldENyeXB0byA9IGdldENyeXB0bztcbmZ1bmN0aW9uIGdldExvY2FsU3RvcmFnZU9yVGhyb3coKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3dPclRocm93KFwibG9jYWxTdG9yYWdlXCIpO1xufVxuZXhwb3J0cy5nZXRMb2NhbFN0b3JhZ2VPclRocm93ID0gZ2V0TG9jYWxTdG9yYWdlT3JUaHJvdztcbmZ1bmN0aW9uIGdldExvY2FsU3RvcmFnZSgpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvdyhcImxvY2FsU3RvcmFnZVwiKTtcbn1cbmV4cG9ydHMuZ2V0TG9jYWxTdG9yYWdlID0gZ2V0TG9jYWxTdG9yYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0TG9jYWxTdG9yYWdlIiwiZ2V0TG9jYWxTdG9yYWdlT3JUaHJvdyIsImdldENyeXB0byIsImdldENyeXB0b09yVGhyb3ciLCJnZXRMb2NhdGlvbiIsImdldExvY2F0aW9uT3JUaHJvdyIsImdldE5hdmlnYXRvciIsImdldE5hdmlnYXRvck9yVGhyb3ciLCJnZXREb2N1bWVudCIsImdldERvY3VtZW50T3JUaHJvdyIsImdldEZyb21XaW5kb3dPclRocm93IiwiZ2V0RnJvbVdpbmRvdyIsIm5hbWUiLCJyZXMiLCJ1bmRlZmluZWQiLCJ3aW5kb3ciLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/window-metadata/dist/cjs/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getWindowMetadata = void 0;\nconst window_getters_1 = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\nfunction getWindowMetadata() {\n    let doc;\n    let loc;\n    try {\n        doc = window_getters_1.getDocumentOrThrow();\n        loc = window_getters_1.getLocationOrThrow();\n    } catch (e) {\n        return null;\n    }\n    function getIcons() {\n        const links = doc.getElementsByTagName(\"link\");\n        const icons = [];\n        for(let i = 0; i < links.length; i++){\n            const link = links[i];\n            const rel = link.getAttribute(\"rel\");\n            if (rel) {\n                if (rel.toLowerCase().indexOf(\"icon\") > -1) {\n                    const href = link.getAttribute(\"href\");\n                    if (href) {\n                        if (href.toLowerCase().indexOf(\"https:\") === -1 && href.toLowerCase().indexOf(\"http:\") === -1 && href.indexOf(\"//\") !== 0) {\n                            let absoluteHref = loc.protocol + \"//\" + loc.host;\n                            if (href.indexOf(\"/\") === 0) {\n                                absoluteHref += href;\n                            } else {\n                                const path = loc.pathname.split(\"/\");\n                                path.pop();\n                                const finalPath = path.join(\"/\");\n                                absoluteHref += finalPath + \"/\" + href;\n                            }\n                            icons.push(absoluteHref);\n                        } else if (href.indexOf(\"//\") === 0) {\n                            const absoluteUrl = loc.protocol + href;\n                            icons.push(absoluteUrl);\n                        } else {\n                            icons.push(href);\n                        }\n                    }\n                }\n            }\n        }\n        return icons;\n    }\n    function getWindowMetadataOfAny(...args) {\n        const metaTags = doc.getElementsByTagName(\"meta\");\n        for(let i = 0; i < metaTags.length; i++){\n            const tag = metaTags[i];\n            const attributes = [\n                \"itemprop\",\n                \"property\",\n                \"name\"\n            ].map((target)=>tag.getAttribute(target)).filter((attr)=>{\n                if (attr) {\n                    return args.includes(attr);\n                }\n                return false;\n            });\n            if (attributes.length && attributes) {\n                const content = tag.getAttribute(\"content\");\n                if (content) {\n                    return content;\n                }\n            }\n        }\n        return \"\";\n    }\n    function getName() {\n        let name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\n        if (!name) {\n            name = doc.title;\n        }\n        return name;\n    }\n    function getDescription() {\n        const description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\n        return description;\n    }\n    const name = getName();\n    const description = getDescription();\n    const url = loc.origin;\n    const icons = getIcons();\n    const meta = {\n        description,\n        url,\n        icons,\n        name\n    };\n    return meta;\n}\nexports.getWindowMetadata = getWindowMetadata; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/modal-core/dist/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-core/dist/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfigCtrl: () => (/* binding */ y),\n/* harmony export */   CoreUtil: () => (/* binding */ a),\n/* harmony export */   EventsCtrl: () => (/* binding */ R),\n/* harmony export */   ExplorerCtrl: () => (/* binding */ te),\n/* harmony export */   ModalCtrl: () => (/* binding */ se),\n/* harmony export */   OptionsCtrl: () => (/* binding */ p),\n/* harmony export */   RouterCtrl: () => (/* binding */ T),\n/* harmony export */   ThemeCtrl: () => (/* binding */ ne),\n/* harmony export */   ToastCtrl: () => (/* binding */ oe)\n/* harmony export */ });\n/* harmony import */ var valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! valtio/vanilla */ \"(ssr)/./node_modules/valtio/esm/vanilla.mjs\");\n\nconst o = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    history: [\n        \"ConnectWallet\"\n    ],\n    view: \"ConnectWallet\",\n    data: void 0\n}), T = {\n    state: o,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(o, ()=>e(o));\n    },\n    push (e, t) {\n        e !== o.view && (o.view = e, t && (o.data = t), o.history.push(e));\n    },\n    reset (e) {\n        o.view = e, o.history = [\n            e\n        ];\n    },\n    replace (e) {\n        o.history.length > 1 && (o.history[o.history.length - 1] = e, o.view = e);\n    },\n    goBack () {\n        if (o.history.length > 1) {\n            o.history.pop();\n            const [e] = o.history.slice(-1);\n            o.view = e;\n        }\n    },\n    setData (e) {\n        o.data = e;\n    }\n}, a = {\n    WALLETCONNECT_DEEPLINK_CHOICE: \"WALLETCONNECT_DEEPLINK_CHOICE\",\n    WCM_VERSION: \"WCM_VERSION\",\n    RECOMMENDED_WALLET_AMOUNT: 9,\n    isMobile () {\n        return  false ? 0 : !1;\n    },\n    isAndroid () {\n        return a.isMobile() && navigator.userAgent.toLowerCase().includes(\"android\");\n    },\n    isIos () {\n        const e = navigator.userAgent.toLowerCase();\n        return a.isMobile() && (e.includes(\"iphone\") || e.includes(\"ipad\"));\n    },\n    isHttpUrl (e) {\n        return e.startsWith(\"http://\") || e.startsWith(\"https://\");\n    },\n    isArray (e) {\n        return Array.isArray(e) && e.length > 0;\n    },\n    formatNativeUrl (e, t, s) {\n        if (a.isHttpUrl(e)) return this.formatUniversalUrl(e, t, s);\n        let n = e;\n        n.includes(\"://\") || (n = e.replaceAll(\"/\", \"\").replaceAll(\":\", \"\"), n = `${n}://`), n.endsWith(\"/\") || (n = `${n}/`), this.setWalletConnectDeepLink(n, s);\n        const i = encodeURIComponent(t);\n        return `${n}wc?uri=${i}`;\n    },\n    formatUniversalUrl (e, t, s) {\n        if (!a.isHttpUrl(e)) return this.formatNativeUrl(e, t, s);\n        let n = e;\n        n.endsWith(\"/\") || (n = `${n}/`), this.setWalletConnectDeepLink(n, s);\n        const i = encodeURIComponent(t);\n        return `${n}wc?uri=${i}`;\n    },\n    async wait (e) {\n        return new Promise((t)=>{\n            setTimeout(t, e);\n        });\n    },\n    openHref (e, t) {\n        window.open(e, t, \"noreferrer noopener\");\n    },\n    setWalletConnectDeepLink (e, t) {\n        try {\n            localStorage.setItem(a.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href: e,\n                name: t\n            }));\n        } catch  {\n            console.info(\"Unable to set WalletConnect deep link\");\n        }\n    },\n    setWalletConnectAndroidDeepLink (e) {\n        try {\n            const [t] = e.split(\"?\");\n            localStorage.setItem(a.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href: t,\n                name: \"Android\"\n            }));\n        } catch  {\n            console.info(\"Unable to set WalletConnect android deep link\");\n        }\n    },\n    removeWalletConnectDeepLink () {\n        try {\n            localStorage.removeItem(a.WALLETCONNECT_DEEPLINK_CHOICE);\n        } catch  {\n            console.info(\"Unable to remove WalletConnect deep link\");\n        }\n    },\n    setModalVersionInStorage () {\n        try {\n            typeof localStorage < \"u\" && localStorage.setItem(a.WCM_VERSION, \"2.6.2\");\n        } catch  {\n            console.info(\"Unable to set Web3Modal version in storage\");\n        }\n    },\n    getWalletRouterData () {\n        var e;\n        const t = (e = T.state.data) == null ? void 0 : e.Wallet;\n        if (!t) throw new Error('Missing \"Wallet\" view data');\n        return t;\n    }\n}, _ = typeof location < \"u\" && (location.hostname.includes(\"localhost\") || location.protocol.includes(\"https\")), r = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    enabled: _,\n    userSessionId: \"\",\n    events: [],\n    connectedWalletId: void 0\n}), R = {\n    state: r,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(r.events, ()=>e((0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.snapshot)(r.events[r.events.length - 1])));\n    },\n    initialize () {\n        r.enabled && typeof (crypto == null ? void 0 : crypto.randomUUID) < \"u\" && (r.userSessionId = crypto.randomUUID());\n    },\n    setConnectedWalletId (e) {\n        r.connectedWalletId = e;\n    },\n    click (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"CLICK\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    },\n    track (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"TRACK\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    },\n    view (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"VIEW\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    }\n}, c = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    chains: void 0,\n    walletConnectUri: void 0,\n    isAuth: !1,\n    isCustomDesktop: !1,\n    isCustomMobile: !1,\n    isDataLoaded: !1,\n    isUiLoaded: !1\n}), p = {\n    state: c,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(c, ()=>e(c));\n    },\n    setChains (e) {\n        c.chains = e;\n    },\n    setWalletConnectUri (e) {\n        c.walletConnectUri = e;\n    },\n    setIsCustomDesktop (e) {\n        c.isCustomDesktop = e;\n    },\n    setIsCustomMobile (e) {\n        c.isCustomMobile = e;\n    },\n    setIsDataLoaded (e) {\n        c.isDataLoaded = e;\n    },\n    setIsUiLoaded (e) {\n        c.isUiLoaded = e;\n    },\n    setIsAuth (e) {\n        c.isAuth = e;\n    }\n}, W = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    projectId: \"\",\n    mobileWallets: void 0,\n    desktopWallets: void 0,\n    walletImages: void 0,\n    chains: void 0,\n    enableAuthMode: !1,\n    enableExplorer: !0,\n    explorerExcludedWalletIds: void 0,\n    explorerRecommendedWalletIds: void 0,\n    termsOfServiceUrl: void 0,\n    privacyPolicyUrl: void 0\n}), y = {\n    state: W,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(W, ()=>e(W));\n    },\n    setConfig (e) {\n        var t, s;\n        R.initialize(), p.setChains(e.chains), p.setIsAuth(Boolean(e.enableAuthMode)), p.setIsCustomMobile(Boolean((t = e.mobileWallets) == null ? void 0 : t.length)), p.setIsCustomDesktop(Boolean((s = e.desktopWallets) == null ? void 0 : s.length)), a.setModalVersionInStorage(), Object.assign(W, e);\n    }\n};\nvar V = Object.defineProperty, D = Object.getOwnPropertySymbols, H = Object.prototype.hasOwnProperty, B = Object.prototype.propertyIsEnumerable, M = (e, t, s)=>t in e ? V(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, K = (e, t)=>{\n    for(var s in t || (t = {}))H.call(t, s) && M(e, s, t[s]);\n    if (D) for (var s of D(t))B.call(t, s) && M(e, s, t[s]);\n    return e;\n};\nconst L = \"https://explorer-api.walletconnect.com\", E = \"wcm\", O = \"js-2.6.2\";\nasync function w(e, t) {\n    const s = K({\n        sdkType: E,\n        sdkVersion: O\n    }, t), n = new URL(e, L);\n    return n.searchParams.append(\"projectId\", y.state.projectId), Object.entries(s).forEach(([i, l])=>{\n        l && n.searchParams.append(i, String(l));\n    }), (await fetch(n)).json();\n}\nconst m = {\n    async getDesktopListings (e) {\n        return w(\"/w3m/v1/getDesktopListings\", e);\n    },\n    async getMobileListings (e) {\n        return w(\"/w3m/v1/getMobileListings\", e);\n    },\n    async getInjectedListings (e) {\n        return w(\"/w3m/v1/getInjectedListings\", e);\n    },\n    async getAllListings (e) {\n        return w(\"/w3m/v1/getAllListings\", e);\n    },\n    getWalletImageUrl (e) {\n        return `${L}/w3m/v1/getWalletImage/${e}?projectId=${y.state.projectId}&sdkType=${E}&sdkVersion=${O}`;\n    },\n    getAssetImageUrl (e) {\n        return `${L}/w3m/v1/getAssetImage/${e}?projectId=${y.state.projectId}&sdkType=${E}&sdkVersion=${O}`;\n    }\n};\nvar z = Object.defineProperty, j = Object.getOwnPropertySymbols, J = Object.prototype.hasOwnProperty, q = Object.prototype.propertyIsEnumerable, k = (e, t, s)=>t in e ? z(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, F = (e, t)=>{\n    for(var s in t || (t = {}))J.call(t, s) && k(e, s, t[s]);\n    if (j) for (var s of j(t))q.call(t, s) && k(e, s, t[s]);\n    return e;\n};\nconst N = a.isMobile(), d = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    wallets: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    search: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    recomendedWallets: []\n}), te = {\n    state: d,\n    async getRecomendedWallets () {\n        const { explorerRecommendedWalletIds: e, explorerExcludedWalletIds: t } = y.state;\n        if (e === \"NONE\" || t === \"ALL\" && !e) return d.recomendedWallets;\n        if (a.isArray(e)) {\n            const s = {\n                recommendedIds: e.join(\",\")\n            }, { listings: n } = await m.getAllListings(s), i = Object.values(n);\n            i.sort((l, v)=>{\n                const b = e.indexOf(l.id), f = e.indexOf(v.id);\n                return b - f;\n            }), d.recomendedWallets = i;\n        } else {\n            const { chains: s, isAuth: n } = p.state, i = s?.join(\",\"), l = a.isArray(t), v = {\n                page: 1,\n                sdks: n ? \"auth_v1\" : void 0,\n                entries: a.RECOMMENDED_WALLET_AMOUNT,\n                chains: i,\n                version: 2,\n                excludedIds: l ? t.join(\",\") : void 0\n            }, { listings: b } = N ? await m.getMobileListings(v) : await m.getDesktopListings(v);\n            d.recomendedWallets = Object.values(b);\n        }\n        return d.recomendedWallets;\n    },\n    async getWallets (e) {\n        const t = F({}, e), { explorerRecommendedWalletIds: s, explorerExcludedWalletIds: n } = y.state, { recomendedWallets: i } = d;\n        if (n === \"ALL\") return d.wallets;\n        i.length ? t.excludedIds = i.map((x)=>x.id).join(\",\") : a.isArray(s) && (t.excludedIds = s.join(\",\")), a.isArray(n) && (t.excludedIds = [\n            t.excludedIds,\n            n\n        ].filter(Boolean).join(\",\")), p.state.isAuth && (t.sdks = \"auth_v1\");\n        const { page: l, search: v } = e, { listings: b, total: f } = N ? await m.getMobileListings(t) : await m.getDesktopListings(t), A = Object.values(b), U = v ? \"search\" : \"wallets\";\n        return d[U] = {\n            listings: [\n                ...d[U].listings,\n                ...A\n            ],\n            total: f,\n            page: l ?? 1\n        }, {\n            listings: A,\n            total: f\n        };\n    },\n    getWalletImageUrl (e) {\n        return m.getWalletImageUrl(e);\n    },\n    getAssetImageUrl (e) {\n        return m.getAssetImageUrl(e);\n    },\n    resetSearch () {\n        d.search = {\n            listings: [],\n            total: 0,\n            page: 1\n        };\n    }\n}, I = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: !1\n}), se = {\n    state: I,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(I, ()=>e(I));\n    },\n    async open (e) {\n        return new Promise((t)=>{\n            const { isUiLoaded: s, isDataLoaded: n } = p.state;\n            if (a.removeWalletConnectDeepLink(), p.setWalletConnectUri(e?.uri), p.setChains(e?.chains), T.reset(\"ConnectWallet\"), s && n) I.open = !0, t();\n            else {\n                const i = setInterval(()=>{\n                    const l = p.state;\n                    l.isUiLoaded && l.isDataLoaded && (clearInterval(i), I.open = !0, t());\n                }, 200);\n            }\n        });\n    },\n    close () {\n        I.open = !1;\n    }\n};\nvar G = Object.defineProperty, $ = Object.getOwnPropertySymbols, Q = Object.prototype.hasOwnProperty, X = Object.prototype.propertyIsEnumerable, S = (e, t, s)=>t in e ? G(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, Y = (e, t)=>{\n    for(var s in t || (t = {}))Q.call(t, s) && S(e, s, t[s]);\n    if ($) for (var s of $(t))X.call(t, s) && S(e, s, t[s]);\n    return e;\n};\nfunction Z() {\n    return typeof matchMedia < \"u\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\nconst C = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    themeMode: Z() ? \"dark\" : \"light\"\n}), ne = {\n    state: C,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(C, ()=>e(C));\n    },\n    setThemeConfig (e) {\n        const { themeMode: t, themeVariables: s } = e;\n        t && (C.themeMode = t), s && (C.themeVariables = Y({}, s));\n    }\n}, g = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: !1,\n    message: \"\",\n    variant: \"success\"\n}), oe = {\n    state: g,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(g, ()=>e(g));\n    },\n    openToast (e, t) {\n        g.open = !0, g.message = e, g.variant = t;\n    },\n    closeToast () {\n        g.open = !1;\n    }\n};\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/modal-core/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/modal/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@walletconnect/modal/dist/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletConnectModal: () => (/* binding */ d)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/modal-core */ \"(ssr)/./node_modules/@walletconnect/modal-core/dist/index.js\");\n\nclass d {\n    constructor(e){\n        this.openModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.open, this.closeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.close, this.subscribeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.subscribe, this.setTheme = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig, _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig(e), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ConfigCtrl.setConfig(e), this.initUi();\n    }\n    async initUi() {\n        if (false) {}\n    }\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzRztBQUFBLE1BQU1RO0lBQUVDLFlBQVlDLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ0MsU0FBUyxHQUFDVixnRUFBQ0EsQ0FBQ1csSUFBSSxFQUFDLElBQUksQ0FBQ0MsVUFBVSxHQUFDWixnRUFBQ0EsQ0FBQ2EsS0FBSyxFQUFDLElBQUksQ0FBQ0MsY0FBYyxHQUFDZCxnRUFBQ0EsQ0FBQ2UsU0FBUyxFQUFDLElBQUksQ0FBQ0MsUUFBUSxHQUFDZCxnRUFBQ0EsQ0FBQ2UsY0FBYyxFQUFDZixnRUFBQ0EsQ0FBQ2UsY0FBYyxDQUFDUixJQUFHTCxpRUFBQ0EsQ0FBQ2MsU0FBUyxDQUFDVCxJQUFHLElBQUksQ0FBQ1UsTUFBTTtJQUFFO0lBQUMsTUFBTUEsU0FBUTtRQUFDLElBQUcsS0FBaUIsRUFBQyxFQUE0SjtJQUFBO0FBQUM7QUFBaUMsQ0FDN2YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1zdGFydGVyLWtpdC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9tb2RhbC9kaXN0L2luZGV4LmpzP2RlMWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0e01vZGFsQ3RybCBhcyB0LFRoZW1lQ3RybCBhcyBvLENvbmZpZ0N0cmwgYXMgaSxPcHRpb25zQ3RybCBhcyBufWZyb21cIkB3YWxsZXRjb25uZWN0L21vZGFsLWNvcmVcIjtjbGFzcyBke2NvbnN0cnVjdG9yKGUpe3RoaXMub3Blbk1vZGFsPXQub3Blbix0aGlzLmNsb3NlTW9kYWw9dC5jbG9zZSx0aGlzLnN1YnNjcmliZU1vZGFsPXQuc3Vic2NyaWJlLHRoaXMuc2V0VGhlbWU9by5zZXRUaGVtZUNvbmZpZyxvLnNldFRoZW1lQ29uZmlnKGUpLGkuc2V0Q29uZmlnKGUpLHRoaXMuaW5pdFVpKCl9YXN5bmMgaW5pdFVpKCl7aWYodHlwZW9mIHdpbmRvdzxcInVcIil7YXdhaXQgaW1wb3J0KFwiQHdhbGxldGNvbm5lY3QvbW9kYWwtdWlcIik7Y29uc3QgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwid2NtLW1vZGFsXCIpO2RvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYmVmb3JlZW5kXCIsZSksbi5zZXRJc1VpTG9hZGVkKCEwKX19fWV4cG9ydHtkIGFzIFdhbGxldENvbm5lY3RNb2RhbH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJNb2RhbEN0cmwiLCJ0IiwiVGhlbWVDdHJsIiwibyIsIkNvbmZpZ0N0cmwiLCJpIiwiT3B0aW9uc0N0cmwiLCJuIiwiZCIsImNvbnN0cnVjdG9yIiwiZSIsIm9wZW5Nb2RhbCIsIm9wZW4iLCJjbG9zZU1vZGFsIiwiY2xvc2UiLCJzdWJzY3JpYmVNb2RhbCIsInN1YnNjcmliZSIsInNldFRoZW1lIiwic2V0VGhlbWVDb25maWciLCJzZXRDb25maWciLCJpbml0VWkiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJib2R5IiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50Iiwic2V0SXNVaUxvYWRlZCIsIldhbGxldENvbm5lY3RNb2RhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/modal/dist/index.js\n");

/***/ })

};
;